{"abi":[{"type":"function","name":"contractName","inputs":[],"outputs":[{"name":"","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"contractVersion","inputs":[],"outputs":[{"name":"","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"execute","inputs":[{"name":"targets","type":"address[]","internalType":"address[]"},{"name":"data","type":"bytes[]","internalType":"bytes[]"},{"name":"values","type":"uint256[]","internalType":"uint256[]"}],"outputs":[{"name":"result","type":"bytes[]","internalType":"bytes[]"}],"stateMutability":"payable"},{"type":"function","name":"pull","inputs":[{"name":"asset_","type":"address","internalType":"address"},{"name":"amount_","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"rescueAssets","inputs":[{"name":"asset_","type":"address","internalType":"address"},{"name":"to_","type":"address","internalType":"address"},{"name":"amount_","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"payable"},{"type":"function","name":"setPaused","inputs":[{"name":"paused_","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"setTotalAssets","inputs":[{"name":"totalAssets_","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"totalAssets","inputs":[],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"event","name":"ContractInitialized","inputs":[{"name":"registry","type":"address","indexed":true,"internalType":"address"}],"anonymous":false},{"type":"event","name":"Executed","inputs":[{"name":"caller","type":"address","indexed":true,"internalType":"address"},{"name":"target","type":"address","indexed":true,"internalType":"address"},{"name":"data","type":"bytes","indexed":false,"internalType":"bytes"},{"name":"value","type":"uint256","indexed":false,"internalType":"uint256"},{"name":"result","type":"bytes","indexed":false,"internalType":"bytes"}],"anonymous":false},{"type":"event","name":"Paused","inputs":[{"name":"paused_","type":"bool","indexed":false,"internalType":"bool"}],"anonymous":false},{"type":"event","name":"RescuedAssets","inputs":[{"name":"asset_","type":"address","indexed":true,"internalType":"address"},{"name":"to_","type":"address","indexed":true,"internalType":"address"},{"name":"amount_","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"RescuedETH","inputs":[{"name":"to_","type":"address","indexed":true,"internalType":"address"},{"name":"amount_","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"TransferExecuted","inputs":[{"name":"asset","type":"address","indexed":true,"internalType":"address"},{"name":"to","type":"address","indexed":true,"internalType":"address"},{"name":"amount","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"contractName()":"75d0c0dc","contractVersion()":"a0a8e460","execute(address[],bytes[],uint256[])":"947fe812","pull(address,uint256)":"f2d5d56b","rescueAssets(address,address,uint256)":"d01b5de4","setPaused(bool)":"16c38b3c","setTotalAssets(uint256)":"1765b313","totalAssets()":"01e1d114"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"registry\",\"type\":\"address\"}],\"name\":\"ContractInitialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"result\",\"type\":\"bytes\"}],\"name\":\"Executed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"paused_\",\"type\":\"bool\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"asset_\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to_\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount_\",\"type\":\"uint256\"}],\"name\":\"RescuedAssets\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to_\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount_\",\"type\":\"uint256\"}],\"name\":\"RescuedETH\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TransferExecuted\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"contractName\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"contractVersion\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"targets\",\"type\":\"address[]\"},{\"internalType\":\"bytes[]\",\"name\":\"data\",\"type\":\"bytes[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"execute\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"result\",\"type\":\"bytes[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset_\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount_\",\"type\":\"uint256\"}],\"name\":\"pull\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to_\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount_\",\"type\":\"uint256\"}],\"name\":\"rescueAssets\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"paused_\",\"type\":\"bool\"}],\"name\":\"setPaused\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"totalAssets_\",\"type\":\"uint256\"}],\"name\":\"setTotalAssets\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalAssets\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"ContractInitialized(address)\":{\"params\":{\"registry\":\"The address of the registry contract used for protocol configuration\"}},\"Executed(address,address,bytes,uint256,bytes)\":{\"details\":\"This event provides transparency into all external interactions initiated by the relayer. It logs the caller, target contract, function data, value sent, and the resulting returndata. This is critical for auditing and monitoring protocol actions executed via the relayer role.\",\"params\":{\"caller\":\"The relayer address that initiated the call\",\"data\":\"The calldata sent to the target contract\",\"result\":\"The returndata returned from the call\",\"target\":\"The target contract address that was called\",\"value\":\"The amount of assets sent with the call\"}},\"Paused(bool)\":{\"details\":\"This event signals a critical protocol state change that affects all inheriting contracts. When paused=true, protocol operations are halted to prevent potential exploits or manage emergencies. Only emergency admins can trigger this, providing rapid response capability during security incidents.\",\"params\":{\"paused_\":\"The new pause state (true = operations halted, false = normal operation)\"}},\"RescuedAssets(address,address,uint256)\":{\"details\":\"This rescue mechanism is restricted to non-protocol assets only - registered assets (USDC, WBTC, etc.) cannot be rescued to protect user funds and maintain protocol integrity. Typically used to recover accidentally sent tokens or airdrops. Only admin role can execute rescues as a security measure.\",\"params\":{\"amount_\":\"The quantity of tokens rescued (must not exceed contract balance)\",\"asset_\":\"The ERC20 token address being rescued (must not be a registered protocol asset)\",\"to_\":\"The recipient address receiving the rescued tokens (cannot be zero address)\"}},\"RescuedETH(address,uint256)\":{\"details\":\"ETH rescue is separate from ERC20 rescue due to different transfer mechanisms. This prevents ETH from being permanently locked if sent to the contract accidentally. Uses low-level call for ETH transfer with proper success checking. Only admin role authorized for security.\",\"params\":{\"amount_\":\"The quantity of ETH rescued in wei (must not exceed contract balance)\",\"to_\":\"The recipient address receiving the rescued ETH (cannot be zero address)\"}},\"TransferExecuted(address,address,uint256)\":{\"details\":\"This event provides transparency into all asset transfers initiated by the relayer. It logs the caller, asset, recipient, and amount transferred. This is critical for auditing and monitoring protocol asset movements executed via the relayer role.\",\"params\":{\"amount\":\"The quantity of assets transferred\",\"asset\":\"The asset address that was transferred (address(0) for native ETH)\",\"to\":\"The recipient address that received the assets\"}}},\"kind\":\"dev\",\"methods\":{\"contractName()\":{\"details\":\"Used for contract identification and logging purposes. The name should be consistent across all versions of the same contract type. This enables external systems and other contracts to identify the contract's purpose and role within the protocol ecosystem.\",\"returns\":{\"_0\":\"The contract name as a string (e.g., \\\"kMinter\\\", \\\"kAssetRouter\\\", \\\"kRegistry\\\")\"}},\"contractVersion()\":{\"details\":\"Used for upgrade management and compatibility checking within the protocol. The version string should follow semantic versioning (e.g., \\\"1.0.0\\\") to clearly indicate major, minor, and patch updates. This enables the protocol governance and monitoring systems to track deployed versions and ensure compatibility between interacting components.\",\"returns\":{\"_0\":\"The contract version as a string following semantic versioning (e.g., \\\"1.0.0\\\")\"}},\"execute(address[],bytes[],uint256[])\":{\"details\":\"This function enables the relayer role to perform flexible interactions with external contracts as part of protocol operations. Key aspects of this function include: (1) Authorization restricted to relayer role to prevent misuse, (2) Pause state check to ensure operations are halted during emergencies, (3) Validates target addresses are non-zero to prevent calls to the zero address, (4) Uses low-level calls to enable arbitrary function execution\",\"params\":{\"data\":\"Array of calldata to send to each target contract\",\"targets\":\"Array of target contracts to make calls to\",\"values\":\"Array of asset amounts to send with each call\"},\"returns\":{\"result\":\"The combined return data from all calls\"}},\"pull(address,uint256)\":{\"params\":{\"amount_\":\"The quantity to pull\",\"asset_\":\"The asset to pull (use address(0) for native ETH, otherwise ERC20 token address)\"}},\"rescueAssets(address,address,uint256)\":{\"details\":\"This function implements a critical safety mechanism for recovering tokens or ETH that become stuck in the contract through user error or airdrops. The rescue process: (1) Validates admin authorization to prevent unauthorized fund extraction, (2) Ensures recipient address is valid to prevent burning funds, (3) For ETH rescue (asset_=address(0)): validates balance sufficiency and uses low-level call for transfer, (4) For ERC20 rescue: critically checks the token is NOT a registered protocol asset (USDC, WBTC, etc.) to protect user deposits and protocol integrity, then validates balance and uses SafeTransferLib for secure transfer. The distinction between ETH and ERC20 handling accounts for their different transfer mechanisms. Protocol assets are explicitly blocked from rescue to prevent admin abuse and maintain user trust.\",\"params\":{\"amount_\":\"The quantity to rescue (must not exceed available balance)\",\"asset_\":\"The asset to rescue (use address(0) for native ETH, otherwise ERC20 token address)\",\"to_\":\"The recipient address that will receive the rescued assets (cannot be zero address)\"}},\"setPaused(bool)\":{\"details\":\"This function provides critical risk management capability by allowing emergency admins to halt contract operations during security incidents or market anomalies. The pause mechanism: (1) Affects all state-changing operations in inheriting contracts that check _isPaused(), (2) Does not affect view/pure functions ensuring protocol state remains readable, (3) Enables rapid response to potential exploits by halting operations protocol-wide, (4) Requires emergency admin role ensuring only authorized governance can trigger pauses. Inheriting contracts should check _isPaused() modifier in critical functions to respect the pause state. The external visibility with role check prevents unauthorized pause manipulation.\",\"params\":{\"paused_\":\"The desired pause state (true = halt operations, false = resume normal operation)\"}},\"setTotalAssets(uint256)\":{\"details\":\"This function allows the admin to update the lastTotalAssets variable, which is used for various accounting and performance metrics within the vault adapter. Key aspects of this function include: (1) Authorization restricted to admin role to prevent misuse, (2) Directly updates the lastTotalAssets variable in storage.\",\"params\":{\"totalAssets_\":\"The new total assets value to set.\"}},\"totalAssets()\":{\"details\":\"This function returns the lastTotalAssets variable, which is used for various accounting and performance metrics within the vault adapter. This provides a snapshot of the total assets managed by the vault at the last recorded time.\",\"returns\":{\"_0\":\"The last recorded total assets value.\"}}},\"version\":1},\"userdoc\":{\"events\":{\"ContractInitialized(address)\":{\"notice\":\"Emitted when the kMinter contract is initialized\"},\"Executed(address,address,bytes,uint256,bytes)\":{\"notice\":\"Emitted when the relayer executes an arbitrary call on behalf of the protocol\"},\"Paused(bool)\":{\"notice\":\"Emitted when the emergency pause state is toggled for protocol-wide risk mitigation\"},\"RescuedAssets(address,address,uint256)\":{\"notice\":\"Emitted when ERC20 tokens are rescued from the contract to prevent permanent loss\"},\"RescuedETH(address,uint256)\":{\"notice\":\"Emitted when native ETH is rescued from the contract to recover stuck funds\"},\"TransferExecuted(address,address,uint256)\":{\"notice\":\"Emmited when the relayer executes a transfer of assets on behalf of the protocol\"}},\"kind\":\"user\",\"methods\":{\"contractName()\":{\"notice\":\"Returns the human-readable name identifier for this contract type\"},\"contractVersion()\":{\"notice\":\"Returns the version identifier for this contract implementation\"},\"execute(address[],bytes[],uint256[])\":{\"notice\":\"Allows the relayer to execute arbitrary calls on behalf of the protocol\"},\"pull(address,uint256)\":{\"notice\":\"This function provides a way for the router to withdraw assets from the adapter\"},\"rescueAssets(address,address,uint256)\":{\"notice\":\"Rescues accidentally sent assets (ETH or ERC20 tokens) preventing permanent loss of funds\"},\"setPaused(bool)\":{\"notice\":\"Toggles the emergency pause state affecting all protocol operations in this contract\"},\"setTotalAssets(uint256)\":{\"notice\":\"Sets the last recorded total assets for vault accounting and performance tracking\"},\"totalAssets()\":{\"notice\":\"Retrieves the last recorded total assets for vault accounting and performance tracking\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/interfaces/IVaultAdapter.sol\":\"IVaultAdapter\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[\":forge-std-1.9.7/=dependencies/forge-std-1.9.7/src/\",\":forge-std/=dependencies/forge-std-1.9.7/src/\",\":kam/src/=src/\",\":kam/test/=test/\",\":openzeppelin/=src/vendor/openzeppelin/\",\":solady/=src/vendor/solady/\",\":uniswap/=src/vendor/uniswap/\"],\"viaIR\":true},\"sources\":{\"src/interfaces/IVaultAdapter.sol\":{\"keccak256\":\"0x27310fb73fbd7432bb7919969d12008ef3117b2b0985b6e7e1e471947979c5f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://79515c4c61b45e7affc736fbdd458da1e4f0533aa02c161d7e16863e51589f08\",\"dweb:/ipfs/QmRf22ii4T4cwRHjo5TcuxxPLHpeVPcW5b7p1Pipk1vc5k\"]},\"src/interfaces/IVersioned.sol\":{\"keccak256\":\"0x23e7a218ecbf42e18656d069ee25302c74c5027d1dcfa4e1b9c54501d76a72f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2e2643eaf8cc8f8bc04dd90c6cbf5c1429de314dc85e93c254b1deae782af6eb\",\"dweb:/ipfs/Qmb4s6G5PNFLy6iANEqHvanKZ3Tu1ahfW5V9ppWCxKTiDD\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.30+commit.73712a01"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"address","name":"registry","type":"address","indexed":true}],"type":"event","name":"ContractInitialized","anonymous":false},{"inputs":[{"internalType":"address","name":"caller","type":"address","indexed":true},{"internalType":"address","name":"target","type":"address","indexed":true},{"internalType":"bytes","name":"data","type":"bytes","indexed":false},{"internalType":"uint256","name":"value","type":"uint256","indexed":false},{"internalType":"bytes","name":"result","type":"bytes","indexed":false}],"type":"event","name":"Executed","anonymous":false},{"inputs":[{"internalType":"bool","name":"paused_","type":"bool","indexed":false}],"type":"event","name":"Paused","anonymous":false},{"inputs":[{"internalType":"address","name":"asset_","type":"address","indexed":true},{"internalType":"address","name":"to_","type":"address","indexed":true},{"internalType":"uint256","name":"amount_","type":"uint256","indexed":false}],"type":"event","name":"RescuedAssets","anonymous":false},{"inputs":[{"internalType":"address","name":"to_","type":"address","indexed":true},{"internalType":"uint256","name":"amount_","type":"uint256","indexed":false}],"type":"event","name":"RescuedETH","anonymous":false},{"inputs":[{"internalType":"address","name":"asset","type":"address","indexed":true},{"internalType":"address","name":"to","type":"address","indexed":true},{"internalType":"uint256","name":"amount","type":"uint256","indexed":false}],"type":"event","name":"TransferExecuted","anonymous":false},{"inputs":[],"stateMutability":"pure","type":"function","name":"contractName","outputs":[{"internalType":"string","name":"","type":"string"}]},{"inputs":[],"stateMutability":"pure","type":"function","name":"contractVersion","outputs":[{"internalType":"string","name":"","type":"string"}]},{"inputs":[{"internalType":"address[]","name":"targets","type":"address[]"},{"internalType":"bytes[]","name":"data","type":"bytes[]"},{"internalType":"uint256[]","name":"values","type":"uint256[]"}],"stateMutability":"payable","type":"function","name":"execute","outputs":[{"internalType":"bytes[]","name":"result","type":"bytes[]"}]},{"inputs":[{"internalType":"address","name":"asset_","type":"address"},{"internalType":"uint256","name":"amount_","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"pull"},{"inputs":[{"internalType":"address","name":"asset_","type":"address"},{"internalType":"address","name":"to_","type":"address"},{"internalType":"uint256","name":"amount_","type":"uint256"}],"stateMutability":"payable","type":"function","name":"rescueAssets"},{"inputs":[{"internalType":"bool","name":"paused_","type":"bool"}],"stateMutability":"nonpayable","type":"function","name":"setPaused"},{"inputs":[{"internalType":"uint256","name":"totalAssets_","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"setTotalAssets"},{"inputs":[],"stateMutability":"view","type":"function","name":"totalAssets","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]}],"devdoc":{"kind":"dev","methods":{"contractName()":{"details":"Used for contract identification and logging purposes. The name should be consistent across all versions of the same contract type. This enables external systems and other contracts to identify the contract's purpose and role within the protocol ecosystem.","returns":{"_0":"The contract name as a string (e.g., \"kMinter\", \"kAssetRouter\", \"kRegistry\")"}},"contractVersion()":{"details":"Used for upgrade management and compatibility checking within the protocol. The version string should follow semantic versioning (e.g., \"1.0.0\") to clearly indicate major, minor, and patch updates. This enables the protocol governance and monitoring systems to track deployed versions and ensure compatibility between interacting components.","returns":{"_0":"The contract version as a string following semantic versioning (e.g., \"1.0.0\")"}},"execute(address[],bytes[],uint256[])":{"details":"This function enables the relayer role to perform flexible interactions with external contracts as part of protocol operations. Key aspects of this function include: (1) Authorization restricted to relayer role to prevent misuse, (2) Pause state check to ensure operations are halted during emergencies, (3) Validates target addresses are non-zero to prevent calls to the zero address, (4) Uses low-level calls to enable arbitrary function execution","params":{"data":"Array of calldata to send to each target contract","targets":"Array of target contracts to make calls to","values":"Array of asset amounts to send with each call"},"returns":{"result":"The combined return data from all calls"}},"pull(address,uint256)":{"params":{"amount_":"The quantity to pull","asset_":"The asset to pull (use address(0) for native ETH, otherwise ERC20 token address)"}},"rescueAssets(address,address,uint256)":{"details":"This function implements a critical safety mechanism for recovering tokens or ETH that become stuck in the contract through user error or airdrops. The rescue process: (1) Validates admin authorization to prevent unauthorized fund extraction, (2) Ensures recipient address is valid to prevent burning funds, (3) For ETH rescue (asset_=address(0)): validates balance sufficiency and uses low-level call for transfer, (4) For ERC20 rescue: critically checks the token is NOT a registered protocol asset (USDC, WBTC, etc.) to protect user deposits and protocol integrity, then validates balance and uses SafeTransferLib for secure transfer. The distinction between ETH and ERC20 handling accounts for their different transfer mechanisms. Protocol assets are explicitly blocked from rescue to prevent admin abuse and maintain user trust.","params":{"amount_":"The quantity to rescue (must not exceed available balance)","asset_":"The asset to rescue (use address(0) for native ETH, otherwise ERC20 token address)","to_":"The recipient address that will receive the rescued assets (cannot be zero address)"}},"setPaused(bool)":{"details":"This function provides critical risk management capability by allowing emergency admins to halt contract operations during security incidents or market anomalies. The pause mechanism: (1) Affects all state-changing operations in inheriting contracts that check _isPaused(), (2) Does not affect view/pure functions ensuring protocol state remains readable, (3) Enables rapid response to potential exploits by halting operations protocol-wide, (4) Requires emergency admin role ensuring only authorized governance can trigger pauses. Inheriting contracts should check _isPaused() modifier in critical functions to respect the pause state. The external visibility with role check prevents unauthorized pause manipulation.","params":{"paused_":"The desired pause state (true = halt operations, false = resume normal operation)"}},"setTotalAssets(uint256)":{"details":"This function allows the admin to update the lastTotalAssets variable, which is used for various accounting and performance metrics within the vault adapter. Key aspects of this function include: (1) Authorization restricted to admin role to prevent misuse, (2) Directly updates the lastTotalAssets variable in storage.","params":{"totalAssets_":"The new total assets value to set."}},"totalAssets()":{"details":"This function returns the lastTotalAssets variable, which is used for various accounting and performance metrics within the vault adapter. This provides a snapshot of the total assets managed by the vault at the last recorded time.","returns":{"_0":"The last recorded total assets value."}}},"version":1},"userdoc":{"kind":"user","methods":{"contractName()":{"notice":"Returns the human-readable name identifier for this contract type"},"contractVersion()":{"notice":"Returns the version identifier for this contract implementation"},"execute(address[],bytes[],uint256[])":{"notice":"Allows the relayer to execute arbitrary calls on behalf of the protocol"},"pull(address,uint256)":{"notice":"This function provides a way for the router to withdraw assets from the adapter"},"rescueAssets(address,address,uint256)":{"notice":"Rescues accidentally sent assets (ETH or ERC20 tokens) preventing permanent loss of funds"},"setPaused(bool)":{"notice":"Toggles the emergency pause state affecting all protocol operations in this contract"},"setTotalAssets(uint256)":{"notice":"Sets the last recorded total assets for vault accounting and performance tracking"},"totalAssets()":{"notice":"Retrieves the last recorded total assets for vault accounting and performance tracking"}},"version":1}},"settings":{"remappings":["forge-std-1.9.7/=dependencies/forge-std-1.9.7/src/","forge-std/=dependencies/forge-std-1.9.7/src/","kam/src/=src/","kam/test/=test/","openzeppelin/=src/vendor/openzeppelin/","solady/=src/vendor/solady/","uniswap/=src/vendor/uniswap/"],"optimizer":{"enabled":true,"runs":10000},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"src/interfaces/IVaultAdapter.sol":"IVaultAdapter"},"evmVersion":"prague","libraries":{},"viaIR":true},"sources":{"src/interfaces/IVaultAdapter.sol":{"keccak256":"0x27310fb73fbd7432bb7919969d12008ef3117b2b0985b6e7e1e471947979c5f1","urls":["bzz-raw://79515c4c61b45e7affc736fbdd458da1e4f0533aa02c161d7e16863e51589f08","dweb:/ipfs/QmRf22ii4T4cwRHjo5TcuxxPLHpeVPcW5b7p1Pipk1vc5k"],"license":"MIT"},"src/interfaces/IVersioned.sol":{"keccak256":"0x23e7a218ecbf42e18656d069ee25302c74c5027d1dcfa4e1b9c54501d76a72f5","urls":["bzz-raw://2e2643eaf8cc8f8bc04dd90c6cbf5c1429de314dc85e93c254b1deae782af6eb","dweb:/ipfs/Qmb4s6G5PNFLy6iANEqHvanKZ3Tu1ahfW5V9ppWCxKTiDD"],"license":"MIT"}},"version":1},"storageLayout":{"storage":[],"types":{}},"ast":{"absolutePath":"src/interfaces/IVaultAdapter.sol","id":50943,"exportedSymbols":{"IVaultAdapter":[50942],"IVersioned":[51038]},"nodeType":"SourceUnit","src":"32:9037:45","nodes":[{"id":50837,"nodeType":"PragmaDirective","src":"32:23:45","nodes":[],"literals":["solidity","^","0.8",".4"]},{"id":50839,"nodeType":"ImportDirective","src":"57:63:45","nodes":[],"absolutePath":"src/interfaces/IVersioned.sol","file":"kam/src/interfaces/IVersioned.sol","nameLocation":"-1:-1:-1","scope":50943,"sourceUnit":51039,"symbolAliases":[{"foreign":{"id":50838,"name":"IVersioned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":51038,"src":"66:10:45","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"id":50942,"nodeType":"ContractDefinition","src":"122:8946:45","nodes":[{"id":50846,"nodeType":"EventDefinition","src":"501:52:45","nodes":[],"anonymous":false,"documentation":{"id":50842,"nodeType":"StructuredDocumentation","src":"343:153:45","text":"@notice Emitted when the kMinter contract is initialized\n @param registry The address of the registry contract used for protocol configuration"},"eventSelector":"b8bb5a08c752924168166e254455ca6708ef2ac4cfd39bba39eb5a5b89f0cbd6","name":"ContractInitialized","nameLocation":"507:19:45","parameters":{"id":50845,"nodeType":"ParameterList","parameters":[{"constant":false,"id":50844,"indexed":true,"mutability":"mutable","name":"registry","nameLocation":"543:8:45","nodeType":"VariableDeclaration","scope":50846,"src":"527:24:45","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":50843,"name":"address","nodeType":"ElementaryTypeName","src":"527:7:45","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"526:26:45"}},{"id":50851,"nodeType":"EventDefinition","src":"1080:27:45","nodes":[],"anonymous":false,"documentation":{"id":50847,"nodeType":"StructuredDocumentation","src":"559:516:45","text":"@notice Emitted when the emergency pause state is toggled for protocol-wide risk mitigation\n @dev This event signals a critical protocol state change that affects all inheriting contracts.\n When paused=true, protocol operations are halted to prevent potential exploits or manage emergencies.\n Only emergency admins can trigger this, providing rapid response capability during security incidents.\n @param paused_ The new pause state (true = operations halted, false = normal operation)"},"eventSelector":"0e2fb031ee032dc02d8011dc50b816eb450cf856abd8261680dac74f72165bd2","name":"Paused","nameLocation":"1086:6:45","parameters":{"id":50850,"nodeType":"ParameterList","parameters":[{"constant":false,"id":50849,"indexed":false,"mutability":"mutable","name":"paused_","nameLocation":"1098:7:45","nodeType":"VariableDeclaration","scope":50851,"src":"1093:12:45","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":50848,"name":"bool","nodeType":"ElementaryTypeName","src":"1093:4:45","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1092:14:45"}},{"id":50860,"nodeType":"EventDefinition","src":"1825:82:45","nodes":[],"anonymous":false,"documentation":{"id":50852,"nodeType":"StructuredDocumentation","src":"1113:707:45","text":"@notice Emitted when ERC20 tokens are rescued from the contract to prevent permanent loss\n @dev This rescue mechanism is restricted to non-protocol assets only - registered assets (USDC, WBTC, etc.)\n cannot be rescued to protect user funds and maintain protocol integrity. Typically used to recover\n accidentally sent tokens or airdrops. Only admin role can execute rescues as a security measure.\n @param asset_ The ERC20 token address being rescued (must not be a registered protocol asset)\n @param to_ The recipient address receiving the rescued tokens (cannot be zero address)\n @param amount_ The quantity of tokens rescued (must not exceed contract balance)"},"eventSelector":"552c8f8dc30f2786e14004d98595afcc1c0ea1f552b86e86f64a2da74761eaab","name":"RescuedAssets","nameLocation":"1831:13:45","parameters":{"id":50859,"nodeType":"ParameterList","parameters":[{"constant":false,"id":50854,"indexed":true,"mutability":"mutable","name":"asset_","nameLocation":"1861:6:45","nodeType":"VariableDeclaration","scope":50860,"src":"1845:22:45","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":50853,"name":"address","nodeType":"ElementaryTypeName","src":"1845:7:45","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":50856,"indexed":true,"mutability":"mutable","name":"to_","nameLocation":"1885:3:45","nodeType":"VariableDeclaration","scope":50860,"src":"1869:19:45","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":50855,"name":"address","nodeType":"ElementaryTypeName","src":"1869:7:45","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":50858,"indexed":false,"mutability":"mutable","name":"amount_","nameLocation":"1898:7:45","nodeType":"VariableDeclaration","scope":50860,"src":"1890:15:45","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":50857,"name":"uint256","nodeType":"ElementaryTypeName","src":"1890:7:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1844:62:45"}},{"id":50867,"nodeType":"EventDefinition","src":"2492:55:45","nodes":[],"anonymous":false,"documentation":{"id":50861,"nodeType":"StructuredDocumentation","src":"1913:574:45","text":"@notice Emitted when native ETH is rescued from the contract to recover stuck funds\n @dev ETH rescue is separate from ERC20 rescue due to different transfer mechanisms. This prevents\n ETH from being permanently locked if sent to the contract accidentally. Uses low-level call for\n ETH transfer with proper success checking. Only admin role authorized for security.\n @param to_ The recipient address receiving the rescued ETH (cannot be zero address)\n @param amount_ The quantity of ETH rescued in wei (must not exceed contract balance)"},"eventSelector":"63b8c8e180bc85c19daef23e2bb787fb49672d3a9ecde24409c18ccb1accb5d1","name":"RescuedETH","nameLocation":"2498:10:45","parameters":{"id":50866,"nodeType":"ParameterList","parameters":[{"constant":false,"id":50863,"indexed":true,"mutability":"mutable","name":"to_","nameLocation":"2525:3:45","nodeType":"VariableDeclaration","scope":50867,"src":"2509:19:45","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":50862,"name":"address","nodeType":"ElementaryTypeName","src":"2509:7:45","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":50865,"indexed":false,"mutability":"mutable","name":"amount_","nameLocation":"2538:7:45","nodeType":"VariableDeclaration","scope":50867,"src":"2530:15:45","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":50864,"name":"uint256","nodeType":"ElementaryTypeName","src":"2530:7:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2508:38:45"}},{"id":50880,"nodeType":"EventDefinition","src":"3267:104:45","nodes":[],"anonymous":false,"documentation":{"id":50868,"nodeType":"StructuredDocumentation","src":"2553:709:45","text":"@notice Emitted when the relayer executes an arbitrary call on behalf of the protocol\n @dev This event provides transparency into all external interactions initiated by the relayer.\n It logs the caller, target contract, function data, value sent, and the resulting returndata.\n This is critical for auditing and monitoring protocol actions executed via the relayer role.\n @param caller The relayer address that initiated the call\n @param target The target contract address that was called\n @param data The calldata sent to the target contract\n @param value The amount of assets sent with the call\n @param result The returndata returned from the call"},"eventSelector":"4e2058815a1087a94d8a92ecdce2f91d1370aa8c270ef97b0f28e0a3c6f68a87","name":"Executed","nameLocation":"3273:8:45","parameters":{"id":50879,"nodeType":"ParameterList","parameters":[{"constant":false,"id":50870,"indexed":true,"mutability":"mutable","name":"caller","nameLocation":"3298:6:45","nodeType":"VariableDeclaration","scope":50880,"src":"3282:22:45","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":50869,"name":"address","nodeType":"ElementaryTypeName","src":"3282:7:45","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":50872,"indexed":true,"mutability":"mutable","name":"target","nameLocation":"3322:6:45","nodeType":"VariableDeclaration","scope":50880,"src":"3306:22:45","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":50871,"name":"address","nodeType":"ElementaryTypeName","src":"3306:7:45","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":50874,"indexed":false,"mutability":"mutable","name":"data","nameLocation":"3336:4:45","nodeType":"VariableDeclaration","scope":50880,"src":"3330:10:45","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":50873,"name":"bytes","nodeType":"ElementaryTypeName","src":"3330:5:45","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":50876,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"3350:5:45","nodeType":"VariableDeclaration","scope":50880,"src":"3342:13:45","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":50875,"name":"uint256","nodeType":"ElementaryTypeName","src":"3342:7:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":50878,"indexed":false,"mutability":"mutable","name":"result","nameLocation":"3363:6:45","nodeType":"VariableDeclaration","scope":50880,"src":"3357:12:45","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":50877,"name":"bytes","nodeType":"ElementaryTypeName","src":"3357:5:45","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3281:89:45"}},{"id":50889,"nodeType":"EventDefinition","src":"3960:82:45","nodes":[],"anonymous":false,"documentation":{"id":50881,"nodeType":"StructuredDocumentation","src":"3377:578:45","text":"@notice Emmited when the relayer executes a transfer of assets on behalf of the protocol\n @dev This event provides transparency into all asset transfers initiated by the relayer.\n It logs the caller, asset, recipient, and amount transferred. This is critical for auditing\n and monitoring protocol asset movements executed via the relayer role.\n @param asset The asset address that was transferred (address(0) for native ETH)\n @param to The recipient address that received the assets\n @param amount The quantity of assets transferred"},"eventSelector":"c95d558e25335222b51e6424166172914e7ce4404a9647d3631ef320294081fd","name":"TransferExecuted","nameLocation":"3966:16:45","parameters":{"id":50888,"nodeType":"ParameterList","parameters":[{"constant":false,"id":50883,"indexed":true,"mutability":"mutable","name":"asset","nameLocation":"3999:5:45","nodeType":"VariableDeclaration","scope":50889,"src":"3983:21:45","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":50882,"name":"address","nodeType":"ElementaryTypeName","src":"3983:7:45","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":50885,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"4022:2:45","nodeType":"VariableDeclaration","scope":50889,"src":"4006:18:45","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":50884,"name":"address","nodeType":"ElementaryTypeName","src":"4006:7:45","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":50887,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"4034:6:45","nodeType":"VariableDeclaration","scope":50889,"src":"4026:14:45","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":50886,"name":"uint256","nodeType":"ElementaryTypeName","src":"4026:7:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3982:59:45"}},{"id":50895,"nodeType":"FunctionDefinition","src":"5217:42:45","nodes":[],"documentation":{"id":50890,"nodeType":"StructuredDocumentation","src":"4231:981:45","text":"@notice Toggles the emergency pause state affecting all protocol operations in this contract\n @dev This function provides critical risk management capability by allowing emergency admins to halt\n contract operations during security incidents or market anomalies. The pause mechanism: (1) Affects all\n state-changing operations in inheriting contracts that check _isPaused(), (2) Does not affect view/pure\n functions ensuring protocol state remains readable, (3) Enables rapid response to potential exploits by\n halting operations protocol-wide, (4) Requires emergency admin role ensuring only authorized governance\n can trigger pauses. Inheriting contracts should check _isPaused() modifier in critical functions to\n respect the pause state. The external visibility with role check prevents unauthorized pause manipulation.\n @param paused_ The desired pause state (true = halt operations, false = resume normal operation)"},"functionSelector":"16c38b3c","implemented":false,"kind":"function","modifiers":[],"name":"setPaused","nameLocation":"5226:9:45","parameters":{"id":50893,"nodeType":"ParameterList","parameters":[{"constant":false,"id":50892,"mutability":"mutable","name":"paused_","nameLocation":"5241:7:45","nodeType":"VariableDeclaration","scope":50895,"src":"5236:12:45","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":50891,"name":"bool","nodeType":"ElementaryTypeName","src":"5236:4:45","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5235:14:45"},"returnParameters":{"id":50894,"nodeType":"ParameterList","parameters":[],"src":"5258:0:45"},"scope":50942,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":50905,"nodeType":"FunctionDefinition","src":"6564:85:45","nodes":[],"documentation":{"id":50896,"nodeType":"StructuredDocumentation","src":"5265:1294:45","text":"@notice Rescues accidentally sent assets (ETH or ERC20 tokens) preventing permanent loss of funds\n @dev This function implements a critical safety mechanism for recovering tokens or ETH that become stuck\n in the contract through user error or airdrops. The rescue process: (1) Validates admin authorization to\n prevent unauthorized fund extraction, (2) Ensures recipient address is valid to prevent burning funds,\n (3) For ETH rescue (asset_=address(0)): validates balance sufficiency and uses low-level call for transfer,\n (4) For ERC20 rescue: critically checks the token is NOT a registered protocol asset (USDC, WBTC, etc.) to\n protect user deposits and protocol integrity, then validates balance and uses SafeTransferLib for secure\n transfer. The distinction between ETH and ERC20 handling accounts for their different transfer mechanisms.\n Protocol assets are explicitly blocked from rescue to prevent admin abuse and maintain user trust.\n @param asset_ The asset to rescue (use address(0) for native ETH, otherwise ERC20 token address)\n @param to_ The recipient address that will receive the rescued assets (cannot be zero address)\n @param amount_ The quantity to rescue (must not exceed available balance)"},"functionSelector":"d01b5de4","implemented":false,"kind":"function","modifiers":[],"name":"rescueAssets","nameLocation":"6573:12:45","parameters":{"id":50903,"nodeType":"ParameterList","parameters":[{"constant":false,"id":50898,"mutability":"mutable","name":"asset_","nameLocation":"6594:6:45","nodeType":"VariableDeclaration","scope":50905,"src":"6586:14:45","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":50897,"name":"address","nodeType":"ElementaryTypeName","src":"6586:7:45","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":50900,"mutability":"mutable","name":"to_","nameLocation":"6610:3:45","nodeType":"VariableDeclaration","scope":50905,"src":"6602:11:45","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":50899,"name":"address","nodeType":"ElementaryTypeName","src":"6602:7:45","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":50902,"mutability":"mutable","name":"amount_","nameLocation":"6623:7:45","nodeType":"VariableDeclaration","scope":50905,"src":"6615:15:45","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":50901,"name":"uint256","nodeType":"ElementaryTypeName","src":"6615:7:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6585:46:45"},"returnParameters":{"id":50904,"nodeType":"ParameterList","parameters":[],"src":"6648:0:45"},"scope":50942,"stateMutability":"payable","virtual":false,"visibility":"external"},{"id":50921,"nodeType":"FunctionDefinition","src":"7505:198:45","nodes":[],"documentation":{"id":50906,"nodeType":"StructuredDocumentation","src":"6655:845:45","text":"@notice Allows the relayer to execute arbitrary calls on behalf of the protocol\n @dev This function enables the relayer role to perform flexible interactions with external contracts\n as part of protocol operations. Key aspects of this function include: (1) Authorization restricted to relayer\n role to prevent misuse, (2) Pause state check to ensure operations are halted during emergencies, (3) Validates\n target addresses are non-zero to prevent calls to the zero address, (4) Uses low-level calls to enable arbitrary\n function execution\n @param targets Array of target contracts to make calls to\n @param data Array of calldata to send to each target contract\n @param values Array of asset amounts to send with each call\n @return result The combined return data from all calls"},"functionSelector":"947fe812","implemented":false,"kind":"function","modifiers":[],"name":"execute","nameLocation":"7514:7:45","parameters":{"id":50916,"nodeType":"ParameterList","parameters":[{"constant":false,"id":50909,"mutability":"mutable","name":"targets","nameLocation":"7550:7:45","nodeType":"VariableDeclaration","scope":50921,"src":"7531:26:45","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":50907,"name":"address","nodeType":"ElementaryTypeName","src":"7531:7:45","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":50908,"nodeType":"ArrayTypeName","src":"7531:9:45","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":50912,"mutability":"mutable","name":"data","nameLocation":"7584:4:45","nodeType":"VariableDeclaration","scope":50921,"src":"7567:21:45","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":50910,"name":"bytes","nodeType":"ElementaryTypeName","src":"7567:5:45","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":50911,"nodeType":"ArrayTypeName","src":"7567:7:45","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"},{"constant":false,"id":50915,"mutability":"mutable","name":"values","nameLocation":"7617:6:45","nodeType":"VariableDeclaration","scope":50921,"src":"7598:25:45","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":50913,"name":"uint256","nodeType":"ElementaryTypeName","src":"7598:7:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":50914,"nodeType":"ArrayTypeName","src":"7598:9:45","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"7521:108:45"},"returnParameters":{"id":50920,"nodeType":"ParameterList","parameters":[{"constant":false,"id":50919,"mutability":"mutable","name":"result","nameLocation":"7695:6:45","nodeType":"VariableDeclaration","scope":50921,"src":"7680:21:45","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":50917,"name":"bytes","nodeType":"ElementaryTypeName","src":"7680:5:45","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":50918,"nodeType":"ArrayTypeName","src":"7680:7:45","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"7679:23:45"},"scope":50942,"stateMutability":"payable","virtual":false,"visibility":"external"},{"id":50927,"nodeType":"FunctionDefinition","src":"8227:55:45","nodes":[],"documentation":{"id":50922,"nodeType":"StructuredDocumentation","src":"7709:513:45","text":"@notice Sets the last recorded total assets for vault accounting and performance tracking\n @dev This function allows the admin to update the lastTotalAssets variable, which is\n used for various accounting and performance metrics within the vault adapter. Key aspects\n of this function include: (1) Authorization restricted to admin role to prevent misuse,\n (2) Directly updates the lastTotalAssets variable in storage.\n @param totalAssets_ The new total assets value to set."},"functionSelector":"1765b313","implemented":false,"kind":"function","modifiers":[],"name":"setTotalAssets","nameLocation":"8236:14:45","parameters":{"id":50925,"nodeType":"ParameterList","parameters":[{"constant":false,"id":50924,"mutability":"mutable","name":"totalAssets_","nameLocation":"8259:12:45","nodeType":"VariableDeclaration","scope":50927,"src":"8251:20:45","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":50923,"name":"uint256","nodeType":"ElementaryTypeName","src":"8251:7:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8250:22:45"},"returnParameters":{"id":50926,"nodeType":"ParameterList","parameters":[],"src":"8281:0:45"},"scope":50942,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":50933,"nodeType":"FunctionDefinition","src":"8706:55:45","nodes":[],"documentation":{"id":50928,"nodeType":"StructuredDocumentation","src":"8288:413:45","text":"@notice Retrieves the last recorded total assets for vault accounting and performance tracking\n @dev This function returns the lastTotalAssets variable, which is used for various accounting\n and performance metrics within the vault adapter. This provides a snapshot of the total assets\n managed by the vault at the last recorded time.\n @return The last recorded total assets value."},"functionSelector":"01e1d114","implemented":false,"kind":"function","modifiers":[],"name":"totalAssets","nameLocation":"8715:11:45","parameters":{"id":50929,"nodeType":"ParameterList","parameters":[],"src":"8726:2:45"},"returnParameters":{"id":50932,"nodeType":"ParameterList","parameters":[{"constant":false,"id":50931,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":50933,"src":"8752:7:45","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":50930,"name":"uint256","nodeType":"ElementaryTypeName","src":"8752:7:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8751:9:45"},"scope":50942,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":50941,"nodeType":"FunctionDefinition","src":"9010:56:45","nodes":[],"documentation":{"id":50934,"nodeType":"StructuredDocumentation","src":"8767:238:45","text":"@notice This function provides a way for the router to withdraw assets from the adapter\n @param asset_ The asset to pull (use address(0) for native ETH, otherwise ERC20 token address)\n @param amount_ The quantity to pull"},"functionSelector":"f2d5d56b","implemented":false,"kind":"function","modifiers":[],"name":"pull","nameLocation":"9019:4:45","parameters":{"id":50939,"nodeType":"ParameterList","parameters":[{"constant":false,"id":50936,"mutability":"mutable","name":"asset_","nameLocation":"9032:6:45","nodeType":"VariableDeclaration","scope":50941,"src":"9024:14:45","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":50935,"name":"address","nodeType":"ElementaryTypeName","src":"9024:7:45","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":50938,"mutability":"mutable","name":"amount_","nameLocation":"9048:7:45","nodeType":"VariableDeclaration","scope":50941,"src":"9040:15:45","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":50937,"name":"uint256","nodeType":"ElementaryTypeName","src":"9040:7:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9023:33:45"},"returnParameters":{"id":50940,"nodeType":"ParameterList","parameters":[],"src":"9065:0:45"},"scope":50942,"stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"abstract":false,"baseContracts":[{"baseName":{"id":50840,"name":"IVersioned","nameLocations":["149:10:45"],"nodeType":"IdentifierPath","referencedDeclaration":51038,"src":"149:10:45"},"id":50841,"nodeType":"InheritanceSpecifier","src":"149:10:45"}],"canonicalName":"IVaultAdapter","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"linearizedBaseContracts":[50942,51038],"name":"IVaultAdapter","nameLocation":"132:13:45","scope":50943,"usedErrors":[],"usedEvents":[50846,50851,50860,50867,50880,50889]}],"license":"MIT"},"id":45}