{"abi":[{"type":"fallback","stateMutability":"payable"}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"stateMutability\":\"payable\",\"type\":\"fallback\"}],\"devdoc\":{\"details\":\"This abstract contract provides a fallback function that delegates all calls to another contract using the EVM instruction `delegatecall`. We refer to the second contract as the _implementation_ behind the proxy, and it has to be specified by overriding the virtual {_implementation} function. Additionally, delegation to the implementation can be triggered manually through the {_fallback} function, or to a different contract through the {_delegate} function. The success and return data of the delegated call will be returned back to the caller of the proxy.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/vendor/openzeppelin/Proxy.sol\":\"Proxy\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[\":forge-std-1.9.7/=dependencies/forge-std-1.9.7/src/\",\":forge-std/=dependencies/forge-std-1.9.7/src/\",\":kam/src/=src/\",\":kam/test/=test/\",\":openzeppelin/=src/vendor/openzeppelin/\",\":solady/=src/vendor/solady/\",\":uniswap/=src/vendor/uniswap/\"],\"viaIR\":true},\"sources\":{\"src/vendor/openzeppelin/Proxy.sol\":{\"keccak256\":\"0xc6b5fa2d479d4858f88b0451ef98d186b427ee09fc9107e25c3a6030d097f549\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9d17ffeb29052e1101788cc08bf2305f2e3d8f8f96e6a35ef0659e9a6440779b\",\"dweb:/ipfs/QmciZuZuwKEZkfqARB3JjixFPjJRTX8nMDAAThsk8NwMmL\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.30+commit.73712a01"},"language":"Solidity","output":{"abi":[{"inputs":[],"stateMutability":"payable","type":"fallback"}],"devdoc":{"kind":"dev","methods":{},"version":1},"userdoc":{"kind":"user","methods":{},"version":1}},"settings":{"remappings":["forge-std-1.9.7/=dependencies/forge-std-1.9.7/src/","forge-std/=dependencies/forge-std-1.9.7/src/","kam/src/=src/","kam/test/=test/","openzeppelin/=src/vendor/openzeppelin/","solady/=src/vendor/solady/","uniswap/=src/vendor/uniswap/"],"optimizer":{"enabled":true,"runs":10000},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"src/vendor/openzeppelin/Proxy.sol":"Proxy"},"evmVersion":"prague","libraries":{},"viaIR":true},"sources":{"src/vendor/openzeppelin/Proxy.sol":{"keccak256":"0xc6b5fa2d479d4858f88b0451ef98d186b427ee09fc9107e25c3a6030d097f549","urls":["bzz-raw://9d17ffeb29052e1101788cc08bf2305f2e3d8f8f96e6a35ef0659e9a6440779b","dweb:/ipfs/QmciZuZuwKEZkfqARB3JjixFPjJRTX8nMDAAThsk8NwMmL"],"license":"MIT"}},"version":1},"storageLayout":{"storage":[],"types":{}},"ast":{"absolutePath":"src/vendor/openzeppelin/Proxy.sol","id":63730,"exportedSymbols":{"Proxy":[63729]},"nodeType":"SourceUnit","src":"99:2514:72","nodes":[{"id":63695,"nodeType":"PragmaDirective","src":"99:23:72","nodes":[],"literals":["solidity","0.8",".30"]},{"id":63729,"nodeType":"ContractDefinition","src":"723:1889:72","nodes":[{"id":63704,"nodeType":"FunctionDefinition","src":"948:839:72","nodes":[],"body":{"id":63703,"nodeType":"Block","src":"1008:779:72","nodes":[],"statements":[{"AST":{"nativeSrc":"1027:754:72","nodeType":"YulBlock","src":"1027:754:72","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1280:1:72","nodeType":"YulLiteral","src":"1280:1:72","type":"","value":"0"},{"kind":"number","nativeSrc":"1283:1:72","nodeType":"YulLiteral","src":"1283:1:72","type":"","value":"0"},{"arguments":[],"functionName":{"name":"calldatasize","nativeSrc":"1286:12:72","nodeType":"YulIdentifier","src":"1286:12:72"},"nativeSrc":"1286:14:72","nodeType":"YulFunctionCall","src":"1286:14:72"}],"functionName":{"name":"calldatacopy","nativeSrc":"1267:12:72","nodeType":"YulIdentifier","src":"1267:12:72"},"nativeSrc":"1267:34:72","nodeType":"YulFunctionCall","src":"1267:34:72"},"nativeSrc":"1267:34:72","nodeType":"YulExpressionStatement","src":"1267:34:72"},{"nativeSrc":"1428:74:72","nodeType":"YulVariableDeclaration","src":"1428:74:72","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nativeSrc":"1455:3:72","nodeType":"YulIdentifier","src":"1455:3:72"},"nativeSrc":"1455:5:72","nodeType":"YulFunctionCall","src":"1455:5:72"},{"name":"implementation","nativeSrc":"1462:14:72","nodeType":"YulIdentifier","src":"1462:14:72"},{"kind":"number","nativeSrc":"1478:1:72","nodeType":"YulLiteral","src":"1478:1:72","type":"","value":"0"},{"arguments":[],"functionName":{"name":"calldatasize","nativeSrc":"1481:12:72","nodeType":"YulIdentifier","src":"1481:12:72"},"nativeSrc":"1481:14:72","nodeType":"YulFunctionCall","src":"1481:14:72"},{"kind":"number","nativeSrc":"1497:1:72","nodeType":"YulLiteral","src":"1497:1:72","type":"","value":"0"},{"kind":"number","nativeSrc":"1500:1:72","nodeType":"YulLiteral","src":"1500:1:72","type":"","value":"0"}],"functionName":{"name":"delegatecall","nativeSrc":"1442:12:72","nodeType":"YulIdentifier","src":"1442:12:72"},"nativeSrc":"1442:60:72","nodeType":"YulFunctionCall","src":"1442:60:72"},"variables":[{"name":"result","nativeSrc":"1432:6:72","nodeType":"YulTypedName","src":"1432:6:72","type":""}]},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1570:1:72","nodeType":"YulLiteral","src":"1570:1:72","type":"","value":"0"},{"kind":"number","nativeSrc":"1573:1:72","nodeType":"YulLiteral","src":"1573:1:72","type":"","value":"0"},{"arguments":[],"functionName":{"name":"returndatasize","nativeSrc":"1576:14:72","nodeType":"YulIdentifier","src":"1576:14:72"},"nativeSrc":"1576:16:72","nodeType":"YulFunctionCall","src":"1576:16:72"}],"functionName":{"name":"returndatacopy","nativeSrc":"1555:14:72","nodeType":"YulIdentifier","src":"1555:14:72"},"nativeSrc":"1555:38:72","nodeType":"YulFunctionCall","src":"1555:38:72"},"nativeSrc":"1555:38:72","nodeType":"YulExpressionStatement","src":"1555:38:72"},{"cases":[{"body":{"nativeSrc":"1688:31:72","nodeType":"YulBlock","src":"1688:31:72","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1697:1:72","nodeType":"YulLiteral","src":"1697:1:72","type":"","value":"0"},{"arguments":[],"functionName":{"name":"returndatasize","nativeSrc":"1700:14:72","nodeType":"YulIdentifier","src":"1700:14:72"},"nativeSrc":"1700:16:72","nodeType":"YulFunctionCall","src":"1700:16:72"}],"functionName":{"name":"revert","nativeSrc":"1690:6:72","nodeType":"YulIdentifier","src":"1690:6:72"},"nativeSrc":"1690:27:72","nodeType":"YulFunctionCall","src":"1690:27:72"},"nativeSrc":"1690:27:72","nodeType":"YulExpressionStatement","src":"1690:27:72"}]},"nativeSrc":"1681:38:72","nodeType":"YulCase","src":"1681:38:72","value":{"kind":"number","nativeSrc":"1686:1:72","nodeType":"YulLiteral","src":"1686:1:72","type":"","value":"0"}},{"body":{"nativeSrc":"1740:31:72","nodeType":"YulBlock","src":"1740:31:72","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1749:1:72","nodeType":"YulLiteral","src":"1749:1:72","type":"","value":"0"},{"arguments":[],"functionName":{"name":"returndatasize","nativeSrc":"1752:14:72","nodeType":"YulIdentifier","src":"1752:14:72"},"nativeSrc":"1752:16:72","nodeType":"YulFunctionCall","src":"1752:16:72"}],"functionName":{"name":"return","nativeSrc":"1742:6:72","nodeType":"YulIdentifier","src":"1742:6:72"},"nativeSrc":"1742:27:72","nodeType":"YulFunctionCall","src":"1742:27:72"},"nativeSrc":"1742:27:72","nodeType":"YulExpressionStatement","src":"1742:27:72"}]},"nativeSrc":"1732:39:72","nodeType":"YulCase","src":"1732:39:72","value":"default"}],"expression":{"name":"result","nativeSrc":"1614:6:72","nodeType":"YulIdentifier","src":"1614:6:72"},"nativeSrc":"1607:164:72","nodeType":"YulSwitch","src":"1607:164:72"}]},"evmVersion":"prague","externalReferences":[{"declaration":63699,"isOffset":false,"isSlot":false,"src":"1462:14:72","valueSize":1}],"id":63702,"nodeType":"InlineAssembly","src":"1018:763:72"}]},"documentation":{"id":63697,"nodeType":"StructuredDocumentation","src":"753:190:72","text":" @dev Delegates the current call to `implementation`.\n This function does not return to its internal call site, it will return directly to the external caller."},"implemented":true,"kind":"function","modifiers":[],"name":"_delegate","nameLocation":"957:9:72","parameters":{"id":63700,"nodeType":"ParameterList","parameters":[{"constant":false,"id":63699,"mutability":"mutable","name":"implementation","nameLocation":"975:14:72","nodeType":"VariableDeclaration","scope":63704,"src":"967:22:72","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":63698,"name":"address","nodeType":"ElementaryTypeName","src":"967:7:72","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"966:24:72"},"returnParameters":{"id":63701,"nodeType":"ParameterList","parameters":[],"src":"1008:0:72"},"scope":63729,"stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"id":63710,"nodeType":"FunctionDefinition","src":"1971:67:72","nodes":[],"documentation":{"id":63705,"nodeType":"StructuredDocumentation","src":"1793:173:72","text":" @dev This is a virtual function that should be overridden so it returns the address to which the fallback\n function and {_fallback} should delegate."},"implemented":false,"kind":"function","modifiers":[],"name":"_implementation","nameLocation":"1980:15:72","parameters":{"id":63706,"nodeType":"ParameterList","parameters":[],"src":"1995:2:72"},"returnParameters":{"id":63709,"nodeType":"ParameterList","parameters":[{"constant":false,"id":63708,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":63710,"src":"2029:7:72","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":63707,"name":"address","nodeType":"ElementaryTypeName","src":"2029:7:72","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2028:9:72"},"scope":63729,"stateMutability":"view","virtual":true,"visibility":"internal"},{"id":63720,"nodeType":"FunctionDefinition","src":"2266:83:72","nodes":[],"body":{"id":63719,"nodeType":"Block","src":"2304:45:72","nodes":[],"statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":63715,"name":"_implementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":63710,"src":"2324:15:72","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":63716,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2324:17:72","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":63714,"name":"_delegate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":63704,"src":"2314:9:72","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":63717,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2314:28:72","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":63718,"nodeType":"ExpressionStatement","src":"2314:28:72"}]},"documentation":{"id":63711,"nodeType":"StructuredDocumentation","src":"2044:217:72","text":" @dev Delegates the current call to the address returned by `_implementation()`.\n This function does not return to its internal call site, it will return directly to the external caller."},"implemented":true,"kind":"function","modifiers":[],"name":"_fallback","nameLocation":"2275:9:72","parameters":{"id":63712,"nodeType":"ParameterList","parameters":[],"src":"2284:2:72"},"returnParameters":{"id":63713,"nodeType":"ParameterList","parameters":[],"src":"2304:0:72"},"scope":63729,"stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"id":63728,"nodeType":"FunctionDefinition","src":"2546:64:72","nodes":[],"body":{"id":63727,"nodeType":"Block","src":"2582:28:72","nodes":[],"statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":63724,"name":"_fallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":63720,"src":"2592:9:72","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":63725,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2592:11:72","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":63726,"nodeType":"ExpressionStatement","src":"2592:11:72"}]},"documentation":{"id":63721,"nodeType":"StructuredDocumentation","src":"2355:186:72","text":" @dev Fallback function that delegates calls to the address returned by `_implementation()`. Will run if no other\n function in the contract matches the call data."},"implemented":true,"kind":"fallback","modifiers":[],"name":"","nameLocation":"-1:-1:-1","parameters":{"id":63722,"nodeType":"ParameterList","parameters":[],"src":"2554:2:72"},"returnParameters":{"id":63723,"nodeType":"ParameterList","parameters":[],"src":"2582:0:72"},"scope":63729,"stateMutability":"payable","virtual":true,"visibility":"external"}],"abstract":true,"baseContracts":[],"canonicalName":"Proxy","contractDependencies":[],"contractKind":"contract","documentation":{"id":63696,"nodeType":"StructuredDocumentation","src":"124:598:72","text":" @dev This abstract contract provides a fallback function that delegates all calls to another contract using the EVM\n instruction `delegatecall`. We refer to the second contract as the _implementation_ behind the proxy, and it has to\n be specified by overriding the virtual {_implementation} function.\n Additionally, delegation to the implementation can be triggered manually through the {_fallback} function, or to a\n different contract through the {_delegate} function.\n The success and return data of the delegated call will be returned back to the caller of the proxy."},"fullyImplemented":false,"linearizedBaseContracts":[63729],"name":"Proxy","nameLocation":"741:5:72","scope":63730,"usedErrors":[],"usedEvents":[]}],"license":"MIT"},"id":72}