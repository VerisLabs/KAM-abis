{"abi":[{"type":"function","name":"accessList","inputs":[{"name":"access","type":"tuple[]","internalType":"struct VmSafe.AccessListItem[]","components":[{"name":"target","type":"address","internalType":"address"},{"name":"storageKeys","type":"bytes32[]","internalType":"bytes32[]"}]}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"accesses","inputs":[{"name":"target","type":"address","internalType":"address"}],"outputs":[{"name":"readSlots","type":"bytes32[]","internalType":"bytes32[]"},{"name":"writeSlots","type":"bytes32[]","internalType":"bytes32[]"}],"stateMutability":"nonpayable"},{"type":"function","name":"activeFork","inputs":[],"outputs":[{"name":"forkId","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"addr","inputs":[{"name":"privateKey","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"keyAddr","type":"address","internalType":"address"}],"stateMutability":"pure"},{"type":"function","name":"allowCheatcodes","inputs":[{"name":"account","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"assertApproxEqAbs","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"maxDelta","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqAbs","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"maxDelta","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqAbs","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"maxDelta","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqAbs","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"maxDelta","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqAbsDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"maxDelta","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqAbsDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"maxDelta","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqAbsDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"maxDelta","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqAbsDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"maxDelta","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqRel","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"maxPercentDelta","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqRel","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"maxPercentDelta","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqRel","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"maxPercentDelta","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqRel","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"maxPercentDelta","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqRelDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"maxPercentDelta","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqRelDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"maxPercentDelta","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqRelDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"maxPercentDelta","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqRelDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"maxPercentDelta","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"bytes32[]","internalType":"bytes32[]"},{"name":"right","type":"bytes32[]","internalType":"bytes32[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"int256[]","internalType":"int256[]"},{"name":"right","type":"int256[]","internalType":"int256[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"address","internalType":"address"},{"name":"right","type":"address","internalType":"address"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"string","internalType":"string"},{"name":"right","type":"string","internalType":"string"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"address[]","internalType":"address[]"},{"name":"right","type":"address[]","internalType":"address[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"address[]","internalType":"address[]"},{"name":"right","type":"address[]","internalType":"address[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"bool","internalType":"bool"},{"name":"right","type":"bool","internalType":"bool"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"address","internalType":"address"},{"name":"right","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"uint256[]","internalType":"uint256[]"},{"name":"right","type":"uint256[]","internalType":"uint256[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"bool[]","internalType":"bool[]"},{"name":"right","type":"bool[]","internalType":"bool[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"int256[]","internalType":"int256[]"},{"name":"right","type":"int256[]","internalType":"int256[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"bytes32","internalType":"bytes32"},{"name":"right","type":"bytes32","internalType":"bytes32"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"uint256[]","internalType":"uint256[]"},{"name":"right","type":"uint256[]","internalType":"uint256[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"bytes","internalType":"bytes"},{"name":"right","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"bytes32","internalType":"bytes32"},{"name":"right","type":"bytes32","internalType":"bytes32"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"string[]","internalType":"string[]"},{"name":"right","type":"string[]","internalType":"string[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"bytes32[]","internalType":"bytes32[]"},{"name":"right","type":"bytes32[]","internalType":"bytes32[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"bytes","internalType":"bytes"},{"name":"right","type":"bytes","internalType":"bytes"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"bool[]","internalType":"bool[]"},{"name":"right","type":"bool[]","internalType":"bool[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"bytes[]","internalType":"bytes[]"},{"name":"right","type":"bytes[]","internalType":"bytes[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"string[]","internalType":"string[]"},{"name":"right","type":"string[]","internalType":"string[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"string","internalType":"string"},{"name":"right","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"bytes[]","internalType":"bytes[]"},{"name":"right","type":"bytes[]","internalType":"bytes[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"bool","internalType":"bool"},{"name":"right","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEqDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEqDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEqDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEqDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertFalse","inputs":[{"name":"condition","type":"bool","internalType":"bool"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertFalse","inputs":[{"name":"condition","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGe","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGe","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGe","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGe","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGeDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGeDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGeDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGeDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGt","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGt","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGt","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGt","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGtDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGtDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGtDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGtDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLe","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLe","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLe","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLe","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLeDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLeDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLeDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLeDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLt","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLt","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLt","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLt","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLtDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLtDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLtDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLtDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"bytes32[]","internalType":"bytes32[]"},{"name":"right","type":"bytes32[]","internalType":"bytes32[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"int256[]","internalType":"int256[]"},{"name":"right","type":"int256[]","internalType":"int256[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"bool","internalType":"bool"},{"name":"right","type":"bool","internalType":"bool"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"bytes[]","internalType":"bytes[]"},{"name":"right","type":"bytes[]","internalType":"bytes[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"bool","internalType":"bool"},{"name":"right","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"bool[]","internalType":"bool[]"},{"name":"right","type":"bool[]","internalType":"bool[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"bytes","internalType":"bytes"},{"name":"right","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"address[]","internalType":"address[]"},{"name":"right","type":"address[]","internalType":"address[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"uint256[]","internalType":"uint256[]"},{"name":"right","type":"uint256[]","internalType":"uint256[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"bool[]","internalType":"bool[]"},{"name":"right","type":"bool[]","internalType":"bool[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"string","internalType":"string"},{"name":"right","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"address[]","internalType":"address[]"},{"name":"right","type":"address[]","internalType":"address[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"string","internalType":"string"},{"name":"right","type":"string","internalType":"string"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"address","internalType":"address"},{"name":"right","type":"address","internalType":"address"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"bytes32","internalType":"bytes32"},{"name":"right","type":"bytes32","internalType":"bytes32"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"bytes","internalType":"bytes"},{"name":"right","type":"bytes","internalType":"bytes"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"uint256[]","internalType":"uint256[]"},{"name":"right","type":"uint256[]","internalType":"uint256[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"address","internalType":"address"},{"name":"right","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"bytes32","internalType":"bytes32"},{"name":"right","type":"bytes32","internalType":"bytes32"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"string[]","internalType":"string[]"},{"name":"right","type":"string[]","internalType":"string[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"bytes32[]","internalType":"bytes32[]"},{"name":"right","type":"bytes32[]","internalType":"bytes32[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"string[]","internalType":"string[]"},{"name":"right","type":"string[]","internalType":"string[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"int256[]","internalType":"int256[]"},{"name":"right","type":"int256[]","internalType":"int256[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"bytes[]","internalType":"bytes[]"},{"name":"right","type":"bytes[]","internalType":"bytes[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEqDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEqDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEqDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEqDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertTrue","inputs":[{"name":"condition","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertTrue","inputs":[{"name":"condition","type":"bool","internalType":"bool"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assume","inputs":[{"name":"condition","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assumeNoRevert","inputs":[],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assumeNoRevert","inputs":[{"name":"potentialReverts","type":"tuple[]","internalType":"struct VmSafe.PotentialRevert[]","components":[{"name":"reverter","type":"address","internalType":"address"},{"name":"partialMatch","type":"bool","internalType":"bool"},{"name":"revertData","type":"bytes","internalType":"bytes"}]}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assumeNoRevert","inputs":[{"name":"potentialRevert","type":"tuple","internalType":"struct VmSafe.PotentialRevert","components":[{"name":"reverter","type":"address","internalType":"address"},{"name":"partialMatch","type":"bool","internalType":"bool"},{"name":"revertData","type":"bytes","internalType":"bytes"}]}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"attachBlob","inputs":[{"name":"blob","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"attachDelegation","inputs":[{"name":"signedDelegation","type":"tuple","internalType":"struct VmSafe.SignedDelegation","components":[{"name":"v","type":"uint8","internalType":"uint8"},{"name":"r","type":"bytes32","internalType":"bytes32"},{"name":"s","type":"bytes32","internalType":"bytes32"},{"name":"nonce","type":"uint64","internalType":"uint64"},{"name":"implementation","type":"address","internalType":"address"}]}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"blobBaseFee","inputs":[{"name":"newBlobBaseFee","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"blobhashes","inputs":[{"name":"hashes","type":"bytes32[]","internalType":"bytes32[]"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"breakpoint","inputs":[{"name":"char","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"breakpoint","inputs":[{"name":"char","type":"string","internalType":"string"},{"name":"value","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"broadcast","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"broadcast","inputs":[{"name":"signer","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"broadcast","inputs":[{"name":"privateKey","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"broadcastRawTransaction","inputs":[{"name":"data","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"chainId","inputs":[{"name":"newChainId","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"clearMockedCalls","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"cloneAccount","inputs":[{"name":"source","type":"address","internalType":"address"},{"name":"target","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"closeFile","inputs":[{"name":"path","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"coinbase","inputs":[{"name":"newCoinbase","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"computeCreate2Address","inputs":[{"name":"salt","type":"bytes32","internalType":"bytes32"},{"name":"initCodeHash","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"pure"},{"type":"function","name":"computeCreate2Address","inputs":[{"name":"salt","type":"bytes32","internalType":"bytes32"},{"name":"initCodeHash","type":"bytes32","internalType":"bytes32"},{"name":"deployer","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"pure"},{"type":"function","name":"computeCreateAddress","inputs":[{"name":"deployer","type":"address","internalType":"address"},{"name":"nonce","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"pure"},{"type":"function","name":"contains","inputs":[{"name":"subject","type":"string","internalType":"string"},{"name":"search","type":"string","internalType":"string"}],"outputs":[{"name":"result","type":"bool","internalType":"bool"}],"stateMutability":"nonpayable"},{"type":"function","name":"cool","inputs":[{"name":"target","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"coolSlot","inputs":[{"name":"target","type":"address","internalType":"address"},{"name":"slot","type":"bytes32","internalType":"bytes32"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"copyFile","inputs":[{"name":"from","type":"string","internalType":"string"},{"name":"to","type":"string","internalType":"string"}],"outputs":[{"name":"copied","type":"uint64","internalType":"uint64"}],"stateMutability":"nonpayable"},{"type":"function","name":"copyStorage","inputs":[{"name":"from","type":"address","internalType":"address"},{"name":"to","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"createDir","inputs":[{"name":"path","type":"string","internalType":"string"},{"name":"recursive","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"createFork","inputs":[{"name":"urlOrAlias","type":"string","internalType":"string"}],"outputs":[{"name":"forkId","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"createFork","inputs":[{"name":"urlOrAlias","type":"string","internalType":"string"},{"name":"blockNumber","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"forkId","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"createFork","inputs":[{"name":"urlOrAlias","type":"string","internalType":"string"},{"name":"txHash","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"forkId","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"createSelectFork","inputs":[{"name":"urlOrAlias","type":"string","internalType":"string"},{"name":"blockNumber","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"forkId","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"createSelectFork","inputs":[{"name":"urlOrAlias","type":"string","internalType":"string"},{"name":"txHash","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"forkId","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"createSelectFork","inputs":[{"name":"urlOrAlias","type":"string","internalType":"string"}],"outputs":[{"name":"forkId","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"createWallet","inputs":[{"name":"walletLabel","type":"string","internalType":"string"}],"outputs":[{"name":"wallet","type":"tuple","internalType":"struct VmSafe.Wallet","components":[{"name":"addr","type":"address","internalType":"address"},{"name":"publicKeyX","type":"uint256","internalType":"uint256"},{"name":"publicKeyY","type":"uint256","internalType":"uint256"},{"name":"privateKey","type":"uint256","internalType":"uint256"}]}],"stateMutability":"nonpayable"},{"type":"function","name":"createWallet","inputs":[{"name":"privateKey","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"wallet","type":"tuple","internalType":"struct VmSafe.Wallet","components":[{"name":"addr","type":"address","internalType":"address"},{"name":"publicKeyX","type":"uint256","internalType":"uint256"},{"name":"publicKeyY","type":"uint256","internalType":"uint256"},{"name":"privateKey","type":"uint256","internalType":"uint256"}]}],"stateMutability":"nonpayable"},{"type":"function","name":"createWallet","inputs":[{"name":"privateKey","type":"uint256","internalType":"uint256"},{"name":"walletLabel","type":"string","internalType":"string"}],"outputs":[{"name":"wallet","type":"tuple","internalType":"struct VmSafe.Wallet","components":[{"name":"addr","type":"address","internalType":"address"},{"name":"publicKeyX","type":"uint256","internalType":"uint256"},{"name":"publicKeyY","type":"uint256","internalType":"uint256"},{"name":"privateKey","type":"uint256","internalType":"uint256"}]}],"stateMutability":"nonpayable"},{"type":"function","name":"deal","inputs":[{"name":"account","type":"address","internalType":"address"},{"name":"newBalance","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"deleteSnapshot","inputs":[{"name":"snapshotId","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"success","type":"bool","internalType":"bool"}],"stateMutability":"nonpayable"},{"type":"function","name":"deleteSnapshots","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"deleteStateSnapshot","inputs":[{"name":"snapshotId","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"success","type":"bool","internalType":"bool"}],"stateMutability":"nonpayable"},{"type":"function","name":"deleteStateSnapshots","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"deployCode","inputs":[{"name":"artifactPath","type":"string","internalType":"string"},{"name":"value","type":"uint256","internalType":"uint256"},{"name":"salt","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"deployedAddress","type":"address","internalType":"address"}],"stateMutability":"nonpayable"},{"type":"function","name":"deployCode","inputs":[{"name":"artifactPath","type":"string","internalType":"string"},{"name":"constructorArgs","type":"bytes","internalType":"bytes"},{"name":"salt","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"deployedAddress","type":"address","internalType":"address"}],"stateMutability":"nonpayable"},{"type":"function","name":"deployCode","inputs":[{"name":"artifactPath","type":"string","internalType":"string"},{"name":"value","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"deployedAddress","type":"address","internalType":"address"}],"stateMutability":"nonpayable"},{"type":"function","name":"deployCode","inputs":[{"name":"artifactPath","type":"string","internalType":"string"},{"name":"salt","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"deployedAddress","type":"address","internalType":"address"}],"stateMutability":"nonpayable"},{"type":"function","name":"deployCode","inputs":[{"name":"artifactPath","type":"string","internalType":"string"},{"name":"constructorArgs","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"deployedAddress","type":"address","internalType":"address"}],"stateMutability":"nonpayable"},{"type":"function","name":"deployCode","inputs":[{"name":"artifactPath","type":"string","internalType":"string"},{"name":"constructorArgs","type":"bytes","internalType":"bytes"},{"name":"value","type":"uint256","internalType":"uint256"},{"name":"salt","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"deployedAddress","type":"address","internalType":"address"}],"stateMutability":"nonpayable"},{"type":"function","name":"deployCode","inputs":[{"name":"artifactPath","type":"string","internalType":"string"}],"outputs":[{"name":"deployedAddress","type":"address","internalType":"address"}],"stateMutability":"nonpayable"},{"type":"function","name":"deployCode","inputs":[{"name":"artifactPath","type":"string","internalType":"string"},{"name":"constructorArgs","type":"bytes","internalType":"bytes"},{"name":"value","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"deployedAddress","type":"address","internalType":"address"}],"stateMutability":"nonpayable"},{"type":"function","name":"deriveKey","inputs":[{"name":"mnemonic","type":"string","internalType":"string"},{"name":"derivationPath","type":"string","internalType":"string"},{"name":"index","type":"uint32","internalType":"uint32"},{"name":"language","type":"string","internalType":"string"}],"outputs":[{"name":"privateKey","type":"uint256","internalType":"uint256"}],"stateMutability":"pure"},{"type":"function","name":"deriveKey","inputs":[{"name":"mnemonic","type":"string","internalType":"string"},{"name":"index","type":"uint32","internalType":"uint32"},{"name":"language","type":"string","internalType":"string"}],"outputs":[{"name":"privateKey","type":"uint256","internalType":"uint256"}],"stateMutability":"pure"},{"type":"function","name":"deriveKey","inputs":[{"name":"mnemonic","type":"string","internalType":"string"},{"name":"index","type":"uint32","internalType":"uint32"}],"outputs":[{"name":"privateKey","type":"uint256","internalType":"uint256"}],"stateMutability":"pure"},{"type":"function","name":"deriveKey","inputs":[{"name":"mnemonic","type":"string","internalType":"string"},{"name":"derivationPath","type":"string","internalType":"string"},{"name":"index","type":"uint32","internalType":"uint32"}],"outputs":[{"name":"privateKey","type":"uint256","internalType":"uint256"}],"stateMutability":"pure"},{"type":"function","name":"difficulty","inputs":[{"name":"newDifficulty","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"dumpState","inputs":[{"name":"pathToStateJson","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"ensNamehash","inputs":[{"name":"name","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bytes32","internalType":"bytes32"}],"stateMutability":"pure"},{"type":"function","name":"envAddress","inputs":[{"name":"name","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"envAddress","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"address[]","internalType":"address[]"}],"stateMutability":"view"},{"type":"function","name":"envBool","inputs":[{"name":"name","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"envBool","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"bool[]","internalType":"bool[]"}],"stateMutability":"view"},{"type":"function","name":"envBytes","inputs":[{"name":"name","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"bytes","internalType":"bytes"}],"stateMutability":"view"},{"type":"function","name":"envBytes","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"bytes[]","internalType":"bytes[]"}],"stateMutability":"view"},{"type":"function","name":"envBytes32","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"bytes32[]","internalType":"bytes32[]"}],"stateMutability":"view"},{"type":"function","name":"envBytes32","inputs":[{"name":"name","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"bytes32","internalType":"bytes32"}],"stateMutability":"view"},{"type":"function","name":"envExists","inputs":[{"name":"name","type":"string","internalType":"string"}],"outputs":[{"name":"result","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"envInt","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"int256[]","internalType":"int256[]"}],"stateMutability":"view"},{"type":"function","name":"envInt","inputs":[{"name":"name","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"int256","internalType":"int256"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"},{"name":"defaultValue","type":"bytes32[]","internalType":"bytes32[]"}],"outputs":[{"name":"value","type":"bytes32[]","internalType":"bytes32[]"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"},{"name":"defaultValue","type":"int256[]","internalType":"int256[]"}],"outputs":[{"name":"value","type":"int256[]","internalType":"int256[]"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"defaultValue","type":"bool","internalType":"bool"}],"outputs":[{"name":"value","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"defaultValue","type":"address","internalType":"address"}],"outputs":[{"name":"value","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"defaultValue","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"value","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"},{"name":"defaultValue","type":"bytes[]","internalType":"bytes[]"}],"outputs":[{"name":"value","type":"bytes[]","internalType":"bytes[]"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"},{"name":"defaultValue","type":"uint256[]","internalType":"uint256[]"}],"outputs":[{"name":"value","type":"uint256[]","internalType":"uint256[]"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"},{"name":"defaultValue","type":"string[]","internalType":"string[]"}],"outputs":[{"name":"value","type":"string[]","internalType":"string[]"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"defaultValue","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"value","type":"bytes","internalType":"bytes"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"defaultValue","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"value","type":"bytes32","internalType":"bytes32"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"defaultValue","type":"int256","internalType":"int256"}],"outputs":[{"name":"value","type":"int256","internalType":"int256"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"},{"name":"defaultValue","type":"address[]","internalType":"address[]"}],"outputs":[{"name":"value","type":"address[]","internalType":"address[]"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"defaultValue","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"},{"name":"defaultValue","type":"bool[]","internalType":"bool[]"}],"outputs":[{"name":"value","type":"bool[]","internalType":"bool[]"}],"stateMutability":"view"},{"type":"function","name":"envString","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"string[]","internalType":"string[]"}],"stateMutability":"view"},{"type":"function","name":"envString","inputs":[{"name":"name","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"envUint","inputs":[{"name":"name","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"envUint","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"uint256[]","internalType":"uint256[]"}],"stateMutability":"view"},{"type":"function","name":"etch","inputs":[{"name":"target","type":"address","internalType":"address"},{"name":"newRuntimeBytecode","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"eth_getLogs","inputs":[{"name":"fromBlock","type":"uint256","internalType":"uint256"},{"name":"toBlock","type":"uint256","internalType":"uint256"},{"name":"target","type":"address","internalType":"address"},{"name":"topics","type":"bytes32[]","internalType":"bytes32[]"}],"outputs":[{"name":"logs","type":"tuple[]","internalType":"struct VmSafe.EthGetLogs[]","components":[{"name":"emitter","type":"address","internalType":"address"},{"name":"topics","type":"bytes32[]","internalType":"bytes32[]"},{"name":"data","type":"bytes","internalType":"bytes"},{"name":"blockHash","type":"bytes32","internalType":"bytes32"},{"name":"blockNumber","type":"uint64","internalType":"uint64"},{"name":"transactionHash","type":"bytes32","internalType":"bytes32"},{"name":"transactionIndex","type":"uint64","internalType":"uint64"},{"name":"logIndex","type":"uint256","internalType":"uint256"},{"name":"removed","type":"bool","internalType":"bool"}]}],"stateMutability":"nonpayable"},{"type":"function","name":"exists","inputs":[{"name":"path","type":"string","internalType":"string"}],"outputs":[{"name":"result","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"expectCall","inputs":[{"name":"callee","type":"address","internalType":"address"},{"name":"msgValue","type":"uint256","internalType":"uint256"},{"name":"gas","type":"uint64","internalType":"uint64"},{"name":"data","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectCall","inputs":[{"name":"callee","type":"address","internalType":"address"},{"name":"msgValue","type":"uint256","internalType":"uint256"},{"name":"gas","type":"uint64","internalType":"uint64"},{"name":"data","type":"bytes","internalType":"bytes"},{"name":"count","type":"uint64","internalType":"uint64"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectCall","inputs":[{"name":"callee","type":"address","internalType":"address"},{"name":"msgValue","type":"uint256","internalType":"uint256"},{"name":"data","type":"bytes","internalType":"bytes"},{"name":"count","type":"uint64","internalType":"uint64"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectCall","inputs":[{"name":"callee","type":"address","internalType":"address"},{"name":"data","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectCall","inputs":[{"name":"callee","type":"address","internalType":"address"},{"name":"data","type":"bytes","internalType":"bytes"},{"name":"count","type":"uint64","internalType":"uint64"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectCall","inputs":[{"name":"callee","type":"address","internalType":"address"},{"name":"msgValue","type":"uint256","internalType":"uint256"},{"name":"data","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectCallMinGas","inputs":[{"name":"callee","type":"address","internalType":"address"},{"name":"msgValue","type":"uint256","internalType":"uint256"},{"name":"minGas","type":"uint64","internalType":"uint64"},{"name":"data","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectCallMinGas","inputs":[{"name":"callee","type":"address","internalType":"address"},{"name":"msgValue","type":"uint256","internalType":"uint256"},{"name":"minGas","type":"uint64","internalType":"uint64"},{"name":"data","type":"bytes","internalType":"bytes"},{"name":"count","type":"uint64","internalType":"uint64"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectCreate","inputs":[{"name":"bytecode","type":"bytes","internalType":"bytes"},{"name":"deployer","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectCreate2","inputs":[{"name":"bytecode","type":"bytes","internalType":"bytes"},{"name":"deployer","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectEmit","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectEmit","inputs":[{"name":"checkTopic1","type":"bool","internalType":"bool"},{"name":"checkTopic2","type":"bool","internalType":"bool"},{"name":"checkTopic3","type":"bool","internalType":"bool"},{"name":"checkData","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectEmit","inputs":[{"name":"count","type":"uint64","internalType":"uint64"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectEmit","inputs":[{"name":"checkTopic1","type":"bool","internalType":"bool"},{"name":"checkTopic2","type":"bool","internalType":"bool"},{"name":"checkTopic3","type":"bool","internalType":"bool"},{"name":"checkData","type":"bool","internalType":"bool"},{"name":"count","type":"uint64","internalType":"uint64"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectEmit","inputs":[{"name":"checkTopic1","type":"bool","internalType":"bool"},{"name":"checkTopic2","type":"bool","internalType":"bool"},{"name":"checkTopic3","type":"bool","internalType":"bool"},{"name":"checkData","type":"bool","internalType":"bool"},{"name":"emitter","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectEmit","inputs":[{"name":"emitter","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectEmit","inputs":[{"name":"emitter","type":"address","internalType":"address"},{"name":"count","type":"uint64","internalType":"uint64"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectEmit","inputs":[{"name":"checkTopic1","type":"bool","internalType":"bool"},{"name":"checkTopic2","type":"bool","internalType":"bool"},{"name":"checkTopic3","type":"bool","internalType":"bool"},{"name":"checkData","type":"bool","internalType":"bool"},{"name":"emitter","type":"address","internalType":"address"},{"name":"count","type":"uint64","internalType":"uint64"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectEmitAnonymous","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectEmitAnonymous","inputs":[{"name":"emitter","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectEmitAnonymous","inputs":[{"name":"checkTopic0","type":"bool","internalType":"bool"},{"name":"checkTopic1","type":"bool","internalType":"bool"},{"name":"checkTopic2","type":"bool","internalType":"bool"},{"name":"checkTopic3","type":"bool","internalType":"bool"},{"name":"checkData","type":"bool","internalType":"bool"},{"name":"emitter","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectEmitAnonymous","inputs":[{"name":"checkTopic0","type":"bool","internalType":"bool"},{"name":"checkTopic1","type":"bool","internalType":"bool"},{"name":"checkTopic2","type":"bool","internalType":"bool"},{"name":"checkTopic3","type":"bool","internalType":"bool"},{"name":"checkData","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectPartialRevert","inputs":[{"name":"revertData","type":"bytes4","internalType":"bytes4"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectPartialRevert","inputs":[{"name":"revertData","type":"bytes4","internalType":"bytes4"},{"name":"reverter","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectRevert","inputs":[{"name":"reverter","type":"address","internalType":"address"},{"name":"count","type":"uint64","internalType":"uint64"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectRevert","inputs":[{"name":"revertData","type":"bytes4","internalType":"bytes4"},{"name":"reverter","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectRevert","inputs":[{"name":"revertData","type":"bytes","internalType":"bytes"},{"name":"count","type":"uint64","internalType":"uint64"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectRevert","inputs":[{"name":"count","type":"uint64","internalType":"uint64"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectRevert","inputs":[{"name":"revertData","type":"bytes","internalType":"bytes"},{"name":"reverter","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectRevert","inputs":[{"name":"revertData","type":"bytes4","internalType":"bytes4"},{"name":"reverter","type":"address","internalType":"address"},{"name":"count","type":"uint64","internalType":"uint64"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectRevert","inputs":[{"name":"revertData","type":"bytes4","internalType":"bytes4"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectRevert","inputs":[{"name":"revertData","type":"bytes","internalType":"bytes"},{"name":"reverter","type":"address","internalType":"address"},{"name":"count","type":"uint64","internalType":"uint64"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectRevert","inputs":[{"name":"reverter","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectRevert","inputs":[{"name":"revertData","type":"bytes4","internalType":"bytes4"},{"name":"count","type":"uint64","internalType":"uint64"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectRevert","inputs":[{"name":"revertData","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectRevert","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectSafeMemory","inputs":[{"name":"min","type":"uint64","internalType":"uint64"},{"name":"max","type":"uint64","internalType":"uint64"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectSafeMemoryCall","inputs":[{"name":"min","type":"uint64","internalType":"uint64"},{"name":"max","type":"uint64","internalType":"uint64"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"fee","inputs":[{"name":"newBasefee","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"ffi","inputs":[{"name":"commandInput","type":"string[]","internalType":"string[]"}],"outputs":[{"name":"result","type":"bytes","internalType":"bytes"}],"stateMutability":"nonpayable"},{"type":"function","name":"foundryVersionAtLeast","inputs":[{"name":"version","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"foundryVersionCmp","inputs":[{"name":"version","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"int256","internalType":"int256"}],"stateMutability":"view"},{"type":"function","name":"fsMetadata","inputs":[{"name":"path","type":"string","internalType":"string"}],"outputs":[{"name":"metadata","type":"tuple","internalType":"struct VmSafe.FsMetadata","components":[{"name":"isDir","type":"bool","internalType":"bool"},{"name":"isSymlink","type":"bool","internalType":"bool"},{"name":"length","type":"uint256","internalType":"uint256"},{"name":"readOnly","type":"bool","internalType":"bool"},{"name":"modified","type":"uint256","internalType":"uint256"},{"name":"accessed","type":"uint256","internalType":"uint256"},{"name":"created","type":"uint256","internalType":"uint256"}]}],"stateMutability":"view"},{"type":"function","name":"getArtifactPathByCode","inputs":[{"name":"code","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"path","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"getArtifactPathByDeployedCode","inputs":[{"name":"deployedCode","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"path","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"getBlobBaseFee","inputs":[],"outputs":[{"name":"blobBaseFee","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"getBlobhashes","inputs":[],"outputs":[{"name":"hashes","type":"bytes32[]","internalType":"bytes32[]"}],"stateMutability":"view"},{"type":"function","name":"getBlockNumber","inputs":[],"outputs":[{"name":"height","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"getBlockTimestamp","inputs":[],"outputs":[{"name":"timestamp","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"getBroadcast","inputs":[{"name":"contractName","type":"string","internalType":"string"},{"name":"chainId","type":"uint64","internalType":"uint64"},{"name":"txType","type":"uint8","internalType":"enum VmSafe.BroadcastTxType"}],"outputs":[{"name":"","type":"tuple","internalType":"struct VmSafe.BroadcastTxSummary","components":[{"name":"txHash","type":"bytes32","internalType":"bytes32"},{"name":"txType","type":"uint8","internalType":"enum VmSafe.BroadcastTxType"},{"name":"contractAddress","type":"address","internalType":"address"},{"name":"blockNumber","type":"uint64","internalType":"uint64"},{"name":"success","type":"bool","internalType":"bool"}]}],"stateMutability":"view"},{"type":"function","name":"getBroadcasts","inputs":[{"name":"contractName","type":"string","internalType":"string"},{"name":"chainId","type":"uint64","internalType":"uint64"}],"outputs":[{"name":"","type":"tuple[]","internalType":"struct VmSafe.BroadcastTxSummary[]","components":[{"name":"txHash","type":"bytes32","internalType":"bytes32"},{"name":"txType","type":"uint8","internalType":"enum VmSafe.BroadcastTxType"},{"name":"contractAddress","type":"address","internalType":"address"},{"name":"blockNumber","type":"uint64","internalType":"uint64"},{"name":"success","type":"bool","internalType":"bool"}]}],"stateMutability":"view"},{"type":"function","name":"getBroadcasts","inputs":[{"name":"contractName","type":"string","internalType":"string"},{"name":"chainId","type":"uint64","internalType":"uint64"},{"name":"txType","type":"uint8","internalType":"enum VmSafe.BroadcastTxType"}],"outputs":[{"name":"","type":"tuple[]","internalType":"struct VmSafe.BroadcastTxSummary[]","components":[{"name":"txHash","type":"bytes32","internalType":"bytes32"},{"name":"txType","type":"uint8","internalType":"enum VmSafe.BroadcastTxType"},{"name":"contractAddress","type":"address","internalType":"address"},{"name":"blockNumber","type":"uint64","internalType":"uint64"},{"name":"success","type":"bool","internalType":"bool"}]}],"stateMutability":"view"},{"type":"function","name":"getChain","inputs":[{"name":"chainAlias","type":"string","internalType":"string"}],"outputs":[{"name":"chain","type":"tuple","internalType":"struct VmSafe.Chain","components":[{"name":"name","type":"string","internalType":"string"},{"name":"chainId","type":"uint256","internalType":"uint256"},{"name":"chainAlias","type":"string","internalType":"string"},{"name":"rpcUrl","type":"string","internalType":"string"}]}],"stateMutability":"view"},{"type":"function","name":"getChain","inputs":[{"name":"chainId","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"chain","type":"tuple","internalType":"struct VmSafe.Chain","components":[{"name":"name","type":"string","internalType":"string"},{"name":"chainId","type":"uint256","internalType":"uint256"},{"name":"chainAlias","type":"string","internalType":"string"},{"name":"rpcUrl","type":"string","internalType":"string"}]}],"stateMutability":"view"},{"type":"function","name":"getCode","inputs":[{"name":"artifactPath","type":"string","internalType":"string"}],"outputs":[{"name":"creationBytecode","type":"bytes","internalType":"bytes"}],"stateMutability":"view"},{"type":"function","name":"getDeployedCode","inputs":[{"name":"artifactPath","type":"string","internalType":"string"}],"outputs":[{"name":"runtimeBytecode","type":"bytes","internalType":"bytes"}],"stateMutability":"view"},{"type":"function","name":"getDeployment","inputs":[{"name":"contractName","type":"string","internalType":"string"},{"name":"chainId","type":"uint64","internalType":"uint64"}],"outputs":[{"name":"deployedAddress","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"getDeployment","inputs":[{"name":"contractName","type":"string","internalType":"string"}],"outputs":[{"name":"deployedAddress","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"getDeployments","inputs":[{"name":"contractName","type":"string","internalType":"string"},{"name":"chainId","type":"uint64","internalType":"uint64"}],"outputs":[{"name":"deployedAddresses","type":"address[]","internalType":"address[]"}],"stateMutability":"view"},{"type":"function","name":"getFoundryVersion","inputs":[],"outputs":[{"name":"version","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"getLabel","inputs":[{"name":"account","type":"address","internalType":"address"}],"outputs":[{"name":"currentLabel","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"getMappingKeyAndParentOf","inputs":[{"name":"target","type":"address","internalType":"address"},{"name":"elementSlot","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"found","type":"bool","internalType":"bool"},{"name":"key","type":"bytes32","internalType":"bytes32"},{"name":"parent","type":"bytes32","internalType":"bytes32"}],"stateMutability":"nonpayable"},{"type":"function","name":"getMappingLength","inputs":[{"name":"target","type":"address","internalType":"address"},{"name":"mappingSlot","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"length","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"getMappingSlotAt","inputs":[{"name":"target","type":"address","internalType":"address"},{"name":"mappingSlot","type":"bytes32","internalType":"bytes32"},{"name":"idx","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"value","type":"bytes32","internalType":"bytes32"}],"stateMutability":"nonpayable"},{"type":"function","name":"getNonce","inputs":[{"name":"account","type":"address","internalType":"address"}],"outputs":[{"name":"nonce","type":"uint64","internalType":"uint64"}],"stateMutability":"view"},{"type":"function","name":"getNonce","inputs":[{"name":"wallet","type":"tuple","internalType":"struct VmSafe.Wallet","components":[{"name":"addr","type":"address","internalType":"address"},{"name":"publicKeyX","type":"uint256","internalType":"uint256"},{"name":"publicKeyY","type":"uint256","internalType":"uint256"},{"name":"privateKey","type":"uint256","internalType":"uint256"}]}],"outputs":[{"name":"nonce","type":"uint64","internalType":"uint64"}],"stateMutability":"nonpayable"},{"type":"function","name":"getRecordedLogs","inputs":[],"outputs":[{"name":"logs","type":"tuple[]","internalType":"struct VmSafe.Log[]","components":[{"name":"topics","type":"bytes32[]","internalType":"bytes32[]"},{"name":"data","type":"bytes","internalType":"bytes"},{"name":"emitter","type":"address","internalType":"address"}]}],"stateMutability":"nonpayable"},{"type":"function","name":"getStateDiff","inputs":[],"outputs":[{"name":"diff","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"getStateDiffJson","inputs":[],"outputs":[{"name":"diff","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"getWallets","inputs":[],"outputs":[{"name":"wallets","type":"address[]","internalType":"address[]"}],"stateMutability":"nonpayable"},{"type":"function","name":"indexOf","inputs":[{"name":"input","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"pure"},{"type":"function","name":"interceptInitcode","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"isContext","inputs":[{"name":"context","type":"uint8","internalType":"enum VmSafe.ForgeContext"}],"outputs":[{"name":"result","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"isDir","inputs":[{"name":"path","type":"string","internalType":"string"}],"outputs":[{"name":"result","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"isFile","inputs":[{"name":"path","type":"string","internalType":"string"}],"outputs":[{"name":"result","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"isPersistent","inputs":[{"name":"account","type":"address","internalType":"address"}],"outputs":[{"name":"persistent","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"keyExists","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"keyExistsJson","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"keyExistsToml","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"label","inputs":[{"name":"account","type":"address","internalType":"address"},{"name":"newLabel","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"lastCallGas","inputs":[],"outputs":[{"name":"gas","type":"tuple","internalType":"struct VmSafe.Gas","components":[{"name":"gasLimit","type":"uint64","internalType":"uint64"},{"name":"gasTotalUsed","type":"uint64","internalType":"uint64"},{"name":"gasMemoryUsed","type":"uint64","internalType":"uint64"},{"name":"gasRefunded","type":"int64","internalType":"int64"},{"name":"gasRemaining","type":"uint64","internalType":"uint64"}]}],"stateMutability":"view"},{"type":"function","name":"load","inputs":[{"name":"target","type":"address","internalType":"address"},{"name":"slot","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"data","type":"bytes32","internalType":"bytes32"}],"stateMutability":"view"},{"type":"function","name":"loadAllocs","inputs":[{"name":"pathToAllocsJson","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"makePersistent","inputs":[{"name":"accounts","type":"address[]","internalType":"address[]"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"makePersistent","inputs":[{"name":"account0","type":"address","internalType":"address"},{"name":"account1","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"makePersistent","inputs":[{"name":"account","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"makePersistent","inputs":[{"name":"account0","type":"address","internalType":"address"},{"name":"account1","type":"address","internalType":"address"},{"name":"account2","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"mockCall","inputs":[{"name":"callee","type":"address","internalType":"address"},{"name":"data","type":"bytes4","internalType":"bytes4"},{"name":"returnData","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"mockCall","inputs":[{"name":"callee","type":"address","internalType":"address"},{"name":"msgValue","type":"uint256","internalType":"uint256"},{"name":"data","type":"bytes","internalType":"bytes"},{"name":"returnData","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"mockCall","inputs":[{"name":"callee","type":"address","internalType":"address"},{"name":"data","type":"bytes","internalType":"bytes"},{"name":"returnData","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"mockCall","inputs":[{"name":"callee","type":"address","internalType":"address"},{"name":"msgValue","type":"uint256","internalType":"uint256"},{"name":"data","type":"bytes4","internalType":"bytes4"},{"name":"returnData","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"mockCallRevert","inputs":[{"name":"callee","type":"address","internalType":"address"},{"name":"data","type":"bytes4","internalType":"bytes4"},{"name":"revertData","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"mockCallRevert","inputs":[{"name":"callee","type":"address","internalType":"address"},{"name":"msgValue","type":"uint256","internalType":"uint256"},{"name":"data","type":"bytes4","internalType":"bytes4"},{"name":"revertData","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"mockCallRevert","inputs":[{"name":"callee","type":"address","internalType":"address"},{"name":"msgValue","type":"uint256","internalType":"uint256"},{"name":"data","type":"bytes","internalType":"bytes"},{"name":"revertData","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"mockCallRevert","inputs":[{"name":"callee","type":"address","internalType":"address"},{"name":"data","type":"bytes","internalType":"bytes"},{"name":"revertData","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"mockCalls","inputs":[{"name":"callee","type":"address","internalType":"address"},{"name":"msgValue","type":"uint256","internalType":"uint256"},{"name":"data","type":"bytes","internalType":"bytes"},{"name":"returnData","type":"bytes[]","internalType":"bytes[]"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"mockCalls","inputs":[{"name":"callee","type":"address","internalType":"address"},{"name":"data","type":"bytes","internalType":"bytes"},{"name":"returnData","type":"bytes[]","internalType":"bytes[]"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"mockFunction","inputs":[{"name":"callee","type":"address","internalType":"address"},{"name":"target","type":"address","internalType":"address"},{"name":"data","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"noAccessList","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"parseAddress","inputs":[{"name":"stringifiedValue","type":"string","internalType":"string"}],"outputs":[{"name":"parsedValue","type":"address","internalType":"address"}],"stateMutability":"pure"},{"type":"function","name":"parseBool","inputs":[{"name":"stringifiedValue","type":"string","internalType":"string"}],"outputs":[{"name":"parsedValue","type":"bool","internalType":"bool"}],"stateMutability":"pure"},{"type":"function","name":"parseBytes","inputs":[{"name":"stringifiedValue","type":"string","internalType":"string"}],"outputs":[{"name":"parsedValue","type":"bytes","internalType":"bytes"}],"stateMutability":"pure"},{"type":"function","name":"parseBytes32","inputs":[{"name":"stringifiedValue","type":"string","internalType":"string"}],"outputs":[{"name":"parsedValue","type":"bytes32","internalType":"bytes32"}],"stateMutability":"pure"},{"type":"function","name":"parseInt","inputs":[{"name":"stringifiedValue","type":"string","internalType":"string"}],"outputs":[{"name":"parsedValue","type":"int256","internalType":"int256"}],"stateMutability":"pure"},{"type":"function","name":"parseJson","inputs":[{"name":"json","type":"string","internalType":"string"}],"outputs":[{"name":"abiEncodedData","type":"bytes","internalType":"bytes"}],"stateMutability":"pure"},{"type":"function","name":"parseJson","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"abiEncodedData","type":"bytes","internalType":"bytes"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonAddress","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonAddressArray","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"address[]","internalType":"address[]"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonBool","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonBoolArray","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bool[]","internalType":"bool[]"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonBytes","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bytes","internalType":"bytes"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonBytes32","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bytes32","internalType":"bytes32"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonBytes32Array","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bytes32[]","internalType":"bytes32[]"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonBytesArray","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bytes[]","internalType":"bytes[]"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonInt","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"int256","internalType":"int256"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonIntArray","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"int256[]","internalType":"int256[]"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonKeys","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"keys","type":"string[]","internalType":"string[]"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonString","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonStringArray","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"string[]","internalType":"string[]"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonType","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"typeDescription","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bytes","internalType":"bytes"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonType","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"},{"name":"typeDescription","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bytes","internalType":"bytes"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonTypeArray","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"},{"name":"typeDescription","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bytes","internalType":"bytes"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonUint","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonUintArray","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"uint256[]","internalType":"uint256[]"}],"stateMutability":"pure"},{"type":"function","name":"parseToml","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"abiEncodedData","type":"bytes","internalType":"bytes"}],"stateMutability":"pure"},{"type":"function","name":"parseToml","inputs":[{"name":"toml","type":"string","internalType":"string"}],"outputs":[{"name":"abiEncodedData","type":"bytes","internalType":"bytes"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlAddress","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlAddressArray","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"address[]","internalType":"address[]"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlBool","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlBoolArray","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bool[]","internalType":"bool[]"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlBytes","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bytes","internalType":"bytes"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlBytes32","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bytes32","internalType":"bytes32"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlBytes32Array","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bytes32[]","internalType":"bytes32[]"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlBytesArray","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bytes[]","internalType":"bytes[]"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlInt","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"int256","internalType":"int256"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlIntArray","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"int256[]","internalType":"int256[]"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlKeys","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"keys","type":"string[]","internalType":"string[]"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlString","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlStringArray","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"string[]","internalType":"string[]"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlType","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"typeDescription","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bytes","internalType":"bytes"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlType","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"},{"name":"typeDescription","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bytes","internalType":"bytes"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlTypeArray","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"},{"name":"typeDescription","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bytes","internalType":"bytes"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlUint","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlUintArray","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"uint256[]","internalType":"uint256[]"}],"stateMutability":"pure"},{"type":"function","name":"parseUint","inputs":[{"name":"stringifiedValue","type":"string","internalType":"string"}],"outputs":[{"name":"parsedValue","type":"uint256","internalType":"uint256"}],"stateMutability":"pure"},{"type":"function","name":"pauseGasMetering","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"pauseTracing","inputs":[],"outputs":[],"stateMutability":"view"},{"type":"function","name":"prank","inputs":[{"name":"msgSender","type":"address","internalType":"address"},{"name":"txOrigin","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"prank","inputs":[{"name":"msgSender","type":"address","internalType":"address"},{"name":"txOrigin","type":"address","internalType":"address"},{"name":"delegateCall","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"prank","inputs":[{"name":"msgSender","type":"address","internalType":"address"},{"name":"delegateCall","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"prank","inputs":[{"name":"msgSender","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"prevrandao","inputs":[{"name":"newPrevrandao","type":"bytes32","internalType":"bytes32"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"prevrandao","inputs":[{"name":"newPrevrandao","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"projectRoot","inputs":[],"outputs":[{"name":"path","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"prompt","inputs":[{"name":"promptText","type":"string","internalType":"string"}],"outputs":[{"name":"input","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"promptAddress","inputs":[{"name":"promptText","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"nonpayable"},{"type":"function","name":"promptSecret","inputs":[{"name":"promptText","type":"string","internalType":"string"}],"outputs":[{"name":"input","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"promptSecretUint","inputs":[{"name":"promptText","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"promptUint","inputs":[{"name":"promptText","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"publicKeyP256","inputs":[{"name":"privateKey","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"publicKeyX","type":"uint256","internalType":"uint256"},{"name":"publicKeyY","type":"uint256","internalType":"uint256"}],"stateMutability":"pure"},{"type":"function","name":"randomAddress","inputs":[],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"nonpayable"},{"type":"function","name":"randomBool","inputs":[],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"randomBytes","inputs":[{"name":"len","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"bytes","internalType":"bytes"}],"stateMutability":"view"},{"type":"function","name":"randomBytes4","inputs":[],"outputs":[{"name":"","type":"bytes4","internalType":"bytes4"}],"stateMutability":"view"},{"type":"function","name":"randomBytes8","inputs":[],"outputs":[{"name":"","type":"bytes8","internalType":"bytes8"}],"stateMutability":"view"},{"type":"function","name":"randomInt","inputs":[],"outputs":[{"name":"","type":"int256","internalType":"int256"}],"stateMutability":"view"},{"type":"function","name":"randomInt","inputs":[{"name":"bits","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"int256","internalType":"int256"}],"stateMutability":"view"},{"type":"function","name":"randomUint","inputs":[],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"randomUint","inputs":[{"name":"bits","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"randomUint","inputs":[{"name":"min","type":"uint256","internalType":"uint256"},{"name":"max","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"readCallers","inputs":[],"outputs":[{"name":"callerMode","type":"uint8","internalType":"enum VmSafe.CallerMode"},{"name":"msgSender","type":"address","internalType":"address"},{"name":"txOrigin","type":"address","internalType":"address"}],"stateMutability":"nonpayable"},{"type":"function","name":"readDir","inputs":[{"name":"path","type":"string","internalType":"string"},{"name":"maxDepth","type":"uint64","internalType":"uint64"}],"outputs":[{"name":"entries","type":"tuple[]","internalType":"struct VmSafe.DirEntry[]","components":[{"name":"errorMessage","type":"string","internalType":"string"},{"name":"path","type":"string","internalType":"string"},{"name":"depth","type":"uint64","internalType":"uint64"},{"name":"isDir","type":"bool","internalType":"bool"},{"name":"isSymlink","type":"bool","internalType":"bool"}]}],"stateMutability":"view"},{"type":"function","name":"readDir","inputs":[{"name":"path","type":"string","internalType":"string"},{"name":"maxDepth","type":"uint64","internalType":"uint64"},{"name":"followLinks","type":"bool","internalType":"bool"}],"outputs":[{"name":"entries","type":"tuple[]","internalType":"struct VmSafe.DirEntry[]","components":[{"name":"errorMessage","type":"string","internalType":"string"},{"name":"path","type":"string","internalType":"string"},{"name":"depth","type":"uint64","internalType":"uint64"},{"name":"isDir","type":"bool","internalType":"bool"},{"name":"isSymlink","type":"bool","internalType":"bool"}]}],"stateMutability":"view"},{"type":"function","name":"readDir","inputs":[{"name":"path","type":"string","internalType":"string"}],"outputs":[{"name":"entries","type":"tuple[]","internalType":"struct VmSafe.DirEntry[]","components":[{"name":"errorMessage","type":"string","internalType":"string"},{"name":"path","type":"string","internalType":"string"},{"name":"depth","type":"uint64","internalType":"uint64"},{"name":"isDir","type":"bool","internalType":"bool"},{"name":"isSymlink","type":"bool","internalType":"bool"}]}],"stateMutability":"view"},{"type":"function","name":"readFile","inputs":[{"name":"path","type":"string","internalType":"string"}],"outputs":[{"name":"data","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"readFileBinary","inputs":[{"name":"path","type":"string","internalType":"string"}],"outputs":[{"name":"data","type":"bytes","internalType":"bytes"}],"stateMutability":"view"},{"type":"function","name":"readLine","inputs":[{"name":"path","type":"string","internalType":"string"}],"outputs":[{"name":"line","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"readLink","inputs":[{"name":"linkPath","type":"string","internalType":"string"}],"outputs":[{"name":"targetPath","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"record","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"recordLogs","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"rememberKey","inputs":[{"name":"privateKey","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"keyAddr","type":"address","internalType":"address"}],"stateMutability":"nonpayable"},{"type":"function","name":"rememberKeys","inputs":[{"name":"mnemonic","type":"string","internalType":"string"},{"name":"derivationPath","type":"string","internalType":"string"},{"name":"count","type":"uint32","internalType":"uint32"}],"outputs":[{"name":"keyAddrs","type":"address[]","internalType":"address[]"}],"stateMutability":"nonpayable"},{"type":"function","name":"rememberKeys","inputs":[{"name":"mnemonic","type":"string","internalType":"string"},{"name":"derivationPath","type":"string","internalType":"string"},{"name":"language","type":"string","internalType":"string"},{"name":"count","type":"uint32","internalType":"uint32"}],"outputs":[{"name":"keyAddrs","type":"address[]","internalType":"address[]"}],"stateMutability":"nonpayable"},{"type":"function","name":"removeDir","inputs":[{"name":"path","type":"string","internalType":"string"},{"name":"recursive","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"removeFile","inputs":[{"name":"path","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"replace","inputs":[{"name":"input","type":"string","internalType":"string"},{"name":"from","type":"string","internalType":"string"},{"name":"to","type":"string","internalType":"string"}],"outputs":[{"name":"output","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"resetGasMetering","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"resetNonce","inputs":[{"name":"account","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"resumeGasMetering","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"resumeTracing","inputs":[],"outputs":[],"stateMutability":"view"},{"type":"function","name":"revertTo","inputs":[{"name":"snapshotId","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"success","type":"bool","internalType":"bool"}],"stateMutability":"nonpayable"},{"type":"function","name":"revertToAndDelete","inputs":[{"name":"snapshotId","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"success","type":"bool","internalType":"bool"}],"stateMutability":"nonpayable"},{"type":"function","name":"revertToState","inputs":[{"name":"snapshotId","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"success","type":"bool","internalType":"bool"}],"stateMutability":"nonpayable"},{"type":"function","name":"revertToStateAndDelete","inputs":[{"name":"snapshotId","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"success","type":"bool","internalType":"bool"}],"stateMutability":"nonpayable"},{"type":"function","name":"revokePersistent","inputs":[{"name":"accounts","type":"address[]","internalType":"address[]"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"revokePersistent","inputs":[{"name":"account","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"roll","inputs":[{"name":"newHeight","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"rollFork","inputs":[{"name":"txHash","type":"bytes32","internalType":"bytes32"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"rollFork","inputs":[{"name":"forkId","type":"uint256","internalType":"uint256"},{"name":"blockNumber","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"rollFork","inputs":[{"name":"blockNumber","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"rollFork","inputs":[{"name":"forkId","type":"uint256","internalType":"uint256"},{"name":"txHash","type":"bytes32","internalType":"bytes32"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"rpc","inputs":[{"name":"urlOrAlias","type":"string","internalType":"string"},{"name":"method","type":"string","internalType":"string"},{"name":"params","type":"string","internalType":"string"}],"outputs":[{"name":"data","type":"bytes","internalType":"bytes"}],"stateMutability":"nonpayable"},{"type":"function","name":"rpc","inputs":[{"name":"method","type":"string","internalType":"string"},{"name":"params","type":"string","internalType":"string"}],"outputs":[{"name":"data","type":"bytes","internalType":"bytes"}],"stateMutability":"nonpayable"},{"type":"function","name":"rpcUrl","inputs":[{"name":"rpcAlias","type":"string","internalType":"string"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"rpcUrlStructs","inputs":[],"outputs":[{"name":"urls","type":"tuple[]","internalType":"struct VmSafe.Rpc[]","components":[{"name":"key","type":"string","internalType":"string"},{"name":"url","type":"string","internalType":"string"}]}],"stateMutability":"view"},{"type":"function","name":"rpcUrls","inputs":[],"outputs":[{"name":"urls","type":"string[2][]","internalType":"string[2][]"}],"stateMutability":"view"},{"type":"function","name":"selectFork","inputs":[{"name":"forkId","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"serializeAddress","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"values","type":"address[]","internalType":"address[]"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeAddress","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"value","type":"address","internalType":"address"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeBool","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"values","type":"bool[]","internalType":"bool[]"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeBool","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"value","type":"bool","internalType":"bool"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeBytes","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"values","type":"bytes[]","internalType":"bytes[]"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeBytes","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"value","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeBytes32","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"values","type":"bytes32[]","internalType":"bytes32[]"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeBytes32","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"value","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeInt","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"value","type":"int256","internalType":"int256"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeInt","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"values","type":"int256[]","internalType":"int256[]"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeJson","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"value","type":"string","internalType":"string"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeJsonType","inputs":[{"name":"typeDescription","type":"string","internalType":"string"},{"name":"value","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"serializeJsonType","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"typeDescription","type":"string","internalType":"string"},{"name":"value","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeString","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"values","type":"string[]","internalType":"string[]"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeString","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"value","type":"string","internalType":"string"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeUint","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"value","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeUint","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"values","type":"uint256[]","internalType":"uint256[]"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeUintToHex","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"value","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"setArbitraryStorage","inputs":[{"name":"target","type":"address","internalType":"address"},{"name":"overwrite","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"setArbitraryStorage","inputs":[{"name":"target","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"setBlockhash","inputs":[{"name":"blockNumber","type":"uint256","internalType":"uint256"},{"name":"blockHash","type":"bytes32","internalType":"bytes32"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"setEnv","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"value","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"setNonce","inputs":[{"name":"account","type":"address","internalType":"address"},{"name":"newNonce","type":"uint64","internalType":"uint64"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"setNonceUnsafe","inputs":[{"name":"account","type":"address","internalType":"address"},{"name":"newNonce","type":"uint64","internalType":"uint64"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"shuffle","inputs":[{"name":"array","type":"uint256[]","internalType":"uint256[]"}],"outputs":[{"name":"","type":"uint256[]","internalType":"uint256[]"}],"stateMutability":"nonpayable"},{"type":"function","name":"sign","inputs":[{"name":"digest","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"v","type":"uint8","internalType":"uint8"},{"name":"r","type":"bytes32","internalType":"bytes32"},{"name":"s","type":"bytes32","internalType":"bytes32"}],"stateMutability":"pure"},{"type":"function","name":"sign","inputs":[{"name":"signer","type":"address","internalType":"address"},{"name":"digest","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"v","type":"uint8","internalType":"uint8"},{"name":"r","type":"bytes32","internalType":"bytes32"},{"name":"s","type":"bytes32","internalType":"bytes32"}],"stateMutability":"pure"},{"type":"function","name":"sign","inputs":[{"name":"wallet","type":"tuple","internalType":"struct VmSafe.Wallet","components":[{"name":"addr","type":"address","internalType":"address"},{"name":"publicKeyX","type":"uint256","internalType":"uint256"},{"name":"publicKeyY","type":"uint256","internalType":"uint256"},{"name":"privateKey","type":"uint256","internalType":"uint256"}]},{"name":"digest","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"v","type":"uint8","internalType":"uint8"},{"name":"r","type":"bytes32","internalType":"bytes32"},{"name":"s","type":"bytes32","internalType":"bytes32"}],"stateMutability":"nonpayable"},{"type":"function","name":"sign","inputs":[{"name":"privateKey","type":"uint256","internalType":"uint256"},{"name":"digest","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"v","type":"uint8","internalType":"uint8"},{"name":"r","type":"bytes32","internalType":"bytes32"},{"name":"s","type":"bytes32","internalType":"bytes32"}],"stateMutability":"pure"},{"type":"function","name":"signAndAttachDelegation","inputs":[{"name":"implementation","type":"address","internalType":"address"},{"name":"privateKey","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"signedDelegation","type":"tuple","internalType":"struct VmSafe.SignedDelegation","components":[{"name":"v","type":"uint8","internalType":"uint8"},{"name":"r","type":"bytes32","internalType":"bytes32"},{"name":"s","type":"bytes32","internalType":"bytes32"},{"name":"nonce","type":"uint64","internalType":"uint64"},{"name":"implementation","type":"address","internalType":"address"}]}],"stateMutability":"nonpayable"},{"type":"function","name":"signAndAttachDelegation","inputs":[{"name":"implementation","type":"address","internalType":"address"},{"name":"privateKey","type":"uint256","internalType":"uint256"},{"name":"nonce","type":"uint64","internalType":"uint64"}],"outputs":[{"name":"signedDelegation","type":"tuple","internalType":"struct VmSafe.SignedDelegation","components":[{"name":"v","type":"uint8","internalType":"uint8"},{"name":"r","type":"bytes32","internalType":"bytes32"},{"name":"s","type":"bytes32","internalType":"bytes32"},{"name":"nonce","type":"uint64","internalType":"uint64"},{"name":"implementation","type":"address","internalType":"address"}]}],"stateMutability":"nonpayable"},{"type":"function","name":"signCompact","inputs":[{"name":"wallet","type":"tuple","internalType":"struct VmSafe.Wallet","components":[{"name":"addr","type":"address","internalType":"address"},{"name":"publicKeyX","type":"uint256","internalType":"uint256"},{"name":"publicKeyY","type":"uint256","internalType":"uint256"},{"name":"privateKey","type":"uint256","internalType":"uint256"}]},{"name":"digest","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"r","type":"bytes32","internalType":"bytes32"},{"name":"vs","type":"bytes32","internalType":"bytes32"}],"stateMutability":"nonpayable"},{"type":"function","name":"signCompact","inputs":[{"name":"signer","type":"address","internalType":"address"},{"name":"digest","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"r","type":"bytes32","internalType":"bytes32"},{"name":"vs","type":"bytes32","internalType":"bytes32"}],"stateMutability":"pure"},{"type":"function","name":"signCompact","inputs":[{"name":"digest","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"r","type":"bytes32","internalType":"bytes32"},{"name":"vs","type":"bytes32","internalType":"bytes32"}],"stateMutability":"pure"},{"type":"function","name":"signCompact","inputs":[{"name":"privateKey","type":"uint256","internalType":"uint256"},{"name":"digest","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"r","type":"bytes32","internalType":"bytes32"},{"name":"vs","type":"bytes32","internalType":"bytes32"}],"stateMutability":"pure"},{"type":"function","name":"signDelegation","inputs":[{"name":"implementation","type":"address","internalType":"address"},{"name":"privateKey","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"signedDelegation","type":"tuple","internalType":"struct VmSafe.SignedDelegation","components":[{"name":"v","type":"uint8","internalType":"uint8"},{"name":"r","type":"bytes32","internalType":"bytes32"},{"name":"s","type":"bytes32","internalType":"bytes32"},{"name":"nonce","type":"uint64","internalType":"uint64"},{"name":"implementation","type":"address","internalType":"address"}]}],"stateMutability":"nonpayable"},{"type":"function","name":"signDelegation","inputs":[{"name":"implementation","type":"address","internalType":"address"},{"name":"privateKey","type":"uint256","internalType":"uint256"},{"name":"nonce","type":"uint64","internalType":"uint64"}],"outputs":[{"name":"signedDelegation","type":"tuple","internalType":"struct VmSafe.SignedDelegation","components":[{"name":"v","type":"uint8","internalType":"uint8"},{"name":"r","type":"bytes32","internalType":"bytes32"},{"name":"s","type":"bytes32","internalType":"bytes32"},{"name":"nonce","type":"uint64","internalType":"uint64"},{"name":"implementation","type":"address","internalType":"address"}]}],"stateMutability":"nonpayable"},{"type":"function","name":"signP256","inputs":[{"name":"privateKey","type":"uint256","internalType":"uint256"},{"name":"digest","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"r","type":"bytes32","internalType":"bytes32"},{"name":"s","type":"bytes32","internalType":"bytes32"}],"stateMutability":"pure"},{"type":"function","name":"skip","inputs":[{"name":"skipTest","type":"bool","internalType":"bool"},{"name":"reason","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"skip","inputs":[{"name":"skipTest","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"sleep","inputs":[{"name":"duration","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"snapshot","inputs":[],"outputs":[{"name":"snapshotId","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"snapshotGasLastCall","inputs":[{"name":"group","type":"string","internalType":"string"},{"name":"name","type":"string","internalType":"string"}],"outputs":[{"name":"gasUsed","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"snapshotGasLastCall","inputs":[{"name":"name","type":"string","internalType":"string"}],"outputs":[{"name":"gasUsed","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"snapshotState","inputs":[],"outputs":[{"name":"snapshotId","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"snapshotValue","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"value","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"snapshotValue","inputs":[{"name":"group","type":"string","internalType":"string"},{"name":"name","type":"string","internalType":"string"},{"name":"value","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"sort","inputs":[{"name":"array","type":"uint256[]","internalType":"uint256[]"}],"outputs":[{"name":"","type":"uint256[]","internalType":"uint256[]"}],"stateMutability":"nonpayable"},{"type":"function","name":"split","inputs":[{"name":"input","type":"string","internalType":"string"},{"name":"delimiter","type":"string","internalType":"string"}],"outputs":[{"name":"outputs","type":"string[]","internalType":"string[]"}],"stateMutability":"pure"},{"type":"function","name":"startBroadcast","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"startBroadcast","inputs":[{"name":"signer","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"startBroadcast","inputs":[{"name":"privateKey","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"startDebugTraceRecording","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"startMappingRecording","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"startPrank","inputs":[{"name":"msgSender","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"startPrank","inputs":[{"name":"msgSender","type":"address","internalType":"address"},{"name":"delegateCall","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"startPrank","inputs":[{"name":"msgSender","type":"address","internalType":"address"},{"name":"txOrigin","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"startPrank","inputs":[{"name":"msgSender","type":"address","internalType":"address"},{"name":"txOrigin","type":"address","internalType":"address"},{"name":"delegateCall","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"startSnapshotGas","inputs":[{"name":"name","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"startSnapshotGas","inputs":[{"name":"group","type":"string","internalType":"string"},{"name":"name","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"startStateDiffRecording","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"stopAndReturnDebugTraceRecording","inputs":[],"outputs":[{"name":"step","type":"tuple[]","internalType":"struct VmSafe.DebugStep[]","components":[{"name":"stack","type":"uint256[]","internalType":"uint256[]"},{"name":"memoryInput","type":"bytes","internalType":"bytes"},{"name":"opcode","type":"uint8","internalType":"uint8"},{"name":"depth","type":"uint64","internalType":"uint64"},{"name":"isOutOfGas","type":"bool","internalType":"bool"},{"name":"contractAddr","type":"address","internalType":"address"}]}],"stateMutability":"nonpayable"},{"type":"function","name":"stopAndReturnStateDiff","inputs":[],"outputs":[{"name":"accountAccesses","type":"tuple[]","internalType":"struct VmSafe.AccountAccess[]","components":[{"name":"chainInfo","type":"tuple","internalType":"struct VmSafe.ChainInfo","components":[{"name":"forkId","type":"uint256","internalType":"uint256"},{"name":"chainId","type":"uint256","internalType":"uint256"}]},{"name":"kind","type":"uint8","internalType":"enum VmSafe.AccountAccessKind"},{"name":"account","type":"address","internalType":"address"},{"name":"accessor","type":"address","internalType":"address"},{"name":"initialized","type":"bool","internalType":"bool"},{"name":"oldBalance","type":"uint256","internalType":"uint256"},{"name":"newBalance","type":"uint256","internalType":"uint256"},{"name":"deployedCode","type":"bytes","internalType":"bytes"},{"name":"value","type":"uint256","internalType":"uint256"},{"name":"data","type":"bytes","internalType":"bytes"},{"name":"reverted","type":"bool","internalType":"bool"},{"name":"storageAccesses","type":"tuple[]","internalType":"struct VmSafe.StorageAccess[]","components":[{"name":"account","type":"address","internalType":"address"},{"name":"slot","type":"bytes32","internalType":"bytes32"},{"name":"isWrite","type":"bool","internalType":"bool"},{"name":"previousValue","type":"bytes32","internalType":"bytes32"},{"name":"newValue","type":"bytes32","internalType":"bytes32"},{"name":"reverted","type":"bool","internalType":"bool"}]},{"name":"depth","type":"uint64","internalType":"uint64"}]}],"stateMutability":"nonpayable"},{"type":"function","name":"stopBroadcast","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"stopExpectSafeMemory","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"stopMappingRecording","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"stopPrank","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"stopSnapshotGas","inputs":[{"name":"group","type":"string","internalType":"string"},{"name":"name","type":"string","internalType":"string"}],"outputs":[{"name":"gasUsed","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"stopSnapshotGas","inputs":[{"name":"name","type":"string","internalType":"string"}],"outputs":[{"name":"gasUsed","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"stopSnapshotGas","inputs":[],"outputs":[{"name":"gasUsed","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"store","inputs":[{"name":"target","type":"address","internalType":"address"},{"name":"slot","type":"bytes32","internalType":"bytes32"},{"name":"value","type":"bytes32","internalType":"bytes32"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"toBase64","inputs":[{"name":"data","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"toBase64","inputs":[{"name":"data","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"toBase64URL","inputs":[{"name":"data","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"toBase64URL","inputs":[{"name":"data","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"toLowercase","inputs":[{"name":"input","type":"string","internalType":"string"}],"outputs":[{"name":"output","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"toString","inputs":[{"name":"value","type":"address","internalType":"address"}],"outputs":[{"name":"stringifiedValue","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"toString","inputs":[{"name":"value","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"stringifiedValue","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"toString","inputs":[{"name":"value","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"stringifiedValue","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"toString","inputs":[{"name":"value","type":"bool","internalType":"bool"}],"outputs":[{"name":"stringifiedValue","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"toString","inputs":[{"name":"value","type":"int256","internalType":"int256"}],"outputs":[{"name":"stringifiedValue","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"toString","inputs":[{"name":"value","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"stringifiedValue","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"toUppercase","inputs":[{"name":"input","type":"string","internalType":"string"}],"outputs":[{"name":"output","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"transact","inputs":[{"name":"forkId","type":"uint256","internalType":"uint256"},{"name":"txHash","type":"bytes32","internalType":"bytes32"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"transact","inputs":[{"name":"txHash","type":"bytes32","internalType":"bytes32"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"trim","inputs":[{"name":"input","type":"string","internalType":"string"}],"outputs":[{"name":"output","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"tryFfi","inputs":[{"name":"commandInput","type":"string[]","internalType":"string[]"}],"outputs":[{"name":"result","type":"tuple","internalType":"struct VmSafe.FfiResult","components":[{"name":"exitCode","type":"int32","internalType":"int32"},{"name":"stdout","type":"bytes","internalType":"bytes"},{"name":"stderr","type":"bytes","internalType":"bytes"}]}],"stateMutability":"nonpayable"},{"type":"function","name":"txGasPrice","inputs":[{"name":"newGasPrice","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"unixTime","inputs":[],"outputs":[{"name":"milliseconds","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"warmSlot","inputs":[{"name":"target","type":"address","internalType":"address"},{"name":"slot","type":"bytes32","internalType":"bytes32"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"warp","inputs":[{"name":"newTimestamp","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"writeFile","inputs":[{"name":"path","type":"string","internalType":"string"},{"name":"data","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"writeFileBinary","inputs":[{"name":"path","type":"string","internalType":"string"},{"name":"data","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"writeJson","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"path","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"writeJson","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"path","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"writeLine","inputs":[{"name":"path","type":"string","internalType":"string"},{"name":"data","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"writeToml","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"path","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"writeToml","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"path","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"accessList((address,bytes32[])[])":"743e4cb7","accesses(address)":"65bc9481","activeFork()":"2f103f22","addr(uint256)":"ffa18649","allowCheatcodes(address)":"ea060291","assertApproxEqAbs(int256,int256,uint256)":"240f839d","assertApproxEqAbs(int256,int256,uint256,string)":"8289e621","assertApproxEqAbs(uint256,uint256,uint256)":"16d207c6","assertApproxEqAbs(uint256,uint256,uint256,string)":"f710b062","assertApproxEqAbsDecimal(int256,int256,uint256,uint256)":"3d5bc8bc","assertApproxEqAbsDecimal(int256,int256,uint256,uint256,string)":"6a5066d4","assertApproxEqAbsDecimal(uint256,uint256,uint256,uint256)":"045c55ce","assertApproxEqAbsDecimal(uint256,uint256,uint256,uint256,string)":"60429eb2","assertApproxEqRel(int256,int256,uint256)":"fea2d14f","assertApproxEqRel(int256,int256,uint256,string)":"ef277d72","assertApproxEqRel(uint256,uint256,uint256)":"8cf25ef4","assertApproxEqRel(uint256,uint256,uint256,string)":"1ecb7d33","assertApproxEqRelDecimal(int256,int256,uint256,uint256)":"abbf21cc","assertApproxEqRelDecimal(int256,int256,uint256,uint256,string)":"fccc11c4","assertApproxEqRelDecimal(uint256,uint256,uint256,uint256)":"21ed2977","assertApproxEqRelDecimal(uint256,uint256,uint256,uint256,string)":"82d6c8fd","assertEq(address,address)":"515361f6","assertEq(address,address,string)":"2f2769d1","assertEq(address[],address[])":"3868ac34","assertEq(address[],address[],string)":"3e9173c5","assertEq(bool,bool)":"f7fe3477","assertEq(bool,bool,string)":"4db19e7e","assertEq(bool[],bool[])":"707df785","assertEq(bool[],bool[],string)":"e48a8f8d","assertEq(bytes,bytes)":"97624631","assertEq(bytes,bytes,string)":"e24fed00","assertEq(bytes32,bytes32)":"7c84c69b","assertEq(bytes32,bytes32,string)":"c1fa1ed0","assertEq(bytes32[],bytes32[])":"0cc9ee84","assertEq(bytes32[],bytes32[],string)":"e03e9177","assertEq(bytes[],bytes[])":"e5fb9b4a","assertEq(bytes[],bytes[],string)":"f413f0b6","assertEq(int256,int256)":"fe74f05b","assertEq(int256,int256,string)":"714a2f13","assertEq(int256[],int256[])":"711043ac","assertEq(int256[],int256[],string)":"191f1b30","assertEq(string,string)":"f320d963","assertEq(string,string,string)":"36f656d8","assertEq(string[],string[])":"cf1c049c","assertEq(string[],string[],string)":"eff6b27d","assertEq(uint256,uint256)":"98296c54","assertEq(uint256,uint256,string)":"88b44c85","assertEq(uint256[],uint256[])":"975d5a12","assertEq(uint256[],uint256[],string)":"5d18c73a","assertEqDecimal(int256,int256,uint256)":"48016c04","assertEqDecimal(int256,int256,uint256,string)":"7e77b0c5","assertEqDecimal(uint256,uint256,uint256)":"27af7d9c","assertEqDecimal(uint256,uint256,uint256,string)":"d0cbbdef","assertFalse(bool)":"a5982885","assertFalse(bool,string)":"7ba04809","assertGe(int256,int256)":"0a30b771","assertGe(int256,int256,string)":"a84328dd","assertGe(uint256,uint256)":"a8d4d1d9","assertGe(uint256,uint256,string)":"e25242c0","assertGeDecimal(int256,int256,uint256)":"dc28c0f1","assertGeDecimal(int256,int256,uint256,string)":"5df93c9b","assertGeDecimal(uint256,uint256,uint256)":"3d1fe08a","assertGeDecimal(uint256,uint256,uint256,string)":"8bff9133","assertGt(int256,int256)":"5a362d45","assertGt(int256,int256,string)":"f8d33b9b","assertGt(uint256,uint256)":"db07fcd2","assertGt(uint256,uint256,string)":"d9a3c4d2","assertGtDecimal(int256,int256,uint256)":"78611f0e","assertGtDecimal(int256,int256,uint256,string)":"04a5c7ab","assertGtDecimal(uint256,uint256,uint256)":"eccd2437","assertGtDecimal(uint256,uint256,uint256,string)":"64949a8d","assertLe(int256,int256)":"95fd154e","assertLe(int256,int256,string)":"4dfe692c","assertLe(uint256,uint256)":"8466f415","assertLe(uint256,uint256,string)":"d17d4b0d","assertLeDecimal(int256,int256,uint256)":"11d1364a","assertLeDecimal(int256,int256,uint256,string)":"aa5cf788","assertLeDecimal(uint256,uint256,uint256)":"c304aab7","assertLeDecimal(uint256,uint256,uint256,string)":"7fefbbe0","assertLt(int256,int256)":"3e914080","assertLt(int256,int256,string)":"9ff531e3","assertLt(uint256,uint256)":"b12fc005","assertLt(uint256,uint256,string)":"65d5c135","assertLtDecimal(int256,int256,uint256)":"dbe8d88b","assertLtDecimal(int256,int256,uint256,string)":"40f0b4e0","assertLtDecimal(uint256,uint256,uint256)":"2077337e","assertLtDecimal(uint256,uint256,uint256,string)":"a972d037","assertNotEq(address,address)":"b12e1694","assertNotEq(address,address,string)":"8775a591","assertNotEq(address[],address[])":"46d0b252","assertNotEq(address[],address[],string)":"72c7e0b5","assertNotEq(bool,bool)":"236e4d66","assertNotEq(bool,bool,string)":"1091a261","assertNotEq(bool[],bool[])":"286fafea","assertNotEq(bool[],bool[],string)":"62c6f9fb","assertNotEq(bytes,bytes)":"3cf78e28","assertNotEq(bytes,bytes,string)":"9507540e","assertNotEq(bytes32,bytes32)":"898e83fc","assertNotEq(bytes32,bytes32,string)":"b2332f51","assertNotEq(bytes32[],bytes32[])":"0603ea68","assertNotEq(bytes32[],bytes32[],string)":"b873634c","assertNotEq(bytes[],bytes[])":"edecd035","assertNotEq(bytes[],bytes[],string)":"1dcd1f68","assertNotEq(int256,int256)":"f4c004e3","assertNotEq(int256,int256,string)":"4724c5b9","assertNotEq(int256[],int256[])":"0b72f4ef","assertNotEq(int256[],int256[],string)":"d3977322","assertNotEq(string,string)":"6a8237b3","assertNotEq(string,string,string)":"78bdcea7","assertNotEq(string[],string[])":"bdfacbe8","assertNotEq(string[],string[],string)":"b67187f3","assertNotEq(uint256,uint256)":"b7909320","assertNotEq(uint256,uint256,string)":"98f9bdbd","assertNotEq(uint256[],uint256[])":"56f29cba","assertNotEq(uint256[],uint256[],string)":"9a7fbd8f","assertNotEqDecimal(int256,int256,uint256)":"14e75680","assertNotEqDecimal(int256,int256,uint256,string)":"33949f0b","assertNotEqDecimal(uint256,uint256,uint256)":"669efca7","assertNotEqDecimal(uint256,uint256,uint256,string)":"f5a55558","assertTrue(bool)":"0c9fd581","assertTrue(bool,string)":"a34edc03","assume(bool)":"4c63e562","assumeNoRevert((address,bool,bytes))":"d8591eeb","assumeNoRevert((address,bool,bytes)[])":"8a4592cc","assumeNoRevert()":"285b366a","attachBlob(bytes)":"10cb385c","attachDelegation((uint8,bytes32,bytes32,uint64,address))":"14ae3519","blobBaseFee(uint256)":"6d315d7e","blobhashes(bytes32[])":"129de7eb","breakpoint(string)":"f0259e92","breakpoint(string,bool)":"f7d39a8d","broadcast()":"afc98040","broadcast(address)":"e6962cdb","broadcast(uint256)":"f67a965b","broadcastRawTransaction(bytes)":"8c0c72e0","chainId(uint256)":"4049ddd2","clearMockedCalls()":"3fdf4e15","cloneAccount(address,address)":"533d61c9","closeFile(string)":"48c3241f","coinbase(address)":"ff483c54","computeCreate2Address(bytes32,bytes32)":"890c283b","computeCreate2Address(bytes32,bytes32,address)":"d323826a","computeCreateAddress(address,uint256)":"74637a7a","contains(string,string)":"3fb18aec","cool(address)":"40ff9f21","coolSlot(address,bytes32)":"8c78e654","copyFile(string,string)":"a54a87d8","copyStorage(address,address)":"203dac0d","createDir(string,bool)":"168b64d3","createFork(string)":"31ba3498","createFork(string,bytes32)":"7ca29682","createFork(string,uint256)":"6ba3ba2b","createSelectFork(string)":"98680034","createSelectFork(string,bytes32)":"84d52b7a","createSelectFork(string,uint256)":"71ee464d","createWallet(string)":"7404f1d2","createWallet(uint256)":"7a675bb6","createWallet(uint256,string)":"ed7c5462","deal(address,uint256)":"c88a5e6d","deleteSnapshot(uint256)":"a6368557","deleteSnapshots()":"421ae469","deleteStateSnapshot(uint256)":"08d6b37a","deleteStateSnapshots()":"e0933c74","deployCode(string)":"9a8325a0","deployCode(string,bytes)":"29ce9dde","deployCode(string,bytes,bytes32)":"016155bf","deployCode(string,bytes,uint256)":"ff5d64e4","deployCode(string,bytes,uint256,bytes32)":"3aa773ea","deployCode(string,bytes32)":"17ab1d79","deployCode(string,uint256)":"0af6a701","deployCode(string,uint256,bytes32)":"002cb687","deriveKey(string,string,uint32)":"6bcb2c1b","deriveKey(string,string,uint32,string)":"29233b1f","deriveKey(string,uint32)":"6229498b","deriveKey(string,uint32,string)":"32c8176d","difficulty(uint256)":"46cc92d9","dumpState(string)":"709ecd3f","ensNamehash(string)":"8c374c65","envAddress(string)":"350d56bf","envAddress(string,string)":"ad31b9fa","envBool(string)":"7ed1ec7d","envBool(string,string)":"aaaddeaf","envBytes(string)":"4d7baf06","envBytes(string,string)":"ddc2651b","envBytes32(string)":"97949042","envBytes32(string,string)":"5af231c1","envExists(string)":"ce8365f9","envInt(string)":"892a0c61","envInt(string,string)":"42181150","envOr(string,address)":"561fe540","envOr(string,bool)":"4777f3cf","envOr(string,bytes)":"b3e47705","envOr(string,bytes32)":"b4a85892","envOr(string,int256)":"bbcb713e","envOr(string,string)":"d145736c","envOr(string,string,address[])":"c74e9deb","envOr(string,string,bool[])":"eb85e83b","envOr(string,string,bytes32[])":"2281f367","envOr(string,string,bytes[])":"64bc3e64","envOr(string,string,int256[])":"4700d74b","envOr(string,string,string[])":"859216bc","envOr(string,string,uint256[])":"74318528","envOr(string,uint256)":"5e97348f","envString(string)":"f877cb19","envString(string,string)":"14b02bc9","envUint(string)":"c1978d1f","envUint(string,string)":"f3dec099","etch(address,bytes)":"b4d6c782","eth_getLogs(uint256,uint256,address,bytes32[])":"35e1349b","exists(string)":"261a323e","expectCall(address,bytes)":"bd6af434","expectCall(address,bytes,uint64)":"c1adbbff","expectCall(address,uint256,bytes)":"f30c7ba3","expectCall(address,uint256,bytes,uint64)":"a2b1a1ae","expectCall(address,uint256,uint64,bytes)":"23361207","expectCall(address,uint256,uint64,bytes,uint64)":"65b7b7cc","expectCallMinGas(address,uint256,uint64,bytes)":"08e4e116","expectCallMinGas(address,uint256,uint64,bytes,uint64)":"e13a1834","expectCreate(bytes,address)":"73cdce36","expectCreate2(bytes,address)":"ea54a472","expectEmit()":"440ed10d","expectEmit(address)":"86b9620d","expectEmit(address,uint64)":"b43aece3","expectEmit(bool,bool,bool,bool)":"491cc7c2","expectEmit(bool,bool,bool,bool,address)":"81bad6f3","expectEmit(bool,bool,bool,bool,address,uint64)":"c339d02c","expectEmit(bool,bool,bool,bool,uint64)":"5e1d1c33","expectEmit(uint64)":"4c74a335","expectEmitAnonymous()":"2e5f270c","expectEmitAnonymous(address)":"6fc68705","expectEmitAnonymous(bool,bool,bool,bool,bool)":"c948db5e","expectEmitAnonymous(bool,bool,bool,bool,bool,address)":"71c95899","expectPartialRevert(bytes4)":"11fb5b9c","expectPartialRevert(bytes4,address)":"51aa008a","expectRevert()":"f4844814","expectRevert(address)":"d814f38a","expectRevert(address,uint64)":"1ff5f952","expectRevert(bytes)":"f28dceb3","expectRevert(bytes,address)":"61ebcf12","expectRevert(bytes,address,uint64)":"d345fb1f","expectRevert(bytes,uint64)":"4994c273","expectRevert(bytes4)":"c31eb0e0","expectRevert(bytes4,address)":"260bc5de","expectRevert(bytes4,address,uint64)":"b0762d73","expectRevert(bytes4,uint64)":"e45ca72d","expectRevert(uint64)":"4ee38244","expectSafeMemory(uint64,uint64)":"6d016688","expectSafeMemoryCall(uint64,uint64)":"05838bf4","fee(uint256)":"39b37ab0","ffi(string[])":"89160467","foundryVersionAtLeast(string)":"6248be1f","foundryVersionCmp(string)":"ca7b0a09","fsMetadata(string)":"af368a08","getArtifactPathByCode(bytes)":"eb74848c","getArtifactPathByDeployedCode(bytes)":"6d853ba5","getBlobBaseFee()":"1f6d6ef7","getBlobhashes()":"f56ff18b","getBlockNumber()":"42cbb15c","getBlockTimestamp()":"796b89b9","getBroadcast(string,uint64,uint8)":"3dc90cb3","getBroadcasts(string,uint64)":"f2fa4a26","getBroadcasts(string,uint64,uint8)":"f7afe919","getChain(string)":"4cc1c2bb","getChain(uint256)":"b6791ad4","getCode(string)":"8d1cc925","getDeployedCode(string)":"3ebf73b4","getDeployment(string)":"a8091d97","getDeployment(string,uint64)":"0debd5d6","getDeployments(string,uint64)":"74e133dd","getFoundryVersion()":"ea991bb5","getLabel(address)":"28a249b0","getMappingKeyAndParentOf(address,bytes32)":"876e24e6","getMappingLength(address,bytes32)":"2f2fd63f","getMappingSlotAt(address,bytes32,uint256)":"ebc73ab4","getNonce((address,uint256,uint256,uint256))":"a5748aad","getNonce(address)":"2d0335ab","getRecordedLogs()":"191553a4","getStateDiff()":"80df01cc","getStateDiffJson()":"f54fe009","getWallets()":"db7a4605","indexOf(string,string)":"8a0807b7","interceptInitcode()":"838653c7","isContext(uint8)":"64af255d","isDir(string)":"7d15d019","isFile(string)":"e0eb04d4","isPersistent(address)":"d92d8efd","keyExists(string,string)":"528a683c","keyExistsJson(string,string)":"db4235f6","keyExistsToml(string,string)":"600903ad","label(address,string)":"c657c718","lastCallGas()":"2b589b28","load(address,bytes32)":"667f9d70","loadAllocs(string)":"b3a056d7","makePersistent(address)":"57e22dde","makePersistent(address,address)":"4074e0a8","makePersistent(address,address,address)":"efb77a75","makePersistent(address[])":"1d9e269e","mockCall(address,bytes,bytes)":"b96213e4","mockCall(address,bytes4,bytes)":"08e0c537","mockCall(address,uint256,bytes,bytes)":"81409b91","mockCall(address,uint256,bytes4,bytes)":"e7b36a3d","mockCallRevert(address,bytes,bytes)":"dbaad147","mockCallRevert(address,bytes4,bytes)":"2dfba5df","mockCallRevert(address,uint256,bytes,bytes)":"d23cd037","mockCallRevert(address,uint256,bytes4,bytes)":"596c8f04","mockCalls(address,bytes,bytes[])":"5c5c3de9","mockCalls(address,uint256,bytes,bytes[])":"08bcbae1","mockFunction(address,address,bytes)":"adf84d21","noAccessList()":"238ad778","parseAddress(string)":"c6ce059d","parseBool(string)":"974ef924","parseBytes(string)":"8f5d232d","parseBytes32(string)":"087e6e81","parseInt(string)":"42346c5e","parseJson(string)":"6a82600a","parseJson(string,string)":"85940ef1","parseJsonAddress(string,string)":"1e19e657","parseJsonAddressArray(string,string)":"2fce7883","parseJsonBool(string,string)":"9f86dc91","parseJsonBoolArray(string,string)":"91f3b94f","parseJsonBytes(string,string)":"fd921be8","parseJsonBytes32(string,string)":"1777e59d","parseJsonBytes32Array(string,string)":"91c75bc3","parseJsonBytesArray(string,string)":"6631aa99","parseJsonInt(string,string)":"7b048ccd","parseJsonIntArray(string,string)":"9983c28a","parseJsonKeys(string,string)":"213e4198","parseJsonString(string,string)":"49c4fac8","parseJsonStringArray(string,string)":"498fdcf4","parseJsonType(string,string)":"a9da313b","parseJsonType(string,string,string)":"e3f5ae33","parseJsonTypeArray(string,string,string)":"0175d535","parseJsonUint(string,string)":"addde2b6","parseJsonUintArray(string,string)":"522074ab","parseToml(string)":"592151f0","parseToml(string,string)":"37736e08","parseTomlAddress(string,string)":"65e7c844","parseTomlAddressArray(string,string)":"65c428e7","parseTomlBool(string,string)":"d30dced6","parseTomlBoolArray(string,string)":"127cfe9a","parseTomlBytes(string,string)":"d77bfdb9","parseTomlBytes32(string,string)":"8e214810","parseTomlBytes32Array(string,string)":"3e716f81","parseTomlBytesArray(string,string)":"b197c247","parseTomlInt(string,string)":"c1350739","parseTomlIntArray(string,string)":"d3522ae6","parseTomlKeys(string,string)":"812a44b2","parseTomlString(string,string)":"8bb8dd43","parseTomlStringArray(string,string)":"9f629281","parseTomlType(string,string)":"47fa5e11","parseTomlType(string,string,string)":"f9fa5cdb","parseTomlTypeArray(string,string,string)":"49be3743","parseTomlUint(string,string)":"cc7b0487","parseTomlUintArray(string,string)":"b5df27c8","parseUint(string)":"fa91454d","pauseGasMetering()":"d1a5b36f","pauseTracing()":"c94d1f90","prank(address)":"ca669fa7","prank(address,address)":"47e50cce","prank(address,address,bool)":"7d73d042","prank(address,bool)":"a7f8bf5c","prevrandao(bytes32)":"3b925549","prevrandao(uint256)":"9cb1c0d4","projectRoot()":"d930a0e6","prompt(string)":"47eaf474","promptAddress(string)":"62ee05f4","promptSecret(string)":"1e279d41","promptSecretUint(string)":"69ca02b7","promptUint(string)":"652fd489","publicKeyP256(uint256)":"c453949e","randomAddress()":"d5bee9f5","randomBool()":"cdc126bd","randomBytes(uint256)":"6c5d32a9","randomBytes4()":"9b7cd579","randomBytes8()":"0497b0a5","randomInt()":"111f1202","randomInt(uint256)":"12845966","randomUint()":"25124730","randomUint(uint256)":"cf81e69c","randomUint(uint256,uint256)":"d61b051b","readCallers()":"4ad0bac9","readDir(string)":"c4bc59e0","readDir(string,uint64)":"1497876c","readDir(string,uint64,bool)":"8102d70d","readFile(string)":"60f9bb11","readFileBinary(string)":"16ed7bc4","readLine(string)":"70f55728","readLink(string)":"9f5684a2","record()":"266cf109","recordLogs()":"41af2f52","rememberKey(uint256)":"22100064","rememberKeys(string,string,string,uint32)":"f8d58eaf","rememberKeys(string,string,uint32)":"97cb9189","removeDir(string,bool)":"45c62011","removeFile(string)":"f1afe04d","replace(string,string,string)":"e00ad03e","resetGasMetering()":"be367dd3","resetNonce(address)":"1c72346d","resumeGasMetering()":"2bcd50e0","resumeTracing()":"72a09ccb","revertTo(uint256)":"44d7f0a4","revertToAndDelete(uint256)":"03e0aca9","revertToState(uint256)":"c2527405","revertToStateAndDelete(uint256)":"3a1985dc","revokePersistent(address)":"997a0222","revokePersistent(address[])":"3ce969e6","roll(uint256)":"1f7b4f30","rollFork(bytes32)":"0f29772b","rollFork(uint256)":"d9bbf3a1","rollFork(uint256,bytes32)":"f2830f7b","rollFork(uint256,uint256)":"d74c83a4","rpc(string,string)":"1206c8a8","rpc(string,string,string)":"0199a220","rpcUrl(string)":"975a6ce9","rpcUrlStructs()":"9d2ad72a","rpcUrls()":"a85a8418","selectFork(uint256)":"9ebf6827","serializeAddress(string,string,address)":"972c6062","serializeAddress(string,string,address[])":"1e356e1a","serializeBool(string,string,bool)":"ac22e971","serializeBool(string,string,bool[])":"92925aa1","serializeBytes(string,string,bytes)":"f21d52c7","serializeBytes(string,string,bytes[])":"9884b232","serializeBytes32(string,string,bytes32)":"2d812b44","serializeBytes32(string,string,bytes32[])":"201e43e2","serializeInt(string,string,int256)":"3f33db60","serializeInt(string,string,int256[])":"7676e127","serializeJson(string,string)":"9b3358b0","serializeJsonType(string,bytes)":"6d4f96a6","serializeJsonType(string,string,string,bytes)":"6f93bccb","serializeString(string,string,string)":"88da6d35","serializeString(string,string,string[])":"561cd6f3","serializeUint(string,string,uint256)":"129e9002","serializeUint(string,string,uint256[])":"fee9a469","serializeUintToHex(string,string,uint256)":"ae5a2ae8","setArbitraryStorage(address)":"e1631837","setArbitraryStorage(address,bool)":"d3ec2a0b","setBlockhash(uint256,bytes32)":"5314b54a","setEnv(string,string)":"3d5923ee","setNonce(address,uint64)":"f8e18b57","setNonceUnsafe(address,uint64)":"9b67b21c","shuffle(uint256[])":"54f1469c","sign((address,uint256,uint256,uint256),bytes32)":"b25c5a25","sign(address,bytes32)":"8c1aa205","sign(bytes32)":"799cd333","sign(uint256,bytes32)":"e341eaa4","signAndAttachDelegation(address,uint256)":"c7fa7288","signAndAttachDelegation(address,uint256,uint64)":"cde3e5be","signCompact((address,uint256,uint256,uint256),bytes32)":"3d0e292f","signCompact(address,bytes32)":"8e2f97bf","signCompact(bytes32)":"a282dc4b","signCompact(uint256,bytes32)":"cc2a781f","signDelegation(address,uint256)":"5b593c7b","signDelegation(address,uint256,uint64)":"ceba2ec3","signP256(uint256,bytes32)":"83211b40","skip(bool)":"dd82d13e","skip(bool,string)":"c42a80a7","sleep(uint256)":"fa9d8713","snapshot()":"9711715a","snapshotGasLastCall(string)":"dd9fca12","snapshotGasLastCall(string,string)":"200c6772","snapshotState()":"9cd23835","snapshotValue(string,string,uint256)":"6d2b27d8","snapshotValue(string,uint256)":"51db805a","sort(uint256[])":"9ec8b026","split(string,string)":"8bb75533","startBroadcast()":"7fb5297f","startBroadcast(address)":"7fec2a8d","startBroadcast(uint256)":"ce817d47","startDebugTraceRecording()":"419c8832","startMappingRecording()":"3e9705c0","startPrank(address)":"06447d56","startPrank(address,address)":"45b56078","startPrank(address,address,bool)":"4eb859b5","startPrank(address,bool)":"1cc0b435","startSnapshotGas(string)":"3cad9d7b","startSnapshotGas(string,string)":"6cd0cc53","startStateDiffRecording()":"cf22e3c9","stopAndReturnDebugTraceRecording()":"ced398a2","stopAndReturnStateDiff()":"aa5cf90e","stopBroadcast()":"76eadd36","stopExpectSafeMemory()":"0956441b","stopMappingRecording()":"0d4aae9b","stopPrank()":"90c5013b","stopSnapshotGas()":"f6402eda","stopSnapshotGas(string)":"773b2805","stopSnapshotGas(string,string)":"0c9db707","store(address,bytes32,bytes32)":"70ca10bb","toBase64(bytes)":"a5cbfe65","toBase64(string)":"3f8be2c8","toBase64URL(bytes)":"c8bd0e4a","toBase64URL(string)":"ae3165b3","toLowercase(string)":"50bb0884","toString(address)":"56ca623e","toString(bool)":"71dce7da","toString(bytes)":"71aad10d","toString(bytes32)":"b11a19e8","toString(int256)":"a322c40e","toString(uint256)":"6900a3ae","toUppercase(string)":"074ae3d7","transact(bytes32)":"be646da1","transact(uint256,bytes32)":"4d8abc4b","trim(string)":"b2dad155","tryFfi(string[])":"f45c1ce7","txGasPrice(uint256)":"48f50c0f","unixTime()":"625387dc","warmSlot(address,bytes32)":"b23184cf","warp(uint256)":"e5d6bf02","writeFile(string,string)":"897e0a97","writeFileBinary(string,bytes)":"1f21fc80","writeJson(string,string)":"e23cd19f","writeJson(string,string,string)":"35d6ad46","writeLine(string,string)":"619d897f","writeToml(string,string)":"c0865ba7","writeToml(string,string,string)":"51ac6a33"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes32[]\",\"name\":\"storageKeys\",\"type\":\"bytes32[]\"}],\"internalType\":\"struct VmSafe.AccessListItem[]\",\"name\":\"access\",\"type\":\"tuple[]\"}],\"name\":\"accessList\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"accesses\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"readSlots\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"writeSlots\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"activeFork\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"forkId\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"name\":\"addr\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"keyAddr\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"allowCheatcodes\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxDelta\",\"type\":\"uint256\"}],\"name\":\"assertApproxEqAbs\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"maxDelta\",\"type\":\"uint256\"}],\"name\":\"assertApproxEqAbs\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"maxDelta\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertApproxEqAbs\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxDelta\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertApproxEqAbs\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxDelta\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertApproxEqAbsDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"maxDelta\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertApproxEqAbsDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxDelta\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertApproxEqAbsDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"maxDelta\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertApproxEqAbsDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPercentDelta\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertApproxEqRel\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPercentDelta\",\"type\":\"uint256\"}],\"name\":\"assertApproxEqRel\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"maxPercentDelta\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertApproxEqRel\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"maxPercentDelta\",\"type\":\"uint256\"}],\"name\":\"assertApproxEqRel\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPercentDelta\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertApproxEqRelDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPercentDelta\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertApproxEqRelDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"maxPercentDelta\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertApproxEqRelDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"maxPercentDelta\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertApproxEqRelDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"left\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"right\",\"type\":\"bytes32[]\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256[]\",\"name\":\"left\",\"type\":\"int256[]\"},{\"internalType\":\"int256[]\",\"name\":\"right\",\"type\":\"int256[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"left\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"right\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"left\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"right\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"left\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"right\",\"type\":\"address[]\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"left\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"right\",\"type\":\"address[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"left\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"right\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"left\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"right\",\"type\":\"address\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"left\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"right\",\"type\":\"uint256[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool[]\",\"name\":\"left\",\"type\":\"bool[]\"},{\"internalType\":\"bool[]\",\"name\":\"right\",\"type\":\"bool[]\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256[]\",\"name\":\"left\",\"type\":\"int256[]\"},{\"internalType\":\"int256[]\",\"name\":\"right\",\"type\":\"int256[]\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"left\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"right\",\"type\":\"bytes32\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"left\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"right\",\"type\":\"uint256[]\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"left\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"right\",\"type\":\"bytes\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"left\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"right\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string[]\",\"name\":\"left\",\"type\":\"string[]\"},{\"internalType\":\"string[]\",\"name\":\"right\",\"type\":\"string[]\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"left\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"right\",\"type\":\"bytes32[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"left\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"right\",\"type\":\"bytes\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool[]\",\"name\":\"left\",\"type\":\"bool[]\"},{\"internalType\":\"bool[]\",\"name\":\"right\",\"type\":\"bool[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"left\",\"type\":\"bytes[]\"},{\"internalType\":\"bytes[]\",\"name\":\"right\",\"type\":\"bytes[]\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string[]\",\"name\":\"left\",\"type\":\"string[]\"},{\"internalType\":\"string[]\",\"name\":\"right\",\"type\":\"string[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"left\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"right\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"left\",\"type\":\"bytes[]\"},{\"internalType\":\"bytes[]\",\"name\":\"right\",\"type\":\"bytes[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"left\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"right\",\"type\":\"bool\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertEqDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertEqDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEqDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEqDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"condition\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertFalse\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"condition\",\"type\":\"bool\"}],\"name\":\"assertFalse\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"}],\"name\":\"assertGe\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertGe\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"}],\"name\":\"assertGe\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertGe\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertGeDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertGeDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertGeDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertGeDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"}],\"name\":\"assertGt\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertGt\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"}],\"name\":\"assertGt\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertGt\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertGtDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertGtDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertGtDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertGtDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertLe\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"}],\"name\":\"assertLe\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"}],\"name\":\"assertLe\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertLe\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertLeDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertLeDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertLeDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertLeDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"}],\"name\":\"assertLt\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertLt\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertLt\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"}],\"name\":\"assertLt\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertLtDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertLtDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertLtDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertLtDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"left\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"right\",\"type\":\"bytes32[]\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256[]\",\"name\":\"left\",\"type\":\"int256[]\"},{\"internalType\":\"int256[]\",\"name\":\"right\",\"type\":\"int256[]\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"left\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"right\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"left\",\"type\":\"bytes[]\"},{\"internalType\":\"bytes[]\",\"name\":\"right\",\"type\":\"bytes[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"left\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"right\",\"type\":\"bool\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool[]\",\"name\":\"left\",\"type\":\"bool[]\"},{\"internalType\":\"bool[]\",\"name\":\"right\",\"type\":\"bool[]\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"left\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"right\",\"type\":\"bytes\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"left\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"right\",\"type\":\"address[]\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"left\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"right\",\"type\":\"uint256[]\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool[]\",\"name\":\"left\",\"type\":\"bool[]\"},{\"internalType\":\"bool[]\",\"name\":\"right\",\"type\":\"bool[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"left\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"right\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"left\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"right\",\"type\":\"address[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"left\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"right\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"left\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"right\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"left\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"right\",\"type\":\"bytes32\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"left\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"right\",\"type\":\"bytes\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"left\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"right\",\"type\":\"uint256[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"left\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"right\",\"type\":\"address\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"left\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"right\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string[]\",\"name\":\"left\",\"type\":\"string[]\"},{\"internalType\":\"string[]\",\"name\":\"right\",\"type\":\"string[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"left\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"right\",\"type\":\"bytes32[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string[]\",\"name\":\"left\",\"type\":\"string[]\"},{\"internalType\":\"string[]\",\"name\":\"right\",\"type\":\"string[]\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256[]\",\"name\":\"left\",\"type\":\"int256[]\"},{\"internalType\":\"int256[]\",\"name\":\"right\",\"type\":\"int256[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"left\",\"type\":\"bytes[]\"},{\"internalType\":\"bytes[]\",\"name\":\"right\",\"type\":\"bytes[]\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertNotEqDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEqDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertNotEqDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEqDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"condition\",\"type\":\"bool\"}],\"name\":\"assertTrue\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"condition\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertTrue\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"condition\",\"type\":\"bool\"}],\"name\":\"assume\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"assumeNoRevert\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"reverter\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"partialMatch\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"revertData\",\"type\":\"bytes\"}],\"internalType\":\"struct VmSafe.PotentialRevert[]\",\"name\":\"potentialReverts\",\"type\":\"tuple[]\"}],\"name\":\"assumeNoRevert\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"reverter\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"partialMatch\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"revertData\",\"type\":\"bytes\"}],\"internalType\":\"struct VmSafe.PotentialRevert\",\"name\":\"potentialRevert\",\"type\":\"tuple\"}],\"name\":\"assumeNoRevert\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"blob\",\"type\":\"bytes\"}],\"name\":\"attachBlob\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"nonce\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"internalType\":\"struct VmSafe.SignedDelegation\",\"name\":\"signedDelegation\",\"type\":\"tuple\"}],\"name\":\"attachDelegation\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newBlobBaseFee\",\"type\":\"uint256\"}],\"name\":\"blobBaseFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"hashes\",\"type\":\"bytes32[]\"}],\"name\":\"blobhashes\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"char\",\"type\":\"string\"}],\"name\":\"breakpoint\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"char\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"value\",\"type\":\"bool\"}],\"name\":\"breakpoint\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"broadcast\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"}],\"name\":\"broadcast\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"name\":\"broadcast\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"broadcastRawTransaction\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newChainId\",\"type\":\"uint256\"}],\"name\":\"chainId\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"clearMockedCalls\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"cloneAccount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"closeFile\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newCoinbase\",\"type\":\"address\"}],\"name\":\"coinbase\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"initCodeHash\",\"type\":\"bytes32\"}],\"name\":\"computeCreate2Address\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"initCodeHash\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"deployer\",\"type\":\"address\"}],\"name\":\"computeCreate2Address\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"deployer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"}],\"name\":\"computeCreateAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"subject\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"search\",\"type\":\"string\"}],\"name\":\"contains\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"result\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"cool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"slot\",\"type\":\"bytes32\"}],\"name\":\"coolSlot\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"from\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"to\",\"type\":\"string\"}],\"name\":\"copyFile\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"copied\",\"type\":\"uint64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"copyStorage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"recursive\",\"type\":\"bool\"}],\"name\":\"createDir\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"urlOrAlias\",\"type\":\"string\"}],\"name\":\"createFork\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"forkId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"urlOrAlias\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"createFork\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"forkId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"urlOrAlias\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"txHash\",\"type\":\"bytes32\"}],\"name\":\"createFork\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"forkId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"urlOrAlias\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"createSelectFork\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"forkId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"urlOrAlias\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"txHash\",\"type\":\"bytes32\"}],\"name\":\"createSelectFork\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"forkId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"urlOrAlias\",\"type\":\"string\"}],\"name\":\"createSelectFork\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"forkId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"walletLabel\",\"type\":\"string\"}],\"name\":\"createWallet\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"publicKeyX\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"publicKeyY\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"internalType\":\"struct VmSafe.Wallet\",\"name\":\"wallet\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"name\":\"createWallet\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"publicKeyX\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"publicKeyY\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"internalType\":\"struct VmSafe.Wallet\",\"name\":\"wallet\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"walletLabel\",\"type\":\"string\"}],\"name\":\"createWallet\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"publicKeyX\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"publicKeyY\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"internalType\":\"struct VmSafe.Wallet\",\"name\":\"wallet\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"newBalance\",\"type\":\"uint256\"}],\"name\":\"deal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"snapshotId\",\"type\":\"uint256\"}],\"name\":\"deleteSnapshot\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deleteSnapshots\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"snapshotId\",\"type\":\"uint256\"}],\"name\":\"deleteStateSnapshot\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deleteStateSnapshots\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"artifactPath\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"}],\"name\":\"deployCode\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"deployedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"artifactPath\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"constructorArgs\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"}],\"name\":\"deployCode\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"deployedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"artifactPath\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"deployCode\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"deployedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"artifactPath\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"}],\"name\":\"deployCode\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"deployedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"artifactPath\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"constructorArgs\",\"type\":\"bytes\"}],\"name\":\"deployCode\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"deployedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"artifactPath\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"constructorArgs\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"}],\"name\":\"deployCode\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"deployedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"artifactPath\",\"type\":\"string\"}],\"name\":\"deployCode\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"deployedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"artifactPath\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"constructorArgs\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"deployCode\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"deployedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"mnemonic\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"derivationPath\",\"type\":\"string\"},{\"internalType\":\"uint32\",\"name\":\"index\",\"type\":\"uint32\"},{\"internalType\":\"string\",\"name\":\"language\",\"type\":\"string\"}],\"name\":\"deriveKey\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"mnemonic\",\"type\":\"string\"},{\"internalType\":\"uint32\",\"name\":\"index\",\"type\":\"uint32\"},{\"internalType\":\"string\",\"name\":\"language\",\"type\":\"string\"}],\"name\":\"deriveKey\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"mnemonic\",\"type\":\"string\"},{\"internalType\":\"uint32\",\"name\":\"index\",\"type\":\"uint32\"}],\"name\":\"deriveKey\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"mnemonic\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"derivationPath\",\"type\":\"string\"},{\"internalType\":\"uint32\",\"name\":\"index\",\"type\":\"uint32\"}],\"name\":\"deriveKey\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newDifficulty\",\"type\":\"uint256\"}],\"name\":\"difficulty\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"pathToStateJson\",\"type\":\"string\"}],\"name\":\"dumpState\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"ensNamehash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"envAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"value\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"}],\"name\":\"envAddress\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"value\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"envBool\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"value\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"}],\"name\":\"envBool\",\"outputs\":[{\"internalType\":\"bool[]\",\"name\":\"value\",\"type\":\"bool[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"envBytes\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"value\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"}],\"name\":\"envBytes\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"value\",\"type\":\"bytes[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"}],\"name\":\"envBytes32\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"value\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"envBytes32\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"value\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"envExists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"result\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"}],\"name\":\"envInt\",\"outputs\":[{\"internalType\":\"int256[]\",\"name\":\"value\",\"type\":\"int256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"envInt\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"},{\"internalType\":\"bytes32[]\",\"name\":\"defaultValue\",\"type\":\"bytes32[]\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"value\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"},{\"internalType\":\"int256[]\",\"name\":\"defaultValue\",\"type\":\"int256[]\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"int256[]\",\"name\":\"value\",\"type\":\"int256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"defaultValue\",\"type\":\"bool\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"value\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"defaultValue\",\"type\":\"address\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"value\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"defaultValue\",\"type\":\"uint256\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"},{\"internalType\":\"bytes[]\",\"name\":\"defaultValue\",\"type\":\"bytes[]\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"value\",\"type\":\"bytes[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"},{\"internalType\":\"uint256[]\",\"name\":\"defaultValue\",\"type\":\"uint256[]\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"value\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"},{\"internalType\":\"string[]\",\"name\":\"defaultValue\",\"type\":\"string[]\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"value\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"defaultValue\",\"type\":\"bytes\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"value\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"defaultValue\",\"type\":\"bytes32\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"value\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"int256\",\"name\":\"defaultValue\",\"type\":\"int256\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"},{\"internalType\":\"address[]\",\"name\":\"defaultValue\",\"type\":\"address[]\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"value\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"defaultValue\",\"type\":\"string\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"},{\"internalType\":\"bool[]\",\"name\":\"defaultValue\",\"type\":\"bool[]\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"bool[]\",\"name\":\"value\",\"type\":\"bool[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"}],\"name\":\"envString\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"value\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"envString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"envUint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"}],\"name\":\"envUint\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"value\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"newRuntimeBytecode\",\"type\":\"bytes\"}],\"name\":\"etch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"fromBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"toBlock\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes32[]\",\"name\":\"topics\",\"type\":\"bytes32[]\"}],\"name\":\"eth_getLogs\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"emitter\",\"type\":\"address\"},{\"internalType\":\"bytes32[]\",\"name\":\"topics\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"blockHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"blockNumber\",\"type\":\"uint64\"},{\"internalType\":\"bytes32\",\"name\":\"transactionHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"transactionIndex\",\"type\":\"uint64\"},{\"internalType\":\"uint256\",\"name\":\"logIndex\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"removed\",\"type\":\"bool\"}],\"internalType\":\"struct VmSafe.EthGetLogs[]\",\"name\":\"logs\",\"type\":\"tuple[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"exists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"result\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"msgValue\",\"type\":\"uint256\"},{\"internalType\":\"uint64\",\"name\":\"gas\",\"type\":\"uint64\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"expectCall\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"msgValue\",\"type\":\"uint256\"},{\"internalType\":\"uint64\",\"name\":\"gas\",\"type\":\"uint64\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint64\",\"name\":\"count\",\"type\":\"uint64\"}],\"name\":\"expectCall\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"msgValue\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint64\",\"name\":\"count\",\"type\":\"uint64\"}],\"name\":\"expectCall\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callee\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"expectCall\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callee\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint64\",\"name\":\"count\",\"type\":\"uint64\"}],\"name\":\"expectCall\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"msgValue\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"expectCall\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"msgValue\",\"type\":\"uint256\"},{\"internalType\":\"uint64\",\"name\":\"minGas\",\"type\":\"uint64\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"expectCallMinGas\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"msgValue\",\"type\":\"uint256\"},{\"internalType\":\"uint64\",\"name\":\"minGas\",\"type\":\"uint64\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint64\",\"name\":\"count\",\"type\":\"uint64\"}],\"name\":\"expectCallMinGas\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"bytecode\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"deployer\",\"type\":\"address\"}],\"name\":\"expectCreate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"bytecode\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"deployer\",\"type\":\"address\"}],\"name\":\"expectCreate2\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"expectEmit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"checkTopic1\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"checkTopic2\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"checkTopic3\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"checkData\",\"type\":\"bool\"}],\"name\":\"expectEmit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"count\",\"type\":\"uint64\"}],\"name\":\"expectEmit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"checkTopic1\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"checkTopic2\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"checkTopic3\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"checkData\",\"type\":\"bool\"},{\"internalType\":\"uint64\",\"name\":\"count\",\"type\":\"uint64\"}],\"name\":\"expectEmit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"checkTopic1\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"checkTopic2\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"checkTopic3\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"checkData\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"emitter\",\"type\":\"address\"}],\"name\":\"expectEmit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"emitter\",\"type\":\"address\"}],\"name\":\"expectEmit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"emitter\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"count\",\"type\":\"uint64\"}],\"name\":\"expectEmit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"checkTopic1\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"checkTopic2\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"checkTopic3\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"checkData\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"emitter\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"count\",\"type\":\"uint64\"}],\"name\":\"expectEmit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"expectEmitAnonymous\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"emitter\",\"type\":\"address\"}],\"name\":\"expectEmitAnonymous\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"checkTopic0\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"checkTopic1\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"checkTopic2\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"checkTopic3\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"checkData\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"emitter\",\"type\":\"address\"}],\"name\":\"expectEmitAnonymous\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"checkTopic0\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"checkTopic1\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"checkTopic2\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"checkTopic3\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"checkData\",\"type\":\"bool\"}],\"name\":\"expectEmitAnonymous\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"revertData\",\"type\":\"bytes4\"}],\"name\":\"expectPartialRevert\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"revertData\",\"type\":\"bytes4\"},{\"internalType\":\"address\",\"name\":\"reverter\",\"type\":\"address\"}],\"name\":\"expectPartialRevert\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"reverter\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"count\",\"type\":\"uint64\"}],\"name\":\"expectRevert\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"revertData\",\"type\":\"bytes4\"},{\"internalType\":\"address\",\"name\":\"reverter\",\"type\":\"address\"}],\"name\":\"expectRevert\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"revertData\",\"type\":\"bytes\"},{\"internalType\":\"uint64\",\"name\":\"count\",\"type\":\"uint64\"}],\"name\":\"expectRevert\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"count\",\"type\":\"uint64\"}],\"name\":\"expectRevert\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"revertData\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"reverter\",\"type\":\"address\"}],\"name\":\"expectRevert\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"revertData\",\"type\":\"bytes4\"},{\"internalType\":\"address\",\"name\":\"reverter\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"count\",\"type\":\"uint64\"}],\"name\":\"expectRevert\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"revertData\",\"type\":\"bytes4\"}],\"name\":\"expectRevert\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"revertData\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"reverter\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"count\",\"type\":\"uint64\"}],\"name\":\"expectRevert\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"reverter\",\"type\":\"address\"}],\"name\":\"expectRevert\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"revertData\",\"type\":\"bytes4\"},{\"internalType\":\"uint64\",\"name\":\"count\",\"type\":\"uint64\"}],\"name\":\"expectRevert\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"revertData\",\"type\":\"bytes\"}],\"name\":\"expectRevert\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"expectRevert\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"min\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"max\",\"type\":\"uint64\"}],\"name\":\"expectSafeMemory\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"min\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"max\",\"type\":\"uint64\"}],\"name\":\"expectSafeMemoryCall\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newBasefee\",\"type\":\"uint256\"}],\"name\":\"fee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string[]\",\"name\":\"commandInput\",\"type\":\"string[]\"}],\"name\":\"ffi\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"result\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"}],\"name\":\"foundryVersionAtLeast\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"}],\"name\":\"foundryVersionCmp\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"fsMetadata\",\"outputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"isDir\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isSymlink\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"readOnly\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"modified\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"accessed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"created\",\"type\":\"uint256\"}],\"internalType\":\"struct VmSafe.FsMetadata\",\"name\":\"metadata\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"code\",\"type\":\"bytes\"}],\"name\":\"getArtifactPathByCode\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"deployedCode\",\"type\":\"bytes\"}],\"name\":\"getArtifactPathByDeployedCode\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBlobBaseFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"blobBaseFee\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBlobhashes\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"hashes\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBlockNumber\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"height\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBlockTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"contractName\",\"type\":\"string\"},{\"internalType\":\"uint64\",\"name\":\"chainId\",\"type\":\"uint64\"},{\"internalType\":\"enum VmSafe.BroadcastTxType\",\"name\":\"txType\",\"type\":\"uint8\"}],\"name\":\"getBroadcast\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"txHash\",\"type\":\"bytes32\"},{\"internalType\":\"enum VmSafe.BroadcastTxType\",\"name\":\"txType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"blockNumber\",\"type\":\"uint64\"},{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"internalType\":\"struct VmSafe.BroadcastTxSummary\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"contractName\",\"type\":\"string\"},{\"internalType\":\"uint64\",\"name\":\"chainId\",\"type\":\"uint64\"}],\"name\":\"getBroadcasts\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"txHash\",\"type\":\"bytes32\"},{\"internalType\":\"enum VmSafe.BroadcastTxType\",\"name\":\"txType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"blockNumber\",\"type\":\"uint64\"},{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"internalType\":\"struct VmSafe.BroadcastTxSummary[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"contractName\",\"type\":\"string\"},{\"internalType\":\"uint64\",\"name\":\"chainId\",\"type\":\"uint64\"},{\"internalType\":\"enum VmSafe.BroadcastTxType\",\"name\":\"txType\",\"type\":\"uint8\"}],\"name\":\"getBroadcasts\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"txHash\",\"type\":\"bytes32\"},{\"internalType\":\"enum VmSafe.BroadcastTxType\",\"name\":\"txType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"blockNumber\",\"type\":\"uint64\"},{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"internalType\":\"struct VmSafe.BroadcastTxSummary[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"chainAlias\",\"type\":\"string\"}],\"name\":\"getChain\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"chainAlias\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"rpcUrl\",\"type\":\"string\"}],\"internalType\":\"struct VmSafe.Chain\",\"name\":\"chain\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"}],\"name\":\"getChain\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"chainAlias\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"rpcUrl\",\"type\":\"string\"}],\"internalType\":\"struct VmSafe.Chain\",\"name\":\"chain\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"artifactPath\",\"type\":\"string\"}],\"name\":\"getCode\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"creationBytecode\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"artifactPath\",\"type\":\"string\"}],\"name\":\"getDeployedCode\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"runtimeBytecode\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"contractName\",\"type\":\"string\"},{\"internalType\":\"uint64\",\"name\":\"chainId\",\"type\":\"uint64\"}],\"name\":\"getDeployment\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"deployedAddress\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"contractName\",\"type\":\"string\"}],\"name\":\"getDeployment\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"deployedAddress\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"contractName\",\"type\":\"string\"},{\"internalType\":\"uint64\",\"name\":\"chainId\",\"type\":\"uint64\"}],\"name\":\"getDeployments\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"deployedAddresses\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getFoundryVersion\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getLabel\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"currentLabel\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"elementSlot\",\"type\":\"bytes32\"}],\"name\":\"getMappingKeyAndParentOf\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"found\",\"type\":\"bool\"},{\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"parent\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"mappingSlot\",\"type\":\"bytes32\"}],\"name\":\"getMappingLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"mappingSlot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"idx\",\"type\":\"uint256\"}],\"name\":\"getMappingSlotAt\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"value\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getNonce\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"nonce\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"publicKeyX\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"publicKeyY\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"internalType\":\"struct VmSafe.Wallet\",\"name\":\"wallet\",\"type\":\"tuple\"}],\"name\":\"getNonce\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"nonce\",\"type\":\"uint64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRecordedLogs\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes32[]\",\"name\":\"topics\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"emitter\",\"type\":\"address\"}],\"internalType\":\"struct VmSafe.Log[]\",\"name\":\"logs\",\"type\":\"tuple[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getStateDiff\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"diff\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getStateDiffJson\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"diff\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getWallets\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"wallets\",\"type\":\"address[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"input\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"indexOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"interceptInitcode\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum VmSafe.ForgeContext\",\"name\":\"context\",\"type\":\"uint8\"}],\"name\":\"isContext\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"result\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"isDir\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"result\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"isFile\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"result\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isPersistent\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"persistent\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"keyExists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"keyExistsJson\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"keyExistsToml\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"newLabel\",\"type\":\"string\"}],\"name\":\"label\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastCallGas\",\"outputs\":[{\"components\":[{\"internalType\":\"uint64\",\"name\":\"gasLimit\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"gasTotalUsed\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"gasMemoryUsed\",\"type\":\"uint64\"},{\"internalType\":\"int64\",\"name\":\"gasRefunded\",\"type\":\"int64\"},{\"internalType\":\"uint64\",\"name\":\"gasRemaining\",\"type\":\"uint64\"}],\"internalType\":\"struct VmSafe.Gas\",\"name\":\"gas\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"slot\",\"type\":\"bytes32\"}],\"name\":\"load\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"data\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"pathToAllocsJson\",\"type\":\"string\"}],\"name\":\"loadAllocs\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"}],\"name\":\"makePersistent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"account1\",\"type\":\"address\"}],\"name\":\"makePersistent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"makePersistent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"account1\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"account2\",\"type\":\"address\"}],\"name\":\"makePersistent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callee\",\"type\":\"address\"},{\"internalType\":\"bytes4\",\"name\":\"data\",\"type\":\"bytes4\"},{\"internalType\":\"bytes\",\"name\":\"returnData\",\"type\":\"bytes\"}],\"name\":\"mockCall\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"msgValue\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"returnData\",\"type\":\"bytes\"}],\"name\":\"mockCall\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callee\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"returnData\",\"type\":\"bytes\"}],\"name\":\"mockCall\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"msgValue\",\"type\":\"uint256\"},{\"internalType\":\"bytes4\",\"name\":\"data\",\"type\":\"bytes4\"},{\"internalType\":\"bytes\",\"name\":\"returnData\",\"type\":\"bytes\"}],\"name\":\"mockCall\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callee\",\"type\":\"address\"},{\"internalType\":\"bytes4\",\"name\":\"data\",\"type\":\"bytes4\"},{\"internalType\":\"bytes\",\"name\":\"revertData\",\"type\":\"bytes\"}],\"name\":\"mockCallRevert\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"msgValue\",\"type\":\"uint256\"},{\"internalType\":\"bytes4\",\"name\":\"data\",\"type\":\"bytes4\"},{\"internalType\":\"bytes\",\"name\":\"revertData\",\"type\":\"bytes\"}],\"name\":\"mockCallRevert\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"msgValue\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"revertData\",\"type\":\"bytes\"}],\"name\":\"mockCallRevert\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callee\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"revertData\",\"type\":\"bytes\"}],\"name\":\"mockCallRevert\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"msgValue\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bytes[]\",\"name\":\"returnData\",\"type\":\"bytes[]\"}],\"name\":\"mockCalls\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callee\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bytes[]\",\"name\":\"returnData\",\"type\":\"bytes[]\"}],\"name\":\"mockCalls\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callee\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"mockFunction\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"noAccessList\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"name\":\"parseAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"parsedValue\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"name\":\"parseBool\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"parsedValue\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"name\":\"parseBytes\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"parsedValue\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"name\":\"parseBytes32\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"parsedValue\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"name\":\"parseInt\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"parsedValue\",\"type\":\"int256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"name\":\"parseJson\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"abiEncodedData\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJson\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"abiEncodedData\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonAddressArray\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonBool\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonBoolArray\",\"outputs\":[{\"internalType\":\"bool[]\",\"name\":\"\",\"type\":\"bool[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonBytes\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonBytes32\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonBytes32Array\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonBytesArray\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"\",\"type\":\"bytes[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonInt\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonIntArray\",\"outputs\":[{\"internalType\":\"int256[]\",\"name\":\"\",\"type\":\"int256[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonKeys\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"keys\",\"type\":\"string[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonStringArray\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"\",\"type\":\"string[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"typeDescription\",\"type\":\"string\"}],\"name\":\"parseJsonType\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"typeDescription\",\"type\":\"string\"}],\"name\":\"parseJsonType\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"typeDescription\",\"type\":\"string\"}],\"name\":\"parseJsonTypeArray\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonUint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonUintArray\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseToml\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"abiEncodedData\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"}],\"name\":\"parseToml\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"abiEncodedData\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlAddressArray\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlBool\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlBoolArray\",\"outputs\":[{\"internalType\":\"bool[]\",\"name\":\"\",\"type\":\"bool[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlBytes\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlBytes32\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlBytes32Array\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlBytesArray\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"\",\"type\":\"bytes[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlInt\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlIntArray\",\"outputs\":[{\"internalType\":\"int256[]\",\"name\":\"\",\"type\":\"int256[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlKeys\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"keys\",\"type\":\"string[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlStringArray\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"\",\"type\":\"string[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"typeDescription\",\"type\":\"string\"}],\"name\":\"parseTomlType\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"typeDescription\",\"type\":\"string\"}],\"name\":\"parseTomlType\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"typeDescription\",\"type\":\"string\"}],\"name\":\"parseTomlTypeArray\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlUint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlUintArray\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"name\":\"parseUint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"parsedValue\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pauseGasMetering\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pauseTracing\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"msgSender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"txOrigin\",\"type\":\"address\"}],\"name\":\"prank\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"msgSender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"txOrigin\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"delegateCall\",\"type\":\"bool\"}],\"name\":\"prank\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"msgSender\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"delegateCall\",\"type\":\"bool\"}],\"name\":\"prank\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"msgSender\",\"type\":\"address\"}],\"name\":\"prank\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"newPrevrandao\",\"type\":\"bytes32\"}],\"name\":\"prevrandao\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newPrevrandao\",\"type\":\"uint256\"}],\"name\":\"prevrandao\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"projectRoot\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"promptText\",\"type\":\"string\"}],\"name\":\"prompt\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"input\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"promptText\",\"type\":\"string\"}],\"name\":\"promptAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"promptText\",\"type\":\"string\"}],\"name\":\"promptSecret\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"input\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"promptText\",\"type\":\"string\"}],\"name\":\"promptSecretUint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"promptText\",\"type\":\"string\"}],\"name\":\"promptUint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"name\":\"publicKeyP256\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"publicKeyX\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"publicKeyY\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"randomAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"randomBool\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"len\",\"type\":\"uint256\"}],\"name\":\"randomBytes\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"randomBytes4\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"randomBytes8\",\"outputs\":[{\"internalType\":\"bytes8\",\"name\":\"\",\"type\":\"bytes8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"randomInt\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bits\",\"type\":\"uint256\"}],\"name\":\"randomInt\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"randomUint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bits\",\"type\":\"uint256\"}],\"name\":\"randomUint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"min\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"max\",\"type\":\"uint256\"}],\"name\":\"randomUint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"readCallers\",\"outputs\":[{\"internalType\":\"enum VmSafe.CallerMode\",\"name\":\"callerMode\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"msgSender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"txOrigin\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"uint64\",\"name\":\"maxDepth\",\"type\":\"uint64\"}],\"name\":\"readDir\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"errorMessage\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"uint64\",\"name\":\"depth\",\"type\":\"uint64\"},{\"internalType\":\"bool\",\"name\":\"isDir\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isSymlink\",\"type\":\"bool\"}],\"internalType\":\"struct VmSafe.DirEntry[]\",\"name\":\"entries\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"uint64\",\"name\":\"maxDepth\",\"type\":\"uint64\"},{\"internalType\":\"bool\",\"name\":\"followLinks\",\"type\":\"bool\"}],\"name\":\"readDir\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"errorMessage\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"uint64\",\"name\":\"depth\",\"type\":\"uint64\"},{\"internalType\":\"bool\",\"name\":\"isDir\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isSymlink\",\"type\":\"bool\"}],\"internalType\":\"struct VmSafe.DirEntry[]\",\"name\":\"entries\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"readDir\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"errorMessage\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"uint64\",\"name\":\"depth\",\"type\":\"uint64\"},{\"internalType\":\"bool\",\"name\":\"isDir\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isSymlink\",\"type\":\"bool\"}],\"internalType\":\"struct VmSafe.DirEntry[]\",\"name\":\"entries\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"readFile\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"data\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"readFileBinary\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"readLine\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"line\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"linkPath\",\"type\":\"string\"}],\"name\":\"readLink\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"targetPath\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"record\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"recordLogs\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"name\":\"rememberKey\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"keyAddr\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"mnemonic\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"derivationPath\",\"type\":\"string\"},{\"internalType\":\"uint32\",\"name\":\"count\",\"type\":\"uint32\"}],\"name\":\"rememberKeys\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"keyAddrs\",\"type\":\"address[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"mnemonic\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"derivationPath\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"language\",\"type\":\"string\"},{\"internalType\":\"uint32\",\"name\":\"count\",\"type\":\"uint32\"}],\"name\":\"rememberKeys\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"keyAddrs\",\"type\":\"address[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"recursive\",\"type\":\"bool\"}],\"name\":\"removeDir\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"removeFile\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"input\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"from\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"to\",\"type\":\"string\"}],\"name\":\"replace\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"output\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"resetGasMetering\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"resetNonce\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"resumeGasMetering\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"resumeTracing\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"snapshotId\",\"type\":\"uint256\"}],\"name\":\"revertTo\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"snapshotId\",\"type\":\"uint256\"}],\"name\":\"revertToAndDelete\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"snapshotId\",\"type\":\"uint256\"}],\"name\":\"revertToState\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"snapshotId\",\"type\":\"uint256\"}],\"name\":\"revertToStateAndDelete\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"}],\"name\":\"revokePersistent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokePersistent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newHeight\",\"type\":\"uint256\"}],\"name\":\"roll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"txHash\",\"type\":\"bytes32\"}],\"name\":\"rollFork\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"forkId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"rollFork\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"rollFork\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"forkId\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"txHash\",\"type\":\"bytes32\"}],\"name\":\"rollFork\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"urlOrAlias\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"method\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"params\",\"type\":\"string\"}],\"name\":\"rpc\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"method\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"params\",\"type\":\"string\"}],\"name\":\"rpc\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"rpcAlias\",\"type\":\"string\"}],\"name\":\"rpcUrl\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rpcUrlStructs\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"url\",\"type\":\"string\"}],\"internalType\":\"struct VmSafe.Rpc[]\",\"name\":\"urls\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rpcUrls\",\"outputs\":[{\"internalType\":\"string[2][]\",\"name\":\"urls\",\"type\":\"string[2][]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"forkId\",\"type\":\"uint256\"}],\"name\":\"selectFork\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"address[]\",\"name\":\"values\",\"type\":\"address[]\"}],\"name\":\"serializeAddress\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"value\",\"type\":\"address\"}],\"name\":\"serializeAddress\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"bool[]\",\"name\":\"values\",\"type\":\"bool[]\"}],\"name\":\"serializeBool\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"value\",\"type\":\"bool\"}],\"name\":\"serializeBool\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"bytes[]\",\"name\":\"values\",\"type\":\"bytes[]\"}],\"name\":\"serializeBytes\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"value\",\"type\":\"bytes\"}],\"name\":\"serializeBytes\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"bytes32[]\",\"name\":\"values\",\"type\":\"bytes32[]\"}],\"name\":\"serializeBytes32\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"value\",\"type\":\"bytes32\"}],\"name\":\"serializeBytes32\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"serializeInt\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"int256[]\",\"name\":\"values\",\"type\":\"int256[]\"}],\"name\":\"serializeInt\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"}],\"name\":\"serializeJson\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"typeDescription\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"value\",\"type\":\"bytes\"}],\"name\":\"serializeJsonType\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"typeDescription\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"value\",\"type\":\"bytes\"}],\"name\":\"serializeJsonType\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"string[]\",\"name\":\"values\",\"type\":\"string[]\"}],\"name\":\"serializeString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"}],\"name\":\"serializeString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"serializeUint\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"serializeUint\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"serializeUintToHex\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"overwrite\",\"type\":\"bool\"}],\"name\":\"setArbitraryStorage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"setArbitraryStorage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"blockHash\",\"type\":\"bytes32\"}],\"name\":\"setBlockhash\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"}],\"name\":\"setEnv\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"newNonce\",\"type\":\"uint64\"}],\"name\":\"setNonce\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"newNonce\",\"type\":\"uint64\"}],\"name\":\"setNonceUnsafe\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"array\",\"type\":\"uint256[]\"}],\"name\":\"shuffle\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"digest\",\"type\":\"bytes32\"}],\"name\":\"sign\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"digest\",\"type\":\"bytes32\"}],\"name\":\"sign\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"publicKeyX\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"publicKeyY\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"internalType\":\"struct VmSafe.Wallet\",\"name\":\"wallet\",\"type\":\"tuple\"},{\"internalType\":\"bytes32\",\"name\":\"digest\",\"type\":\"bytes32\"}],\"name\":\"sign\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"digest\",\"type\":\"bytes32\"}],\"name\":\"sign\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"name\":\"signAndAttachDelegation\",\"outputs\":[{\"components\":[{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"nonce\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"internalType\":\"struct VmSafe.SignedDelegation\",\"name\":\"signedDelegation\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"},{\"internalType\":\"uint64\",\"name\":\"nonce\",\"type\":\"uint64\"}],\"name\":\"signAndAttachDelegation\",\"outputs\":[{\"components\":[{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"nonce\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"internalType\":\"struct VmSafe.SignedDelegation\",\"name\":\"signedDelegation\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"publicKeyX\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"publicKeyY\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"internalType\":\"struct VmSafe.Wallet\",\"name\":\"wallet\",\"type\":\"tuple\"},{\"internalType\":\"bytes32\",\"name\":\"digest\",\"type\":\"bytes32\"}],\"name\":\"signCompact\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"vs\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"digest\",\"type\":\"bytes32\"}],\"name\":\"signCompact\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"vs\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"digest\",\"type\":\"bytes32\"}],\"name\":\"signCompact\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"vs\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"digest\",\"type\":\"bytes32\"}],\"name\":\"signCompact\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"vs\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"name\":\"signDelegation\",\"outputs\":[{\"components\":[{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"nonce\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"internalType\":\"struct VmSafe.SignedDelegation\",\"name\":\"signedDelegation\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"},{\"internalType\":\"uint64\",\"name\":\"nonce\",\"type\":\"uint64\"}],\"name\":\"signDelegation\",\"outputs\":[{\"components\":[{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"nonce\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"internalType\":\"struct VmSafe.SignedDelegation\",\"name\":\"signedDelegation\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"digest\",\"type\":\"bytes32\"}],\"name\":\"signP256\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"skipTest\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"}],\"name\":\"skip\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"skipTest\",\"type\":\"bool\"}],\"name\":\"skip\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"}],\"name\":\"sleep\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"snapshot\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"snapshotId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"group\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"snapshotGasLastCall\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"gasUsed\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"snapshotGasLastCall\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"gasUsed\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"snapshotState\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"snapshotId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"snapshotValue\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"group\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"snapshotValue\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"array\",\"type\":\"uint256[]\"}],\"name\":\"sort\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"input\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delimiter\",\"type\":\"string\"}],\"name\":\"split\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"outputs\",\"type\":\"string[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startBroadcast\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"}],\"name\":\"startBroadcast\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"name\":\"startBroadcast\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startDebugTraceRecording\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startMappingRecording\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"msgSender\",\"type\":\"address\"}],\"name\":\"startPrank\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"msgSender\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"delegateCall\",\"type\":\"bool\"}],\"name\":\"startPrank\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"msgSender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"txOrigin\",\"type\":\"address\"}],\"name\":\"startPrank\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"msgSender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"txOrigin\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"delegateCall\",\"type\":\"bool\"}],\"name\":\"startPrank\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"startSnapshotGas\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"group\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"startSnapshotGas\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startStateDiffRecording\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stopAndReturnDebugTraceRecording\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256[]\",\"name\":\"stack\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"memoryInput\",\"type\":\"bytes\"},{\"internalType\":\"uint8\",\"name\":\"opcode\",\"type\":\"uint8\"},{\"internalType\":\"uint64\",\"name\":\"depth\",\"type\":\"uint64\"},{\"internalType\":\"bool\",\"name\":\"isOutOfGas\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"contractAddr\",\"type\":\"address\"}],\"internalType\":\"struct VmSafe.DebugStep[]\",\"name\":\"step\",\"type\":\"tuple[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stopAndReturnStateDiff\",\"outputs\":[{\"components\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"forkId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"}],\"internalType\":\"struct VmSafe.ChainInfo\",\"name\":\"chainInfo\",\"type\":\"tuple\"},{\"internalType\":\"enum VmSafe.AccountAccessKind\",\"name\":\"kind\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"accessor\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"initialized\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"oldBalance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"newBalance\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"deployedCode\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bool\",\"name\":\"reverted\",\"type\":\"bool\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"slot\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"isWrite\",\"type\":\"bool\"},{\"internalType\":\"bytes32\",\"name\":\"previousValue\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"newValue\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"reverted\",\"type\":\"bool\"}],\"internalType\":\"struct VmSafe.StorageAccess[]\",\"name\":\"storageAccesses\",\"type\":\"tuple[]\"},{\"internalType\":\"uint64\",\"name\":\"depth\",\"type\":\"uint64\"}],\"internalType\":\"struct VmSafe.AccountAccess[]\",\"name\":\"accountAccesses\",\"type\":\"tuple[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stopBroadcast\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stopExpectSafeMemory\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stopMappingRecording\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stopPrank\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"group\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"stopSnapshotGas\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"gasUsed\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"stopSnapshotGas\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"gasUsed\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stopSnapshotGas\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"gasUsed\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"slot\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"value\",\"type\":\"bytes32\"}],\"name\":\"store\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"data\",\"type\":\"string\"}],\"name\":\"toBase64\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"toBase64\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"data\",\"type\":\"string\"}],\"name\":\"toBase64URL\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"toBase64URL\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"input\",\"type\":\"string\"}],\"name\":\"toLowercase\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"output\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"value\",\"type\":\"address\"}],\"name\":\"toString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"toString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"value\",\"type\":\"bytes\"}],\"name\":\"toString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"value\",\"type\":\"bool\"}],\"name\":\"toString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"toString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"value\",\"type\":\"bytes32\"}],\"name\":\"toString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"input\",\"type\":\"string\"}],\"name\":\"toUppercase\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"output\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"forkId\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"txHash\",\"type\":\"bytes32\"}],\"name\":\"transact\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"txHash\",\"type\":\"bytes32\"}],\"name\":\"transact\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"input\",\"type\":\"string\"}],\"name\":\"trim\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"output\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string[]\",\"name\":\"commandInput\",\"type\":\"string[]\"}],\"name\":\"tryFfi\",\"outputs\":[{\"components\":[{\"internalType\":\"int32\",\"name\":\"exitCode\",\"type\":\"int32\"},{\"internalType\":\"bytes\",\"name\":\"stdout\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"stderr\",\"type\":\"bytes\"}],\"internalType\":\"struct VmSafe.FfiResult\",\"name\":\"result\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newGasPrice\",\"type\":\"uint256\"}],\"name\":\"txGasPrice\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unixTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"milliseconds\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"slot\",\"type\":\"bytes32\"}],\"name\":\"warmSlot\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newTimestamp\",\"type\":\"uint256\"}],\"name\":\"warp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"data\",\"type\":\"string\"}],\"name\":\"writeFile\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"writeFileBinary\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"}],\"name\":\"writeJson\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"writeJson\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"data\",\"type\":\"string\"}],\"name\":\"writeLine\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"}],\"name\":\"writeToml\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"writeToml\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"accessList((address,bytes32[])[])\":{\"notice\":\"Utility cheatcode to set an EIP-2930 access list for all subsequent transactions.\"},\"accesses(address)\":{\"notice\":\"Gets all accessed reads and write slot from a `vm.record` session, for a given address.\"},\"activeFork()\":{\"notice\":\"Returns the identifier of the currently active fork. Reverts if no fork is currently active.\"},\"addr(uint256)\":{\"notice\":\"Gets the address for a given private key.\"},\"allowCheatcodes(address)\":{\"notice\":\"In forking mode, explicitly grant the given address cheatcode access.\"},\"assertApproxEqAbs(int256,int256,uint256)\":{\"notice\":\"Compares two `int256` values. Expects difference to be less than or equal to `maxDelta`.\"},\"assertApproxEqAbs(int256,int256,uint256,string)\":{\"notice\":\"Compares two `int256` values. Expects difference to be less than or equal to `maxDelta`. Includes error message into revert string on failure.\"},\"assertApproxEqAbs(uint256,uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects difference to be less than or equal to `maxDelta`.\"},\"assertApproxEqAbs(uint256,uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects difference to be less than or equal to `maxDelta`. Includes error message into revert string on failure.\"},\"assertApproxEqAbsDecimal(int256,int256,uint256,uint256)\":{\"notice\":\"Compares two `int256` values. Expects difference to be less than or equal to `maxDelta`. Formats values with decimals in failure message.\"},\"assertApproxEqAbsDecimal(int256,int256,uint256,uint256,string)\":{\"notice\":\"Compares two `int256` values. Expects difference to be less than or equal to `maxDelta`. Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertApproxEqAbsDecimal(uint256,uint256,uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects difference to be less than or equal to `maxDelta`. Formats values with decimals in failure message.\"},\"assertApproxEqAbsDecimal(uint256,uint256,uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects difference to be less than or equal to `maxDelta`. Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertApproxEqRel(int256,int256,uint256)\":{\"notice\":\"Compares two `int256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100%\"},\"assertApproxEqRel(int256,int256,uint256,string)\":{\"notice\":\"Compares two `int256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100% Includes error message into revert string on failure.\"},\"assertApproxEqRel(uint256,uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100%\"},\"assertApproxEqRel(uint256,uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100% Includes error message into revert string on failure.\"},\"assertApproxEqRelDecimal(int256,int256,uint256,uint256)\":{\"notice\":\"Compares two `int256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100% Formats values with decimals in failure message.\"},\"assertApproxEqRelDecimal(int256,int256,uint256,uint256,string)\":{\"notice\":\"Compares two `int256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100% Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertApproxEqRelDecimal(uint256,uint256,uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100% Formats values with decimals in failure message.\"},\"assertApproxEqRelDecimal(uint256,uint256,uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100% Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertEq(address,address)\":{\"notice\":\"Asserts that two `address` values are equal.\"},\"assertEq(address,address,string)\":{\"notice\":\"Asserts that two `address` values are equal and includes error message into revert string on failure.\"},\"assertEq(address[],address[])\":{\"notice\":\"Asserts that two arrays of `address` values are equal.\"},\"assertEq(address[],address[],string)\":{\"notice\":\"Asserts that two arrays of `address` values are equal and includes error message into revert string on failure.\"},\"assertEq(bool,bool)\":{\"notice\":\"Asserts that two `bool` values are equal.\"},\"assertEq(bool,bool,string)\":{\"notice\":\"Asserts that two `bool` values are equal and includes error message into revert string on failure.\"},\"assertEq(bool[],bool[])\":{\"notice\":\"Asserts that two arrays of `bool` values are equal.\"},\"assertEq(bool[],bool[],string)\":{\"notice\":\"Asserts that two arrays of `bool` values are equal and includes error message into revert string on failure.\"},\"assertEq(bytes,bytes)\":{\"notice\":\"Asserts that two `bytes` values are equal.\"},\"assertEq(bytes,bytes,string)\":{\"notice\":\"Asserts that two `bytes` values are equal and includes error message into revert string on failure.\"},\"assertEq(bytes32,bytes32)\":{\"notice\":\"Asserts that two `bytes32` values are equal.\"},\"assertEq(bytes32,bytes32,string)\":{\"notice\":\"Asserts that two `bytes32` values are equal and includes error message into revert string on failure.\"},\"assertEq(bytes32[],bytes32[])\":{\"notice\":\"Asserts that two arrays of `bytes32` values are equal.\"},\"assertEq(bytes32[],bytes32[],string)\":{\"notice\":\"Asserts that two arrays of `bytes32` values are equal and includes error message into revert string on failure.\"},\"assertEq(bytes[],bytes[])\":{\"notice\":\"Asserts that two arrays of `bytes` values are equal.\"},\"assertEq(bytes[],bytes[],string)\":{\"notice\":\"Asserts that two arrays of `bytes` values are equal and includes error message into revert string on failure.\"},\"assertEq(int256,int256)\":{\"notice\":\"Asserts that two `int256` values are equal.\"},\"assertEq(int256,int256,string)\":{\"notice\":\"Asserts that two `int256` values are equal and includes error message into revert string on failure.\"},\"assertEq(int256[],int256[])\":{\"notice\":\"Asserts that two arrays of `int256` values are equal.\"},\"assertEq(int256[],int256[],string)\":{\"notice\":\"Asserts that two arrays of `int256` values are equal and includes error message into revert string on failure.\"},\"assertEq(string,string)\":{\"notice\":\"Asserts that two `string` values are equal.\"},\"assertEq(string,string,string)\":{\"notice\":\"Asserts that two `string` values are equal and includes error message into revert string on failure.\"},\"assertEq(string[],string[])\":{\"notice\":\"Asserts that two arrays of `string` values are equal.\"},\"assertEq(string[],string[],string)\":{\"notice\":\"Asserts that two arrays of `string` values are equal and includes error message into revert string on failure.\"},\"assertEq(uint256,uint256)\":{\"notice\":\"Asserts that two `uint256` values are equal.\"},\"assertEq(uint256,uint256,string)\":{\"notice\":\"Asserts that two `uint256` values are equal and includes error message into revert string on failure.\"},\"assertEq(uint256[],uint256[])\":{\"notice\":\"Asserts that two arrays of `uint256 values are equal.\"},\"assertEq(uint256[],uint256[],string)\":{\"notice\":\"Asserts that two arrays of `uint256` values are equal and includes error message into revert string on failure.\"},\"assertEqDecimal(int256,int256,uint256)\":{\"notice\":\"Asserts that two `int256` values are equal, formatting them with decimals in failure message.\"},\"assertEqDecimal(int256,int256,uint256,string)\":{\"notice\":\"Asserts that two `int256` values are equal, formatting them with decimals in failure message. Includes error message into revert string on failure.\"},\"assertEqDecimal(uint256,uint256,uint256)\":{\"notice\":\"Asserts that two `uint256` values are equal, formatting them with decimals in failure message.\"},\"assertEqDecimal(uint256,uint256,uint256,string)\":{\"notice\":\"Asserts that two `uint256` values are equal, formatting them with decimals in failure message. Includes error message into revert string on failure.\"},\"assertFalse(bool)\":{\"notice\":\"Asserts that the given condition is false.\"},\"assertFalse(bool,string)\":{\"notice\":\"Asserts that the given condition is false and includes error message into revert string on failure.\"},\"assertGe(int256,int256)\":{\"notice\":\"Compares two `int256` values. Expects first value to be greater than or equal to second.\"},\"assertGe(int256,int256,string)\":{\"notice\":\"Compares two `int256` values. Expects first value to be greater than or equal to second. Includes error message into revert string on failure.\"},\"assertGe(uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be greater than or equal to second.\"},\"assertGe(uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be greater than or equal to second. Includes error message into revert string on failure.\"},\"assertGeDecimal(int256,int256,uint256)\":{\"notice\":\"Compares two `int256` values. Expects first value to be greater than or equal to second. Formats values with decimals in failure message.\"},\"assertGeDecimal(int256,int256,uint256,string)\":{\"notice\":\"Compares two `int256` values. Expects first value to be greater than or equal to second. Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertGeDecimal(uint256,uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be greater than or equal to second. Formats values with decimals in failure message.\"},\"assertGeDecimal(uint256,uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be greater than or equal to second. Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertGt(int256,int256)\":{\"notice\":\"Compares two `int256` values. Expects first value to be greater than second.\"},\"assertGt(int256,int256,string)\":{\"notice\":\"Compares two `int256` values. Expects first value to be greater than second. Includes error message into revert string on failure.\"},\"assertGt(uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be greater than second.\"},\"assertGt(uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be greater than second. Includes error message into revert string on failure.\"},\"assertGtDecimal(int256,int256,uint256)\":{\"notice\":\"Compares two `int256` values. Expects first value to be greater than second. Formats values with decimals in failure message.\"},\"assertGtDecimal(int256,int256,uint256,string)\":{\"notice\":\"Compares two `int256` values. Expects first value to be greater than second. Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertGtDecimal(uint256,uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be greater than second. Formats values with decimals in failure message.\"},\"assertGtDecimal(uint256,uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be greater than second. Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertLe(int256,int256)\":{\"notice\":\"Compares two `int256` values. Expects first value to be less than or equal to second.\"},\"assertLe(int256,int256,string)\":{\"notice\":\"Compares two `int256` values. Expects first value to be less than or equal to second. Includes error message into revert string on failure.\"},\"assertLe(uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be less than or equal to second.\"},\"assertLe(uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be less than or equal to second. Includes error message into revert string on failure.\"},\"assertLeDecimal(int256,int256,uint256)\":{\"notice\":\"Compares two `int256` values. Expects first value to be less than or equal to second. Formats values with decimals in failure message.\"},\"assertLeDecimal(int256,int256,uint256,string)\":{\"notice\":\"Compares two `int256` values. Expects first value to be less than or equal to second. Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertLeDecimal(uint256,uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be less than or equal to second. Formats values with decimals in failure message.\"},\"assertLeDecimal(uint256,uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be less than or equal to second. Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertLt(int256,int256)\":{\"notice\":\"Compares two `int256` values. Expects first value to be less than second.\"},\"assertLt(int256,int256,string)\":{\"notice\":\"Compares two `int256` values. Expects first value to be less than second. Includes error message into revert string on failure.\"},\"assertLt(uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be less than second.\"},\"assertLt(uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be less than second. Includes error message into revert string on failure.\"},\"assertLtDecimal(int256,int256,uint256)\":{\"notice\":\"Compares two `int256` values. Expects first value to be less than second. Formats values with decimals in failure message.\"},\"assertLtDecimal(int256,int256,uint256,string)\":{\"notice\":\"Compares two `int256` values. Expects first value to be less than second. Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertLtDecimal(uint256,uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be less than second. Formats values with decimals in failure message.\"},\"assertLtDecimal(uint256,uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be less than second. Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertNotEq(address,address)\":{\"notice\":\"Asserts that two `address` values are not equal.\"},\"assertNotEq(address,address,string)\":{\"notice\":\"Asserts that two `address` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(address[],address[])\":{\"notice\":\"Asserts that two arrays of `address` values are not equal.\"},\"assertNotEq(address[],address[],string)\":{\"notice\":\"Asserts that two arrays of `address` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(bool,bool)\":{\"notice\":\"Asserts that two `bool` values are not equal.\"},\"assertNotEq(bool,bool,string)\":{\"notice\":\"Asserts that two `bool` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(bool[],bool[])\":{\"notice\":\"Asserts that two arrays of `bool` values are not equal.\"},\"assertNotEq(bool[],bool[],string)\":{\"notice\":\"Asserts that two arrays of `bool` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(bytes,bytes)\":{\"notice\":\"Asserts that two `bytes` values are not equal.\"},\"assertNotEq(bytes,bytes,string)\":{\"notice\":\"Asserts that two `bytes` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(bytes32,bytes32)\":{\"notice\":\"Asserts that two `bytes32` values are not equal.\"},\"assertNotEq(bytes32,bytes32,string)\":{\"notice\":\"Asserts that two `bytes32` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(bytes32[],bytes32[])\":{\"notice\":\"Asserts that two arrays of `bytes32` values are not equal.\"},\"assertNotEq(bytes32[],bytes32[],string)\":{\"notice\":\"Asserts that two arrays of `bytes32` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(bytes[],bytes[])\":{\"notice\":\"Asserts that two arrays of `bytes` values are not equal.\"},\"assertNotEq(bytes[],bytes[],string)\":{\"notice\":\"Asserts that two arrays of `bytes` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(int256,int256)\":{\"notice\":\"Asserts that two `int256` values are not equal.\"},\"assertNotEq(int256,int256,string)\":{\"notice\":\"Asserts that two `int256` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(int256[],int256[])\":{\"notice\":\"Asserts that two arrays of `int256` values are not equal.\"},\"assertNotEq(int256[],int256[],string)\":{\"notice\":\"Asserts that two arrays of `int256` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(string,string)\":{\"notice\":\"Asserts that two `string` values are not equal.\"},\"assertNotEq(string,string,string)\":{\"notice\":\"Asserts that two `string` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(string[],string[])\":{\"notice\":\"Asserts that two arrays of `string` values are not equal.\"},\"assertNotEq(string[],string[],string)\":{\"notice\":\"Asserts that two arrays of `string` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(uint256,uint256)\":{\"notice\":\"Asserts that two `uint256` values are not equal.\"},\"assertNotEq(uint256,uint256,string)\":{\"notice\":\"Asserts that two `uint256` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(uint256[],uint256[])\":{\"notice\":\"Asserts that two arrays of `uint256` values are not equal.\"},\"assertNotEq(uint256[],uint256[],string)\":{\"notice\":\"Asserts that two arrays of `uint256` values are not equal and includes error message into revert string on failure.\"},\"assertNotEqDecimal(int256,int256,uint256)\":{\"notice\":\"Asserts that two `int256` values are not equal, formatting them with decimals in failure message.\"},\"assertNotEqDecimal(int256,int256,uint256,string)\":{\"notice\":\"Asserts that two `int256` values are not equal, formatting them with decimals in failure message. Includes error message into revert string on failure.\"},\"assertNotEqDecimal(uint256,uint256,uint256)\":{\"notice\":\"Asserts that two `uint256` values are not equal, formatting them with decimals in failure message.\"},\"assertNotEqDecimal(uint256,uint256,uint256,string)\":{\"notice\":\"Asserts that two `uint256` values are not equal, formatting them with decimals in failure message. Includes error message into revert string on failure.\"},\"assertTrue(bool)\":{\"notice\":\"Asserts that the given condition is true.\"},\"assertTrue(bool,string)\":{\"notice\":\"Asserts that the given condition is true and includes error message into revert string on failure.\"},\"assume(bool)\":{\"notice\":\"If the condition is false, discard this run's fuzz inputs and generate new ones.\"},\"assumeNoRevert((address,bool,bytes))\":{\"notice\":\"Discard this run's fuzz inputs and generate new ones if next call reverts with the potential revert parameters.\"},\"assumeNoRevert((address,bool,bytes)[])\":{\"notice\":\"Discard this run's fuzz inputs and generate new ones if next call reverts with the any of the potential revert parameters.\"},\"assumeNoRevert()\":{\"notice\":\"Discard this run's fuzz inputs and generate new ones if next call reverted.\"},\"attachBlob(bytes)\":{\"notice\":\"Attach an EIP-4844 blob to the next call\"},\"attachDelegation((uint8,bytes32,bytes32,uint64,address))\":{\"notice\":\"Designate the next call as an EIP-7702 transaction\"},\"blobBaseFee(uint256)\":{\"notice\":\"Sets `block.blobbasefee`\"},\"blobhashes(bytes32[])\":{\"notice\":\"Sets the blobhashes in the transaction. Not available on EVM versions before Cancun. If used on unsupported EVM versions it will revert.\"},\"breakpoint(string)\":{\"notice\":\"Writes a breakpoint to jump to in the debugger.\"},\"breakpoint(string,bool)\":{\"notice\":\"Writes a conditional breakpoint to jump to in the debugger.\"},\"broadcast()\":{\"notice\":\"Has the next call (at this call depth only) create transactions that can later be signed and sent onchain. Broadcasting address is determined by checking the following in order: 1. If `--sender` argument was provided, that address is used. 2. If exactly one signer (e.g. private key, hw wallet, keystore) is set when `forge broadcast` is invoked, that signer is used. 3. Otherwise, default foundry sender (1804c8AB1F12E6bbf3894d4083f33e07309d1f38) is used.\"},\"broadcast(address)\":{\"notice\":\"Has the next call (at this call depth only) create a transaction with the address provided as the sender that can later be signed and sent onchain.\"},\"broadcast(uint256)\":{\"notice\":\"Has the next call (at this call depth only) create a transaction with the private key provided as the sender that can later be signed and sent onchain.\"},\"broadcastRawTransaction(bytes)\":{\"notice\":\"Takes a signed transaction and broadcasts it to the network.\"},\"chainId(uint256)\":{\"notice\":\"Sets `block.chainid`.\"},\"clearMockedCalls()\":{\"notice\":\"Clears all mocked calls.\"},\"cloneAccount(address,address)\":{\"notice\":\"Clones a source account code, state, balance and nonce to a target account and updates in-memory EVM state.\"},\"closeFile(string)\":{\"notice\":\"Closes file for reading, resetting the offset and allowing to read it from beginning with readLine. `path` is relative to the project root.\"},\"coinbase(address)\":{\"notice\":\"Sets `block.coinbase`.\"},\"computeCreate2Address(bytes32,bytes32)\":{\"notice\":\"Compute the address of a contract created with CREATE2 using the default CREATE2 deployer.\"},\"computeCreate2Address(bytes32,bytes32,address)\":{\"notice\":\"Compute the address of a contract created with CREATE2 using the given CREATE2 deployer.\"},\"computeCreateAddress(address,uint256)\":{\"notice\":\"Compute the address a contract will be deployed at for a given deployer address and nonce.\"},\"contains(string,string)\":{\"notice\":\"Returns true if `search` is found in `subject`, false otherwise.\"},\"cool(address)\":{\"notice\":\"Marks the slots of an account and the account address as cold.\"},\"coolSlot(address,bytes32)\":{\"notice\":\"Utility cheatcode to mark specific storage slot as cold, simulating no prior read.\"},\"copyFile(string,string)\":{\"notice\":\"Copies the contents of one file to another. This function will **overwrite** the contents of `to`. On success, the total number of bytes copied is returned and it is equal to the length of the `to` file as reported by `metadata`. Both `from` and `to` are relative to the project root.\"},\"copyStorage(address,address)\":{\"notice\":\"Utility cheatcode to copy storage of `from` contract to another `to` contract.\"},\"createDir(string,bool)\":{\"notice\":\"Creates a new, empty directory at the provided path. This cheatcode will revert in the following situations, but is not limited to just these cases: - User lacks permissions to modify `path`. - A parent of the given path doesn't exist and `recursive` is false. - `path` already exists and `recursive` is false. `path` is relative to the project root.\"},\"createFork(string)\":{\"notice\":\"Creates a new fork with the given endpoint and the _latest_ block and returns the identifier of the fork.\"},\"createFork(string,bytes32)\":{\"notice\":\"Creates a new fork with the given endpoint and at the block the given transaction was mined in, replays all transaction mined in the block before the transaction, and returns the identifier of the fork.\"},\"createFork(string,uint256)\":{\"notice\":\"Creates a new fork with the given endpoint and block and returns the identifier of the fork.\"},\"createSelectFork(string)\":{\"notice\":\"Creates and also selects a new fork with the given endpoint and the latest block and returns the identifier of the fork.\"},\"createSelectFork(string,bytes32)\":{\"notice\":\"Creates and also selects new fork with the given endpoint and at the block the given transaction was mined in, replays all transaction mined in the block before the transaction, returns the identifier of the fork.\"},\"createSelectFork(string,uint256)\":{\"notice\":\"Creates and also selects a new fork with the given endpoint and block and returns the identifier of the fork.\"},\"createWallet(string)\":{\"notice\":\"Derives a private key from the name, labels the account with that name, and returns the wallet.\"},\"createWallet(uint256)\":{\"notice\":\"Generates a wallet from the private key and returns the wallet.\"},\"createWallet(uint256,string)\":{\"notice\":\"Generates a wallet from the private key, labels the account with that name, and returns the wallet.\"},\"deal(address,uint256)\":{\"notice\":\"Sets an address' balance.\"},\"deleteSnapshot(uint256)\":{\"notice\":\"`deleteSnapshot` is being deprecated in favor of `deleteStateSnapshot`. It will be removed in future versions.\"},\"deleteSnapshots()\":{\"notice\":\"`deleteSnapshots` is being deprecated in favor of `deleteStateSnapshots`. It will be removed in future versions.\"},\"deleteStateSnapshot(uint256)\":{\"notice\":\"Removes the snapshot with the given ID created by `snapshot`. Takes the snapshot ID to delete. Returns `true` if the snapshot was successfully deleted. Returns `false` if the snapshot does not exist.\"},\"deleteStateSnapshots()\":{\"notice\":\"Removes _all_ snapshots previously created by `snapshot`.\"},\"deployCode(string)\":{\"notice\":\"Deploys a contract from an artifact file. Takes in the relative path to the json file or the path to the artifact in the form of <path>:<contract>:<version> where <contract> and <version> parts are optional.\"},\"deployCode(string,bytes)\":{\"notice\":\"Deploys a contract from an artifact file. Takes in the relative path to the json file or the path to the artifact in the form of <path>:<contract>:<version> where <contract> and <version> parts are optional. Additionally accepts abi-encoded constructor arguments.\"},\"deployCode(string,bytes,bytes32)\":{\"notice\":\"Deploys a contract from an artifact file, using the CREATE2 salt. Takes in the relative path to the json file or the path to the artifact in the form of <path>:<contract>:<version> where <contract> and <version> parts are optional. Additionally accepts abi-encoded constructor arguments.\"},\"deployCode(string,bytes,uint256)\":{\"notice\":\"Deploys a contract from an artifact file. Takes in the relative path to the json file or the path to the artifact in the form of <path>:<contract>:<version> where <contract> and <version> parts are optional. Additionally accepts abi-encoded constructor arguments and `msg.value`.\"},\"deployCode(string,bytes,uint256,bytes32)\":{\"notice\":\"Deploys a contract from an artifact file, using the CREATE2 salt. Takes in the relative path to the json file or the path to the artifact in the form of <path>:<contract>:<version> where <contract> and <version> parts are optional. Additionally accepts abi-encoded constructor arguments and `msg.value`.\"},\"deployCode(string,bytes32)\":{\"notice\":\"Deploys a contract from an artifact file, using the CREATE2 salt. Takes in the relative path to the json file or the path to the artifact in the form of <path>:<contract>:<version> where <contract> and <version> parts are optional.\"},\"deployCode(string,uint256)\":{\"notice\":\"Deploys a contract from an artifact file. Takes in the relative path to the json file or the path to the artifact in the form of <path>:<contract>:<version> where <contract> and <version> parts are optional. Additionally accepts `msg.value`.\"},\"deployCode(string,uint256,bytes32)\":{\"notice\":\"Deploys a contract from an artifact file, using the CREATE2 salt. Takes in the relative path to the json file or the path to the artifact in the form of <path>:<contract>:<version> where <contract> and <version> parts are optional. Additionally accepts `msg.value`.\"},\"deriveKey(string,string,uint32)\":{\"notice\":\"Derive a private key from a provided mnenomic string (or mnenomic file path) at `{derivationPath}{index}`.\"},\"deriveKey(string,string,uint32,string)\":{\"notice\":\"Derive a private key from a provided mnenomic string (or mnenomic file path) in the specified language at `{derivationPath}{index}`.\"},\"deriveKey(string,uint32)\":{\"notice\":\"Derive a private key from a provided mnenomic string (or mnenomic file path) at the derivation path `m/44'/60'/0'/0/{index}`.\"},\"deriveKey(string,uint32,string)\":{\"notice\":\"Derive a private key from a provided mnenomic string (or mnenomic file path) in the specified language at the derivation path `m/44'/60'/0'/0/{index}`.\"},\"difficulty(uint256)\":{\"notice\":\"Sets `block.difficulty`. Not available on EVM versions from Paris onwards. Use `prevrandao` instead. Reverts if used on unsupported EVM versions.\"},\"dumpState(string)\":{\"notice\":\"Dump a genesis JSON file's `allocs` to disk.\"},\"ensNamehash(string)\":{\"notice\":\"Returns ENS namehash for provided string.\"},\"envAddress(string)\":{\"notice\":\"Gets the environment variable `name` and parses it as `address`. Reverts if the variable was not found or could not be parsed.\"},\"envAddress(string,string)\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `address`, delimited by `delim`. Reverts if the variable was not found or could not be parsed.\"},\"envBool(string)\":{\"notice\":\"Gets the environment variable `name` and parses it as `bool`. Reverts if the variable was not found or could not be parsed.\"},\"envBool(string,string)\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `bool`, delimited by `delim`. Reverts if the variable was not found or could not be parsed.\"},\"envBytes(string)\":{\"notice\":\"Gets the environment variable `name` and parses it as `bytes`. Reverts if the variable was not found or could not be parsed.\"},\"envBytes(string,string)\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `bytes`, delimited by `delim`. Reverts if the variable was not found or could not be parsed.\"},\"envBytes32(string)\":{\"notice\":\"Gets the environment variable `name` and parses it as `bytes32`. Reverts if the variable was not found or could not be parsed.\"},\"envBytes32(string,string)\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `bytes32`, delimited by `delim`. Reverts if the variable was not found or could not be parsed.\"},\"envExists(string)\":{\"notice\":\"Gets the environment variable `name` and returns true if it exists, else returns false.\"},\"envInt(string)\":{\"notice\":\"Gets the environment variable `name` and parses it as `int256`. Reverts if the variable was not found or could not be parsed.\"},\"envInt(string,string)\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `int256`, delimited by `delim`. Reverts if the variable was not found or could not be parsed.\"},\"envOr(string,address)\":{\"notice\":\"Gets the environment variable `name` and parses it as `address`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,bool)\":{\"notice\":\"Gets the environment variable `name` and parses it as `bool`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,bytes)\":{\"notice\":\"Gets the environment variable `name` and parses it as `bytes`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,bytes32)\":{\"notice\":\"Gets the environment variable `name` and parses it as `bytes32`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,int256)\":{\"notice\":\"Gets the environment variable `name` and parses it as `int256`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,string)\":{\"notice\":\"Gets the environment variable `name` and parses it as `string`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,string,address[])\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `address`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,string,bool[])\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `bool`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,string,bytes32[])\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `bytes32`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,string,bytes[])\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `bytes`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,string,int256[])\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `int256`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,string,string[])\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `string`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,string,uint256[])\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `uint256`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,uint256)\":{\"notice\":\"Gets the environment variable `name` and parses it as `uint256`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envString(string)\":{\"notice\":\"Gets the environment variable `name` and parses it as `string`. Reverts if the variable was not found or could not be parsed.\"},\"envString(string,string)\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `string`, delimited by `delim`. Reverts if the variable was not found or could not be parsed.\"},\"envUint(string)\":{\"notice\":\"Gets the environment variable `name` and parses it as `uint256`. Reverts if the variable was not found or could not be parsed.\"},\"envUint(string,string)\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `uint256`, delimited by `delim`. Reverts if the variable was not found or could not be parsed.\"},\"etch(address,bytes)\":{\"notice\":\"Sets an address' code.\"},\"eth_getLogs(uint256,uint256,address,bytes32[])\":{\"notice\":\"Gets all the logs according to specified filter.\"},\"exists(string)\":{\"notice\":\"Returns true if the given path points to an existing entity, else returns false.\"},\"expectCall(address,bytes)\":{\"notice\":\"Expects a call to an address with the specified calldata. Calldata can either be a strict or a partial match.\"},\"expectCall(address,bytes,uint64)\":{\"notice\":\"Expects given number of calls to an address with the specified calldata.\"},\"expectCall(address,uint256,bytes)\":{\"notice\":\"Expects a call to an address with the specified `msg.value` and calldata.\"},\"expectCall(address,uint256,bytes,uint64)\":{\"notice\":\"Expects given number of calls to an address with the specified `msg.value` and calldata.\"},\"expectCall(address,uint256,uint64,bytes)\":{\"notice\":\"Expect a call to an address with the specified `msg.value`, gas, and calldata.\"},\"expectCall(address,uint256,uint64,bytes,uint64)\":{\"notice\":\"Expects given number of calls to an address with the specified `msg.value`, gas, and calldata.\"},\"expectCallMinGas(address,uint256,uint64,bytes)\":{\"notice\":\"Expect a call to an address with the specified `msg.value` and calldata, and a *minimum* amount of gas.\"},\"expectCallMinGas(address,uint256,uint64,bytes,uint64)\":{\"notice\":\"Expect given number of calls to an address with the specified `msg.value` and calldata, and a *minimum* amount of gas.\"},\"expectCreate(bytes,address)\":{\"notice\":\"Expects the deployment of the specified bytecode by the specified address using the CREATE opcode\"},\"expectCreate2(bytes,address)\":{\"notice\":\"Expects the deployment of the specified bytecode by the specified address using the CREATE2 opcode\"},\"expectEmit()\":{\"notice\":\"Prepare an expected log with all topic and data checks enabled. Call this function, then emit an event, then call a function. Internally after the call, we check if logs were emitted in the expected order with the expected topics and data.\"},\"expectEmit(address)\":{\"notice\":\"Same as the previous method, but also checks supplied address against emitting contract.\"},\"expectEmit(address,uint64)\":{\"notice\":\"Expect a given number of logs from a specific emitter with all topic and data checks enabled.\"},\"expectEmit(bool,bool,bool,bool)\":{\"notice\":\"Prepare an expected log with (bool checkTopic1, bool checkTopic2, bool checkTopic3, bool checkData.). Call this function, then emit an event, then call a function. Internally after the call, we check if logs were emitted in the expected order with the expected topics and data (as specified by the booleans).\"},\"expectEmit(bool,bool,bool,bool,address)\":{\"notice\":\"Same as the previous method, but also checks supplied address against emitting contract.\"},\"expectEmit(bool,bool,bool,bool,address,uint64)\":{\"notice\":\"Expect a given number of logs from a specific emitter with the provided topics.\"},\"expectEmit(bool,bool,bool,bool,uint64)\":{\"notice\":\"Expect a given number of logs with the provided topics.\"},\"expectEmit(uint64)\":{\"notice\":\"Expect a given number of logs with all topic and data checks enabled.\"},\"expectEmitAnonymous()\":{\"notice\":\"Prepare an expected anonymous log with all topic and data checks enabled. Call this function, then emit an anonymous event, then call a function. Internally after the call, we check if logs were emitted in the expected order with the expected topics and data.\"},\"expectEmitAnonymous(address)\":{\"notice\":\"Same as the previous method, but also checks supplied address against emitting contract.\"},\"expectEmitAnonymous(bool,bool,bool,bool,bool)\":{\"notice\":\"Prepare an expected anonymous log with (bool checkTopic1, bool checkTopic2, bool checkTopic3, bool checkData.). Call this function, then emit an anonymous event, then call a function. Internally after the call, we check if logs were emitted in the expected order with the expected topics and data (as specified by the booleans).\"},\"expectEmitAnonymous(bool,bool,bool,bool,bool,address)\":{\"notice\":\"Same as the previous method, but also checks supplied address against emitting contract.\"},\"expectPartialRevert(bytes4)\":{\"notice\":\"Expects an error on next call that starts with the revert data.\"},\"expectPartialRevert(bytes4,address)\":{\"notice\":\"Expects an error on next call to reverter address, that starts with the revert data.\"},\"expectRevert()\":{\"notice\":\"Expects an error on next call with any revert data.\"},\"expectRevert(address)\":{\"notice\":\"Expects an error with any revert data on next call to reverter address.\"},\"expectRevert(address,uint64)\":{\"notice\":\"Expects a `count` number of reverts from the upcoming calls from the reverter address.\"},\"expectRevert(bytes)\":{\"notice\":\"Expects an error on next call that exactly matches the revert data.\"},\"expectRevert(bytes,address)\":{\"notice\":\"Expects an error from reverter address on next call, that exactly matches the revert data.\"},\"expectRevert(bytes,address,uint64)\":{\"notice\":\"Expects a `count` number of reverts from the upcoming calls from the reverter address that exactly match the revert data.\"},\"expectRevert(bytes,uint64)\":{\"notice\":\"Expects a `count` number of reverts from the upcoming calls that exactly match the revert data.\"},\"expectRevert(bytes4)\":{\"notice\":\"Expects an error on next call that exactly matches the revert data.\"},\"expectRevert(bytes4,address)\":{\"notice\":\"Expects an error from reverter address on next call, with any revert data.\"},\"expectRevert(bytes4,address,uint64)\":{\"notice\":\"Expects a `count` number of reverts from the upcoming calls from the reverter address that match the revert data.\"},\"expectRevert(bytes4,uint64)\":{\"notice\":\"Expects a `count` number of reverts from the upcoming calls that match the revert data.\"},\"expectRevert(uint64)\":{\"notice\":\"Expects a `count` number of reverts from the upcoming calls with any revert data or reverter.\"},\"expectSafeMemory(uint64,uint64)\":{\"notice\":\"Only allows memory writes to offsets [0x00, 0x60) \\u222a [min, max) in the current subcontext. If any other memory is written to, the test will fail. Can be called multiple times to add more ranges to the set.\"},\"expectSafeMemoryCall(uint64,uint64)\":{\"notice\":\"Only allows memory writes to offsets [0x00, 0x60) \\u222a [min, max) in the next created subcontext. If any other memory is written to, the test will fail. Can be called multiple times to add more ranges to the set.\"},\"fee(uint256)\":{\"notice\":\"Sets `block.basefee`.\"},\"ffi(string[])\":{\"notice\":\"Performs a foreign function call via the terminal.\"},\"foundryVersionAtLeast(string)\":{\"notice\":\"Returns true if the current Foundry version is greater than or equal to the given version. The given version string must be in the format `major.minor.patch`. This is equivalent to `foundryVersionCmp(version) >= 0`.\"},\"foundryVersionCmp(string)\":{\"notice\":\"Compares the current Foundry version with the given version string. The given version string must be in the format `major.minor.patch`. Returns: -1 if current Foundry version is less than the given version 0 if current Foundry version equals the given version 1 if current Foundry version is greater than the given version This result can then be used with a comparison operator against `0`. For example, to check if the current Foundry version is greater than or equal to `1.0.0`: `if (foundryVersionCmp(\\\"1.0.0\\\") >= 0) { ... }`\"},\"fsMetadata(string)\":{\"notice\":\"Given a path, query the file system to get information about a file, directory, etc.\"},\"getArtifactPathByCode(bytes)\":{\"notice\":\"Gets the artifact path from code (aka. creation code).\"},\"getArtifactPathByDeployedCode(bytes)\":{\"notice\":\"Gets the artifact path from deployed code (aka. runtime code).\"},\"getBlobBaseFee()\":{\"notice\":\"Gets the current `block.blobbasefee`. You should use this instead of `block.blobbasefee` if you use `vm.blobBaseFee`, as `block.blobbasefee` is assumed to be constant across a transaction, and as a result will get optimized out by the compiler. See https://github.com/foundry-rs/foundry/issues/6180\"},\"getBlobhashes()\":{\"notice\":\"Gets the blockhashes from the current transaction. Not available on EVM versions before Cancun. If used on unsupported EVM versions it will revert.\"},\"getBlockNumber()\":{\"notice\":\"Gets the current `block.number`. You should use this instead of `block.number` if you use `vm.roll`, as `block.number` is assumed to be constant across a transaction, and as a result will get optimized out by the compiler. See https://github.com/foundry-rs/foundry/issues/6180\"},\"getBlockTimestamp()\":{\"notice\":\"Gets the current `block.timestamp`. You should use this instead of `block.timestamp` if you use `vm.warp`, as `block.timestamp` is assumed to be constant across a transaction, and as a result will get optimized out by the compiler. See https://github.com/foundry-rs/foundry/issues/6180\"},\"getBroadcast(string,uint64,uint8)\":{\"notice\":\"Returns the most recent broadcast for the given contract on `chainId` matching `txType`. For example: The most recent deployment can be fetched by passing `txType` as `CREATE` or `CREATE2`. The most recent call can be fetched by passing `txType` as `CALL`.\"},\"getBroadcasts(string,uint64)\":{\"notice\":\"Returns all broadcasts for the given contract on `chainId`. Sorted such that the most recent broadcast is the first element, and the oldest is the last. i.e descending order of BroadcastTxSummary.blockNumber.\"},\"getBroadcasts(string,uint64,uint8)\":{\"notice\":\"Returns all broadcasts for the given contract on `chainId` with the specified `txType`. Sorted such that the most recent broadcast is the first element, and the oldest is the last. i.e descending order of BroadcastTxSummary.blockNumber.\"},\"getChain(string)\":{\"notice\":\"Returns a Chain struct for specific alias\"},\"getChain(uint256)\":{\"notice\":\"Returns a Chain struct for specific chainId\"},\"getCode(string)\":{\"notice\":\"Gets the creation bytecode from an artifact file. Takes in the relative path to the json file or the path to the artifact in the form of <path>:<contract>:<version> where <contract> and <version> parts are optional.\"},\"getDeployedCode(string)\":{\"notice\":\"Gets the deployed bytecode from an artifact file. Takes in the relative path to the json file or the path to the artifact in the form of <path>:<contract>:<version> where <contract> and <version> parts are optional.\"},\"getDeployment(string)\":{\"notice\":\"Returns the most recent deployment for the current `chainId`.\"},\"getDeployment(string,uint64)\":{\"notice\":\"Returns the most recent deployment for the given contract on `chainId`\"},\"getDeployments(string,uint64)\":{\"notice\":\"Returns all deployments for the given contract on `chainId` Sorted in descending order of deployment time i.e descending order of BroadcastTxSummary.blockNumber. The most recent deployment is the first element, and the oldest is the last.\"},\"getFoundryVersion()\":{\"notice\":\"Returns the Foundry version. Format: <cargo_version>-<tag>+<git_sha_short>.<unix_build_timestamp>.<profile> Sample output: 0.3.0-nightly+3cb96bde9b.1737036656.debug Note: Build timestamps may vary slightly across platforms due to separate CI jobs. For reliable version comparisons, use UNIX format (e.g., >= 1700000000) to compare timestamps while ignoring minor time differences.\"},\"getLabel(address)\":{\"notice\":\"Gets the label for the specified address.\"},\"getMappingKeyAndParentOf(address,bytes32)\":{\"notice\":\"Gets the map key and parent of a mapping at a given slot, for a given address.\"},\"getMappingLength(address,bytes32)\":{\"notice\":\"Gets the number of elements in the mapping at the given slot, for a given address.\"},\"getMappingSlotAt(address,bytes32,uint256)\":{\"notice\":\"Gets the elements at index idx of the mapping at the given slot, for a given address. The index must be less than the length of the mapping (i.e. the number of keys in the mapping).\"},\"getNonce((address,uint256,uint256,uint256))\":{\"notice\":\"Get the nonce of a `Wallet`.\"},\"getNonce(address)\":{\"notice\":\"Gets the nonce of an account.\"},\"getRecordedLogs()\":{\"notice\":\"Gets all the recorded logs.\"},\"getStateDiff()\":{\"notice\":\"Returns state diffs from current `vm.startStateDiffRecording` session.\"},\"getStateDiffJson()\":{\"notice\":\"Returns state diffs from current `vm.startStateDiffRecording` session, in json format.\"},\"getWallets()\":{\"notice\":\"Returns addresses of available unlocked wallets in the script environment.\"},\"indexOf(string,string)\":{\"notice\":\"Returns the index of the first occurrence of a `key` in an `input` string. Returns `NOT_FOUND` (i.e. `type(uint256).max`) if the `key` is not found. Returns 0 in case of an empty `key`.\"},\"interceptInitcode()\":{\"notice\":\"Causes the next contract creation (via new) to fail and return its initcode in the returndata buffer. This allows type-safe access to the initcode payload that would be used for contract creation. Example usage: vm.interceptInitcode(); bytes memory initcode; try new MyContract(param1, param2) { assert(false); } catch (bytes memory interceptedInitcode) { initcode = interceptedInitcode; }\"},\"isContext(uint8)\":{\"notice\":\"Returns true if `forge` command was executed in given context.\"},\"isDir(string)\":{\"notice\":\"Returns true if the path exists on disk and is pointing at a directory, else returns false.\"},\"isFile(string)\":{\"notice\":\"Returns true if the path exists on disk and is pointing at a regular file, else returns false.\"},\"isPersistent(address)\":{\"notice\":\"Returns true if the account is marked as persistent.\"},\"keyExists(string,string)\":{\"notice\":\"Checks if `key` exists in a JSON object `keyExists` is being deprecated in favor of `keyExistsJson`. It will be removed in future versions.\"},\"keyExistsJson(string,string)\":{\"notice\":\"Checks if `key` exists in a JSON object.\"},\"keyExistsToml(string,string)\":{\"notice\":\"Checks if `key` exists in a TOML table.\"},\"label(address,string)\":{\"notice\":\"Labels an address in call traces.\"},\"lastCallGas()\":{\"notice\":\"Gets the gas used in the last call from the callee perspective.\"},\"load(address,bytes32)\":{\"notice\":\"Loads a storage slot from an address.\"},\"loadAllocs(string)\":{\"notice\":\"Load a genesis JSON file's `allocs` into the in-memory EVM state.\"},\"makePersistent(address)\":{\"notice\":\"Marks that the account(s) should use persistent storage across fork swaps in a multifork setup Meaning, changes made to the state of this account will be kept when switching forks.\"},\"makePersistent(address,address)\":{\"notice\":\"See `makePersistent(address)`.\"},\"makePersistent(address,address,address)\":{\"notice\":\"See `makePersistent(address)`.\"},\"makePersistent(address[])\":{\"notice\":\"See `makePersistent(address)`.\"},\"mockCall(address,bytes,bytes)\":{\"notice\":\"Mocks a call to an address, returning specified data. Calldata can either be strict or a partial match, e.g. if you only pass a Solidity selector to the expected calldata, then the entire Solidity function will be mocked.\"},\"mockCall(address,bytes4,bytes)\":{\"notice\":\"Mocks a call to an address, returning specified data. Calldata can either be strict or a partial match, e.g. if you only pass a Solidity selector to the expected calldata, then the entire Solidity function will be mocked. Overload to pass the function selector directly `token.approve.selector` instead of `abi.encodeWithSelector(token.approve.selector)`.\"},\"mockCall(address,uint256,bytes,bytes)\":{\"notice\":\"Mocks a call to an address with a specific `msg.value`, returning specified data. Calldata match takes precedence over `msg.value` in case of ambiguity.\"},\"mockCall(address,uint256,bytes4,bytes)\":{\"notice\":\"Mocks a call to an address with a specific `msg.value`, returning specified data. Calldata match takes precedence over `msg.value` in case of ambiguity. Overload to pass the function selector directly `token.approve.selector` instead of `abi.encodeWithSelector(token.approve.selector)`.\"},\"mockCallRevert(address,bytes,bytes)\":{\"notice\":\"Reverts a call to an address with specified revert data.\"},\"mockCallRevert(address,bytes4,bytes)\":{\"notice\":\"Reverts a call to an address with specified revert data. Overload to pass the function selector directly `token.approve.selector` instead of `abi.encodeWithSelector(token.approve.selector)`.\"},\"mockCallRevert(address,uint256,bytes,bytes)\":{\"notice\":\"Reverts a call to an address with a specific `msg.value`, with specified revert data.\"},\"mockCallRevert(address,uint256,bytes4,bytes)\":{\"notice\":\"Reverts a call to an address with a specific `msg.value`, with specified revert data. Overload to pass the function selector directly `token.approve.selector` instead of `abi.encodeWithSelector(token.approve.selector)`.\"},\"mockCalls(address,bytes,bytes[])\":{\"notice\":\"Mocks multiple calls to an address, returning specified data for each call.\"},\"mockCalls(address,uint256,bytes,bytes[])\":{\"notice\":\"Mocks multiple calls to an address with a specific `msg.value`, returning specified data for each call.\"},\"mockFunction(address,address,bytes)\":{\"notice\":\"Whenever a call is made to `callee` with calldata `data`, this cheatcode instead calls `target` with the same calldata. This functionality is similar to a delegate call made to `target` contract from `callee`. Can be used to substitute a call to a function with another implementation that captures the primary logic of the original function but is easier to reason about. If calldata is not a strict match then partial match by selector is attempted.\"},\"noAccessList()\":{\"notice\":\"Utility cheatcode to remove any EIP-2930 access list set by `accessList` cheatcode.\"},\"parseAddress(string)\":{\"notice\":\"Parses the given `string` into an `address`.\"},\"parseBool(string)\":{\"notice\":\"Parses the given `string` into a `bool`.\"},\"parseBytes(string)\":{\"notice\":\"Parses the given `string` into `bytes`.\"},\"parseBytes32(string)\":{\"notice\":\"Parses the given `string` into a `bytes32`.\"},\"parseInt(string)\":{\"notice\":\"Parses the given `string` into a `int256`.\"},\"parseJson(string)\":{\"notice\":\"ABI-encodes a JSON object.\"},\"parseJson(string,string)\":{\"notice\":\"ABI-encodes a JSON object at `key`.\"},\"parseJsonAddress(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `address`.\"},\"parseJsonAddressArray(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `address[]`.\"},\"parseJsonBool(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `bool`.\"},\"parseJsonBoolArray(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `bool[]`.\"},\"parseJsonBytes(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `bytes`.\"},\"parseJsonBytes32(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `bytes32`.\"},\"parseJsonBytes32Array(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `bytes32[]`.\"},\"parseJsonBytesArray(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `bytes[]`.\"},\"parseJsonInt(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `int256`.\"},\"parseJsonIntArray(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `int256[]`.\"},\"parseJsonKeys(string,string)\":{\"notice\":\"Returns an array of all the keys in a JSON object.\"},\"parseJsonString(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `string`.\"},\"parseJsonStringArray(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `string[]`.\"},\"parseJsonType(string,string)\":{\"notice\":\"Parses a string of JSON data and coerces it to type corresponding to `typeDescription`.\"},\"parseJsonType(string,string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to type corresponding to `typeDescription`.\"},\"parseJsonTypeArray(string,string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to type array corresponding to `typeDescription`.\"},\"parseJsonUint(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `uint256`.\"},\"parseJsonUintArray(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `uint256[]`.\"},\"parseToml(string)\":{\"notice\":\"ABI-encodes a TOML table.\"},\"parseToml(string,string)\":{\"notice\":\"ABI-encodes a TOML table at `key`.\"},\"parseTomlAddress(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `address`.\"},\"parseTomlAddressArray(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `address[]`.\"},\"parseTomlBool(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `bool`.\"},\"parseTomlBoolArray(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `bool[]`.\"},\"parseTomlBytes(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `bytes`.\"},\"parseTomlBytes32(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `bytes32`.\"},\"parseTomlBytes32Array(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `bytes32[]`.\"},\"parseTomlBytesArray(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `bytes[]`.\"},\"parseTomlInt(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `int256`.\"},\"parseTomlIntArray(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `int256[]`.\"},\"parseTomlKeys(string,string)\":{\"notice\":\"Returns an array of all the keys in a TOML table.\"},\"parseTomlString(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `string`.\"},\"parseTomlStringArray(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `string[]`.\"},\"parseTomlType(string,string)\":{\"notice\":\"Parses a string of TOML data and coerces it to type corresponding to `typeDescription`.\"},\"parseTomlType(string,string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to type corresponding to `typeDescription`.\"},\"parseTomlTypeArray(string,string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to type array corresponding to `typeDescription`.\"},\"parseTomlUint(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `uint256`.\"},\"parseTomlUintArray(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `uint256[]`.\"},\"parseUint(string)\":{\"notice\":\"Parses the given `string` into a `uint256`.\"},\"pauseGasMetering()\":{\"notice\":\"Pauses gas metering (i.e. gas usage is not counted). Noop if already paused.\"},\"pauseTracing()\":{\"notice\":\"Pauses collection of call traces. Useful in cases when you want to skip tracing of complex calls which are not useful for debugging.\"},\"prank(address)\":{\"notice\":\"Sets the *next* call's `msg.sender` to be the input address.\"},\"prank(address,address)\":{\"notice\":\"Sets the *next* call's `msg.sender` to be the input address, and the `tx.origin` to be the second input.\"},\"prank(address,address,bool)\":{\"notice\":\"Sets the *next* delegate call's `msg.sender` to be the input address, and the `tx.origin` to be the second input.\"},\"prank(address,bool)\":{\"notice\":\"Sets the *next* delegate call's `msg.sender` to be the input address.\"},\"prevrandao(bytes32)\":{\"notice\":\"Sets `block.prevrandao`. Not available on EVM versions before Paris. Use `difficulty` instead. If used on unsupported EVM versions it will revert.\"},\"prevrandao(uint256)\":{\"notice\":\"Sets `block.prevrandao`. Not available on EVM versions before Paris. Use `difficulty` instead. If used on unsupported EVM versions it will revert.\"},\"projectRoot()\":{\"notice\":\"Get the path of the current project root.\"},\"prompt(string)\":{\"notice\":\"Prompts the user for a string value in the terminal.\"},\"promptAddress(string)\":{\"notice\":\"Prompts the user for an address in the terminal.\"},\"promptSecret(string)\":{\"notice\":\"Prompts the user for a hidden string value in the terminal.\"},\"promptSecretUint(string)\":{\"notice\":\"Prompts the user for hidden uint256 in the terminal (usually pk).\"},\"promptUint(string)\":{\"notice\":\"Prompts the user for uint256 in the terminal.\"},\"publicKeyP256(uint256)\":{\"notice\":\"Derives secp256r1 public key from the provided `privateKey`.\"},\"randomAddress()\":{\"notice\":\"Returns a random `address`.\"},\"randomBool()\":{\"notice\":\"Returns a random `bool`.\"},\"randomBytes(uint256)\":{\"notice\":\"Returns a random byte array value of the given length.\"},\"randomBytes4()\":{\"notice\":\"Returns a random fixed-size byte array of length 4.\"},\"randomBytes8()\":{\"notice\":\"Returns a random fixed-size byte array of length 8.\"},\"randomInt()\":{\"notice\":\"Returns a random `int256` value.\"},\"randomInt(uint256)\":{\"notice\":\"Returns a random `int256` value of given bits.\"},\"randomUint()\":{\"notice\":\"Returns a random uint256 value.\"},\"randomUint(uint256)\":{\"notice\":\"Returns a random `uint256` value of given bits.\"},\"randomUint(uint256,uint256)\":{\"notice\":\"Returns random uint256 value between the provided range (=min..=max).\"},\"readCallers()\":{\"notice\":\"Reads the current `msg.sender` and `tx.origin` from state and reports if there is any active caller modification.\"},\"readDir(string)\":{\"notice\":\"Reads the directory at the given path recursively, up to `maxDepth`. `maxDepth` defaults to 1, meaning only the direct children of the given directory will be returned. Follows symbolic links if `followLinks` is true.\"},\"readDir(string,uint64)\":{\"notice\":\"See `readDir(string)`.\"},\"readDir(string,uint64,bool)\":{\"notice\":\"See `readDir(string)`.\"},\"readFile(string)\":{\"notice\":\"Reads the entire content of file to string. `path` is relative to the project root.\"},\"readFileBinary(string)\":{\"notice\":\"Reads the entire content of file as binary. `path` is relative to the project root.\"},\"readLine(string)\":{\"notice\":\"Reads next line of file to string.\"},\"readLink(string)\":{\"notice\":\"Reads a symbolic link, returning the path that the link points to. This cheatcode will revert in the following situations, but is not limited to just these cases: - `path` is not a symbolic link. - `path` does not exist.\"},\"record()\":{\"notice\":\"Records all storage reads and writes.\"},\"recordLogs()\":{\"notice\":\"Record all the transaction logs.\"},\"rememberKey(uint256)\":{\"notice\":\"Adds a private key to the local forge wallet and returns the address.\"},\"rememberKeys(string,string,string,uint32)\":{\"notice\":\"Derive a set number of wallets from a mnemonic in the specified language at the derivation path `m/44'/60'/0'/0/{0..count}`. The respective private keys are saved to the local forge wallet for later use and their addresses are returned.\"},\"rememberKeys(string,string,uint32)\":{\"notice\":\"Derive a set number of wallets from a mnemonic at the derivation path `m/44'/60'/0'/0/{0..count}`. The respective private keys are saved to the local forge wallet for later use and their addresses are returned.\"},\"removeDir(string,bool)\":{\"notice\":\"Removes a directory at the provided path. This cheatcode will revert in the following situations, but is not limited to just these cases: - `path` doesn't exist. - `path` isn't a directory. - User lacks permissions to modify `path`. - The directory is not empty and `recursive` is false. `path` is relative to the project root.\"},\"removeFile(string)\":{\"notice\":\"Removes a file from the filesystem. This cheatcode will revert in the following situations, but is not limited to just these cases: - `path` points to a directory. - The file doesn't exist. - The user lacks permissions to remove the file. `path` is relative to the project root.\"},\"replace(string,string,string)\":{\"notice\":\"Replaces occurrences of `from` in the given `string` with `to`.\"},\"resetGasMetering()\":{\"notice\":\"Reset gas metering (i.e. gas usage is set to gas limit).\"},\"resetNonce(address)\":{\"notice\":\"Resets the nonce of an account to 0 for EOAs and 1 for contract accounts.\"},\"resumeGasMetering()\":{\"notice\":\"Resumes gas metering (i.e. gas usage is counted again). Noop if already on.\"},\"resumeTracing()\":{\"notice\":\"Unpauses collection of call traces.\"},\"revertTo(uint256)\":{\"notice\":\"`revertTo` is being deprecated in favor of `revertToState`. It will be removed in future versions.\"},\"revertToAndDelete(uint256)\":{\"notice\":\"`revertToAndDelete` is being deprecated in favor of `revertToStateAndDelete`. It will be removed in future versions.\"},\"revertToState(uint256)\":{\"notice\":\"Revert the state of the EVM to a previous snapshot Takes the snapshot ID to revert to. Returns `true` if the snapshot was successfully reverted. Returns `false` if the snapshot does not exist. **Note:** This does not automatically delete the snapshot. To delete the snapshot use `deleteStateSnapshot`.\"},\"revertToStateAndDelete(uint256)\":{\"notice\":\"Revert the state of the EVM to a previous snapshot and automatically deletes the snapshots Takes the snapshot ID to revert to. Returns `true` if the snapshot was successfully reverted and deleted. Returns `false` if the snapshot does not exist.\"},\"revokePersistent(address)\":{\"notice\":\"Revokes persistent status from the address, previously added via `makePersistent`.\"},\"revokePersistent(address[])\":{\"notice\":\"See `revokePersistent(address)`.\"},\"roll(uint256)\":{\"notice\":\"Sets `block.height`.\"},\"rollFork(bytes32)\":{\"notice\":\"Updates the currently active fork to given transaction. This will `rollFork` with the number of the block the transaction was mined in and replays all transaction mined before it in the block.\"},\"rollFork(uint256)\":{\"notice\":\"Updates the currently active fork to given block number This is similar to `roll` but for the currently active fork.\"},\"rollFork(uint256,bytes32)\":{\"notice\":\"Updates the given fork to block number of the given transaction and replays all transaction mined before it in the block.\"},\"rollFork(uint256,uint256)\":{\"notice\":\"Updates the given fork to given block number.\"},\"rpc(string,string)\":{\"notice\":\"Performs an Ethereum JSON-RPC request to the current fork URL.\"},\"rpc(string,string,string)\":{\"notice\":\"Performs an Ethereum JSON-RPC request to the given endpoint.\"},\"rpcUrl(string)\":{\"notice\":\"Returns the RPC url for the given alias.\"},\"rpcUrlStructs()\":{\"notice\":\"Returns all rpc urls and their aliases as structs.\"},\"rpcUrls()\":{\"notice\":\"Returns all rpc urls and their aliases `[alias, url][]`.\"},\"selectFork(uint256)\":{\"notice\":\"Takes a fork identifier created by `createFork` and sets the corresponding forked state as active.\"},\"serializeAddress(string,string,address)\":{\"notice\":\"See `serializeJson`.\"},\"serializeAddress(string,string,address[])\":{\"notice\":\"See `serializeJson`.\"},\"serializeBool(string,string,bool)\":{\"notice\":\"See `serializeJson`.\"},\"serializeBool(string,string,bool[])\":{\"notice\":\"See `serializeJson`.\"},\"serializeBytes(string,string,bytes)\":{\"notice\":\"See `serializeJson`.\"},\"serializeBytes(string,string,bytes[])\":{\"notice\":\"See `serializeJson`.\"},\"serializeBytes32(string,string,bytes32)\":{\"notice\":\"See `serializeJson`.\"},\"serializeBytes32(string,string,bytes32[])\":{\"notice\":\"See `serializeJson`.\"},\"serializeInt(string,string,int256)\":{\"notice\":\"See `serializeJson`.\"},\"serializeInt(string,string,int256[])\":{\"notice\":\"See `serializeJson`.\"},\"serializeJson(string,string)\":{\"notice\":\"Serializes a key and value to a JSON object stored in-memory that can be later written to a file. Returns the stringified version of the specific JSON file up to that moment.\"},\"serializeJsonType(string,bytes)\":{\"notice\":\"See `serializeJson`.\"},\"serializeJsonType(string,string,string,bytes)\":{\"notice\":\"See `serializeJson`.\"},\"serializeString(string,string,string)\":{\"notice\":\"See `serializeJson`.\"},\"serializeString(string,string,string[])\":{\"notice\":\"See `serializeJson`.\"},\"serializeUint(string,string,uint256)\":{\"notice\":\"See `serializeJson`.\"},\"serializeUint(string,string,uint256[])\":{\"notice\":\"See `serializeJson`.\"},\"serializeUintToHex(string,string,uint256)\":{\"notice\":\"See `serializeJson`.\"},\"setArbitraryStorage(address)\":{\"notice\":\"Utility cheatcode to set arbitrary storage for given target address.\"},\"setArbitraryStorage(address,bool)\":{\"notice\":\"Utility cheatcode to set arbitrary storage for given target address and overwrite any storage slots that have been previously set.\"},\"setBlockhash(uint256,bytes32)\":{\"notice\":\"Set blockhash for the current block. It only sets the blockhash for blocks where `block.number - 256 <= number < block.number`.\"},\"setEnv(string,string)\":{\"notice\":\"Sets environment variables.\"},\"setNonce(address,uint64)\":{\"notice\":\"Sets the nonce of an account. Must be higher than the current nonce of the account.\"},\"setNonceUnsafe(address,uint64)\":{\"notice\":\"Sets the nonce of an account to an arbitrary value.\"},\"shuffle(uint256[])\":{\"notice\":\"Randomly shuffles an array.\"},\"sign((address,uint256,uint256,uint256),bytes32)\":{\"notice\":\"Signs data with a `Wallet`.\"},\"sign(address,bytes32)\":{\"notice\":\"Signs `digest` with signer provided to script using the secp256k1 curve. Raises error if none of the signers passed into the script have provided address.\"},\"sign(bytes32)\":{\"notice\":\"Signs `digest` with signer provided to script using the secp256k1 curve. If `--sender` is provided, the signer with provided address is used, otherwise, if exactly one signer is provided to the script, that signer is used. Raises error if signer passed through `--sender` does not match any unlocked signers or if `--sender` is not provided and not exactly one signer is passed to the script.\"},\"sign(uint256,bytes32)\":{\"notice\":\"Signs `digest` with `privateKey` using the secp256k1 curve.\"},\"signAndAttachDelegation(address,uint256)\":{\"notice\":\"Sign an EIP-7702 authorization and designate the next call as an EIP-7702 transaction\"},\"signAndAttachDelegation(address,uint256,uint64)\":{\"notice\":\"Sign an EIP-7702 authorization and designate the next call as an EIP-7702 transaction for specific nonce\"},\"signCompact((address,uint256,uint256,uint256),bytes32)\":{\"notice\":\"Signs data with a `Wallet`. Returns a compact signature (`r`, `vs`) as per EIP-2098, where `vs` encodes both the signature's `s` value, and the recovery id `v` in a single bytes32. This format reduces the signature size from 65 to 64 bytes.\"},\"signCompact(address,bytes32)\":{\"notice\":\"Signs `digest` with signer provided to script using the secp256k1 curve. Returns a compact signature (`r`, `vs`) as per EIP-2098, where `vs` encodes both the signature's `s` value, and the recovery id `v` in a single bytes32. This format reduces the signature size from 65 to 64 bytes. Raises error if none of the signers passed into the script have provided address.\"},\"signCompact(bytes32)\":{\"notice\":\"Signs `digest` with signer provided to script using the secp256k1 curve. Returns a compact signature (`r`, `vs`) as per EIP-2098, where `vs` encodes both the signature's `s` value, and the recovery id `v` in a single bytes32. This format reduces the signature size from 65 to 64 bytes. If `--sender` is provided, the signer with provided address is used, otherwise, if exactly one signer is provided to the script, that signer is used. Raises error if signer passed through `--sender` does not match any unlocked signers or if `--sender` is not provided and not exactly one signer is passed to the script.\"},\"signCompact(uint256,bytes32)\":{\"notice\":\"Signs `digest` with `privateKey` using the secp256k1 curve. Returns a compact signature (`r`, `vs`) as per EIP-2098, where `vs` encodes both the signature's `s` value, and the recovery id `v` in a single bytes32. This format reduces the signature size from 65 to 64 bytes.\"},\"signDelegation(address,uint256)\":{\"notice\":\"Sign an EIP-7702 authorization for delegation\"},\"signDelegation(address,uint256,uint64)\":{\"notice\":\"Sign an EIP-7702 authorization for delegation for specific nonce\"},\"signP256(uint256,bytes32)\":{\"notice\":\"Signs `digest` with `privateKey` using the secp256r1 curve.\"},\"skip(bool)\":{\"notice\":\"Marks a test as skipped. Must be called at the top level of a test.\"},\"skip(bool,string)\":{\"notice\":\"Marks a test as skipped with a reason. Must be called at the top level of a test.\"},\"sleep(uint256)\":{\"notice\":\"Suspends execution of the main thread for `duration` milliseconds.\"},\"snapshot()\":{\"notice\":\"`snapshot` is being deprecated in favor of `snapshotState`. It will be removed in future versions.\"},\"snapshotGasLastCall(string)\":{\"notice\":\"Snapshot capture the gas usage of the last call by name from the callee perspective.\"},\"snapshotGasLastCall(string,string)\":{\"notice\":\"Snapshot capture the gas usage of the last call by name in a group from the callee perspective.\"},\"snapshotState()\":{\"notice\":\"Snapshot the current state of the evm. Returns the ID of the snapshot that was created. To revert a snapshot use `revertToState`.\"},\"snapshotValue(string,string,uint256)\":{\"notice\":\"Snapshot capture an arbitrary numerical value by name in a group.\"},\"snapshotValue(string,uint256)\":{\"notice\":\"Snapshot capture an arbitrary numerical value by name. The group name is derived from the contract name.\"},\"sort(uint256[])\":{\"notice\":\"Sorts an array in ascending order.\"},\"split(string,string)\":{\"notice\":\"Splits the given `string` into an array of strings divided by the `delimiter`.\"},\"startBroadcast()\":{\"notice\":\"Has all subsequent calls (at this call depth only) create transactions that can later be signed and sent onchain. Broadcasting address is determined by checking the following in order: 1. If `--sender` argument was provided, that address is used. 2. If exactly one signer (e.g. private key, hw wallet, keystore) is set when `forge broadcast` is invoked, that signer is used. 3. Otherwise, default foundry sender (1804c8AB1F12E6bbf3894d4083f33e07309d1f38) is used.\"},\"startBroadcast(address)\":{\"notice\":\"Has all subsequent calls (at this call depth only) create transactions with the address provided that can later be signed and sent onchain.\"},\"startBroadcast(uint256)\":{\"notice\":\"Has all subsequent calls (at this call depth only) create transactions with the private key provided that can later be signed and sent onchain.\"},\"startDebugTraceRecording()\":{\"notice\":\"Records the debug trace during the run.\"},\"startMappingRecording()\":{\"notice\":\"Starts recording all map SSTOREs for later retrieval.\"},\"startPrank(address)\":{\"notice\":\"Sets all subsequent calls' `msg.sender` to be the input address until `stopPrank` is called.\"},\"startPrank(address,address)\":{\"notice\":\"Sets all subsequent calls' `msg.sender` to be the input address until `stopPrank` is called, and the `tx.origin` to be the second input.\"},\"startPrank(address,address,bool)\":{\"notice\":\"Sets all subsequent delegate calls' `msg.sender` to be the input address until `stopPrank` is called, and the `tx.origin` to be the second input.\"},\"startPrank(address,bool)\":{\"notice\":\"Sets all subsequent delegate calls' `msg.sender` to be the input address until `stopPrank` is called.\"},\"startSnapshotGas(string)\":{\"notice\":\"Start a snapshot capture of the current gas usage by name. The group name is derived from the contract name.\"},\"startSnapshotGas(string,string)\":{\"notice\":\"Start a snapshot capture of the current gas usage by name in a group.\"},\"startStateDiffRecording()\":{\"notice\":\"Record all account accesses as part of CREATE, CALL or SELFDESTRUCT opcodes in order, along with the context of the calls\"},\"stopAndReturnDebugTraceRecording()\":{\"notice\":\"Stop debug trace recording and returns the recorded debug trace.\"},\"stopAndReturnStateDiff()\":{\"notice\":\"Returns an ordered array of all account accesses from a `vm.startStateDiffRecording` session.\"},\"stopBroadcast()\":{\"notice\":\"Stops collecting onchain transactions.\"},\"stopExpectSafeMemory()\":{\"notice\":\"Stops all safe memory expectation in the current subcontext.\"},\"stopMappingRecording()\":{\"notice\":\"Stops recording all map SSTOREs for later retrieval and clears the recorded data.\"},\"stopPrank()\":{\"notice\":\"Resets subsequent calls' `msg.sender` to be `address(this)`.\"},\"stopSnapshotGas()\":{\"notice\":\"Stop the snapshot capture of the current gas by latest snapshot name, capturing the gas used since the start.\"},\"stopSnapshotGas(string)\":{\"notice\":\"Stop the snapshot capture of the current gas usage by name, capturing the gas used since the start. The group name is derived from the contract name.\"},\"stopSnapshotGas(string,string)\":{\"notice\":\"Stop the snapshot capture of the current gas usage by name in a group, capturing the gas used since the start.\"},\"store(address,bytes32,bytes32)\":{\"notice\":\"Stores a value to an address' storage slot.\"},\"toBase64(bytes)\":{\"notice\":\"Encodes a `bytes` value to a base64 string.\"},\"toBase64(string)\":{\"notice\":\"Encodes a `string` value to a base64 string.\"},\"toBase64URL(bytes)\":{\"notice\":\"Encodes a `bytes` value to a base64url string.\"},\"toBase64URL(string)\":{\"notice\":\"Encodes a `string` value to a base64url string.\"},\"toLowercase(string)\":{\"notice\":\"Converts the given `string` value to Lowercase.\"},\"toString(address)\":{\"notice\":\"Converts the given value to a `string`.\"},\"toString(bool)\":{\"notice\":\"Converts the given value to a `string`.\"},\"toString(bytes)\":{\"notice\":\"Converts the given value to a `string`.\"},\"toString(bytes32)\":{\"notice\":\"Converts the given value to a `string`.\"},\"toString(int256)\":{\"notice\":\"Converts the given value to a `string`.\"},\"toString(uint256)\":{\"notice\":\"Converts the given value to a `string`.\"},\"toUppercase(string)\":{\"notice\":\"Converts the given `string` value to Uppercase.\"},\"transact(bytes32)\":{\"notice\":\"Fetches the given transaction from the active fork and executes it on the current state.\"},\"transact(uint256,bytes32)\":{\"notice\":\"Fetches the given transaction from the given fork and executes it on the current state.\"},\"trim(string)\":{\"notice\":\"Trims leading and trailing whitespace from the given `string` value.\"},\"tryFfi(string[])\":{\"notice\":\"Performs a foreign function call via terminal and returns the exit code, stdout, and stderr.\"},\"txGasPrice(uint256)\":{\"notice\":\"Sets `tx.gasprice`.\"},\"unixTime()\":{\"notice\":\"Returns the time since unix epoch in milliseconds.\"},\"warmSlot(address,bytes32)\":{\"notice\":\"Utility cheatcode to mark specific storage slot as warm, simulating a prior read.\"},\"warp(uint256)\":{\"notice\":\"Sets `block.timestamp`.\"},\"writeFile(string,string)\":{\"notice\":\"Writes data to file, creating a file if it does not exist, and entirely replacing its contents if it does. `path` is relative to the project root.\"},\"writeFileBinary(string,bytes)\":{\"notice\":\"Writes binary data to a file, creating a file if it does not exist, and entirely replacing its contents if it does. `path` is relative to the project root.\"},\"writeJson(string,string)\":{\"notice\":\"Write a serialized JSON object to a file. If the file exists, it will be overwritten.\"},\"writeJson(string,string,string)\":{\"notice\":\"Write a serialized JSON object to an **existing** JSON file, replacing a value with key = <value_key.> This is useful to replace a specific value of a JSON file, without having to parse the entire thing.\"},\"writeLine(string,string)\":{\"notice\":\"Writes line to file, creating a file if it does not exist. `path` is relative to the project root.\"},\"writeToml(string,string)\":{\"notice\":\"Takes serialized JSON, converts to TOML and write a serialized TOML to a file.\"},\"writeToml(string,string,string)\":{\"notice\":\"Takes serialized JSON, converts to TOML and write a serialized TOML table to an **existing** TOML file, replacing a value with key = <value_key.> This is useful to replace a specific value of a TOML file, without having to parse the entire thing.\"}},\"notice\":\"The `Vm` interface does allow manipulation of the EVM state. These are all intended to be used in tests, but it is not recommended to use these cheats in scripts.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"dependencies/forge-std-1.9.7/src/Vm.sol\":\"Vm\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[\":forge-std-1.9.7/=dependencies/forge-std-1.9.7/src/\",\":forge-std/=dependencies/forge-std-1.9.7/src/\",\":kam/src/=src/\",\":kam/test/=test/\",\":openzeppelin/=src/vendor/openzeppelin/\",\":solady/=src/vendor/solady/\",\":uniswap/=src/vendor/uniswap/\"],\"viaIR\":true},\"sources\":{\"dependencies/forge-std-1.9.7/src/Vm.sol\":{\"keccak256\":\"0xaae88142a348064677cf81169ea0ca706be3e99e2a0f13a01878ff8d52cf6b25\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://da4fb0ed1b31381c7e60ee386acc72796e8a8325c83739ec9a3678e2f841073c\",\"dweb:/ipfs/Qmb4MU6FpAi8Wt5kUQ3wa7ooHnfMVbdd9zuvnqbTehLmxJ\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.30+commit.73712a01"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"struct VmSafe.AccessListItem[]","name":"access","type":"tuple[]","components":[{"internalType":"address","name":"target","type":"address"},{"internalType":"bytes32[]","name":"storageKeys","type":"bytes32[]"}]}],"stateMutability":"nonpayable","type":"function","name":"accessList"},{"inputs":[{"internalType":"address","name":"target","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"accesses","outputs":[{"internalType":"bytes32[]","name":"readSlots","type":"bytes32[]"},{"internalType":"bytes32[]","name":"writeSlots","type":"bytes32[]"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"activeFork","outputs":[{"internalType":"uint256","name":"forkId","type":"uint256"}]},{"inputs":[{"internalType":"uint256","name":"privateKey","type":"uint256"}],"stateMutability":"pure","type":"function","name":"addr","outputs":[{"internalType":"address","name":"keyAddr","type":"address"}]},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"allowCheatcodes"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"maxDelta","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertApproxEqAbs"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"maxDelta","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertApproxEqAbs"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"maxDelta","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertApproxEqAbs"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"maxDelta","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertApproxEqAbs"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"maxDelta","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertApproxEqAbsDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"maxDelta","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertApproxEqAbsDecimal"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"maxDelta","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertApproxEqAbsDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"maxDelta","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertApproxEqAbsDecimal"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"maxPercentDelta","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertApproxEqRel"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"maxPercentDelta","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertApproxEqRel"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"maxPercentDelta","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertApproxEqRel"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"maxPercentDelta","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertApproxEqRel"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"maxPercentDelta","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertApproxEqRelDecimal"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"maxPercentDelta","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertApproxEqRelDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"maxPercentDelta","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertApproxEqRelDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"maxPercentDelta","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertApproxEqRelDecimal"},{"inputs":[{"internalType":"bytes32[]","name":"left","type":"bytes32[]"},{"internalType":"bytes32[]","name":"right","type":"bytes32[]"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"int256[]","name":"left","type":"int256[]"},{"internalType":"int256[]","name":"right","type":"int256[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"address","name":"left","type":"address"},{"internalType":"address","name":"right","type":"address"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"string","name":"left","type":"string"},{"internalType":"string","name":"right","type":"string"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"address[]","name":"left","type":"address[]"},{"internalType":"address[]","name":"right","type":"address[]"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"address[]","name":"left","type":"address[]"},{"internalType":"address[]","name":"right","type":"address[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"bool","name":"left","type":"bool"},{"internalType":"bool","name":"right","type":"bool"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"address","name":"left","type":"address"},{"internalType":"address","name":"right","type":"address"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"uint256[]","name":"left","type":"uint256[]"},{"internalType":"uint256[]","name":"right","type":"uint256[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"bool[]","name":"left","type":"bool[]"},{"internalType":"bool[]","name":"right","type":"bool[]"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"int256[]","name":"left","type":"int256[]"},{"internalType":"int256[]","name":"right","type":"int256[]"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"bytes32","name":"left","type":"bytes32"},{"internalType":"bytes32","name":"right","type":"bytes32"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"uint256[]","name":"left","type":"uint256[]"},{"internalType":"uint256[]","name":"right","type":"uint256[]"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"bytes","name":"left","type":"bytes"},{"internalType":"bytes","name":"right","type":"bytes"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"bytes32","name":"left","type":"bytes32"},{"internalType":"bytes32","name":"right","type":"bytes32"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"string[]","name":"left","type":"string[]"},{"internalType":"string[]","name":"right","type":"string[]"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"bytes32[]","name":"left","type":"bytes32[]"},{"internalType":"bytes32[]","name":"right","type":"bytes32[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"bytes","name":"left","type":"bytes"},{"internalType":"bytes","name":"right","type":"bytes"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"bool[]","name":"left","type":"bool[]"},{"internalType":"bool[]","name":"right","type":"bool[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"bytes[]","name":"left","type":"bytes[]"},{"internalType":"bytes[]","name":"right","type":"bytes[]"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"string[]","name":"left","type":"string[]"},{"internalType":"string[]","name":"right","type":"string[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"string","name":"left","type":"string"},{"internalType":"string","name":"right","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"bytes[]","name":"left","type":"bytes[]"},{"internalType":"bytes[]","name":"right","type":"bytes[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"bool","name":"left","type":"bool"},{"internalType":"bool","name":"right","type":"bool"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertEqDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertEqDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEqDecimal"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEqDecimal"},{"inputs":[{"internalType":"bool","name":"condition","type":"bool"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertFalse"},{"inputs":[{"internalType":"bool","name":"condition","type":"bool"}],"stateMutability":"pure","type":"function","name":"assertFalse"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"}],"stateMutability":"pure","type":"function","name":"assertGe"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertGe"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertGe"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertGe"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertGeDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertGeDecimal"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertGeDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertGeDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"}],"stateMutability":"pure","type":"function","name":"assertGt"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertGt"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertGt"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertGt"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertGtDecimal"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertGtDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertGtDecimal"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertGtDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertLe"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertLe"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"}],"stateMutability":"pure","type":"function","name":"assertLe"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertLe"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertLeDecimal"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertLeDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertLeDecimal"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertLeDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"}],"stateMutability":"pure","type":"function","name":"assertLt"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertLt"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertLt"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertLt"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertLtDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertLtDecimal"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertLtDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertLtDecimal"},{"inputs":[{"internalType":"bytes32[]","name":"left","type":"bytes32[]"},{"internalType":"bytes32[]","name":"right","type":"bytes32[]"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"int256[]","name":"left","type":"int256[]"},{"internalType":"int256[]","name":"right","type":"int256[]"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"bool","name":"left","type":"bool"},{"internalType":"bool","name":"right","type":"bool"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"bytes[]","name":"left","type":"bytes[]"},{"internalType":"bytes[]","name":"right","type":"bytes[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"bool","name":"left","type":"bool"},{"internalType":"bool","name":"right","type":"bool"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"bool[]","name":"left","type":"bool[]"},{"internalType":"bool[]","name":"right","type":"bool[]"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"bytes","name":"left","type":"bytes"},{"internalType":"bytes","name":"right","type":"bytes"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"address[]","name":"left","type":"address[]"},{"internalType":"address[]","name":"right","type":"address[]"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"uint256[]","name":"left","type":"uint256[]"},{"internalType":"uint256[]","name":"right","type":"uint256[]"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"bool[]","name":"left","type":"bool[]"},{"internalType":"bool[]","name":"right","type":"bool[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"string","name":"left","type":"string"},{"internalType":"string","name":"right","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"address[]","name":"left","type":"address[]"},{"internalType":"address[]","name":"right","type":"address[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"string","name":"left","type":"string"},{"internalType":"string","name":"right","type":"string"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"address","name":"left","type":"address"},{"internalType":"address","name":"right","type":"address"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"bytes32","name":"left","type":"bytes32"},{"internalType":"bytes32","name":"right","type":"bytes32"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"bytes","name":"left","type":"bytes"},{"internalType":"bytes","name":"right","type":"bytes"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"uint256[]","name":"left","type":"uint256[]"},{"internalType":"uint256[]","name":"right","type":"uint256[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"address","name":"left","type":"address"},{"internalType":"address","name":"right","type":"address"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"bytes32","name":"left","type":"bytes32"},{"internalType":"bytes32","name":"right","type":"bytes32"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"string[]","name":"left","type":"string[]"},{"internalType":"string[]","name":"right","type":"string[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"bytes32[]","name":"left","type":"bytes32[]"},{"internalType":"bytes32[]","name":"right","type":"bytes32[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"string[]","name":"left","type":"string[]"},{"internalType":"string[]","name":"right","type":"string[]"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"int256[]","name":"left","type":"int256[]"},{"internalType":"int256[]","name":"right","type":"int256[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"bytes[]","name":"left","type":"bytes[]"},{"internalType":"bytes[]","name":"right","type":"bytes[]"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertNotEqDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEqDecimal"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertNotEqDecimal"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEqDecimal"},{"inputs":[{"internalType":"bool","name":"condition","type":"bool"}],"stateMutability":"pure","type":"function","name":"assertTrue"},{"inputs":[{"internalType":"bool","name":"condition","type":"bool"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertTrue"},{"inputs":[{"internalType":"bool","name":"condition","type":"bool"}],"stateMutability":"pure","type":"function","name":"assume"},{"inputs":[],"stateMutability":"pure","type":"function","name":"assumeNoRevert"},{"inputs":[{"internalType":"struct VmSafe.PotentialRevert[]","name":"potentialReverts","type":"tuple[]","components":[{"internalType":"address","name":"reverter","type":"address"},{"internalType":"bool","name":"partialMatch","type":"bool"},{"internalType":"bytes","name":"revertData","type":"bytes"}]}],"stateMutability":"pure","type":"function","name":"assumeNoRevert"},{"inputs":[{"internalType":"struct VmSafe.PotentialRevert","name":"potentialRevert","type":"tuple","components":[{"internalType":"address","name":"reverter","type":"address"},{"internalType":"bool","name":"partialMatch","type":"bool"},{"internalType":"bytes","name":"revertData","type":"bytes"}]}],"stateMutability":"pure","type":"function","name":"assumeNoRevert"},{"inputs":[{"internalType":"bytes","name":"blob","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"attachBlob"},{"inputs":[{"internalType":"struct VmSafe.SignedDelegation","name":"signedDelegation","type":"tuple","components":[{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"},{"internalType":"uint64","name":"nonce","type":"uint64"},{"internalType":"address","name":"implementation","type":"address"}]}],"stateMutability":"nonpayable","type":"function","name":"attachDelegation"},{"inputs":[{"internalType":"uint256","name":"newBlobBaseFee","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"blobBaseFee"},{"inputs":[{"internalType":"bytes32[]","name":"hashes","type":"bytes32[]"}],"stateMutability":"nonpayable","type":"function","name":"blobhashes"},{"inputs":[{"internalType":"string","name":"char","type":"string"}],"stateMutability":"pure","type":"function","name":"breakpoint"},{"inputs":[{"internalType":"string","name":"char","type":"string"},{"internalType":"bool","name":"value","type":"bool"}],"stateMutability":"pure","type":"function","name":"breakpoint"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"broadcast"},{"inputs":[{"internalType":"address","name":"signer","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"broadcast"},{"inputs":[{"internalType":"uint256","name":"privateKey","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"broadcast"},{"inputs":[{"internalType":"bytes","name":"data","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"broadcastRawTransaction"},{"inputs":[{"internalType":"uint256","name":"newChainId","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"chainId"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"clearMockedCalls"},{"inputs":[{"internalType":"address","name":"source","type":"address"},{"internalType":"address","name":"target","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"cloneAccount"},{"inputs":[{"internalType":"string","name":"path","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"closeFile"},{"inputs":[{"internalType":"address","name":"newCoinbase","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"coinbase"},{"inputs":[{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"bytes32","name":"initCodeHash","type":"bytes32"}],"stateMutability":"pure","type":"function","name":"computeCreate2Address","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"bytes32","name":"initCodeHash","type":"bytes32"},{"internalType":"address","name":"deployer","type":"address"}],"stateMutability":"pure","type":"function","name":"computeCreate2Address","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[{"internalType":"address","name":"deployer","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"}],"stateMutability":"pure","type":"function","name":"computeCreateAddress","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[{"internalType":"string","name":"subject","type":"string"},{"internalType":"string","name":"search","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"contains","outputs":[{"internalType":"bool","name":"result","type":"bool"}]},{"inputs":[{"internalType":"address","name":"target","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"cool"},{"inputs":[{"internalType":"address","name":"target","type":"address"},{"internalType":"bytes32","name":"slot","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"coolSlot"},{"inputs":[{"internalType":"string","name":"from","type":"string"},{"internalType":"string","name":"to","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"copyFile","outputs":[{"internalType":"uint64","name":"copied","type":"uint64"}]},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"copyStorage"},{"inputs":[{"internalType":"string","name":"path","type":"string"},{"internalType":"bool","name":"recursive","type":"bool"}],"stateMutability":"nonpayable","type":"function","name":"createDir"},{"inputs":[{"internalType":"string","name":"urlOrAlias","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"createFork","outputs":[{"internalType":"uint256","name":"forkId","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"urlOrAlias","type":"string"},{"internalType":"uint256","name":"blockNumber","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"createFork","outputs":[{"internalType":"uint256","name":"forkId","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"urlOrAlias","type":"string"},{"internalType":"bytes32","name":"txHash","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"createFork","outputs":[{"internalType":"uint256","name":"forkId","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"urlOrAlias","type":"string"},{"internalType":"uint256","name":"blockNumber","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"createSelectFork","outputs":[{"internalType":"uint256","name":"forkId","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"urlOrAlias","type":"string"},{"internalType":"bytes32","name":"txHash","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"createSelectFork","outputs":[{"internalType":"uint256","name":"forkId","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"urlOrAlias","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"createSelectFork","outputs":[{"internalType":"uint256","name":"forkId","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"walletLabel","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"createWallet","outputs":[{"internalType":"struct VmSafe.Wallet","name":"wallet","type":"tuple","components":[{"internalType":"address","name":"addr","type":"address"},{"internalType":"uint256","name":"publicKeyX","type":"uint256"},{"internalType":"uint256","name":"publicKeyY","type":"uint256"},{"internalType":"uint256","name":"privateKey","type":"uint256"}]}]},{"inputs":[{"internalType":"uint256","name":"privateKey","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"createWallet","outputs":[{"internalType":"struct VmSafe.Wallet","name":"wallet","type":"tuple","components":[{"internalType":"address","name":"addr","type":"address"},{"internalType":"uint256","name":"publicKeyX","type":"uint256"},{"internalType":"uint256","name":"publicKeyY","type":"uint256"},{"internalType":"uint256","name":"privateKey","type":"uint256"}]}]},{"inputs":[{"internalType":"uint256","name":"privateKey","type":"uint256"},{"internalType":"string","name":"walletLabel","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"createWallet","outputs":[{"internalType":"struct VmSafe.Wallet","name":"wallet","type":"tuple","components":[{"internalType":"address","name":"addr","type":"address"},{"internalType":"uint256","name":"publicKeyX","type":"uint256"},{"internalType":"uint256","name":"publicKeyY","type":"uint256"},{"internalType":"uint256","name":"privateKey","type":"uint256"}]}]},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"newBalance","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"deal"},{"inputs":[{"internalType":"uint256","name":"snapshotId","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"deleteSnapshot","outputs":[{"internalType":"bool","name":"success","type":"bool"}]},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"deleteSnapshots"},{"inputs":[{"internalType":"uint256","name":"snapshotId","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"deleteStateSnapshot","outputs":[{"internalType":"bool","name":"success","type":"bool"}]},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"deleteStateSnapshots"},{"inputs":[{"internalType":"string","name":"artifactPath","type":"string"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes32","name":"salt","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"deployCode","outputs":[{"internalType":"address","name":"deployedAddress","type":"address"}]},{"inputs":[{"internalType":"string","name":"artifactPath","type":"string"},{"internalType":"bytes","name":"constructorArgs","type":"bytes"},{"internalType":"bytes32","name":"salt","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"deployCode","outputs":[{"internalType":"address","name":"deployedAddress","type":"address"}]},{"inputs":[{"internalType":"string","name":"artifactPath","type":"string"},{"internalType":"uint256","name":"value","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"deployCode","outputs":[{"internalType":"address","name":"deployedAddress","type":"address"}]},{"inputs":[{"internalType":"string","name":"artifactPath","type":"string"},{"internalType":"bytes32","name":"salt","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"deployCode","outputs":[{"internalType":"address","name":"deployedAddress","type":"address"}]},{"inputs":[{"internalType":"string","name":"artifactPath","type":"string"},{"internalType":"bytes","name":"constructorArgs","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"deployCode","outputs":[{"internalType":"address","name":"deployedAddress","type":"address"}]},{"inputs":[{"internalType":"string","name":"artifactPath","type":"string"},{"internalType":"bytes","name":"constructorArgs","type":"bytes"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes32","name":"salt","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"deployCode","outputs":[{"internalType":"address","name":"deployedAddress","type":"address"}]},{"inputs":[{"internalType":"string","name":"artifactPath","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"deployCode","outputs":[{"internalType":"address","name":"deployedAddress","type":"address"}]},{"inputs":[{"internalType":"string","name":"artifactPath","type":"string"},{"internalType":"bytes","name":"constructorArgs","type":"bytes"},{"internalType":"uint256","name":"value","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"deployCode","outputs":[{"internalType":"address","name":"deployedAddress","type":"address"}]},{"inputs":[{"internalType":"string","name":"mnemonic","type":"string"},{"internalType":"string","name":"derivationPath","type":"string"},{"internalType":"uint32","name":"index","type":"uint32"},{"internalType":"string","name":"language","type":"string"}],"stateMutability":"pure","type":"function","name":"deriveKey","outputs":[{"internalType":"uint256","name":"privateKey","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"mnemonic","type":"string"},{"internalType":"uint32","name":"index","type":"uint32"},{"internalType":"string","name":"language","type":"string"}],"stateMutability":"pure","type":"function","name":"deriveKey","outputs":[{"internalType":"uint256","name":"privateKey","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"mnemonic","type":"string"},{"internalType":"uint32","name":"index","type":"uint32"}],"stateMutability":"pure","type":"function","name":"deriveKey","outputs":[{"internalType":"uint256","name":"privateKey","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"mnemonic","type":"string"},{"internalType":"string","name":"derivationPath","type":"string"},{"internalType":"uint32","name":"index","type":"uint32"}],"stateMutability":"pure","type":"function","name":"deriveKey","outputs":[{"internalType":"uint256","name":"privateKey","type":"uint256"}]},{"inputs":[{"internalType":"uint256","name":"newDifficulty","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"difficulty"},{"inputs":[{"internalType":"string","name":"pathToStateJson","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"dumpState"},{"inputs":[{"internalType":"string","name":"name","type":"string"}],"stateMutability":"pure","type":"function","name":"ensNamehash","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"}],"stateMutability":"view","type":"function","name":"envAddress","outputs":[{"internalType":"address","name":"value","type":"address"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"}],"stateMutability":"view","type":"function","name":"envAddress","outputs":[{"internalType":"address[]","name":"value","type":"address[]"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"}],"stateMutability":"view","type":"function","name":"envBool","outputs":[{"internalType":"bool","name":"value","type":"bool"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"}],"stateMutability":"view","type":"function","name":"envBool","outputs":[{"internalType":"bool[]","name":"value","type":"bool[]"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"}],"stateMutability":"view","type":"function","name":"envBytes","outputs":[{"internalType":"bytes","name":"value","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"}],"stateMutability":"view","type":"function","name":"envBytes","outputs":[{"internalType":"bytes[]","name":"value","type":"bytes[]"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"}],"stateMutability":"view","type":"function","name":"envBytes32","outputs":[{"internalType":"bytes32[]","name":"value","type":"bytes32[]"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"}],"stateMutability":"view","type":"function","name":"envBytes32","outputs":[{"internalType":"bytes32","name":"value","type":"bytes32"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"}],"stateMutability":"view","type":"function","name":"envExists","outputs":[{"internalType":"bool","name":"result","type":"bool"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"}],"stateMutability":"view","type":"function","name":"envInt","outputs":[{"internalType":"int256[]","name":"value","type":"int256[]"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"}],"stateMutability":"view","type":"function","name":"envInt","outputs":[{"internalType":"int256","name":"value","type":"int256"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"},{"internalType":"bytes32[]","name":"defaultValue","type":"bytes32[]"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"bytes32[]","name":"value","type":"bytes32[]"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"},{"internalType":"int256[]","name":"defaultValue","type":"int256[]"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"int256[]","name":"value","type":"int256[]"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"bool","name":"defaultValue","type":"bool"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"bool","name":"value","type":"bool"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"address","name":"defaultValue","type":"address"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"address","name":"value","type":"address"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"uint256","name":"defaultValue","type":"uint256"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"uint256","name":"value","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"},{"internalType":"bytes[]","name":"defaultValue","type":"bytes[]"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"bytes[]","name":"value","type":"bytes[]"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"},{"internalType":"uint256[]","name":"defaultValue","type":"uint256[]"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"uint256[]","name":"value","type":"uint256[]"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"},{"internalType":"string[]","name":"defaultValue","type":"string[]"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"string[]","name":"value","type":"string[]"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"bytes","name":"defaultValue","type":"bytes"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"bytes","name":"value","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"bytes32","name":"defaultValue","type":"bytes32"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"bytes32","name":"value","type":"bytes32"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"int256","name":"defaultValue","type":"int256"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"int256","name":"value","type":"int256"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"},{"internalType":"address[]","name":"defaultValue","type":"address[]"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"address[]","name":"value","type":"address[]"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"defaultValue","type":"string"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"string","name":"value","type":"string"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"},{"internalType":"bool[]","name":"defaultValue","type":"bool[]"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"bool[]","name":"value","type":"bool[]"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"}],"stateMutability":"view","type":"function","name":"envString","outputs":[{"internalType":"string[]","name":"value","type":"string[]"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"}],"stateMutability":"view","type":"function","name":"envString","outputs":[{"internalType":"string","name":"value","type":"string"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"}],"stateMutability":"view","type":"function","name":"envUint","outputs":[{"internalType":"uint256","name":"value","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"}],"stateMutability":"view","type":"function","name":"envUint","outputs":[{"internalType":"uint256[]","name":"value","type":"uint256[]"}]},{"inputs":[{"internalType":"address","name":"target","type":"address"},{"internalType":"bytes","name":"newRuntimeBytecode","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"etch"},{"inputs":[{"internalType":"uint256","name":"fromBlock","type":"uint256"},{"internalType":"uint256","name":"toBlock","type":"uint256"},{"internalType":"address","name":"target","type":"address"},{"internalType":"bytes32[]","name":"topics","type":"bytes32[]"}],"stateMutability":"nonpayable","type":"function","name":"eth_getLogs","outputs":[{"internalType":"struct VmSafe.EthGetLogs[]","name":"logs","type":"tuple[]","components":[{"internalType":"address","name":"emitter","type":"address"},{"internalType":"bytes32[]","name":"topics","type":"bytes32[]"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"bytes32","name":"blockHash","type":"bytes32"},{"internalType":"uint64","name":"blockNumber","type":"uint64"},{"internalType":"bytes32","name":"transactionHash","type":"bytes32"},{"internalType":"uint64","name":"transactionIndex","type":"uint64"},{"internalType":"uint256","name":"logIndex","type":"uint256"},{"internalType":"bool","name":"removed","type":"bool"}]}]},{"inputs":[{"internalType":"string","name":"path","type":"string"}],"stateMutability":"view","type":"function","name":"exists","outputs":[{"internalType":"bool","name":"result","type":"bool"}]},{"inputs":[{"internalType":"address","name":"callee","type":"address"},{"internalType":"uint256","name":"msgValue","type":"uint256"},{"internalType":"uint64","name":"gas","type":"uint64"},{"internalType":"bytes","name":"data","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"expectCall"},{"inputs":[{"internalType":"address","name":"callee","type":"address"},{"internalType":"uint256","name":"msgValue","type":"uint256"},{"internalType":"uint64","name":"gas","type":"uint64"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"uint64","name":"count","type":"uint64"}],"stateMutability":"nonpayable","type":"function","name":"expectCall"},{"inputs":[{"internalType":"address","name":"callee","type":"address"},{"internalType":"uint256","name":"msgValue","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"uint64","name":"count","type":"uint64"}],"stateMutability":"nonpayable","type":"function","name":"expectCall"},{"inputs":[{"internalType":"address","name":"callee","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"expectCall"},{"inputs":[{"internalType":"address","name":"callee","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"uint64","name":"count","type":"uint64"}],"stateMutability":"nonpayable","type":"function","name":"expectCall"},{"inputs":[{"internalType":"address","name":"callee","type":"address"},{"internalType":"uint256","name":"msgValue","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"expectCall"},{"inputs":[{"internalType":"address","name":"callee","type":"address"},{"internalType":"uint256","name":"msgValue","type":"uint256"},{"internalType":"uint64","name":"minGas","type":"uint64"},{"internalType":"bytes","name":"data","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"expectCallMinGas"},{"inputs":[{"internalType":"address","name":"callee","type":"address"},{"internalType":"uint256","name":"msgValue","type":"uint256"},{"internalType":"uint64","name":"minGas","type":"uint64"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"uint64","name":"count","type":"uint64"}],"stateMutability":"nonpayable","type":"function","name":"expectCallMinGas"},{"inputs":[{"internalType":"bytes","name":"bytecode","type":"bytes"},{"internalType":"address","name":"deployer","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"expectCreate"},{"inputs":[{"internalType":"bytes","name":"bytecode","type":"bytes"},{"internalType":"address","name":"deployer","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"expectCreate2"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"expectEmit"},{"inputs":[{"internalType":"bool","name":"checkTopic1","type":"bool"},{"internalType":"bool","name":"checkTopic2","type":"bool"},{"internalType":"bool","name":"checkTopic3","type":"bool"},{"internalType":"bool","name":"checkData","type":"bool"}],"stateMutability":"nonpayable","type":"function","name":"expectEmit"},{"inputs":[{"internalType":"uint64","name":"count","type":"uint64"}],"stateMutability":"nonpayable","type":"function","name":"expectEmit"},{"inputs":[{"internalType":"bool","name":"checkTopic1","type":"bool"},{"internalType":"bool","name":"checkTopic2","type":"bool"},{"internalType":"bool","name":"checkTopic3","type":"bool"},{"internalType":"bool","name":"checkData","type":"bool"},{"internalType":"uint64","name":"count","type":"uint64"}],"stateMutability":"nonpayable","type":"function","name":"expectEmit"},{"inputs":[{"internalType":"bool","name":"checkTopic1","type":"bool"},{"internalType":"bool","name":"checkTopic2","type":"bool"},{"internalType":"bool","name":"checkTopic3","type":"bool"},{"internalType":"bool","name":"checkData","type":"bool"},{"internalType":"address","name":"emitter","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"expectEmit"},{"inputs":[{"internalType":"address","name":"emitter","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"expectEmit"},{"inputs":[{"internalType":"address","name":"emitter","type":"address"},{"internalType":"uint64","name":"count","type":"uint64"}],"stateMutability":"nonpayable","type":"function","name":"expectEmit"},{"inputs":[{"internalType":"bool","name":"checkTopic1","type":"bool"},{"internalType":"bool","name":"checkTopic2","type":"bool"},{"internalType":"bool","name":"checkTopic3","type":"bool"},{"internalType":"bool","name":"checkData","type":"bool"},{"internalType":"address","name":"emitter","type":"address"},{"internalType":"uint64","name":"count","type":"uint64"}],"stateMutability":"nonpayable","type":"function","name":"expectEmit"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"expectEmitAnonymous"},{"inputs":[{"internalType":"address","name":"emitter","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"expectEmitAnonymous"},{"inputs":[{"internalType":"bool","name":"checkTopic0","type":"bool"},{"internalType":"bool","name":"checkTopic1","type":"bool"},{"internalType":"bool","name":"checkTopic2","type":"bool"},{"internalType":"bool","name":"checkTopic3","type":"bool"},{"internalType":"bool","name":"checkData","type":"bool"},{"internalType":"address","name":"emitter","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"expectEmitAnonymous"},{"inputs":[{"internalType":"bool","name":"checkTopic0","type":"bool"},{"internalType":"bool","name":"checkTopic1","type":"bool"},{"internalType":"bool","name":"checkTopic2","type":"bool"},{"internalType":"bool","name":"checkTopic3","type":"bool"},{"internalType":"bool","name":"checkData","type":"bool"}],"stateMutability":"nonpayable","type":"function","name":"expectEmitAnonymous"},{"inputs":[{"internalType":"bytes4","name":"revertData","type":"bytes4"}],"stateMutability":"nonpayable","type":"function","name":"expectPartialRevert"},{"inputs":[{"internalType":"bytes4","name":"revertData","type":"bytes4"},{"internalType":"address","name":"reverter","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"expectPartialRevert"},{"inputs":[{"internalType":"address","name":"reverter","type":"address"},{"internalType":"uint64","name":"count","type":"uint64"}],"stateMutability":"nonpayable","type":"function","name":"expectRevert"},{"inputs":[{"internalType":"bytes4","name":"revertData","type":"bytes4"},{"internalType":"address","name":"reverter","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"expectRevert"},{"inputs":[{"internalType":"bytes","name":"revertData","type":"bytes"},{"internalType":"uint64","name":"count","type":"uint64"}],"stateMutability":"nonpayable","type":"function","name":"expectRevert"},{"inputs":[{"internalType":"uint64","name":"count","type":"uint64"}],"stateMutability":"nonpayable","type":"function","name":"expectRevert"},{"inputs":[{"internalType":"bytes","name":"revertData","type":"bytes"},{"internalType":"address","name":"reverter","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"expectRevert"},{"inputs":[{"internalType":"bytes4","name":"revertData","type":"bytes4"},{"internalType":"address","name":"reverter","type":"address"},{"internalType":"uint64","name":"count","type":"uint64"}],"stateMutability":"nonpayable","type":"function","name":"expectRevert"},{"inputs":[{"internalType":"bytes4","name":"revertData","type":"bytes4"}],"stateMutability":"nonpayable","type":"function","name":"expectRevert"},{"inputs":[{"internalType":"bytes","name":"revertData","type":"bytes"},{"internalType":"address","name":"reverter","type":"address"},{"internalType":"uint64","name":"count","type":"uint64"}],"stateMutability":"nonpayable","type":"function","name":"expectRevert"},{"inputs":[{"internalType":"address","name":"reverter","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"expectRevert"},{"inputs":[{"internalType":"bytes4","name":"revertData","type":"bytes4"},{"internalType":"uint64","name":"count","type":"uint64"}],"stateMutability":"nonpayable","type":"function","name":"expectRevert"},{"inputs":[{"internalType":"bytes","name":"revertData","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"expectRevert"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"expectRevert"},{"inputs":[{"internalType":"uint64","name":"min","type":"uint64"},{"internalType":"uint64","name":"max","type":"uint64"}],"stateMutability":"nonpayable","type":"function","name":"expectSafeMemory"},{"inputs":[{"internalType":"uint64","name":"min","type":"uint64"},{"internalType":"uint64","name":"max","type":"uint64"}],"stateMutability":"nonpayable","type":"function","name":"expectSafeMemoryCall"},{"inputs":[{"internalType":"uint256","name":"newBasefee","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"fee"},{"inputs":[{"internalType":"string[]","name":"commandInput","type":"string[]"}],"stateMutability":"nonpayable","type":"function","name":"ffi","outputs":[{"internalType":"bytes","name":"result","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"version","type":"string"}],"stateMutability":"view","type":"function","name":"foundryVersionAtLeast","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"string","name":"version","type":"string"}],"stateMutability":"view","type":"function","name":"foundryVersionCmp","outputs":[{"internalType":"int256","name":"","type":"int256"}]},{"inputs":[{"internalType":"string","name":"path","type":"string"}],"stateMutability":"view","type":"function","name":"fsMetadata","outputs":[{"internalType":"struct VmSafe.FsMetadata","name":"metadata","type":"tuple","components":[{"internalType":"bool","name":"isDir","type":"bool"},{"internalType":"bool","name":"isSymlink","type":"bool"},{"internalType":"uint256","name":"length","type":"uint256"},{"internalType":"bool","name":"readOnly","type":"bool"},{"internalType":"uint256","name":"modified","type":"uint256"},{"internalType":"uint256","name":"accessed","type":"uint256"},{"internalType":"uint256","name":"created","type":"uint256"}]}]},{"inputs":[{"internalType":"bytes","name":"code","type":"bytes"}],"stateMutability":"view","type":"function","name":"getArtifactPathByCode","outputs":[{"internalType":"string","name":"path","type":"string"}]},{"inputs":[{"internalType":"bytes","name":"deployedCode","type":"bytes"}],"stateMutability":"view","type":"function","name":"getArtifactPathByDeployedCode","outputs":[{"internalType":"string","name":"path","type":"string"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"getBlobBaseFee","outputs":[{"internalType":"uint256","name":"blobBaseFee","type":"uint256"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"getBlobhashes","outputs":[{"internalType":"bytes32[]","name":"hashes","type":"bytes32[]"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"getBlockNumber","outputs":[{"internalType":"uint256","name":"height","type":"uint256"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"getBlockTimestamp","outputs":[{"internalType":"uint256","name":"timestamp","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"contractName","type":"string"},{"internalType":"uint64","name":"chainId","type":"uint64"},{"internalType":"enum VmSafe.BroadcastTxType","name":"txType","type":"uint8"}],"stateMutability":"view","type":"function","name":"getBroadcast","outputs":[{"internalType":"struct VmSafe.BroadcastTxSummary","name":"","type":"tuple","components":[{"internalType":"bytes32","name":"txHash","type":"bytes32"},{"internalType":"enum VmSafe.BroadcastTxType","name":"txType","type":"uint8"},{"internalType":"address","name":"contractAddress","type":"address"},{"internalType":"uint64","name":"blockNumber","type":"uint64"},{"internalType":"bool","name":"success","type":"bool"}]}]},{"inputs":[{"internalType":"string","name":"contractName","type":"string"},{"internalType":"uint64","name":"chainId","type":"uint64"}],"stateMutability":"view","type":"function","name":"getBroadcasts","outputs":[{"internalType":"struct VmSafe.BroadcastTxSummary[]","name":"","type":"tuple[]","components":[{"internalType":"bytes32","name":"txHash","type":"bytes32"},{"internalType":"enum VmSafe.BroadcastTxType","name":"txType","type":"uint8"},{"internalType":"address","name":"contractAddress","type":"address"},{"internalType":"uint64","name":"blockNumber","type":"uint64"},{"internalType":"bool","name":"success","type":"bool"}]}]},{"inputs":[{"internalType":"string","name":"contractName","type":"string"},{"internalType":"uint64","name":"chainId","type":"uint64"},{"internalType":"enum VmSafe.BroadcastTxType","name":"txType","type":"uint8"}],"stateMutability":"view","type":"function","name":"getBroadcasts","outputs":[{"internalType":"struct VmSafe.BroadcastTxSummary[]","name":"","type":"tuple[]","components":[{"internalType":"bytes32","name":"txHash","type":"bytes32"},{"internalType":"enum VmSafe.BroadcastTxType","name":"txType","type":"uint8"},{"internalType":"address","name":"contractAddress","type":"address"},{"internalType":"uint64","name":"blockNumber","type":"uint64"},{"internalType":"bool","name":"success","type":"bool"}]}]},{"inputs":[{"internalType":"string","name":"chainAlias","type":"string"}],"stateMutability":"view","type":"function","name":"getChain","outputs":[{"internalType":"struct VmSafe.Chain","name":"chain","type":"tuple","components":[{"internalType":"string","name":"name","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"string","name":"chainAlias","type":"string"},{"internalType":"string","name":"rpcUrl","type":"string"}]}]},{"inputs":[{"internalType":"uint256","name":"chainId","type":"uint256"}],"stateMutability":"view","type":"function","name":"getChain","outputs":[{"internalType":"struct VmSafe.Chain","name":"chain","type":"tuple","components":[{"internalType":"string","name":"name","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"string","name":"chainAlias","type":"string"},{"internalType":"string","name":"rpcUrl","type":"string"}]}]},{"inputs":[{"internalType":"string","name":"artifactPath","type":"string"}],"stateMutability":"view","type":"function","name":"getCode","outputs":[{"internalType":"bytes","name":"creationBytecode","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"artifactPath","type":"string"}],"stateMutability":"view","type":"function","name":"getDeployedCode","outputs":[{"internalType":"bytes","name":"runtimeBytecode","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"contractName","type":"string"},{"internalType":"uint64","name":"chainId","type":"uint64"}],"stateMutability":"view","type":"function","name":"getDeployment","outputs":[{"internalType":"address","name":"deployedAddress","type":"address"}]},{"inputs":[{"internalType":"string","name":"contractName","type":"string"}],"stateMutability":"view","type":"function","name":"getDeployment","outputs":[{"internalType":"address","name":"deployedAddress","type":"address"}]},{"inputs":[{"internalType":"string","name":"contractName","type":"string"},{"internalType":"uint64","name":"chainId","type":"uint64"}],"stateMutability":"view","type":"function","name":"getDeployments","outputs":[{"internalType":"address[]","name":"deployedAddresses","type":"address[]"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"getFoundryVersion","outputs":[{"internalType":"string","name":"version","type":"string"}]},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"stateMutability":"view","type":"function","name":"getLabel","outputs":[{"internalType":"string","name":"currentLabel","type":"string"}]},{"inputs":[{"internalType":"address","name":"target","type":"address"},{"internalType":"bytes32","name":"elementSlot","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"getMappingKeyAndParentOf","outputs":[{"internalType":"bool","name":"found","type":"bool"},{"internalType":"bytes32","name":"key","type":"bytes32"},{"internalType":"bytes32","name":"parent","type":"bytes32"}]},{"inputs":[{"internalType":"address","name":"target","type":"address"},{"internalType":"bytes32","name":"mappingSlot","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"getMappingLength","outputs":[{"internalType":"uint256","name":"length","type":"uint256"}]},{"inputs":[{"internalType":"address","name":"target","type":"address"},{"internalType":"bytes32","name":"mappingSlot","type":"bytes32"},{"internalType":"uint256","name":"idx","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"getMappingSlotAt","outputs":[{"internalType":"bytes32","name":"value","type":"bytes32"}]},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"stateMutability":"view","type":"function","name":"getNonce","outputs":[{"internalType":"uint64","name":"nonce","type":"uint64"}]},{"inputs":[{"internalType":"struct VmSafe.Wallet","name":"wallet","type":"tuple","components":[{"internalType":"address","name":"addr","type":"address"},{"internalType":"uint256","name":"publicKeyX","type":"uint256"},{"internalType":"uint256","name":"publicKeyY","type":"uint256"},{"internalType":"uint256","name":"privateKey","type":"uint256"}]}],"stateMutability":"nonpayable","type":"function","name":"getNonce","outputs":[{"internalType":"uint64","name":"nonce","type":"uint64"}]},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"getRecordedLogs","outputs":[{"internalType":"struct VmSafe.Log[]","name":"logs","type":"tuple[]","components":[{"internalType":"bytes32[]","name":"topics","type":"bytes32[]"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"address","name":"emitter","type":"address"}]}]},{"inputs":[],"stateMutability":"view","type":"function","name":"getStateDiff","outputs":[{"internalType":"string","name":"diff","type":"string"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"getStateDiffJson","outputs":[{"internalType":"string","name":"diff","type":"string"}]},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"getWallets","outputs":[{"internalType":"address[]","name":"wallets","type":"address[]"}]},{"inputs":[{"internalType":"string","name":"input","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"indexOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"interceptInitcode"},{"inputs":[{"internalType":"enum VmSafe.ForgeContext","name":"context","type":"uint8"}],"stateMutability":"view","type":"function","name":"isContext","outputs":[{"internalType":"bool","name":"result","type":"bool"}]},{"inputs":[{"internalType":"string","name":"path","type":"string"}],"stateMutability":"view","type":"function","name":"isDir","outputs":[{"internalType":"bool","name":"result","type":"bool"}]},{"inputs":[{"internalType":"string","name":"path","type":"string"}],"stateMutability":"view","type":"function","name":"isFile","outputs":[{"internalType":"bool","name":"result","type":"bool"}]},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"stateMutability":"view","type":"function","name":"isPersistent","outputs":[{"internalType":"bool","name":"persistent","type":"bool"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"view","type":"function","name":"keyExists","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"view","type":"function","name":"keyExistsJson","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"view","type":"function","name":"keyExistsToml","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"string","name":"newLabel","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"label"},{"inputs":[],"stateMutability":"view","type":"function","name":"lastCallGas","outputs":[{"internalType":"struct VmSafe.Gas","name":"gas","type":"tuple","components":[{"internalType":"uint64","name":"gasLimit","type":"uint64"},{"internalType":"uint64","name":"gasTotalUsed","type":"uint64"},{"internalType":"uint64","name":"gasMemoryUsed","type":"uint64"},{"internalType":"int64","name":"gasRefunded","type":"int64"},{"internalType":"uint64","name":"gasRemaining","type":"uint64"}]}]},{"inputs":[{"internalType":"address","name":"target","type":"address"},{"internalType":"bytes32","name":"slot","type":"bytes32"}],"stateMutability":"view","type":"function","name":"load","outputs":[{"internalType":"bytes32","name":"data","type":"bytes32"}]},{"inputs":[{"internalType":"string","name":"pathToAllocsJson","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"loadAllocs"},{"inputs":[{"internalType":"address[]","name":"accounts","type":"address[]"}],"stateMutability":"nonpayable","type":"function","name":"makePersistent"},{"inputs":[{"internalType":"address","name":"account0","type":"address"},{"internalType":"address","name":"account1","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"makePersistent"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"makePersistent"},{"inputs":[{"internalType":"address","name":"account0","type":"address"},{"internalType":"address","name":"account1","type":"address"},{"internalType":"address","name":"account2","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"makePersistent"},{"inputs":[{"internalType":"address","name":"callee","type":"address"},{"internalType":"bytes4","name":"data","type":"bytes4"},{"internalType":"bytes","name":"returnData","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"mockCall"},{"inputs":[{"internalType":"address","name":"callee","type":"address"},{"internalType":"uint256","name":"msgValue","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"bytes","name":"returnData","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"mockCall"},{"inputs":[{"internalType":"address","name":"callee","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"bytes","name":"returnData","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"mockCall"},{"inputs":[{"internalType":"address","name":"callee","type":"address"},{"internalType":"uint256","name":"msgValue","type":"uint256"},{"internalType":"bytes4","name":"data","type":"bytes4"},{"internalType":"bytes","name":"returnData","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"mockCall"},{"inputs":[{"internalType":"address","name":"callee","type":"address"},{"internalType":"bytes4","name":"data","type":"bytes4"},{"internalType":"bytes","name":"revertData","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"mockCallRevert"},{"inputs":[{"internalType":"address","name":"callee","type":"address"},{"internalType":"uint256","name":"msgValue","type":"uint256"},{"internalType":"bytes4","name":"data","type":"bytes4"},{"internalType":"bytes","name":"revertData","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"mockCallRevert"},{"inputs":[{"internalType":"address","name":"callee","type":"address"},{"internalType":"uint256","name":"msgValue","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"bytes","name":"revertData","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"mockCallRevert"},{"inputs":[{"internalType":"address","name":"callee","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"bytes","name":"revertData","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"mockCallRevert"},{"inputs":[{"internalType":"address","name":"callee","type":"address"},{"internalType":"uint256","name":"msgValue","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"bytes[]","name":"returnData","type":"bytes[]"}],"stateMutability":"nonpayable","type":"function","name":"mockCalls"},{"inputs":[{"internalType":"address","name":"callee","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"bytes[]","name":"returnData","type":"bytes[]"}],"stateMutability":"nonpayable","type":"function","name":"mockCalls"},{"inputs":[{"internalType":"address","name":"callee","type":"address"},{"internalType":"address","name":"target","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"mockFunction"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"noAccessList"},{"inputs":[{"internalType":"string","name":"stringifiedValue","type":"string"}],"stateMutability":"pure","type":"function","name":"parseAddress","outputs":[{"internalType":"address","name":"parsedValue","type":"address"}]},{"inputs":[{"internalType":"string","name":"stringifiedValue","type":"string"}],"stateMutability":"pure","type":"function","name":"parseBool","outputs":[{"internalType":"bool","name":"parsedValue","type":"bool"}]},{"inputs":[{"internalType":"string","name":"stringifiedValue","type":"string"}],"stateMutability":"pure","type":"function","name":"parseBytes","outputs":[{"internalType":"bytes","name":"parsedValue","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"stringifiedValue","type":"string"}],"stateMutability":"pure","type":"function","name":"parseBytes32","outputs":[{"internalType":"bytes32","name":"parsedValue","type":"bytes32"}]},{"inputs":[{"internalType":"string","name":"stringifiedValue","type":"string"}],"stateMutability":"pure","type":"function","name":"parseInt","outputs":[{"internalType":"int256","name":"parsedValue","type":"int256"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJson","outputs":[{"internalType":"bytes","name":"abiEncodedData","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJson","outputs":[{"internalType":"bytes","name":"abiEncodedData","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonAddress","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonAddressArray","outputs":[{"internalType":"address[]","name":"","type":"address[]"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonBool","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonBoolArray","outputs":[{"internalType":"bool[]","name":"","type":"bool[]"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonBytes","outputs":[{"internalType":"bytes","name":"","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonBytes32","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonBytes32Array","outputs":[{"internalType":"bytes32[]","name":"","type":"bytes32[]"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonBytesArray","outputs":[{"internalType":"bytes[]","name":"","type":"bytes[]"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonInt","outputs":[{"internalType":"int256","name":"","type":"int256"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonIntArray","outputs":[{"internalType":"int256[]","name":"","type":"int256[]"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonKeys","outputs":[{"internalType":"string[]","name":"keys","type":"string[]"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonString","outputs":[{"internalType":"string","name":"","type":"string"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonStringArray","outputs":[{"internalType":"string[]","name":"","type":"string[]"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"typeDescription","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonType","outputs":[{"internalType":"bytes","name":"","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"},{"internalType":"string","name":"typeDescription","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonType","outputs":[{"internalType":"bytes","name":"","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"},{"internalType":"string","name":"typeDescription","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonTypeArray","outputs":[{"internalType":"bytes","name":"","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonUint","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonUintArray","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseToml","outputs":[{"internalType":"bytes","name":"abiEncodedData","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"}],"stateMutability":"pure","type":"function","name":"parseToml","outputs":[{"internalType":"bytes","name":"abiEncodedData","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlAddress","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlAddressArray","outputs":[{"internalType":"address[]","name":"","type":"address[]"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlBool","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlBoolArray","outputs":[{"internalType":"bool[]","name":"","type":"bool[]"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlBytes","outputs":[{"internalType":"bytes","name":"","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlBytes32","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlBytes32Array","outputs":[{"internalType":"bytes32[]","name":"","type":"bytes32[]"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlBytesArray","outputs":[{"internalType":"bytes[]","name":"","type":"bytes[]"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlInt","outputs":[{"internalType":"int256","name":"","type":"int256"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlIntArray","outputs":[{"internalType":"int256[]","name":"","type":"int256[]"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlKeys","outputs":[{"internalType":"string[]","name":"keys","type":"string[]"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlString","outputs":[{"internalType":"string","name":"","type":"string"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlStringArray","outputs":[{"internalType":"string[]","name":"","type":"string[]"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"typeDescription","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlType","outputs":[{"internalType":"bytes","name":"","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"},{"internalType":"string","name":"typeDescription","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlType","outputs":[{"internalType":"bytes","name":"","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"},{"internalType":"string","name":"typeDescription","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlTypeArray","outputs":[{"internalType":"bytes","name":"","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlUint","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlUintArray","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}]},{"inputs":[{"internalType":"string","name":"stringifiedValue","type":"string"}],"stateMutability":"pure","type":"function","name":"parseUint","outputs":[{"internalType":"uint256","name":"parsedValue","type":"uint256"}]},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"pauseGasMetering"},{"inputs":[],"stateMutability":"view","type":"function","name":"pauseTracing"},{"inputs":[{"internalType":"address","name":"msgSender","type":"address"},{"internalType":"address","name":"txOrigin","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"prank"},{"inputs":[{"internalType":"address","name":"msgSender","type":"address"},{"internalType":"address","name":"txOrigin","type":"address"},{"internalType":"bool","name":"delegateCall","type":"bool"}],"stateMutability":"nonpayable","type":"function","name":"prank"},{"inputs":[{"internalType":"address","name":"msgSender","type":"address"},{"internalType":"bool","name":"delegateCall","type":"bool"}],"stateMutability":"nonpayable","type":"function","name":"prank"},{"inputs":[{"internalType":"address","name":"msgSender","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"prank"},{"inputs":[{"internalType":"bytes32","name":"newPrevrandao","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"prevrandao"},{"inputs":[{"internalType":"uint256","name":"newPrevrandao","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"prevrandao"},{"inputs":[],"stateMutability":"view","type":"function","name":"projectRoot","outputs":[{"internalType":"string","name":"path","type":"string"}]},{"inputs":[{"internalType":"string","name":"promptText","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"prompt","outputs":[{"internalType":"string","name":"input","type":"string"}]},{"inputs":[{"internalType":"string","name":"promptText","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"promptAddress","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[{"internalType":"string","name":"promptText","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"promptSecret","outputs":[{"internalType":"string","name":"input","type":"string"}]},{"inputs":[{"internalType":"string","name":"promptText","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"promptSecretUint","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"promptText","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"promptUint","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"uint256","name":"privateKey","type":"uint256"}],"stateMutability":"pure","type":"function","name":"publicKeyP256","outputs":[{"internalType":"uint256","name":"publicKeyX","type":"uint256"},{"internalType":"uint256","name":"publicKeyY","type":"uint256"}]},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"randomAddress","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"randomBool","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"uint256","name":"len","type":"uint256"}],"stateMutability":"view","type":"function","name":"randomBytes","outputs":[{"internalType":"bytes","name":"","type":"bytes"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"randomBytes4","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"randomBytes8","outputs":[{"internalType":"bytes8","name":"","type":"bytes8"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"randomInt","outputs":[{"internalType":"int256","name":"","type":"int256"}]},{"inputs":[{"internalType":"uint256","name":"bits","type":"uint256"}],"stateMutability":"view","type":"function","name":"randomInt","outputs":[{"internalType":"int256","name":"","type":"int256"}]},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"randomUint","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"uint256","name":"bits","type":"uint256"}],"stateMutability":"view","type":"function","name":"randomUint","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"uint256","name":"min","type":"uint256"},{"internalType":"uint256","name":"max","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"randomUint","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"readCallers","outputs":[{"internalType":"enum VmSafe.CallerMode","name":"callerMode","type":"uint8"},{"internalType":"address","name":"msgSender","type":"address"},{"internalType":"address","name":"txOrigin","type":"address"}]},{"inputs":[{"internalType":"string","name":"path","type":"string"},{"internalType":"uint64","name":"maxDepth","type":"uint64"}],"stateMutability":"view","type":"function","name":"readDir","outputs":[{"internalType":"struct VmSafe.DirEntry[]","name":"entries","type":"tuple[]","components":[{"internalType":"string","name":"errorMessage","type":"string"},{"internalType":"string","name":"path","type":"string"},{"internalType":"uint64","name":"depth","type":"uint64"},{"internalType":"bool","name":"isDir","type":"bool"},{"internalType":"bool","name":"isSymlink","type":"bool"}]}]},{"inputs":[{"internalType":"string","name":"path","type":"string"},{"internalType":"uint64","name":"maxDepth","type":"uint64"},{"internalType":"bool","name":"followLinks","type":"bool"}],"stateMutability":"view","type":"function","name":"readDir","outputs":[{"internalType":"struct VmSafe.DirEntry[]","name":"entries","type":"tuple[]","components":[{"internalType":"string","name":"errorMessage","type":"string"},{"internalType":"string","name":"path","type":"string"},{"internalType":"uint64","name":"depth","type":"uint64"},{"internalType":"bool","name":"isDir","type":"bool"},{"internalType":"bool","name":"isSymlink","type":"bool"}]}]},{"inputs":[{"internalType":"string","name":"path","type":"string"}],"stateMutability":"view","type":"function","name":"readDir","outputs":[{"internalType":"struct VmSafe.DirEntry[]","name":"entries","type":"tuple[]","components":[{"internalType":"string","name":"errorMessage","type":"string"},{"internalType":"string","name":"path","type":"string"},{"internalType":"uint64","name":"depth","type":"uint64"},{"internalType":"bool","name":"isDir","type":"bool"},{"internalType":"bool","name":"isSymlink","type":"bool"}]}]},{"inputs":[{"internalType":"string","name":"path","type":"string"}],"stateMutability":"view","type":"function","name":"readFile","outputs":[{"internalType":"string","name":"data","type":"string"}]},{"inputs":[{"internalType":"string","name":"path","type":"string"}],"stateMutability":"view","type":"function","name":"readFileBinary","outputs":[{"internalType":"bytes","name":"data","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"path","type":"string"}],"stateMutability":"view","type":"function","name":"readLine","outputs":[{"internalType":"string","name":"line","type":"string"}]},{"inputs":[{"internalType":"string","name":"linkPath","type":"string"}],"stateMutability":"view","type":"function","name":"readLink","outputs":[{"internalType":"string","name":"targetPath","type":"string"}]},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"record"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"recordLogs"},{"inputs":[{"internalType":"uint256","name":"privateKey","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"rememberKey","outputs":[{"internalType":"address","name":"keyAddr","type":"address"}]},{"inputs":[{"internalType":"string","name":"mnemonic","type":"string"},{"internalType":"string","name":"derivationPath","type":"string"},{"internalType":"uint32","name":"count","type":"uint32"}],"stateMutability":"nonpayable","type":"function","name":"rememberKeys","outputs":[{"internalType":"address[]","name":"keyAddrs","type":"address[]"}]},{"inputs":[{"internalType":"string","name":"mnemonic","type":"string"},{"internalType":"string","name":"derivationPath","type":"string"},{"internalType":"string","name":"language","type":"string"},{"internalType":"uint32","name":"count","type":"uint32"}],"stateMutability":"nonpayable","type":"function","name":"rememberKeys","outputs":[{"internalType":"address[]","name":"keyAddrs","type":"address[]"}]},{"inputs":[{"internalType":"string","name":"path","type":"string"},{"internalType":"bool","name":"recursive","type":"bool"}],"stateMutability":"nonpayable","type":"function","name":"removeDir"},{"inputs":[{"internalType":"string","name":"path","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"removeFile"},{"inputs":[{"internalType":"string","name":"input","type":"string"},{"internalType":"string","name":"from","type":"string"},{"internalType":"string","name":"to","type":"string"}],"stateMutability":"pure","type":"function","name":"replace","outputs":[{"internalType":"string","name":"output","type":"string"}]},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"resetGasMetering"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"resetNonce"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"resumeGasMetering"},{"inputs":[],"stateMutability":"view","type":"function","name":"resumeTracing"},{"inputs":[{"internalType":"uint256","name":"snapshotId","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"revertTo","outputs":[{"internalType":"bool","name":"success","type":"bool"}]},{"inputs":[{"internalType":"uint256","name":"snapshotId","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"revertToAndDelete","outputs":[{"internalType":"bool","name":"success","type":"bool"}]},{"inputs":[{"internalType":"uint256","name":"snapshotId","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"revertToState","outputs":[{"internalType":"bool","name":"success","type":"bool"}]},{"inputs":[{"internalType":"uint256","name":"snapshotId","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"revertToStateAndDelete","outputs":[{"internalType":"bool","name":"success","type":"bool"}]},{"inputs":[{"internalType":"address[]","name":"accounts","type":"address[]"}],"stateMutability":"nonpayable","type":"function","name":"revokePersistent"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"revokePersistent"},{"inputs":[{"internalType":"uint256","name":"newHeight","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"roll"},{"inputs":[{"internalType":"bytes32","name":"txHash","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"rollFork"},{"inputs":[{"internalType":"uint256","name":"forkId","type":"uint256"},{"internalType":"uint256","name":"blockNumber","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"rollFork"},{"inputs":[{"internalType":"uint256","name":"blockNumber","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"rollFork"},{"inputs":[{"internalType":"uint256","name":"forkId","type":"uint256"},{"internalType":"bytes32","name":"txHash","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"rollFork"},{"inputs":[{"internalType":"string","name":"urlOrAlias","type":"string"},{"internalType":"string","name":"method","type":"string"},{"internalType":"string","name":"params","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"rpc","outputs":[{"internalType":"bytes","name":"data","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"method","type":"string"},{"internalType":"string","name":"params","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"rpc","outputs":[{"internalType":"bytes","name":"data","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"rpcAlias","type":"string"}],"stateMutability":"view","type":"function","name":"rpcUrl","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"rpcUrlStructs","outputs":[{"internalType":"struct VmSafe.Rpc[]","name":"urls","type":"tuple[]","components":[{"internalType":"string","name":"key","type":"string"},{"internalType":"string","name":"url","type":"string"}]}]},{"inputs":[],"stateMutability":"view","type":"function","name":"rpcUrls","outputs":[{"internalType":"string[2][]","name":"urls","type":"string[2][]"}]},{"inputs":[{"internalType":"uint256","name":"forkId","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"selectFork"},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"address[]","name":"values","type":"address[]"}],"stateMutability":"nonpayable","type":"function","name":"serializeAddress","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"address","name":"value","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"serializeAddress","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"bool[]","name":"values","type":"bool[]"}],"stateMutability":"nonpayable","type":"function","name":"serializeBool","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"bool","name":"value","type":"bool"}],"stateMutability":"nonpayable","type":"function","name":"serializeBool","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"bytes[]","name":"values","type":"bytes[]"}],"stateMutability":"nonpayable","type":"function","name":"serializeBytes","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"bytes","name":"value","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"serializeBytes","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"bytes32[]","name":"values","type":"bytes32[]"}],"stateMutability":"nonpayable","type":"function","name":"serializeBytes32","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"bytes32","name":"value","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"serializeBytes32","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"int256","name":"value","type":"int256"}],"stateMutability":"nonpayable","type":"function","name":"serializeInt","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"int256[]","name":"values","type":"int256[]"}],"stateMutability":"nonpayable","type":"function","name":"serializeInt","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"value","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"serializeJson","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"typeDescription","type":"string"},{"internalType":"bytes","name":"value","type":"bytes"}],"stateMutability":"pure","type":"function","name":"serializeJsonType","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"string","name":"typeDescription","type":"string"},{"internalType":"bytes","name":"value","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"serializeJsonType","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"string[]","name":"values","type":"string[]"}],"stateMutability":"nonpayable","type":"function","name":"serializeString","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"string","name":"value","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"serializeString","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"uint256","name":"value","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"serializeUint","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"uint256[]","name":"values","type":"uint256[]"}],"stateMutability":"nonpayable","type":"function","name":"serializeUint","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"uint256","name":"value","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"serializeUintToHex","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"address","name":"target","type":"address"},{"internalType":"bool","name":"overwrite","type":"bool"}],"stateMutability":"nonpayable","type":"function","name":"setArbitraryStorage"},{"inputs":[{"internalType":"address","name":"target","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"setArbitraryStorage"},{"inputs":[{"internalType":"uint256","name":"blockNumber","type":"uint256"},{"internalType":"bytes32","name":"blockHash","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"setBlockhash"},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"value","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"setEnv"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint64","name":"newNonce","type":"uint64"}],"stateMutability":"nonpayable","type":"function","name":"setNonce"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint64","name":"newNonce","type":"uint64"}],"stateMutability":"nonpayable","type":"function","name":"setNonceUnsafe"},{"inputs":[{"internalType":"uint256[]","name":"array","type":"uint256[]"}],"stateMutability":"nonpayable","type":"function","name":"shuffle","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}]},{"inputs":[{"internalType":"bytes32","name":"digest","type":"bytes32"}],"stateMutability":"pure","type":"function","name":"sign","outputs":[{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}]},{"inputs":[{"internalType":"address","name":"signer","type":"address"},{"internalType":"bytes32","name":"digest","type":"bytes32"}],"stateMutability":"pure","type":"function","name":"sign","outputs":[{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}]},{"inputs":[{"internalType":"struct VmSafe.Wallet","name":"wallet","type":"tuple","components":[{"internalType":"address","name":"addr","type":"address"},{"internalType":"uint256","name":"publicKeyX","type":"uint256"},{"internalType":"uint256","name":"publicKeyY","type":"uint256"},{"internalType":"uint256","name":"privateKey","type":"uint256"}]},{"internalType":"bytes32","name":"digest","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"sign","outputs":[{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}]},{"inputs":[{"internalType":"uint256","name":"privateKey","type":"uint256"},{"internalType":"bytes32","name":"digest","type":"bytes32"}],"stateMutability":"pure","type":"function","name":"sign","outputs":[{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}]},{"inputs":[{"internalType":"address","name":"implementation","type":"address"},{"internalType":"uint256","name":"privateKey","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"signAndAttachDelegation","outputs":[{"internalType":"struct VmSafe.SignedDelegation","name":"signedDelegation","type":"tuple","components":[{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"},{"internalType":"uint64","name":"nonce","type":"uint64"},{"internalType":"address","name":"implementation","type":"address"}]}]},{"inputs":[{"internalType":"address","name":"implementation","type":"address"},{"internalType":"uint256","name":"privateKey","type":"uint256"},{"internalType":"uint64","name":"nonce","type":"uint64"}],"stateMutability":"nonpayable","type":"function","name":"signAndAttachDelegation","outputs":[{"internalType":"struct VmSafe.SignedDelegation","name":"signedDelegation","type":"tuple","components":[{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"},{"internalType":"uint64","name":"nonce","type":"uint64"},{"internalType":"address","name":"implementation","type":"address"}]}]},{"inputs":[{"internalType":"struct VmSafe.Wallet","name":"wallet","type":"tuple","components":[{"internalType":"address","name":"addr","type":"address"},{"internalType":"uint256","name":"publicKeyX","type":"uint256"},{"internalType":"uint256","name":"publicKeyY","type":"uint256"},{"internalType":"uint256","name":"privateKey","type":"uint256"}]},{"internalType":"bytes32","name":"digest","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"signCompact","outputs":[{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"vs","type":"bytes32"}]},{"inputs":[{"internalType":"address","name":"signer","type":"address"},{"internalType":"bytes32","name":"digest","type":"bytes32"}],"stateMutability":"pure","type":"function","name":"signCompact","outputs":[{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"vs","type":"bytes32"}]},{"inputs":[{"internalType":"bytes32","name":"digest","type":"bytes32"}],"stateMutability":"pure","type":"function","name":"signCompact","outputs":[{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"vs","type":"bytes32"}]},{"inputs":[{"internalType":"uint256","name":"privateKey","type":"uint256"},{"internalType":"bytes32","name":"digest","type":"bytes32"}],"stateMutability":"pure","type":"function","name":"signCompact","outputs":[{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"vs","type":"bytes32"}]},{"inputs":[{"internalType":"address","name":"implementation","type":"address"},{"internalType":"uint256","name":"privateKey","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"signDelegation","outputs":[{"internalType":"struct VmSafe.SignedDelegation","name":"signedDelegation","type":"tuple","components":[{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"},{"internalType":"uint64","name":"nonce","type":"uint64"},{"internalType":"address","name":"implementation","type":"address"}]}]},{"inputs":[{"internalType":"address","name":"implementation","type":"address"},{"internalType":"uint256","name":"privateKey","type":"uint256"},{"internalType":"uint64","name":"nonce","type":"uint64"}],"stateMutability":"nonpayable","type":"function","name":"signDelegation","outputs":[{"internalType":"struct VmSafe.SignedDelegation","name":"signedDelegation","type":"tuple","components":[{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"},{"internalType":"uint64","name":"nonce","type":"uint64"},{"internalType":"address","name":"implementation","type":"address"}]}]},{"inputs":[{"internalType":"uint256","name":"privateKey","type":"uint256"},{"internalType":"bytes32","name":"digest","type":"bytes32"}],"stateMutability":"pure","type":"function","name":"signP256","outputs":[{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}]},{"inputs":[{"internalType":"bool","name":"skipTest","type":"bool"},{"internalType":"string","name":"reason","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"skip"},{"inputs":[{"internalType":"bool","name":"skipTest","type":"bool"}],"stateMutability":"nonpayable","type":"function","name":"skip"},{"inputs":[{"internalType":"uint256","name":"duration","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"sleep"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"snapshot","outputs":[{"internalType":"uint256","name":"snapshotId","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"group","type":"string"},{"internalType":"string","name":"name","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"snapshotGasLastCall","outputs":[{"internalType":"uint256","name":"gasUsed","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"snapshotGasLastCall","outputs":[{"internalType":"uint256","name":"gasUsed","type":"uint256"}]},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"snapshotState","outputs":[{"internalType":"uint256","name":"snapshotId","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"uint256","name":"value","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"snapshotValue"},{"inputs":[{"internalType":"string","name":"group","type":"string"},{"internalType":"string","name":"name","type":"string"},{"internalType":"uint256","name":"value","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"snapshotValue"},{"inputs":[{"internalType":"uint256[]","name":"array","type":"uint256[]"}],"stateMutability":"nonpayable","type":"function","name":"sort","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}]},{"inputs":[{"internalType":"string","name":"input","type":"string"},{"internalType":"string","name":"delimiter","type":"string"}],"stateMutability":"pure","type":"function","name":"split","outputs":[{"internalType":"string[]","name":"outputs","type":"string[]"}]},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"startBroadcast"},{"inputs":[{"internalType":"address","name":"signer","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"startBroadcast"},{"inputs":[{"internalType":"uint256","name":"privateKey","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"startBroadcast"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"startDebugTraceRecording"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"startMappingRecording"},{"inputs":[{"internalType":"address","name":"msgSender","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"startPrank"},{"inputs":[{"internalType":"address","name":"msgSender","type":"address"},{"internalType":"bool","name":"delegateCall","type":"bool"}],"stateMutability":"nonpayable","type":"function","name":"startPrank"},{"inputs":[{"internalType":"address","name":"msgSender","type":"address"},{"internalType":"address","name":"txOrigin","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"startPrank"},{"inputs":[{"internalType":"address","name":"msgSender","type":"address"},{"internalType":"address","name":"txOrigin","type":"address"},{"internalType":"bool","name":"delegateCall","type":"bool"}],"stateMutability":"nonpayable","type":"function","name":"startPrank"},{"inputs":[{"internalType":"string","name":"name","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"startSnapshotGas"},{"inputs":[{"internalType":"string","name":"group","type":"string"},{"internalType":"string","name":"name","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"startSnapshotGas"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"startStateDiffRecording"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"stopAndReturnDebugTraceRecording","outputs":[{"internalType":"struct VmSafe.DebugStep[]","name":"step","type":"tuple[]","components":[{"internalType":"uint256[]","name":"stack","type":"uint256[]"},{"internalType":"bytes","name":"memoryInput","type":"bytes"},{"internalType":"uint8","name":"opcode","type":"uint8"},{"internalType":"uint64","name":"depth","type":"uint64"},{"internalType":"bool","name":"isOutOfGas","type":"bool"},{"internalType":"address","name":"contractAddr","type":"address"}]}]},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"stopAndReturnStateDiff","outputs":[{"internalType":"struct VmSafe.AccountAccess[]","name":"accountAccesses","type":"tuple[]","components":[{"internalType":"struct VmSafe.ChainInfo","name":"chainInfo","type":"tuple","components":[{"internalType":"uint256","name":"forkId","type":"uint256"},{"internalType":"uint256","name":"chainId","type":"uint256"}]},{"internalType":"enum VmSafe.AccountAccessKind","name":"kind","type":"uint8"},{"internalType":"address","name":"account","type":"address"},{"internalType":"address","name":"accessor","type":"address"},{"internalType":"bool","name":"initialized","type":"bool"},{"internalType":"uint256","name":"oldBalance","type":"uint256"},{"internalType":"uint256","name":"newBalance","type":"uint256"},{"internalType":"bytes","name":"deployedCode","type":"bytes"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"bool","name":"reverted","type":"bool"},{"internalType":"struct VmSafe.StorageAccess[]","name":"storageAccesses","type":"tuple[]","components":[{"internalType":"address","name":"account","type":"address"},{"internalType":"bytes32","name":"slot","type":"bytes32"},{"internalType":"bool","name":"isWrite","type":"bool"},{"internalType":"bytes32","name":"previousValue","type":"bytes32"},{"internalType":"bytes32","name":"newValue","type":"bytes32"},{"internalType":"bool","name":"reverted","type":"bool"}]},{"internalType":"uint64","name":"depth","type":"uint64"}]}]},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"stopBroadcast"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"stopExpectSafeMemory"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"stopMappingRecording"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"stopPrank"},{"inputs":[{"internalType":"string","name":"group","type":"string"},{"internalType":"string","name":"name","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"stopSnapshotGas","outputs":[{"internalType":"uint256","name":"gasUsed","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"stopSnapshotGas","outputs":[{"internalType":"uint256","name":"gasUsed","type":"uint256"}]},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"stopSnapshotGas","outputs":[{"internalType":"uint256","name":"gasUsed","type":"uint256"}]},{"inputs":[{"internalType":"address","name":"target","type":"address"},{"internalType":"bytes32","name":"slot","type":"bytes32"},{"internalType":"bytes32","name":"value","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"store"},{"inputs":[{"internalType":"string","name":"data","type":"string"}],"stateMutability":"pure","type":"function","name":"toBase64","outputs":[{"internalType":"string","name":"","type":"string"}]},{"inputs":[{"internalType":"bytes","name":"data","type":"bytes"}],"stateMutability":"pure","type":"function","name":"toBase64","outputs":[{"internalType":"string","name":"","type":"string"}]},{"inputs":[{"internalType":"string","name":"data","type":"string"}],"stateMutability":"pure","type":"function","name":"toBase64URL","outputs":[{"internalType":"string","name":"","type":"string"}]},{"inputs":[{"internalType":"bytes","name":"data","type":"bytes"}],"stateMutability":"pure","type":"function","name":"toBase64URL","outputs":[{"internalType":"string","name":"","type":"string"}]},{"inputs":[{"internalType":"string","name":"input","type":"string"}],"stateMutability":"pure","type":"function","name":"toLowercase","outputs":[{"internalType":"string","name":"output","type":"string"}]},{"inputs":[{"internalType":"address","name":"value","type":"address"}],"stateMutability":"pure","type":"function","name":"toString","outputs":[{"internalType":"string","name":"stringifiedValue","type":"string"}]},{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"}],"stateMutability":"pure","type":"function","name":"toString","outputs":[{"internalType":"string","name":"stringifiedValue","type":"string"}]},{"inputs":[{"internalType":"bytes","name":"value","type":"bytes"}],"stateMutability":"pure","type":"function","name":"toString","outputs":[{"internalType":"string","name":"stringifiedValue","type":"string"}]},{"inputs":[{"internalType":"bool","name":"value","type":"bool"}],"stateMutability":"pure","type":"function","name":"toString","outputs":[{"internalType":"string","name":"stringifiedValue","type":"string"}]},{"inputs":[{"internalType":"int256","name":"value","type":"int256"}],"stateMutability":"pure","type":"function","name":"toString","outputs":[{"internalType":"string","name":"stringifiedValue","type":"string"}]},{"inputs":[{"internalType":"bytes32","name":"value","type":"bytes32"}],"stateMutability":"pure","type":"function","name":"toString","outputs":[{"internalType":"string","name":"stringifiedValue","type":"string"}]},{"inputs":[{"internalType":"string","name":"input","type":"string"}],"stateMutability":"pure","type":"function","name":"toUppercase","outputs":[{"internalType":"string","name":"output","type":"string"}]},{"inputs":[{"internalType":"uint256","name":"forkId","type":"uint256"},{"internalType":"bytes32","name":"txHash","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"transact"},{"inputs":[{"internalType":"bytes32","name":"txHash","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"transact"},{"inputs":[{"internalType":"string","name":"input","type":"string"}],"stateMutability":"pure","type":"function","name":"trim","outputs":[{"internalType":"string","name":"output","type":"string"}]},{"inputs":[{"internalType":"string[]","name":"commandInput","type":"string[]"}],"stateMutability":"nonpayable","type":"function","name":"tryFfi","outputs":[{"internalType":"struct VmSafe.FfiResult","name":"result","type":"tuple","components":[{"internalType":"int32","name":"exitCode","type":"int32"},{"internalType":"bytes","name":"stdout","type":"bytes"},{"internalType":"bytes","name":"stderr","type":"bytes"}]}]},{"inputs":[{"internalType":"uint256","name":"newGasPrice","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"txGasPrice"},{"inputs":[],"stateMutability":"view","type":"function","name":"unixTime","outputs":[{"internalType":"uint256","name":"milliseconds","type":"uint256"}]},{"inputs":[{"internalType":"address","name":"target","type":"address"},{"internalType":"bytes32","name":"slot","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"warmSlot"},{"inputs":[{"internalType":"uint256","name":"newTimestamp","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"warp"},{"inputs":[{"internalType":"string","name":"path","type":"string"},{"internalType":"string","name":"data","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"writeFile"},{"inputs":[{"internalType":"string","name":"path","type":"string"},{"internalType":"bytes","name":"data","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"writeFileBinary"},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"path","type":"string"},{"internalType":"string","name":"valueKey","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"writeJson"},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"path","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"writeJson"},{"inputs":[{"internalType":"string","name":"path","type":"string"},{"internalType":"string","name":"data","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"writeLine"},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"path","type":"string"},{"internalType":"string","name":"valueKey","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"writeToml"},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"path","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"writeToml"}],"devdoc":{"kind":"dev","methods":{},"version":1},"userdoc":{"kind":"user","methods":{"accessList((address,bytes32[])[])":{"notice":"Utility cheatcode to set an EIP-2930 access list for all subsequent transactions."},"accesses(address)":{"notice":"Gets all accessed reads and write slot from a `vm.record` session, for a given address."},"activeFork()":{"notice":"Returns the identifier of the currently active fork. Reverts if no fork is currently active."},"addr(uint256)":{"notice":"Gets the address for a given private key."},"allowCheatcodes(address)":{"notice":"In forking mode, explicitly grant the given address cheatcode access."},"assertApproxEqAbs(int256,int256,uint256)":{"notice":"Compares two `int256` values. Expects difference to be less than or equal to `maxDelta`."},"assertApproxEqAbs(int256,int256,uint256,string)":{"notice":"Compares two `int256` values. Expects difference to be less than or equal to `maxDelta`. Includes error message into revert string on failure."},"assertApproxEqAbs(uint256,uint256,uint256)":{"notice":"Compares two `uint256` values. Expects difference to be less than or equal to `maxDelta`."},"assertApproxEqAbs(uint256,uint256,uint256,string)":{"notice":"Compares two `uint256` values. Expects difference to be less than or equal to `maxDelta`. Includes error message into revert string on failure."},"assertApproxEqAbsDecimal(int256,int256,uint256,uint256)":{"notice":"Compares two `int256` values. Expects difference to be less than or equal to `maxDelta`. Formats values with decimals in failure message."},"assertApproxEqAbsDecimal(int256,int256,uint256,uint256,string)":{"notice":"Compares two `int256` values. Expects difference to be less than or equal to `maxDelta`. Formats values with decimals in failure message. Includes error message into revert string on failure."},"assertApproxEqAbsDecimal(uint256,uint256,uint256,uint256)":{"notice":"Compares two `uint256` values. Expects difference to be less than or equal to `maxDelta`. Formats values with decimals in failure message."},"assertApproxEqAbsDecimal(uint256,uint256,uint256,uint256,string)":{"notice":"Compares two `uint256` values. Expects difference to be less than or equal to `maxDelta`. Formats values with decimals in failure message. Includes error message into revert string on failure."},"assertApproxEqRel(int256,int256,uint256)":{"notice":"Compares two `int256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100%"},"assertApproxEqRel(int256,int256,uint256,string)":{"notice":"Compares two `int256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100% Includes error message into revert string on failure."},"assertApproxEqRel(uint256,uint256,uint256)":{"notice":"Compares two `uint256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100%"},"assertApproxEqRel(uint256,uint256,uint256,string)":{"notice":"Compares two `uint256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100% Includes error message into revert string on failure."},"assertApproxEqRelDecimal(int256,int256,uint256,uint256)":{"notice":"Compares two `int256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100% Formats values with decimals in failure message."},"assertApproxEqRelDecimal(int256,int256,uint256,uint256,string)":{"notice":"Compares two `int256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100% Formats values with decimals in failure message. Includes error message into revert string on failure."},"assertApproxEqRelDecimal(uint256,uint256,uint256,uint256)":{"notice":"Compares two `uint256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100% Formats values with decimals in failure message."},"assertApproxEqRelDecimal(uint256,uint256,uint256,uint256,string)":{"notice":"Compares two `uint256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100% Formats values with decimals in failure message. Includes error message into revert string on failure."},"assertEq(address,address)":{"notice":"Asserts that two `address` values are equal."},"assertEq(address,address,string)":{"notice":"Asserts that two `address` values are equal and includes error message into revert string on failure."},"assertEq(address[],address[])":{"notice":"Asserts that two arrays of `address` values are equal."},"assertEq(address[],address[],string)":{"notice":"Asserts that two arrays of `address` values are equal and includes error message into revert string on failure."},"assertEq(bool,bool)":{"notice":"Asserts that two `bool` values are equal."},"assertEq(bool,bool,string)":{"notice":"Asserts that two `bool` values are equal and includes error message into revert string on failure."},"assertEq(bool[],bool[])":{"notice":"Asserts that two arrays of `bool` values are equal."},"assertEq(bool[],bool[],string)":{"notice":"Asserts that two arrays of `bool` values are equal and includes error message into revert string on failure."},"assertEq(bytes,bytes)":{"notice":"Asserts that two `bytes` values are equal."},"assertEq(bytes,bytes,string)":{"notice":"Asserts that two `bytes` values are equal and includes error message into revert string on failure."},"assertEq(bytes32,bytes32)":{"notice":"Asserts that two `bytes32` values are equal."},"assertEq(bytes32,bytes32,string)":{"notice":"Asserts that two `bytes32` values are equal and includes error message into revert string on failure."},"assertEq(bytes32[],bytes32[])":{"notice":"Asserts that two arrays of `bytes32` values are equal."},"assertEq(bytes32[],bytes32[],string)":{"notice":"Asserts that two arrays of `bytes32` values are equal and includes error message into revert string on failure."},"assertEq(bytes[],bytes[])":{"notice":"Asserts that two arrays of `bytes` values are equal."},"assertEq(bytes[],bytes[],string)":{"notice":"Asserts that two arrays of `bytes` values are equal and includes error message into revert string on failure."},"assertEq(int256,int256)":{"notice":"Asserts that two `int256` values are equal."},"assertEq(int256,int256,string)":{"notice":"Asserts that two `int256` values are equal and includes error message into revert string on failure."},"assertEq(int256[],int256[])":{"notice":"Asserts that two arrays of `int256` values are equal."},"assertEq(int256[],int256[],string)":{"notice":"Asserts that two arrays of `int256` values are equal and includes error message into revert string on failure."},"assertEq(string,string)":{"notice":"Asserts that two `string` values are equal."},"assertEq(string,string,string)":{"notice":"Asserts that two `string` values are equal and includes error message into revert string on failure."},"assertEq(string[],string[])":{"notice":"Asserts that two arrays of `string` values are equal."},"assertEq(string[],string[],string)":{"notice":"Asserts that two arrays of `string` values are equal and includes error message into revert string on failure."},"assertEq(uint256,uint256)":{"notice":"Asserts that two `uint256` values are equal."},"assertEq(uint256,uint256,string)":{"notice":"Asserts that two `uint256` values are equal and includes error message into revert string on failure."},"assertEq(uint256[],uint256[])":{"notice":"Asserts that two arrays of `uint256 values are equal."},"assertEq(uint256[],uint256[],string)":{"notice":"Asserts that two arrays of `uint256` values are equal and includes error message into revert string on failure."},"assertEqDecimal(int256,int256,uint256)":{"notice":"Asserts that two `int256` values are equal, formatting them with decimals in failure message."},"assertEqDecimal(int256,int256,uint256,string)":{"notice":"Asserts that two `int256` values are equal, formatting them with decimals in failure message. Includes error message into revert string on failure."},"assertEqDecimal(uint256,uint256,uint256)":{"notice":"Asserts that two `uint256` values are equal, formatting them with decimals in failure message."},"assertEqDecimal(uint256,uint256,uint256,string)":{"notice":"Asserts that two `uint256` values are equal, formatting them with decimals in failure message. Includes error message into revert string on failure."},"assertFalse(bool)":{"notice":"Asserts that the given condition is false."},"assertFalse(bool,string)":{"notice":"Asserts that the given condition is false and includes error message into revert string on failure."},"assertGe(int256,int256)":{"notice":"Compares two `int256` values. Expects first value to be greater than or equal to second."},"assertGe(int256,int256,string)":{"notice":"Compares two `int256` values. Expects first value to be greater than or equal to second. Includes error message into revert string on failure."},"assertGe(uint256,uint256)":{"notice":"Compares two `uint256` values. Expects first value to be greater than or equal to second."},"assertGe(uint256,uint256,string)":{"notice":"Compares two `uint256` values. Expects first value to be greater than or equal to second. Includes error message into revert string on failure."},"assertGeDecimal(int256,int256,uint256)":{"notice":"Compares two `int256` values. Expects first value to be greater than or equal to second. Formats values with decimals in failure message."},"assertGeDecimal(int256,int256,uint256,string)":{"notice":"Compares two `int256` values. Expects first value to be greater than or equal to second. Formats values with decimals in failure message. Includes error message into revert string on failure."},"assertGeDecimal(uint256,uint256,uint256)":{"notice":"Compares two `uint256` values. Expects first value to be greater than or equal to second. Formats values with decimals in failure message."},"assertGeDecimal(uint256,uint256,uint256,string)":{"notice":"Compares two `uint256` values. Expects first value to be greater than or equal to second. Formats values with decimals in failure message. Includes error message into revert string on failure."},"assertGt(int256,int256)":{"notice":"Compares two `int256` values. Expects first value to be greater than second."},"assertGt(int256,int256,string)":{"notice":"Compares two `int256` values. Expects first value to be greater than second. Includes error message into revert string on failure."},"assertGt(uint256,uint256)":{"notice":"Compares two `uint256` values. Expects first value to be greater than second."},"assertGt(uint256,uint256,string)":{"notice":"Compares two `uint256` values. Expects first value to be greater than second. Includes error message into revert string on failure."},"assertGtDecimal(int256,int256,uint256)":{"notice":"Compares two `int256` values. Expects first value to be greater than second. Formats values with decimals in failure message."},"assertGtDecimal(int256,int256,uint256,string)":{"notice":"Compares two `int256` values. Expects first value to be greater than second. Formats values with decimals in failure message. Includes error message into revert string on failure."},"assertGtDecimal(uint256,uint256,uint256)":{"notice":"Compares two `uint256` values. Expects first value to be greater than second. Formats values with decimals in failure message."},"assertGtDecimal(uint256,uint256,uint256,string)":{"notice":"Compares two `uint256` values. Expects first value to be greater than second. Formats values with decimals in failure message. Includes error message into revert string on failure."},"assertLe(int256,int256)":{"notice":"Compares two `int256` values. Expects first value to be less than or equal to second."},"assertLe(int256,int256,string)":{"notice":"Compares two `int256` values. Expects first value to be less than or equal to second. Includes error message into revert string on failure."},"assertLe(uint256,uint256)":{"notice":"Compares two `uint256` values. Expects first value to be less than or equal to second."},"assertLe(uint256,uint256,string)":{"notice":"Compares two `uint256` values. Expects first value to be less than or equal to second. Includes error message into revert string on failure."},"assertLeDecimal(int256,int256,uint256)":{"notice":"Compares two `int256` values. Expects first value to be less than or equal to second. Formats values with decimals in failure message."},"assertLeDecimal(int256,int256,uint256,string)":{"notice":"Compares two `int256` values. Expects first value to be less than or equal to second. Formats values with decimals in failure message. Includes error message into revert string on failure."},"assertLeDecimal(uint256,uint256,uint256)":{"notice":"Compares two `uint256` values. Expects first value to be less than or equal to second. Formats values with decimals in failure message."},"assertLeDecimal(uint256,uint256,uint256,string)":{"notice":"Compares two `uint256` values. Expects first value to be less than or equal to second. Formats values with decimals in failure message. Includes error message into revert string on failure."},"assertLt(int256,int256)":{"notice":"Compares two `int256` values. Expects first value to be less than second."},"assertLt(int256,int256,string)":{"notice":"Compares two `int256` values. Expects first value to be less than second. Includes error message into revert string on failure."},"assertLt(uint256,uint256)":{"notice":"Compares two `uint256` values. Expects first value to be less than second."},"assertLt(uint256,uint256,string)":{"notice":"Compares two `uint256` values. Expects first value to be less than second. Includes error message into revert string on failure."},"assertLtDecimal(int256,int256,uint256)":{"notice":"Compares two `int256` values. Expects first value to be less than second. Formats values with decimals in failure message."},"assertLtDecimal(int256,int256,uint256,string)":{"notice":"Compares two `int256` values. Expects first value to be less than second. Formats values with decimals in failure message. Includes error message into revert string on failure."},"assertLtDecimal(uint256,uint256,uint256)":{"notice":"Compares two `uint256` values. Expects first value to be less than second. Formats values with decimals in failure message."},"assertLtDecimal(uint256,uint256,uint256,string)":{"notice":"Compares two `uint256` values. Expects first value to be less than second. Formats values with decimals in failure message. Includes error message into revert string on failure."},"assertNotEq(address,address)":{"notice":"Asserts that two `address` values are not equal."},"assertNotEq(address,address,string)":{"notice":"Asserts that two `address` values are not equal and includes error message into revert string on failure."},"assertNotEq(address[],address[])":{"notice":"Asserts that two arrays of `address` values are not equal."},"assertNotEq(address[],address[],string)":{"notice":"Asserts that two arrays of `address` values are not equal and includes error message into revert string on failure."},"assertNotEq(bool,bool)":{"notice":"Asserts that two `bool` values are not equal."},"assertNotEq(bool,bool,string)":{"notice":"Asserts that two `bool` values are not equal and includes error message into revert string on failure."},"assertNotEq(bool[],bool[])":{"notice":"Asserts that two arrays of `bool` values are not equal."},"assertNotEq(bool[],bool[],string)":{"notice":"Asserts that two arrays of `bool` values are not equal and includes error message into revert string on failure."},"assertNotEq(bytes,bytes)":{"notice":"Asserts that two `bytes` values are not equal."},"assertNotEq(bytes,bytes,string)":{"notice":"Asserts that two `bytes` values are not equal and includes error message into revert string on failure."},"assertNotEq(bytes32,bytes32)":{"notice":"Asserts that two `bytes32` values are not equal."},"assertNotEq(bytes32,bytes32,string)":{"notice":"Asserts that two `bytes32` values are not equal and includes error message into revert string on failure."},"assertNotEq(bytes32[],bytes32[])":{"notice":"Asserts that two arrays of `bytes32` values are not equal."},"assertNotEq(bytes32[],bytes32[],string)":{"notice":"Asserts that two arrays of `bytes32` values are not equal and includes error message into revert string on failure."},"assertNotEq(bytes[],bytes[])":{"notice":"Asserts that two arrays of `bytes` values are not equal."},"assertNotEq(bytes[],bytes[],string)":{"notice":"Asserts that two arrays of `bytes` values are not equal and includes error message into revert string on failure."},"assertNotEq(int256,int256)":{"notice":"Asserts that two `int256` values are not equal."},"assertNotEq(int256,int256,string)":{"notice":"Asserts that two `int256` values are not equal and includes error message into revert string on failure."},"assertNotEq(int256[],int256[])":{"notice":"Asserts that two arrays of `int256` values are not equal."},"assertNotEq(int256[],int256[],string)":{"notice":"Asserts that two arrays of `int256` values are not equal and includes error message into revert string on failure."},"assertNotEq(string,string)":{"notice":"Asserts that two `string` values are not equal."},"assertNotEq(string,string,string)":{"notice":"Asserts that two `string` values are not equal and includes error message into revert string on failure."},"assertNotEq(string[],string[])":{"notice":"Asserts that two arrays of `string` values are not equal."},"assertNotEq(string[],string[],string)":{"notice":"Asserts that two arrays of `string` values are not equal and includes error message into revert string on failure."},"assertNotEq(uint256,uint256)":{"notice":"Asserts that two `uint256` values are not equal."},"assertNotEq(uint256,uint256,string)":{"notice":"Asserts that two `uint256` values are not equal and includes error message into revert string on failure."},"assertNotEq(uint256[],uint256[])":{"notice":"Asserts that two arrays of `uint256` values are not equal."},"assertNotEq(uint256[],uint256[],string)":{"notice":"Asserts that two arrays of `uint256` values are not equal and includes error message into revert string on failure."},"assertNotEqDecimal(int256,int256,uint256)":{"notice":"Asserts that two `int256` values are not equal, formatting them with decimals in failure message."},"assertNotEqDecimal(int256,int256,uint256,string)":{"notice":"Asserts that two `int256` values are not equal, formatting them with decimals in failure message. Includes error message into revert string on failure."},"assertNotEqDecimal(uint256,uint256,uint256)":{"notice":"Asserts that two `uint256` values are not equal, formatting them with decimals in failure message."},"assertNotEqDecimal(uint256,uint256,uint256,string)":{"notice":"Asserts that two `uint256` values are not equal, formatting them with decimals in failure message. Includes error message into revert string on failure."},"assertTrue(bool)":{"notice":"Asserts that the given condition is true."},"assertTrue(bool,string)":{"notice":"Asserts that the given condition is true and includes error message into revert string on failure."},"assume(bool)":{"notice":"If the condition is false, discard this run's fuzz inputs and generate new ones."},"assumeNoRevert((address,bool,bytes))":{"notice":"Discard this run's fuzz inputs and generate new ones if next call reverts with the potential revert parameters."},"assumeNoRevert((address,bool,bytes)[])":{"notice":"Discard this run's fuzz inputs and generate new ones if next call reverts with the any of the potential revert parameters."},"assumeNoRevert()":{"notice":"Discard this run's fuzz inputs and generate new ones if next call reverted."},"attachBlob(bytes)":{"notice":"Attach an EIP-4844 blob to the next call"},"attachDelegation((uint8,bytes32,bytes32,uint64,address))":{"notice":"Designate the next call as an EIP-7702 transaction"},"blobBaseFee(uint256)":{"notice":"Sets `block.blobbasefee`"},"blobhashes(bytes32[])":{"notice":"Sets the blobhashes in the transaction. Not available on EVM versions before Cancun. If used on unsupported EVM versions it will revert."},"breakpoint(string)":{"notice":"Writes a breakpoint to jump to in the debugger."},"breakpoint(string,bool)":{"notice":"Writes a conditional breakpoint to jump to in the debugger."},"broadcast()":{"notice":"Has the next call (at this call depth only) create transactions that can later be signed and sent onchain. Broadcasting address is determined by checking the following in order: 1. If `--sender` argument was provided, that address is used. 2. If exactly one signer (e.g. private key, hw wallet, keystore) is set when `forge broadcast` is invoked, that signer is used. 3. Otherwise, default foundry sender (1804c8AB1F12E6bbf3894d4083f33e07309d1f38) is used."},"broadcast(address)":{"notice":"Has the next call (at this call depth only) create a transaction with the address provided as the sender that can later be signed and sent onchain."},"broadcast(uint256)":{"notice":"Has the next call (at this call depth only) create a transaction with the private key provided as the sender that can later be signed and sent onchain."},"broadcastRawTransaction(bytes)":{"notice":"Takes a signed transaction and broadcasts it to the network."},"chainId(uint256)":{"notice":"Sets `block.chainid`."},"clearMockedCalls()":{"notice":"Clears all mocked calls."},"cloneAccount(address,address)":{"notice":"Clones a source account code, state, balance and nonce to a target account and updates in-memory EVM state."},"closeFile(string)":{"notice":"Closes file for reading, resetting the offset and allowing to read it from beginning with readLine. `path` is relative to the project root."},"coinbase(address)":{"notice":"Sets `block.coinbase`."},"computeCreate2Address(bytes32,bytes32)":{"notice":"Compute the address of a contract created with CREATE2 using the default CREATE2 deployer."},"computeCreate2Address(bytes32,bytes32,address)":{"notice":"Compute the address of a contract created with CREATE2 using the given CREATE2 deployer."},"computeCreateAddress(address,uint256)":{"notice":"Compute the address a contract will be deployed at for a given deployer address and nonce."},"contains(string,string)":{"notice":"Returns true if `search` is found in `subject`, false otherwise."},"cool(address)":{"notice":"Marks the slots of an account and the account address as cold."},"coolSlot(address,bytes32)":{"notice":"Utility cheatcode to mark specific storage slot as cold, simulating no prior read."},"copyFile(string,string)":{"notice":"Copies the contents of one file to another. This function will **overwrite** the contents of `to`. On success, the total number of bytes copied is returned and it is equal to the length of the `to` file as reported by `metadata`. Both `from` and `to` are relative to the project root."},"copyStorage(address,address)":{"notice":"Utility cheatcode to copy storage of `from` contract to another `to` contract."},"createDir(string,bool)":{"notice":"Creates a new, empty directory at the provided path. This cheatcode will revert in the following situations, but is not limited to just these cases: - User lacks permissions to modify `path`. - A parent of the given path doesn't exist and `recursive` is false. - `path` already exists and `recursive` is false. `path` is relative to the project root."},"createFork(string)":{"notice":"Creates a new fork with the given endpoint and the _latest_ block and returns the identifier of the fork."},"createFork(string,bytes32)":{"notice":"Creates a new fork with the given endpoint and at the block the given transaction was mined in, replays all transaction mined in the block before the transaction, and returns the identifier of the fork."},"createFork(string,uint256)":{"notice":"Creates a new fork with the given endpoint and block and returns the identifier of the fork."},"createSelectFork(string)":{"notice":"Creates and also selects a new fork with the given endpoint and the latest block and returns the identifier of the fork."},"createSelectFork(string,bytes32)":{"notice":"Creates and also selects new fork with the given endpoint and at the block the given transaction was mined in, replays all transaction mined in the block before the transaction, returns the identifier of the fork."},"createSelectFork(string,uint256)":{"notice":"Creates and also selects a new fork with the given endpoint and block and returns the identifier of the fork."},"createWallet(string)":{"notice":"Derives a private key from the name, labels the account with that name, and returns the wallet."},"createWallet(uint256)":{"notice":"Generates a wallet from the private key and returns the wallet."},"createWallet(uint256,string)":{"notice":"Generates a wallet from the private key, labels the account with that name, and returns the wallet."},"deal(address,uint256)":{"notice":"Sets an address' balance."},"deleteSnapshot(uint256)":{"notice":"`deleteSnapshot` is being deprecated in favor of `deleteStateSnapshot`. It will be removed in future versions."},"deleteSnapshots()":{"notice":"`deleteSnapshots` is being deprecated in favor of `deleteStateSnapshots`. It will be removed in future versions."},"deleteStateSnapshot(uint256)":{"notice":"Removes the snapshot with the given ID created by `snapshot`. Takes the snapshot ID to delete. Returns `true` if the snapshot was successfully deleted. Returns `false` if the snapshot does not exist."},"deleteStateSnapshots()":{"notice":"Removes _all_ snapshots previously created by `snapshot`."},"deployCode(string)":{"notice":"Deploys a contract from an artifact file. Takes in the relative path to the json file or the path to the artifact in the form of <path>:<contract>:<version> where <contract> and <version> parts are optional."},"deployCode(string,bytes)":{"notice":"Deploys a contract from an artifact file. Takes in the relative path to the json file or the path to the artifact in the form of <path>:<contract>:<version> where <contract> and <version> parts are optional. Additionally accepts abi-encoded constructor arguments."},"deployCode(string,bytes,bytes32)":{"notice":"Deploys a contract from an artifact file, using the CREATE2 salt. Takes in the relative path to the json file or the path to the artifact in the form of <path>:<contract>:<version> where <contract> and <version> parts are optional. Additionally accepts abi-encoded constructor arguments."},"deployCode(string,bytes,uint256)":{"notice":"Deploys a contract from an artifact file. Takes in the relative path to the json file or the path to the artifact in the form of <path>:<contract>:<version> where <contract> and <version> parts are optional. Additionally accepts abi-encoded constructor arguments and `msg.value`."},"deployCode(string,bytes,uint256,bytes32)":{"notice":"Deploys a contract from an artifact file, using the CREATE2 salt. Takes in the relative path to the json file or the path to the artifact in the form of <path>:<contract>:<version> where <contract> and <version> parts are optional. Additionally accepts abi-encoded constructor arguments and `msg.value`."},"deployCode(string,bytes32)":{"notice":"Deploys a contract from an artifact file, using the CREATE2 salt. Takes in the relative path to the json file or the path to the artifact in the form of <path>:<contract>:<version> where <contract> and <version> parts are optional."},"deployCode(string,uint256)":{"notice":"Deploys a contract from an artifact file. Takes in the relative path to the json file or the path to the artifact in the form of <path>:<contract>:<version> where <contract> and <version> parts are optional. Additionally accepts `msg.value`."},"deployCode(string,uint256,bytes32)":{"notice":"Deploys a contract from an artifact file, using the CREATE2 salt. Takes in the relative path to the json file or the path to the artifact in the form of <path>:<contract>:<version> where <contract> and <version> parts are optional. Additionally accepts `msg.value`."},"deriveKey(string,string,uint32)":{"notice":"Derive a private key from a provided mnenomic string (or mnenomic file path) at `{derivationPath}{index}`."},"deriveKey(string,string,uint32,string)":{"notice":"Derive a private key from a provided mnenomic string (or mnenomic file path) in the specified language at `{derivationPath}{index}`."},"deriveKey(string,uint32)":{"notice":"Derive a private key from a provided mnenomic string (or mnenomic file path) at the derivation path `m/44'/60'/0'/0/{index}`."},"deriveKey(string,uint32,string)":{"notice":"Derive a private key from a provided mnenomic string (or mnenomic file path) in the specified language at the derivation path `m/44'/60'/0'/0/{index}`."},"difficulty(uint256)":{"notice":"Sets `block.difficulty`. Not available on EVM versions from Paris onwards. Use `prevrandao` instead. Reverts if used on unsupported EVM versions."},"dumpState(string)":{"notice":"Dump a genesis JSON file's `allocs` to disk."},"ensNamehash(string)":{"notice":"Returns ENS namehash for provided string."},"envAddress(string)":{"notice":"Gets the environment variable `name` and parses it as `address`. Reverts if the variable was not found or could not be parsed."},"envAddress(string,string)":{"notice":"Gets the environment variable `name` and parses it as an array of `address`, delimited by `delim`. Reverts if the variable was not found or could not be parsed."},"envBool(string)":{"notice":"Gets the environment variable `name` and parses it as `bool`. Reverts if the variable was not found or could not be parsed."},"envBool(string,string)":{"notice":"Gets the environment variable `name` and parses it as an array of `bool`, delimited by `delim`. Reverts if the variable was not found or could not be parsed."},"envBytes(string)":{"notice":"Gets the environment variable `name` and parses it as `bytes`. Reverts if the variable was not found or could not be parsed."},"envBytes(string,string)":{"notice":"Gets the environment variable `name` and parses it as an array of `bytes`, delimited by `delim`. Reverts if the variable was not found or could not be parsed."},"envBytes32(string)":{"notice":"Gets the environment variable `name` and parses it as `bytes32`. Reverts if the variable was not found or could not be parsed."},"envBytes32(string,string)":{"notice":"Gets the environment variable `name` and parses it as an array of `bytes32`, delimited by `delim`. Reverts if the variable was not found or could not be parsed."},"envExists(string)":{"notice":"Gets the environment variable `name` and returns true if it exists, else returns false."},"envInt(string)":{"notice":"Gets the environment variable `name` and parses it as `int256`. Reverts if the variable was not found or could not be parsed."},"envInt(string,string)":{"notice":"Gets the environment variable `name` and parses it as an array of `int256`, delimited by `delim`. Reverts if the variable was not found or could not be parsed."},"envOr(string,address)":{"notice":"Gets the environment variable `name` and parses it as `address`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envOr(string,bool)":{"notice":"Gets the environment variable `name` and parses it as `bool`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envOr(string,bytes)":{"notice":"Gets the environment variable `name` and parses it as `bytes`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envOr(string,bytes32)":{"notice":"Gets the environment variable `name` and parses it as `bytes32`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envOr(string,int256)":{"notice":"Gets the environment variable `name` and parses it as `int256`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envOr(string,string)":{"notice":"Gets the environment variable `name` and parses it as `string`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envOr(string,string,address[])":{"notice":"Gets the environment variable `name` and parses it as an array of `address`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envOr(string,string,bool[])":{"notice":"Gets the environment variable `name` and parses it as an array of `bool`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envOr(string,string,bytes32[])":{"notice":"Gets the environment variable `name` and parses it as an array of `bytes32`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envOr(string,string,bytes[])":{"notice":"Gets the environment variable `name` and parses it as an array of `bytes`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envOr(string,string,int256[])":{"notice":"Gets the environment variable `name` and parses it as an array of `int256`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envOr(string,string,string[])":{"notice":"Gets the environment variable `name` and parses it as an array of `string`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envOr(string,string,uint256[])":{"notice":"Gets the environment variable `name` and parses it as an array of `uint256`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envOr(string,uint256)":{"notice":"Gets the environment variable `name` and parses it as `uint256`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envString(string)":{"notice":"Gets the environment variable `name` and parses it as `string`. Reverts if the variable was not found or could not be parsed."},"envString(string,string)":{"notice":"Gets the environment variable `name` and parses it as an array of `string`, delimited by `delim`. Reverts if the variable was not found or could not be parsed."},"envUint(string)":{"notice":"Gets the environment variable `name` and parses it as `uint256`. Reverts if the variable was not found or could not be parsed."},"envUint(string,string)":{"notice":"Gets the environment variable `name` and parses it as an array of `uint256`, delimited by `delim`. Reverts if the variable was not found or could not be parsed."},"etch(address,bytes)":{"notice":"Sets an address' code."},"eth_getLogs(uint256,uint256,address,bytes32[])":{"notice":"Gets all the logs according to specified filter."},"exists(string)":{"notice":"Returns true if the given path points to an existing entity, else returns false."},"expectCall(address,bytes)":{"notice":"Expects a call to an address with the specified calldata. Calldata can either be a strict or a partial match."},"expectCall(address,bytes,uint64)":{"notice":"Expects given number of calls to an address with the specified calldata."},"expectCall(address,uint256,bytes)":{"notice":"Expects a call to an address with the specified `msg.value` and calldata."},"expectCall(address,uint256,bytes,uint64)":{"notice":"Expects given number of calls to an address with the specified `msg.value` and calldata."},"expectCall(address,uint256,uint64,bytes)":{"notice":"Expect a call to an address with the specified `msg.value`, gas, and calldata."},"expectCall(address,uint256,uint64,bytes,uint64)":{"notice":"Expects given number of calls to an address with the specified `msg.value`, gas, and calldata."},"expectCallMinGas(address,uint256,uint64,bytes)":{"notice":"Expect a call to an address with the specified `msg.value` and calldata, and a *minimum* amount of gas."},"expectCallMinGas(address,uint256,uint64,bytes,uint64)":{"notice":"Expect given number of calls to an address with the specified `msg.value` and calldata, and a *minimum* amount of gas."},"expectCreate(bytes,address)":{"notice":"Expects the deployment of the specified bytecode by the specified address using the CREATE opcode"},"expectCreate2(bytes,address)":{"notice":"Expects the deployment of the specified bytecode by the specified address using the CREATE2 opcode"},"expectEmit()":{"notice":"Prepare an expected log with all topic and data checks enabled. Call this function, then emit an event, then call a function. Internally after the call, we check if logs were emitted in the expected order with the expected topics and data."},"expectEmit(address)":{"notice":"Same as the previous method, but also checks supplied address against emitting contract."},"expectEmit(address,uint64)":{"notice":"Expect a given number of logs from a specific emitter with all topic and data checks enabled."},"expectEmit(bool,bool,bool,bool)":{"notice":"Prepare an expected log with (bool checkTopic1, bool checkTopic2, bool checkTopic3, bool checkData.). Call this function, then emit an event, then call a function. Internally after the call, we check if logs were emitted in the expected order with the expected topics and data (as specified by the booleans)."},"expectEmit(bool,bool,bool,bool,address)":{"notice":"Same as the previous method, but also checks supplied address against emitting contract."},"expectEmit(bool,bool,bool,bool,address,uint64)":{"notice":"Expect a given number of logs from a specific emitter with the provided topics."},"expectEmit(bool,bool,bool,bool,uint64)":{"notice":"Expect a given number of logs with the provided topics."},"expectEmit(uint64)":{"notice":"Expect a given number of logs with all topic and data checks enabled."},"expectEmitAnonymous()":{"notice":"Prepare an expected anonymous log with all topic and data checks enabled. Call this function, then emit an anonymous event, then call a function. Internally after the call, we check if logs were emitted in the expected order with the expected topics and data."},"expectEmitAnonymous(address)":{"notice":"Same as the previous method, but also checks supplied address against emitting contract."},"expectEmitAnonymous(bool,bool,bool,bool,bool)":{"notice":"Prepare an expected anonymous log with (bool checkTopic1, bool checkTopic2, bool checkTopic3, bool checkData.). Call this function, then emit an anonymous event, then call a function. Internally after the call, we check if logs were emitted in the expected order with the expected topics and data (as specified by the booleans)."},"expectEmitAnonymous(bool,bool,bool,bool,bool,address)":{"notice":"Same as the previous method, but also checks supplied address against emitting contract."},"expectPartialRevert(bytes4)":{"notice":"Expects an error on next call that starts with the revert data."},"expectPartialRevert(bytes4,address)":{"notice":"Expects an error on next call to reverter address, that starts with the revert data."},"expectRevert()":{"notice":"Expects an error on next call with any revert data."},"expectRevert(address)":{"notice":"Expects an error with any revert data on next call to reverter address."},"expectRevert(address,uint64)":{"notice":"Expects a `count` number of reverts from the upcoming calls from the reverter address."},"expectRevert(bytes)":{"notice":"Expects an error on next call that exactly matches the revert data."},"expectRevert(bytes,address)":{"notice":"Expects an error from reverter address on next call, that exactly matches the revert data."},"expectRevert(bytes,address,uint64)":{"notice":"Expects a `count` number of reverts from the upcoming calls from the reverter address that exactly match the revert data."},"expectRevert(bytes,uint64)":{"notice":"Expects a `count` number of reverts from the upcoming calls that exactly match the revert data."},"expectRevert(bytes4)":{"notice":"Expects an error on next call that exactly matches the revert data."},"expectRevert(bytes4,address)":{"notice":"Expects an error from reverter address on next call, with any revert data."},"expectRevert(bytes4,address,uint64)":{"notice":"Expects a `count` number of reverts from the upcoming calls from the reverter address that match the revert data."},"expectRevert(bytes4,uint64)":{"notice":"Expects a `count` number of reverts from the upcoming calls that match the revert data."},"expectRevert(uint64)":{"notice":"Expects a `count` number of reverts from the upcoming calls with any revert data or reverter."},"expectSafeMemory(uint64,uint64)":{"notice":"Only allows memory writes to offsets [0x00, 0x60) ∪ [min, max) in the current subcontext. If any other memory is written to, the test will fail. Can be called multiple times to add more ranges to the set."},"expectSafeMemoryCall(uint64,uint64)":{"notice":"Only allows memory writes to offsets [0x00, 0x60) ∪ [min, max) in the next created subcontext. If any other memory is written to, the test will fail. Can be called multiple times to add more ranges to the set."},"fee(uint256)":{"notice":"Sets `block.basefee`."},"ffi(string[])":{"notice":"Performs a foreign function call via the terminal."},"foundryVersionAtLeast(string)":{"notice":"Returns true if the current Foundry version is greater than or equal to the given version. The given version string must be in the format `major.minor.patch`. This is equivalent to `foundryVersionCmp(version) >= 0`."},"foundryVersionCmp(string)":{"notice":"Compares the current Foundry version with the given version string. The given version string must be in the format `major.minor.patch`. Returns: -1 if current Foundry version is less than the given version 0 if current Foundry version equals the given version 1 if current Foundry version is greater than the given version This result can then be used with a comparison operator against `0`. For example, to check if the current Foundry version is greater than or equal to `1.0.0`: `if (foundryVersionCmp(\"1.0.0\") >= 0) { ... }`"},"fsMetadata(string)":{"notice":"Given a path, query the file system to get information about a file, directory, etc."},"getArtifactPathByCode(bytes)":{"notice":"Gets the artifact path from code (aka. creation code)."},"getArtifactPathByDeployedCode(bytes)":{"notice":"Gets the artifact path from deployed code (aka. runtime code)."},"getBlobBaseFee()":{"notice":"Gets the current `block.blobbasefee`. You should use this instead of `block.blobbasefee` if you use `vm.blobBaseFee`, as `block.blobbasefee` is assumed to be constant across a transaction, and as a result will get optimized out by the compiler. See https://github.com/foundry-rs/foundry/issues/6180"},"getBlobhashes()":{"notice":"Gets the blockhashes from the current transaction. Not available on EVM versions before Cancun. If used on unsupported EVM versions it will revert."},"getBlockNumber()":{"notice":"Gets the current `block.number`. You should use this instead of `block.number` if you use `vm.roll`, as `block.number` is assumed to be constant across a transaction, and as a result will get optimized out by the compiler. See https://github.com/foundry-rs/foundry/issues/6180"},"getBlockTimestamp()":{"notice":"Gets the current `block.timestamp`. You should use this instead of `block.timestamp` if you use `vm.warp`, as `block.timestamp` is assumed to be constant across a transaction, and as a result will get optimized out by the compiler. See https://github.com/foundry-rs/foundry/issues/6180"},"getBroadcast(string,uint64,uint8)":{"notice":"Returns the most recent broadcast for the given contract on `chainId` matching `txType`. For example: The most recent deployment can be fetched by passing `txType` as `CREATE` or `CREATE2`. The most recent call can be fetched by passing `txType` as `CALL`."},"getBroadcasts(string,uint64)":{"notice":"Returns all broadcasts for the given contract on `chainId`. Sorted such that the most recent broadcast is the first element, and the oldest is the last. i.e descending order of BroadcastTxSummary.blockNumber."},"getBroadcasts(string,uint64,uint8)":{"notice":"Returns all broadcasts for the given contract on `chainId` with the specified `txType`. Sorted such that the most recent broadcast is the first element, and the oldest is the last. i.e descending order of BroadcastTxSummary.blockNumber."},"getChain(string)":{"notice":"Returns a Chain struct for specific alias"},"getChain(uint256)":{"notice":"Returns a Chain struct for specific chainId"},"getCode(string)":{"notice":"Gets the creation bytecode from an artifact file. Takes in the relative path to the json file or the path to the artifact in the form of <path>:<contract>:<version> where <contract> and <version> parts are optional."},"getDeployedCode(string)":{"notice":"Gets the deployed bytecode from an artifact file. Takes in the relative path to the json file or the path to the artifact in the form of <path>:<contract>:<version> where <contract> and <version> parts are optional."},"getDeployment(string)":{"notice":"Returns the most recent deployment for the current `chainId`."},"getDeployment(string,uint64)":{"notice":"Returns the most recent deployment for the given contract on `chainId`"},"getDeployments(string,uint64)":{"notice":"Returns all deployments for the given contract on `chainId` Sorted in descending order of deployment time i.e descending order of BroadcastTxSummary.blockNumber. The most recent deployment is the first element, and the oldest is the last."},"getFoundryVersion()":{"notice":"Returns the Foundry version. Format: <cargo_version>-<tag>+<git_sha_short>.<unix_build_timestamp>.<profile> Sample output: 0.3.0-nightly+3cb96bde9b.1737036656.debug Note: Build timestamps may vary slightly across platforms due to separate CI jobs. For reliable version comparisons, use UNIX format (e.g., >= 1700000000) to compare timestamps while ignoring minor time differences."},"getLabel(address)":{"notice":"Gets the label for the specified address."},"getMappingKeyAndParentOf(address,bytes32)":{"notice":"Gets the map key and parent of a mapping at a given slot, for a given address."},"getMappingLength(address,bytes32)":{"notice":"Gets the number of elements in the mapping at the given slot, for a given address."},"getMappingSlotAt(address,bytes32,uint256)":{"notice":"Gets the elements at index idx of the mapping at the given slot, for a given address. The index must be less than the length of the mapping (i.e. the number of keys in the mapping)."},"getNonce((address,uint256,uint256,uint256))":{"notice":"Get the nonce of a `Wallet`."},"getNonce(address)":{"notice":"Gets the nonce of an account."},"getRecordedLogs()":{"notice":"Gets all the recorded logs."},"getStateDiff()":{"notice":"Returns state diffs from current `vm.startStateDiffRecording` session."},"getStateDiffJson()":{"notice":"Returns state diffs from current `vm.startStateDiffRecording` session, in json format."},"getWallets()":{"notice":"Returns addresses of available unlocked wallets in the script environment."},"indexOf(string,string)":{"notice":"Returns the index of the first occurrence of a `key` in an `input` string. Returns `NOT_FOUND` (i.e. `type(uint256).max`) if the `key` is not found. Returns 0 in case of an empty `key`."},"interceptInitcode()":{"notice":"Causes the next contract creation (via new) to fail and return its initcode in the returndata buffer. This allows type-safe access to the initcode payload that would be used for contract creation. Example usage: vm.interceptInitcode(); bytes memory initcode; try new MyContract(param1, param2) { assert(false); } catch (bytes memory interceptedInitcode) { initcode = interceptedInitcode; }"},"isContext(uint8)":{"notice":"Returns true if `forge` command was executed in given context."},"isDir(string)":{"notice":"Returns true if the path exists on disk and is pointing at a directory, else returns false."},"isFile(string)":{"notice":"Returns true if the path exists on disk and is pointing at a regular file, else returns false."},"isPersistent(address)":{"notice":"Returns true if the account is marked as persistent."},"keyExists(string,string)":{"notice":"Checks if `key` exists in a JSON object `keyExists` is being deprecated in favor of `keyExistsJson`. It will be removed in future versions."},"keyExistsJson(string,string)":{"notice":"Checks if `key` exists in a JSON object."},"keyExistsToml(string,string)":{"notice":"Checks if `key` exists in a TOML table."},"label(address,string)":{"notice":"Labels an address in call traces."},"lastCallGas()":{"notice":"Gets the gas used in the last call from the callee perspective."},"load(address,bytes32)":{"notice":"Loads a storage slot from an address."},"loadAllocs(string)":{"notice":"Load a genesis JSON file's `allocs` into the in-memory EVM state."},"makePersistent(address)":{"notice":"Marks that the account(s) should use persistent storage across fork swaps in a multifork setup Meaning, changes made to the state of this account will be kept when switching forks."},"makePersistent(address,address)":{"notice":"See `makePersistent(address)`."},"makePersistent(address,address,address)":{"notice":"See `makePersistent(address)`."},"makePersistent(address[])":{"notice":"See `makePersistent(address)`."},"mockCall(address,bytes,bytes)":{"notice":"Mocks a call to an address, returning specified data. Calldata can either be strict or a partial match, e.g. if you only pass a Solidity selector to the expected calldata, then the entire Solidity function will be mocked."},"mockCall(address,bytes4,bytes)":{"notice":"Mocks a call to an address, returning specified data. Calldata can either be strict or a partial match, e.g. if you only pass a Solidity selector to the expected calldata, then the entire Solidity function will be mocked. Overload to pass the function selector directly `token.approve.selector` instead of `abi.encodeWithSelector(token.approve.selector)`."},"mockCall(address,uint256,bytes,bytes)":{"notice":"Mocks a call to an address with a specific `msg.value`, returning specified data. Calldata match takes precedence over `msg.value` in case of ambiguity."},"mockCall(address,uint256,bytes4,bytes)":{"notice":"Mocks a call to an address with a specific `msg.value`, returning specified data. Calldata match takes precedence over `msg.value` in case of ambiguity. Overload to pass the function selector directly `token.approve.selector` instead of `abi.encodeWithSelector(token.approve.selector)`."},"mockCallRevert(address,bytes,bytes)":{"notice":"Reverts a call to an address with specified revert data."},"mockCallRevert(address,bytes4,bytes)":{"notice":"Reverts a call to an address with specified revert data. Overload to pass the function selector directly `token.approve.selector` instead of `abi.encodeWithSelector(token.approve.selector)`."},"mockCallRevert(address,uint256,bytes,bytes)":{"notice":"Reverts a call to an address with a specific `msg.value`, with specified revert data."},"mockCallRevert(address,uint256,bytes4,bytes)":{"notice":"Reverts a call to an address with a specific `msg.value`, with specified revert data. Overload to pass the function selector directly `token.approve.selector` instead of `abi.encodeWithSelector(token.approve.selector)`."},"mockCalls(address,bytes,bytes[])":{"notice":"Mocks multiple calls to an address, returning specified data for each call."},"mockCalls(address,uint256,bytes,bytes[])":{"notice":"Mocks multiple calls to an address with a specific `msg.value`, returning specified data for each call."},"mockFunction(address,address,bytes)":{"notice":"Whenever a call is made to `callee` with calldata `data`, this cheatcode instead calls `target` with the same calldata. This functionality is similar to a delegate call made to `target` contract from `callee`. Can be used to substitute a call to a function with another implementation that captures the primary logic of the original function but is easier to reason about. If calldata is not a strict match then partial match by selector is attempted."},"noAccessList()":{"notice":"Utility cheatcode to remove any EIP-2930 access list set by `accessList` cheatcode."},"parseAddress(string)":{"notice":"Parses the given `string` into an `address`."},"parseBool(string)":{"notice":"Parses the given `string` into a `bool`."},"parseBytes(string)":{"notice":"Parses the given `string` into `bytes`."},"parseBytes32(string)":{"notice":"Parses the given `string` into a `bytes32`."},"parseInt(string)":{"notice":"Parses the given `string` into a `int256`."},"parseJson(string)":{"notice":"ABI-encodes a JSON object."},"parseJson(string,string)":{"notice":"ABI-encodes a JSON object at `key`."},"parseJsonAddress(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `address`."},"parseJsonAddressArray(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `address[]`."},"parseJsonBool(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `bool`."},"parseJsonBoolArray(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `bool[]`."},"parseJsonBytes(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `bytes`."},"parseJsonBytes32(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `bytes32`."},"parseJsonBytes32Array(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `bytes32[]`."},"parseJsonBytesArray(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `bytes[]`."},"parseJsonInt(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `int256`."},"parseJsonIntArray(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `int256[]`."},"parseJsonKeys(string,string)":{"notice":"Returns an array of all the keys in a JSON object."},"parseJsonString(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `string`."},"parseJsonStringArray(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `string[]`."},"parseJsonType(string,string)":{"notice":"Parses a string of JSON data and coerces it to type corresponding to `typeDescription`."},"parseJsonType(string,string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to type corresponding to `typeDescription`."},"parseJsonTypeArray(string,string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to type array corresponding to `typeDescription`."},"parseJsonUint(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `uint256`."},"parseJsonUintArray(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `uint256[]`."},"parseToml(string)":{"notice":"ABI-encodes a TOML table."},"parseToml(string,string)":{"notice":"ABI-encodes a TOML table at `key`."},"parseTomlAddress(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `address`."},"parseTomlAddressArray(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `address[]`."},"parseTomlBool(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `bool`."},"parseTomlBoolArray(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `bool[]`."},"parseTomlBytes(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `bytes`."},"parseTomlBytes32(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `bytes32`."},"parseTomlBytes32Array(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `bytes32[]`."},"parseTomlBytesArray(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `bytes[]`."},"parseTomlInt(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `int256`."},"parseTomlIntArray(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `int256[]`."},"parseTomlKeys(string,string)":{"notice":"Returns an array of all the keys in a TOML table."},"parseTomlString(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `string`."},"parseTomlStringArray(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `string[]`."},"parseTomlType(string,string)":{"notice":"Parses a string of TOML data and coerces it to type corresponding to `typeDescription`."},"parseTomlType(string,string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to type corresponding to `typeDescription`."},"parseTomlTypeArray(string,string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to type array corresponding to `typeDescription`."},"parseTomlUint(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `uint256`."},"parseTomlUintArray(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `uint256[]`."},"parseUint(string)":{"notice":"Parses the given `string` into a `uint256`."},"pauseGasMetering()":{"notice":"Pauses gas metering (i.e. gas usage is not counted). Noop if already paused."},"pauseTracing()":{"notice":"Pauses collection of call traces. Useful in cases when you want to skip tracing of complex calls which are not useful for debugging."},"prank(address)":{"notice":"Sets the *next* call's `msg.sender` to be the input address."},"prank(address,address)":{"notice":"Sets the *next* call's `msg.sender` to be the input address, and the `tx.origin` to be the second input."},"prank(address,address,bool)":{"notice":"Sets the *next* delegate call's `msg.sender` to be the input address, and the `tx.origin` to be the second input."},"prank(address,bool)":{"notice":"Sets the *next* delegate call's `msg.sender` to be the input address."},"prevrandao(bytes32)":{"notice":"Sets `block.prevrandao`. Not available on EVM versions before Paris. Use `difficulty` instead. If used on unsupported EVM versions it will revert."},"prevrandao(uint256)":{"notice":"Sets `block.prevrandao`. Not available on EVM versions before Paris. Use `difficulty` instead. If used on unsupported EVM versions it will revert."},"projectRoot()":{"notice":"Get the path of the current project root."},"prompt(string)":{"notice":"Prompts the user for a string value in the terminal."},"promptAddress(string)":{"notice":"Prompts the user for an address in the terminal."},"promptSecret(string)":{"notice":"Prompts the user for a hidden string value in the terminal."},"promptSecretUint(string)":{"notice":"Prompts the user for hidden uint256 in the terminal (usually pk)."},"promptUint(string)":{"notice":"Prompts the user for uint256 in the terminal."},"publicKeyP256(uint256)":{"notice":"Derives secp256r1 public key from the provided `privateKey`."},"randomAddress()":{"notice":"Returns a random `address`."},"randomBool()":{"notice":"Returns a random `bool`."},"randomBytes(uint256)":{"notice":"Returns a random byte array value of the given length."},"randomBytes4()":{"notice":"Returns a random fixed-size byte array of length 4."},"randomBytes8()":{"notice":"Returns a random fixed-size byte array of length 8."},"randomInt()":{"notice":"Returns a random `int256` value."},"randomInt(uint256)":{"notice":"Returns a random `int256` value of given bits."},"randomUint()":{"notice":"Returns a random uint256 value."},"randomUint(uint256)":{"notice":"Returns a random `uint256` value of given bits."},"randomUint(uint256,uint256)":{"notice":"Returns random uint256 value between the provided range (=min..=max)."},"readCallers()":{"notice":"Reads the current `msg.sender` and `tx.origin` from state and reports if there is any active caller modification."},"readDir(string)":{"notice":"Reads the directory at the given path recursively, up to `maxDepth`. `maxDepth` defaults to 1, meaning only the direct children of the given directory will be returned. Follows symbolic links if `followLinks` is true."},"readDir(string,uint64)":{"notice":"See `readDir(string)`."},"readDir(string,uint64,bool)":{"notice":"See `readDir(string)`."},"readFile(string)":{"notice":"Reads the entire content of file to string. `path` is relative to the project root."},"readFileBinary(string)":{"notice":"Reads the entire content of file as binary. `path` is relative to the project root."},"readLine(string)":{"notice":"Reads next line of file to string."},"readLink(string)":{"notice":"Reads a symbolic link, returning the path that the link points to. This cheatcode will revert in the following situations, but is not limited to just these cases: - `path` is not a symbolic link. - `path` does not exist."},"record()":{"notice":"Records all storage reads and writes."},"recordLogs()":{"notice":"Record all the transaction logs."},"rememberKey(uint256)":{"notice":"Adds a private key to the local forge wallet and returns the address."},"rememberKeys(string,string,string,uint32)":{"notice":"Derive a set number of wallets from a mnemonic in the specified language at the derivation path `m/44'/60'/0'/0/{0..count}`. The respective private keys are saved to the local forge wallet for later use and their addresses are returned."},"rememberKeys(string,string,uint32)":{"notice":"Derive a set number of wallets from a mnemonic at the derivation path `m/44'/60'/0'/0/{0..count}`. The respective private keys are saved to the local forge wallet for later use and their addresses are returned."},"removeDir(string,bool)":{"notice":"Removes a directory at the provided path. This cheatcode will revert in the following situations, but is not limited to just these cases: - `path` doesn't exist. - `path` isn't a directory. - User lacks permissions to modify `path`. - The directory is not empty and `recursive` is false. `path` is relative to the project root."},"removeFile(string)":{"notice":"Removes a file from the filesystem. This cheatcode will revert in the following situations, but is not limited to just these cases: - `path` points to a directory. - The file doesn't exist. - The user lacks permissions to remove the file. `path` is relative to the project root."},"replace(string,string,string)":{"notice":"Replaces occurrences of `from` in the given `string` with `to`."},"resetGasMetering()":{"notice":"Reset gas metering (i.e. gas usage is set to gas limit)."},"resetNonce(address)":{"notice":"Resets the nonce of an account to 0 for EOAs and 1 for contract accounts."},"resumeGasMetering()":{"notice":"Resumes gas metering (i.e. gas usage is counted again). Noop if already on."},"resumeTracing()":{"notice":"Unpauses collection of call traces."},"revertTo(uint256)":{"notice":"`revertTo` is being deprecated in favor of `revertToState`. It will be removed in future versions."},"revertToAndDelete(uint256)":{"notice":"`revertToAndDelete` is being deprecated in favor of `revertToStateAndDelete`. It will be removed in future versions."},"revertToState(uint256)":{"notice":"Revert the state of the EVM to a previous snapshot Takes the snapshot ID to revert to. Returns `true` if the snapshot was successfully reverted. Returns `false` if the snapshot does not exist. **Note:** This does not automatically delete the snapshot. To delete the snapshot use `deleteStateSnapshot`."},"revertToStateAndDelete(uint256)":{"notice":"Revert the state of the EVM to a previous snapshot and automatically deletes the snapshots Takes the snapshot ID to revert to. Returns `true` if the snapshot was successfully reverted and deleted. Returns `false` if the snapshot does not exist."},"revokePersistent(address)":{"notice":"Revokes persistent status from the address, previously added via `makePersistent`."},"revokePersistent(address[])":{"notice":"See `revokePersistent(address)`."},"roll(uint256)":{"notice":"Sets `block.height`."},"rollFork(bytes32)":{"notice":"Updates the currently active fork to given transaction. This will `rollFork` with the number of the block the transaction was mined in and replays all transaction mined before it in the block."},"rollFork(uint256)":{"notice":"Updates the currently active fork to given block number This is similar to `roll` but for the currently active fork."},"rollFork(uint256,bytes32)":{"notice":"Updates the given fork to block number of the given transaction and replays all transaction mined before it in the block."},"rollFork(uint256,uint256)":{"notice":"Updates the given fork to given block number."},"rpc(string,string)":{"notice":"Performs an Ethereum JSON-RPC request to the current fork URL."},"rpc(string,string,string)":{"notice":"Performs an Ethereum JSON-RPC request to the given endpoint."},"rpcUrl(string)":{"notice":"Returns the RPC url for the given alias."},"rpcUrlStructs()":{"notice":"Returns all rpc urls and their aliases as structs."},"rpcUrls()":{"notice":"Returns all rpc urls and their aliases `[alias, url][]`."},"selectFork(uint256)":{"notice":"Takes a fork identifier created by `createFork` and sets the corresponding forked state as active."},"serializeAddress(string,string,address)":{"notice":"See `serializeJson`."},"serializeAddress(string,string,address[])":{"notice":"See `serializeJson`."},"serializeBool(string,string,bool)":{"notice":"See `serializeJson`."},"serializeBool(string,string,bool[])":{"notice":"See `serializeJson`."},"serializeBytes(string,string,bytes)":{"notice":"See `serializeJson`."},"serializeBytes(string,string,bytes[])":{"notice":"See `serializeJson`."},"serializeBytes32(string,string,bytes32)":{"notice":"See `serializeJson`."},"serializeBytes32(string,string,bytes32[])":{"notice":"See `serializeJson`."},"serializeInt(string,string,int256)":{"notice":"See `serializeJson`."},"serializeInt(string,string,int256[])":{"notice":"See `serializeJson`."},"serializeJson(string,string)":{"notice":"Serializes a key and value to a JSON object stored in-memory that can be later written to a file. Returns the stringified version of the specific JSON file up to that moment."},"serializeJsonType(string,bytes)":{"notice":"See `serializeJson`."},"serializeJsonType(string,string,string,bytes)":{"notice":"See `serializeJson`."},"serializeString(string,string,string)":{"notice":"See `serializeJson`."},"serializeString(string,string,string[])":{"notice":"See `serializeJson`."},"serializeUint(string,string,uint256)":{"notice":"See `serializeJson`."},"serializeUint(string,string,uint256[])":{"notice":"See `serializeJson`."},"serializeUintToHex(string,string,uint256)":{"notice":"See `serializeJson`."},"setArbitraryStorage(address)":{"notice":"Utility cheatcode to set arbitrary storage for given target address."},"setArbitraryStorage(address,bool)":{"notice":"Utility cheatcode to set arbitrary storage for given target address and overwrite any storage slots that have been previously set."},"setBlockhash(uint256,bytes32)":{"notice":"Set blockhash for the current block. It only sets the blockhash for blocks where `block.number - 256 <= number < block.number`."},"setEnv(string,string)":{"notice":"Sets environment variables."},"setNonce(address,uint64)":{"notice":"Sets the nonce of an account. Must be higher than the current nonce of the account."},"setNonceUnsafe(address,uint64)":{"notice":"Sets the nonce of an account to an arbitrary value."},"shuffle(uint256[])":{"notice":"Randomly shuffles an array."},"sign((address,uint256,uint256,uint256),bytes32)":{"notice":"Signs data with a `Wallet`."},"sign(address,bytes32)":{"notice":"Signs `digest` with signer provided to script using the secp256k1 curve. Raises error if none of the signers passed into the script have provided address."},"sign(bytes32)":{"notice":"Signs `digest` with signer provided to script using the secp256k1 curve. If `--sender` is provided, the signer with provided address is used, otherwise, if exactly one signer is provided to the script, that signer is used. Raises error if signer passed through `--sender` does not match any unlocked signers or if `--sender` is not provided and not exactly one signer is passed to the script."},"sign(uint256,bytes32)":{"notice":"Signs `digest` with `privateKey` using the secp256k1 curve."},"signAndAttachDelegation(address,uint256)":{"notice":"Sign an EIP-7702 authorization and designate the next call as an EIP-7702 transaction"},"signAndAttachDelegation(address,uint256,uint64)":{"notice":"Sign an EIP-7702 authorization and designate the next call as an EIP-7702 transaction for specific nonce"},"signCompact((address,uint256,uint256,uint256),bytes32)":{"notice":"Signs data with a `Wallet`. Returns a compact signature (`r`, `vs`) as per EIP-2098, where `vs` encodes both the signature's `s` value, and the recovery id `v` in a single bytes32. This format reduces the signature size from 65 to 64 bytes."},"signCompact(address,bytes32)":{"notice":"Signs `digest` with signer provided to script using the secp256k1 curve. Returns a compact signature (`r`, `vs`) as per EIP-2098, where `vs` encodes both the signature's `s` value, and the recovery id `v` in a single bytes32. This format reduces the signature size from 65 to 64 bytes. Raises error if none of the signers passed into the script have provided address."},"signCompact(bytes32)":{"notice":"Signs `digest` with signer provided to script using the secp256k1 curve. Returns a compact signature (`r`, `vs`) as per EIP-2098, where `vs` encodes both the signature's `s` value, and the recovery id `v` in a single bytes32. This format reduces the signature size from 65 to 64 bytes. If `--sender` is provided, the signer with provided address is used, otherwise, if exactly one signer is provided to the script, that signer is used. Raises error if signer passed through `--sender` does not match any unlocked signers or if `--sender` is not provided and not exactly one signer is passed to the script."},"signCompact(uint256,bytes32)":{"notice":"Signs `digest` with `privateKey` using the secp256k1 curve. Returns a compact signature (`r`, `vs`) as per EIP-2098, where `vs` encodes both the signature's `s` value, and the recovery id `v` in a single bytes32. This format reduces the signature size from 65 to 64 bytes."},"signDelegation(address,uint256)":{"notice":"Sign an EIP-7702 authorization for delegation"},"signDelegation(address,uint256,uint64)":{"notice":"Sign an EIP-7702 authorization for delegation for specific nonce"},"signP256(uint256,bytes32)":{"notice":"Signs `digest` with `privateKey` using the secp256r1 curve."},"skip(bool)":{"notice":"Marks a test as skipped. Must be called at the top level of a test."},"skip(bool,string)":{"notice":"Marks a test as skipped with a reason. Must be called at the top level of a test."},"sleep(uint256)":{"notice":"Suspends execution of the main thread for `duration` milliseconds."},"snapshot()":{"notice":"`snapshot` is being deprecated in favor of `snapshotState`. It will be removed in future versions."},"snapshotGasLastCall(string)":{"notice":"Snapshot capture the gas usage of the last call by name from the callee perspective."},"snapshotGasLastCall(string,string)":{"notice":"Snapshot capture the gas usage of the last call by name in a group from the callee perspective."},"snapshotState()":{"notice":"Snapshot the current state of the evm. Returns the ID of the snapshot that was created. To revert a snapshot use `revertToState`."},"snapshotValue(string,string,uint256)":{"notice":"Snapshot capture an arbitrary numerical value by name in a group."},"snapshotValue(string,uint256)":{"notice":"Snapshot capture an arbitrary numerical value by name. The group name is derived from the contract name."},"sort(uint256[])":{"notice":"Sorts an array in ascending order."},"split(string,string)":{"notice":"Splits the given `string` into an array of strings divided by the `delimiter`."},"startBroadcast()":{"notice":"Has all subsequent calls (at this call depth only) create transactions that can later be signed and sent onchain. Broadcasting address is determined by checking the following in order: 1. If `--sender` argument was provided, that address is used. 2. If exactly one signer (e.g. private key, hw wallet, keystore) is set when `forge broadcast` is invoked, that signer is used. 3. Otherwise, default foundry sender (1804c8AB1F12E6bbf3894d4083f33e07309d1f38) is used."},"startBroadcast(address)":{"notice":"Has all subsequent calls (at this call depth only) create transactions with the address provided that can later be signed and sent onchain."},"startBroadcast(uint256)":{"notice":"Has all subsequent calls (at this call depth only) create transactions with the private key provided that can later be signed and sent onchain."},"startDebugTraceRecording()":{"notice":"Records the debug trace during the run."},"startMappingRecording()":{"notice":"Starts recording all map SSTOREs for later retrieval."},"startPrank(address)":{"notice":"Sets all subsequent calls' `msg.sender` to be the input address until `stopPrank` is called."},"startPrank(address,address)":{"notice":"Sets all subsequent calls' `msg.sender` to be the input address until `stopPrank` is called, and the `tx.origin` to be the second input."},"startPrank(address,address,bool)":{"notice":"Sets all subsequent delegate calls' `msg.sender` to be the input address until `stopPrank` is called, and the `tx.origin` to be the second input."},"startPrank(address,bool)":{"notice":"Sets all subsequent delegate calls' `msg.sender` to be the input address until `stopPrank` is called."},"startSnapshotGas(string)":{"notice":"Start a snapshot capture of the current gas usage by name. The group name is derived from the contract name."},"startSnapshotGas(string,string)":{"notice":"Start a snapshot capture of the current gas usage by name in a group."},"startStateDiffRecording()":{"notice":"Record all account accesses as part of CREATE, CALL or SELFDESTRUCT opcodes in order, along with the context of the calls"},"stopAndReturnDebugTraceRecording()":{"notice":"Stop debug trace recording and returns the recorded debug trace."},"stopAndReturnStateDiff()":{"notice":"Returns an ordered array of all account accesses from a `vm.startStateDiffRecording` session."},"stopBroadcast()":{"notice":"Stops collecting onchain transactions."},"stopExpectSafeMemory()":{"notice":"Stops all safe memory expectation in the current subcontext."},"stopMappingRecording()":{"notice":"Stops recording all map SSTOREs for later retrieval and clears the recorded data."},"stopPrank()":{"notice":"Resets subsequent calls' `msg.sender` to be `address(this)`."},"stopSnapshotGas()":{"notice":"Stop the snapshot capture of the current gas by latest snapshot name, capturing the gas used since the start."},"stopSnapshotGas(string)":{"notice":"Stop the snapshot capture of the current gas usage by name, capturing the gas used since the start. The group name is derived from the contract name."},"stopSnapshotGas(string,string)":{"notice":"Stop the snapshot capture of the current gas usage by name in a group, capturing the gas used since the start."},"store(address,bytes32,bytes32)":{"notice":"Stores a value to an address' storage slot."},"toBase64(bytes)":{"notice":"Encodes a `bytes` value to a base64 string."},"toBase64(string)":{"notice":"Encodes a `string` value to a base64 string."},"toBase64URL(bytes)":{"notice":"Encodes a `bytes` value to a base64url string."},"toBase64URL(string)":{"notice":"Encodes a `string` value to a base64url string."},"toLowercase(string)":{"notice":"Converts the given `string` value to Lowercase."},"toString(address)":{"notice":"Converts the given value to a `string`."},"toString(bool)":{"notice":"Converts the given value to a `string`."},"toString(bytes)":{"notice":"Converts the given value to a `string`."},"toString(bytes32)":{"notice":"Converts the given value to a `string`."},"toString(int256)":{"notice":"Converts the given value to a `string`."},"toString(uint256)":{"notice":"Converts the given value to a `string`."},"toUppercase(string)":{"notice":"Converts the given `string` value to Uppercase."},"transact(bytes32)":{"notice":"Fetches the given transaction from the active fork and executes it on the current state."},"transact(uint256,bytes32)":{"notice":"Fetches the given transaction from the given fork and executes it on the current state."},"trim(string)":{"notice":"Trims leading and trailing whitespace from the given `string` value."},"tryFfi(string[])":{"notice":"Performs a foreign function call via terminal and returns the exit code, stdout, and stderr."},"txGasPrice(uint256)":{"notice":"Sets `tx.gasprice`."},"unixTime()":{"notice":"Returns the time since unix epoch in milliseconds."},"warmSlot(address,bytes32)":{"notice":"Utility cheatcode to mark specific storage slot as warm, simulating a prior read."},"warp(uint256)":{"notice":"Sets `block.timestamp`."},"writeFile(string,string)":{"notice":"Writes data to file, creating a file if it does not exist, and entirely replacing its contents if it does. `path` is relative to the project root."},"writeFileBinary(string,bytes)":{"notice":"Writes binary data to a file, creating a file if it does not exist, and entirely replacing its contents if it does. `path` is relative to the project root."},"writeJson(string,string)":{"notice":"Write a serialized JSON object to a file. If the file exists, it will be overwritten."},"writeJson(string,string,string)":{"notice":"Write a serialized JSON object to an **existing** JSON file, replacing a value with key = <value_key.> This is useful to replace a specific value of a JSON file, without having to parse the entire thing."},"writeLine(string,string)":{"notice":"Writes line to file, creating a file if it does not exist. `path` is relative to the project root."},"writeToml(string,string)":{"notice":"Takes serialized JSON, converts to TOML and write a serialized TOML to a file."},"writeToml(string,string,string)":{"notice":"Takes serialized JSON, converts to TOML and write a serialized TOML table to an **existing** TOML file, replacing a value with key = <value_key.> This is useful to replace a specific value of a TOML file, without having to parse the entire thing."}},"version":1}},"settings":{"remappings":["forge-std-1.9.7/=dependencies/forge-std-1.9.7/src/","forge-std/=dependencies/forge-std-1.9.7/src/","kam/src/=src/","kam/test/=test/","openzeppelin/=src/vendor/openzeppelin/","solady/=src/vendor/solady/","uniswap/=src/vendor/uniswap/"],"optimizer":{"enabled":true,"runs":10000},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"dependencies/forge-std-1.9.7/src/Vm.sol":"Vm"},"evmVersion":"prague","libraries":{},"viaIR":true},"sources":{"dependencies/forge-std-1.9.7/src/Vm.sol":{"keccak256":"0xaae88142a348064677cf81169ea0ca706be3e99e2a0f13a01878ff8d52cf6b25","urls":["bzz-raw://da4fb0ed1b31381c7e60ee386acc72796e8a8325c83739ec9a3678e2f841073c","dweb:/ipfs/Qmb4MU6FpAi8Wt5kUQ3wa7ooHnfMVbdd9zuvnqbTehLmxJ"],"license":"MIT OR Apache-2.0"}},"version":1},"storageLayout":{"storage":[],"types":{}},"ast":{"absolutePath":"dependencies/forge-std-1.9.7/src/Vm.sol","id":18002,"exportedSymbols":{"Vm":[18001],"VmSafe":[16930]},"nodeType":"SourceUnit","src":"117:125126:15","nodes":[{"id":12988,"nodeType":"PragmaDirective","src":"117:31:15","nodes":[],"literals":["solidity",">=","0.6",".2","<","0.9",".0"]},{"id":12989,"nodeType":"PragmaDirective","src":"149:33:15","nodes":[],"literals":["experimental","ABIEncoderV2"]},{"id":16930,"nodeType":"ContractDefinition","src":"409:98073:15","nodes":[{"id":12997,"nodeType":"EnumDefinition","src":"529:533:15","nodes":[],"canonicalName":"VmSafe.CallerMode","documentation":{"id":12991,"nodeType":"StructuredDocumentation","src":"432:92:15","text":"A modification applied to either `msg.sender` or `tx.origin`. Returned by `readCallers`."},"members":[{"id":12992,"name":"None","nameLocation":"610:4:15","nodeType":"EnumValue","src":"610:4:15"},{"id":12993,"name":"Broadcast","nameLocation":"714:9:15","nodeType":"EnumValue","src":"714:9:15"},{"id":12994,"name":"RecurrentBroadcast","nameLocation":"829:18:15","nodeType":"EnumValue","src":"829:18:15"},{"id":12995,"name":"Prank","nameLocation":"939:5:15","nodeType":"EnumValue","src":"939:5:15"},{"id":12996,"name":"RecurrentPrank","nameLocation":"1042:14:15","nodeType":"EnumValue","src":"1042:14:15"}],"name":"CallerMode","nameLocation":"534:10:15"},{"id":13010,"nodeType":"EnumDefinition","src":"1118:791:15","nodes":[],"canonicalName":"VmSafe.AccountAccessKind","documentation":{"id":12998,"nodeType":"StructuredDocumentation","src":"1068:45:15","text":"The kind of account access that occurred."},"members":[{"id":12999,"name":"Call","nameLocation":"1186:4:15","nodeType":"EnumValue","src":"1186:4:15"},{"id":13000,"name":"DelegateCall","nameLocation":"1252:12:15","nodeType":"EnumValue","src":"1252:12:15"},{"id":13001,"name":"CallCode","nameLocation":"1322:8:15","nodeType":"EnumValue","src":"1322:8:15"},{"id":13002,"name":"StaticCall","nameLocation":"1390:10:15","nodeType":"EnumValue","src":"1390:10:15"},{"id":13003,"name":"Create","nameLocation":"1446:6:15","nodeType":"EnumValue","src":"1446:6:15"},{"id":13004,"name":"SelfDestruct","nameLocation":"1505:12:15","nodeType":"EnumValue","src":"1505:12:15"},{"id":13005,"name":"Resume","nameLocation":"1644:6:15","nodeType":"EnumValue","src":"1644:6:15"},{"id":13006,"name":"Balance","nameLocation":"1703:7:15","nodeType":"EnumValue","src":"1703:7:15"},{"id":13007,"name":"Extcodesize","nameLocation":"1764:11:15","nodeType":"EnumValue","src":"1764:11:15"},{"id":13008,"name":"Extcodehash","nameLocation":"1829:11:15","nodeType":"EnumValue","src":"1829:11:15"},{"id":13009,"name":"Extcodecopy","nameLocation":"1892:11:15","nodeType":"EnumValue","src":"1892:11:15"}],"name":"AccountAccessKind","nameLocation":"1123:17:15"},{"id":13021,"nodeType":"EnumDefinition","src":"1949:683:15","nodes":[],"canonicalName":"VmSafe.ForgeContext","documentation":{"id":13011,"nodeType":"StructuredDocumentation","src":"1915:29:15","text":"Forge execution contexts."},"members":[{"id":13012,"name":"TestGroup","nameLocation":"2047:9:15","nodeType":"EnumValue","src":"2047:9:15"},{"id":13013,"name":"Test","nameLocation":"2109:4:15","nodeType":"EnumValue","src":"2109:4:15"},{"id":13014,"name":"Coverage","nameLocation":"2170:8:15","nodeType":"EnumValue","src":"2170:8:15"},{"id":13015,"name":"Snapshot","nameLocation":"2235:8:15","nodeType":"EnumValue","src":"2235:8:15"},{"id":13016,"name":"ScriptGroup","nameLocation":"2327:11:15","nodeType":"EnumValue","src":"2327:11:15"},{"id":13017,"name":"ScriptDryRun","nameLocation":"2393:12:15","nodeType":"EnumValue","src":"2393:12:15"},{"id":13018,"name":"ScriptBroadcast","nameLocation":"2472:15:15","nodeType":"EnumValue","src":"2472:15:15"},{"id":13019,"name":"ScriptResume","nameLocation":"2551:12:15","nodeType":"EnumValue","src":"2551:12:15"},{"id":13020,"name":"Unknown","nameLocation":"2619:7:15","nodeType":"EnumValue","src":"2619:7:15"}],"name":"ForgeContext","nameLocation":"1954:12:15"},{"id":13026,"nodeType":"EnumDefinition","src":"2696:208:15","nodes":[],"canonicalName":"VmSafe.BroadcastTxType","documentation":{"id":13022,"nodeType":"StructuredDocumentation","src":"2638:53:15","text":"The transaction type (`txType`) of the broadcast."},"members":[{"id":13023,"name":"Call","nameLocation":"2770:4:15","nodeType":"EnumValue","src":"2770:4:15"},{"id":13024,"name":"Create","nameLocation":"2829:6:15","nodeType":"EnumValue","src":"2829:6:15"},{"id":13025,"name":"Create2","nameLocation":"2891:7:15","nodeType":"EnumValue","src":"2891:7:15"}],"name":"BroadcastTxType","nameLocation":"2701:15:15"},{"id":13035,"nodeType":"StructDefinition","src":"2966:237:15","nodes":[],"canonicalName":"VmSafe.Log","documentation":{"id":13027,"nodeType":"StructuredDocumentation","src":"2910:51:15","text":"An Ethereum log. Returned by `getRecordedLogs`."},"members":[{"constant":false,"id":13030,"mutability":"mutable","name":"topics","nameLocation":"3064:6:15","nodeType":"VariableDeclaration","scope":13035,"src":"3054:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":13028,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3054:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":13029,"nodeType":"ArrayTypeName","src":"3054:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":13032,"mutability":"mutable","name":"data","nameLocation":"3122:4:15","nodeType":"VariableDeclaration","scope":13035,"src":"3116:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":13031,"name":"bytes","nodeType":"ElementaryTypeName","src":"3116:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":13034,"mutability":"mutable","name":"emitter","nameLocation":"3189:7:15","nodeType":"VariableDeclaration","scope":13035,"src":"3181:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":13033,"name":"address","nodeType":"ElementaryTypeName","src":"3181:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"Log","nameLocation":"2973:3:15","scope":16930,"visibility":"public"},{"id":13041,"nodeType":"StructDefinition","src":"3272:119:15","nodes":[],"canonicalName":"VmSafe.Rpc","documentation":{"id":13036,"nodeType":"StructuredDocumentation","src":"3209:58:15","text":"An RPC URL and its alias. Returned by `rpcUrlStructs`."},"members":[{"constant":false,"id":13038,"mutability":"mutable","name":"key","nameLocation":"3337:3:15","nodeType":"VariableDeclaration","scope":13041,"src":"3330:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":13037,"name":"string","nodeType":"ElementaryTypeName","src":"3330:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13040,"mutability":"mutable","name":"url","nameLocation":"3381:3:15","nodeType":"VariableDeclaration","scope":13041,"src":"3374:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":13039,"name":"string","nodeType":"ElementaryTypeName","src":"3374:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"Rpc","nameLocation":"3279:3:15","scope":16930,"visibility":"public"},{"id":13062,"nodeType":"StructDefinition","src":"3451:615:15","nodes":[],"canonicalName":"VmSafe.EthGetLogs","documentation":{"id":13042,"nodeType":"StructuredDocumentation","src":"3397:49:15","text":"An RPC log object. Returned by `eth_getLogs`."},"members":[{"constant":false,"id":13044,"mutability":"mutable","name":"emitter","nameLocation":"3532:7:15","nodeType":"VariableDeclaration","scope":13062,"src":"3524:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":13043,"name":"address","nodeType":"ElementaryTypeName","src":"3524:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":13047,"mutability":"mutable","name":"topics","nameLocation":"3626:6:15","nodeType":"VariableDeclaration","scope":13062,"src":"3616:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":13045,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3616:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":13046,"nodeType":"ArrayTypeName","src":"3616:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":13049,"mutability":"mutable","name":"data","nameLocation":"3684:4:15","nodeType":"VariableDeclaration","scope":13062,"src":"3678:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":13048,"name":"bytes","nodeType":"ElementaryTypeName","src":"3678:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":13051,"mutability":"mutable","name":"blockHash","nameLocation":"3733:9:15","nodeType":"VariableDeclaration","scope":13062,"src":"3725:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":13050,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3725:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":13053,"mutability":"mutable","name":"blockNumber","nameLocation":"3788:11:15","nodeType":"VariableDeclaration","scope":13062,"src":"3781:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":13052,"name":"uint64","nodeType":"ElementaryTypeName","src":"3781:6:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":13055,"mutability":"mutable","name":"transactionHash","nameLocation":"3850:15:15","nodeType":"VariableDeclaration","scope":13062,"src":"3842:23:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":13054,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3842:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":13057,"mutability":"mutable","name":"transactionIndex","nameLocation":"3929:16:15","nodeType":"VariableDeclaration","scope":13062,"src":"3922:23:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":13056,"name":"uint64","nodeType":"ElementaryTypeName","src":"3922:6:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":13059,"mutability":"mutable","name":"logIndex","nameLocation":"3989:8:15","nodeType":"VariableDeclaration","scope":13062,"src":"3981:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13058,"name":"uint256","nodeType":"ElementaryTypeName","src":"3981:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":13061,"mutability":"mutable","name":"removed","nameLocation":"4052:7:15","nodeType":"VariableDeclaration","scope":13062,"src":"4047:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":13060,"name":"bool","nodeType":"ElementaryTypeName","src":"4047:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"EthGetLogs","nameLocation":"3458:10:15","scope":16930,"visibility":"public"},{"id":13074,"nodeType":"StructDefinition","src":"4142:334:15","nodes":[],"canonicalName":"VmSafe.DirEntry","documentation":{"id":13063,"nodeType":"StructuredDocumentation","src":"4072:65:15","text":"A single entry in a directory listing. Returned by `readDir`."},"members":[{"constant":false,"id":13065,"mutability":"mutable","name":"errorMessage","nameLocation":"4213:12:15","nodeType":"VariableDeclaration","scope":13074,"src":"4206:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":13064,"name":"string","nodeType":"ElementaryTypeName","src":"4206:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13067,"mutability":"mutable","name":"path","nameLocation":"4276:4:15","nodeType":"VariableDeclaration","scope":13074,"src":"4269:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":13066,"name":"string","nodeType":"ElementaryTypeName","src":"4269:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13069,"mutability":"mutable","name":"depth","nameLocation":"4332:5:15","nodeType":"VariableDeclaration","scope":13074,"src":"4325:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":13068,"name":"uint64","nodeType":"ElementaryTypeName","src":"4325:6:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":13071,"mutability":"mutable","name":"isDir","nameLocation":"4397:5:15","nodeType":"VariableDeclaration","scope":13074,"src":"4392:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":13070,"name":"bool","nodeType":"ElementaryTypeName","src":"4392:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":13073,"mutability":"mutable","name":"isSymlink","nameLocation":"4460:9:15","nodeType":"VariableDeclaration","scope":13074,"src":"4455:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":13072,"name":"bool","nodeType":"ElementaryTypeName","src":"4455:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"DirEntry","nameLocation":"4149:8:15","scope":16930,"visibility":"public"},{"id":13090,"nodeType":"StructDefinition","src":"4706:599:15","nodes":[],"canonicalName":"VmSafe.FsMetadata","documentation":{"id":13075,"nodeType":"StructuredDocumentation","src":"4482:219:15","text":"Metadata information about a file.\n This structure is returned from the `fsMetadata` function and represents known\n metadata about a file such as its permissions, size, modification\n times, etc."},"members":[{"constant":false,"id":13077,"mutability":"mutable","name":"isDir","nameLocation":"4792:5:15","nodeType":"VariableDeclaration","scope":13090,"src":"4787:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":13076,"name":"bool","nodeType":"ElementaryTypeName","src":"4787:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":13079,"mutability":"mutable","name":"isSymlink","nameLocation":"4863:9:15","nodeType":"VariableDeclaration","scope":13090,"src":"4858:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":13078,"name":"bool","nodeType":"ElementaryTypeName","src":"4858:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":13081,"mutability":"mutable","name":"length","nameLocation":"4955:6:15","nodeType":"VariableDeclaration","scope":13090,"src":"4947:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13080,"name":"uint256","nodeType":"ElementaryTypeName","src":"4947:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":13083,"mutability":"mutable","name":"readOnly","nameLocation":"5046:8:15","nodeType":"VariableDeclaration","scope":13090,"src":"5041:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":13082,"name":"bool","nodeType":"ElementaryTypeName","src":"5041:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":13085,"mutability":"mutable","name":"modified","nameLocation":"5135:8:15","nodeType":"VariableDeclaration","scope":13090,"src":"5127:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13084,"name":"uint256","nodeType":"ElementaryTypeName","src":"5127:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":13087,"mutability":"mutable","name":"accessed","nameLocation":"5211:8:15","nodeType":"VariableDeclaration","scope":13090,"src":"5203:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13086,"name":"uint256","nodeType":"ElementaryTypeName","src":"5203:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":13089,"mutability":"mutable","name":"created","nameLocation":"5291:7:15","nodeType":"VariableDeclaration","scope":13090,"src":"5283:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13088,"name":"uint256","nodeType":"ElementaryTypeName","src":"5283:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"FsMetadata","nameLocation":"4713:10:15","scope":16930,"visibility":"public"},{"id":13100,"nodeType":"StructDefinition","src":"5359:277:15","nodes":[],"canonicalName":"VmSafe.Wallet","documentation":{"id":13091,"nodeType":"StructuredDocumentation","src":"5311:43:15","text":"A wallet with a public and private key."},"members":[{"constant":false,"id":13093,"mutability":"mutable","name":"addr","nameLocation":"5424:4:15","nodeType":"VariableDeclaration","scope":13100,"src":"5416:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":13092,"name":"address","nodeType":"ElementaryTypeName","src":"5416:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":13095,"mutability":"mutable","name":"publicKeyX","nameLocation":"5486:10:15","nodeType":"VariableDeclaration","scope":13100,"src":"5478:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13094,"name":"uint256","nodeType":"ElementaryTypeName","src":"5478:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":13097,"mutability":"mutable","name":"publicKeyY","nameLocation":"5554:10:15","nodeType":"VariableDeclaration","scope":13100,"src":"5546:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13096,"name":"uint256","nodeType":"ElementaryTypeName","src":"5546:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":13099,"mutability":"mutable","name":"privateKey","nameLocation":"5619:10:15","nodeType":"VariableDeclaration","scope":13100,"src":"5611:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13098,"name":"uint256","nodeType":"ElementaryTypeName","src":"5611:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Wallet","nameLocation":"5366:6:15","scope":16930,"visibility":"public"},{"id":13108,"nodeType":"StructDefinition","src":"5681:213:15","nodes":[],"canonicalName":"VmSafe.FfiResult","documentation":{"id":13101,"nodeType":"StructuredDocumentation","src":"5642:34:15","text":"The result of a `tryFfi` call."},"members":[{"constant":false,"id":13103,"mutability":"mutable","name":"exitCode","nameLocation":"5752:8:15","nodeType":"VariableDeclaration","scope":13108,"src":"5746:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":13102,"name":"int32","nodeType":"ElementaryTypeName","src":"5746:5:15","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"visibility":"internal"},{"constant":false,"id":13105,"mutability":"mutable","name":"stdout","nameLocation":"5829:6:15","nodeType":"VariableDeclaration","scope":13108,"src":"5823:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":13104,"name":"bytes","nodeType":"ElementaryTypeName","src":"5823:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":13107,"mutability":"mutable","name":"stderr","nameLocation":"5881:6:15","nodeType":"VariableDeclaration","scope":13108,"src":"5875:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":13106,"name":"bytes","nodeType":"ElementaryTypeName","src":"5875:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"FfiResult","nameLocation":"5688:9:15","scope":16930,"visibility":"public"},{"id":13114,"nodeType":"StructDefinition","src":"5943:184:15","nodes":[],"canonicalName":"VmSafe.ChainInfo","documentation":{"id":13109,"nodeType":"StructuredDocumentation","src":"5900:38:15","text":"Information on the chain and fork."},"members":[{"constant":false,"id":13111,"mutability":"mutable","name":"forkId","nameLocation":"6044:6:15","nodeType":"VariableDeclaration","scope":13114,"src":"6036:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13110,"name":"uint256","nodeType":"ElementaryTypeName","src":"6036:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":13113,"mutability":"mutable","name":"chainId","nameLocation":"6113:7:15","nodeType":"VariableDeclaration","scope":13114,"src":"6105:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13112,"name":"uint256","nodeType":"ElementaryTypeName","src":"6105:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"ChainInfo","nameLocation":"5950:9:15","scope":16930,"visibility":"public"},{"id":13124,"nodeType":"StructDefinition","src":"6173:302:15","nodes":[],"canonicalName":"VmSafe.Chain","documentation":{"id":13115,"nodeType":"StructuredDocumentation","src":"6133:35:15","text":"Information about a blockchain."},"members":[{"constant":false,"id":13117,"mutability":"mutable","name":"name","nameLocation":"6230:4:15","nodeType":"VariableDeclaration","scope":13124,"src":"6223:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":13116,"name":"string","nodeType":"ElementaryTypeName","src":"6223:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13119,"mutability":"mutable","name":"chainId","nameLocation":"6285:7:15","nodeType":"VariableDeclaration","scope":13124,"src":"6277:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13118,"name":"uint256","nodeType":"ElementaryTypeName","src":"6277:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":13121,"mutability":"mutable","name":"chainAlias","nameLocation":"6385:10:15","nodeType":"VariableDeclaration","scope":13124,"src":"6378:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":13120,"name":"string","nodeType":"ElementaryTypeName","src":"6378:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13123,"mutability":"mutable","name":"rpcUrl","nameLocation":"6462:6:15","nodeType":"VariableDeclaration","scope":13124,"src":"6455:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":13122,"name":"string","nodeType":"ElementaryTypeName","src":"6455:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"Chain","nameLocation":"6180:5:15","scope":16930,"visibility":"public"},{"id":13156,"nodeType":"StructDefinition","src":"6536:1837:15","nodes":[],"canonicalName":"VmSafe.AccountAccess","documentation":{"id":13125,"nodeType":"StructuredDocumentation","src":"6481:50:15","text":"The result of a `stopAndReturnStateDiff` call."},"members":[{"constant":false,"id":13128,"mutability":"mutable","name":"chainInfo","nameLocation":"6628:9:15","nodeType":"VariableDeclaration","scope":13156,"src":"6618:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_ChainInfo_$13114_storage_ptr","typeString":"struct VmSafe.ChainInfo"},"typeName":{"id":13127,"nodeType":"UserDefinedTypeName","pathNode":{"id":13126,"name":"ChainInfo","nameLocations":["6618:9:15"],"nodeType":"IdentifierPath","referencedDeclaration":13114,"src":"6618:9:15"},"referencedDeclaration":13114,"src":"6618:9:15","typeDescriptions":{"typeIdentifier":"t_struct$_ChainInfo_$13114_storage_ptr","typeString":"struct VmSafe.ChainInfo"}},"visibility":"internal"},{"constant":false,"id":13131,"mutability":"mutable","name":"kind","nameLocation":"7091:4:15","nodeType":"VariableDeclaration","scope":13156,"src":"7073:22:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_AccountAccessKind_$13010","typeString":"enum VmSafe.AccountAccessKind"},"typeName":{"id":13130,"nodeType":"UserDefinedTypeName","pathNode":{"id":13129,"name":"AccountAccessKind","nameLocations":["7073:17:15"],"nodeType":"IdentifierPath","referencedDeclaration":13010,"src":"7073:17:15"},"referencedDeclaration":13010,"src":"7073:17:15","typeDescriptions":{"typeIdentifier":"t_enum$_AccountAccessKind_$13010","typeString":"enum VmSafe.AccountAccessKind"}},"visibility":"internal"},{"constant":false,"id":13133,"mutability":"mutable","name":"account","nameLocation":"7268:7:15","nodeType":"VariableDeclaration","scope":13156,"src":"7260:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":13132,"name":"address","nodeType":"ElementaryTypeName","src":"7260:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":13135,"mutability":"mutable","name":"accessor","nameLocation":"7331:8:15","nodeType":"VariableDeclaration","scope":13156,"src":"7323:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":13134,"name":"address","nodeType":"ElementaryTypeName","src":"7323:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":13137,"mutability":"mutable","name":"initialized","nameLocation":"7542:11:15","nodeType":"VariableDeclaration","scope":13156,"src":"7537:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":13136,"name":"bool","nodeType":"ElementaryTypeName","src":"7537:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":13139,"mutability":"mutable","name":"oldBalance","nameLocation":"7628:10:15","nodeType":"VariableDeclaration","scope":13156,"src":"7620:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13138,"name":"uint256","nodeType":"ElementaryTypeName","src":"7620:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":13141,"mutability":"mutable","name":"newBalance","nameLocation":"7803:10:15","nodeType":"VariableDeclaration","scope":13156,"src":"7795:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13140,"name":"uint256","nodeType":"ElementaryTypeName","src":"7795:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":13143,"mutability":"mutable","name":"deployedCode","nameLocation":"7880:12:15","nodeType":"VariableDeclaration","scope":13156,"src":"7874:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":13142,"name":"bytes","nodeType":"ElementaryTypeName","src":"7874:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":13145,"mutability":"mutable","name":"value","nameLocation":"7964:5:15","nodeType":"VariableDeclaration","scope":13156,"src":"7956:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13144,"name":"uint256","nodeType":"ElementaryTypeName","src":"7956:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":13147,"mutability":"mutable","name":"data","nameLocation":"8038:4:15","nodeType":"VariableDeclaration","scope":13156,"src":"8032:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":13146,"name":"bytes","nodeType":"ElementaryTypeName","src":"8032:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":13149,"mutability":"mutable","name":"reverted","nameLocation":"8133:8:15","nodeType":"VariableDeclaration","scope":13156,"src":"8128:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":13148,"name":"bool","nodeType":"ElementaryTypeName","src":"8128:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":13153,"mutability":"mutable","name":"storageAccesses","nameLocation":"8255:15:15","nodeType":"VariableDeclaration","scope":13156,"src":"8239:31:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_StorageAccess_$13170_storage_$dyn_storage_ptr","typeString":"struct VmSafe.StorageAccess[]"},"typeName":{"baseType":{"id":13151,"nodeType":"UserDefinedTypeName","pathNode":{"id":13150,"name":"StorageAccess","nameLocations":["8239:13:15"],"nodeType":"IdentifierPath","referencedDeclaration":13170,"src":"8239:13:15"},"referencedDeclaration":13170,"src":"8239:13:15","typeDescriptions":{"typeIdentifier":"t_struct$_StorageAccess_$13170_storage_ptr","typeString":"struct VmSafe.StorageAccess"}},"id":13152,"nodeType":"ArrayTypeName","src":"8239:15:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_StorageAccess_$13170_storage_$dyn_storage_ptr","typeString":"struct VmSafe.StorageAccess[]"}},"visibility":"internal"},{"constant":false,"id":13155,"mutability":"mutable","name":"depth","nameLocation":"8361:5:15","nodeType":"VariableDeclaration","scope":13156,"src":"8354:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":13154,"name":"uint64","nodeType":"ElementaryTypeName","src":"8354:6:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"name":"AccountAccess","nameLocation":"6543:13:15","scope":16930,"visibility":"public"},{"id":13170,"nodeType":"StructDefinition","src":"8435:425:15","nodes":[],"canonicalName":"VmSafe.StorageAccess","documentation":{"id":13157,"nodeType":"StructuredDocumentation","src":"8379:51:15","text":"The storage accessed during an `AccountAccess`."},"members":[{"constant":false,"id":13159,"mutability":"mutable","name":"account","nameLocation":"8525:7:15","nodeType":"VariableDeclaration","scope":13170,"src":"8517:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":13158,"name":"address","nodeType":"ElementaryTypeName","src":"8517:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":13161,"mutability":"mutable","name":"slot","nameLocation":"8589:4:15","nodeType":"VariableDeclaration","scope":13170,"src":"8581:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":13160,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8581:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":13163,"mutability":"mutable","name":"isWrite","nameLocation":"8646:7:15","nodeType":"VariableDeclaration","scope":13170,"src":"8641:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":13162,"name":"bool","nodeType":"ElementaryTypeName","src":"8641:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":13165,"mutability":"mutable","name":"previousValue","nameLocation":"8714:13:15","nodeType":"VariableDeclaration","scope":13170,"src":"8706:21:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":13164,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8706:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":13167,"mutability":"mutable","name":"newValue","nameLocation":"8783:8:15","nodeType":"VariableDeclaration","scope":13170,"src":"8775:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":13166,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8775:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":13169,"mutability":"mutable","name":"reverted","nameLocation":"8845:8:15","nodeType":"VariableDeclaration","scope":13170,"src":"8840:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":13168,"name":"bool","nodeType":"ElementaryTypeName","src":"8840:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"StorageAccess","nameLocation":"8442:13:15","scope":16930,"visibility":"public"},{"id":13182,"nodeType":"StructDefinition","src":"8911:458:15","nodes":[],"canonicalName":"VmSafe.Gas","documentation":{"id":13171,"nodeType":"StructuredDocumentation","src":"8866:40:15","text":"Gas used. Returned by `lastCallGas`."},"members":[{"constant":false,"id":13173,"mutability":"mutable","name":"gasLimit","nameLocation":"8977:8:15","nodeType":"VariableDeclaration","scope":13182,"src":"8970:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":13172,"name":"uint64","nodeType":"ElementaryTypeName","src":"8970:6:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":13175,"mutability":"mutable","name":"gasTotalUsed","nameLocation":"9033:12:15","nodeType":"VariableDeclaration","scope":13182,"src":"9026:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":13174,"name":"uint64","nodeType":"ElementaryTypeName","src":"9026:6:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":13177,"mutability":"mutable","name":"gasMemoryUsed","nameLocation":"9214:13:15","nodeType":"VariableDeclaration","scope":13182,"src":"9207:20:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":13176,"name":"uint64","nodeType":"ElementaryTypeName","src":"9207:6:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":13179,"mutability":"mutable","name":"gasRefunded","nameLocation":"9282:11:15","nodeType":"VariableDeclaration","scope":13182,"src":"9276:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":13178,"name":"int64","nodeType":"ElementaryTypeName","src":"9276:5:15","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"},{"constant":false,"id":13181,"mutability":"mutable","name":"gasRemaining","nameLocation":"9350:12:15","nodeType":"VariableDeclaration","scope":13182,"src":"9343:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":13180,"name":"uint64","nodeType":"ElementaryTypeName","src":"9343:6:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"name":"Gas","nameLocation":"8918:3:15","scope":16930,"visibility":"public"},{"id":13197,"nodeType":"StructDefinition","src":"9432:848:15","nodes":[],"canonicalName":"VmSafe.DebugStep","documentation":{"id":13183,"nodeType":"StructuredDocumentation","src":"9375:52:15","text":"The result of the `stopDebugTraceRecording` call"},"members":[{"constant":false,"id":13186,"mutability":"mutable","name":"stack","nameLocation":"9661:5:15","nodeType":"VariableDeclaration","scope":13197,"src":"9651:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":13184,"name":"uint256","nodeType":"ElementaryTypeName","src":"9651:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":13185,"nodeType":"ArrayTypeName","src":"9651:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":13188,"mutability":"mutable","name":"memoryInput","nameLocation":"9965:11:15","nodeType":"VariableDeclaration","scope":13197,"src":"9959:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":13187,"name":"bytes","nodeType":"ElementaryTypeName","src":"9959:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":13190,"mutability":"mutable","name":"opcode","nameLocation":"10033:6:15","nodeType":"VariableDeclaration","scope":13197,"src":"10027:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":13189,"name":"uint8","nodeType":"ElementaryTypeName","src":"10027:5:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":13192,"mutability":"mutable","name":"depth","nameLocation":"10095:5:15","nodeType":"VariableDeclaration","scope":13197,"src":"10088:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":13191,"name":"uint64","nodeType":"ElementaryTypeName","src":"10088:6:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":13194,"mutability":"mutable","name":"isOutOfGas","nameLocation":"10173:10:15","nodeType":"VariableDeclaration","scope":13197,"src":"10168:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":13193,"name":"bool","nodeType":"ElementaryTypeName","src":"10168:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":13196,"mutability":"mutable","name":"contractAddr","nameLocation":"10261:12:15","nodeType":"VariableDeclaration","scope":13197,"src":"10253:20:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":13195,"name":"address","nodeType":"ElementaryTypeName","src":"10253:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"DebugStep","nameLocation":"9439:9:15","scope":16930,"visibility":"public"},{"id":13210,"nodeType":"StructDefinition","src":"10340:600:15","nodes":[],"canonicalName":"VmSafe.BroadcastTxSummary","documentation":{"id":13198,"nodeType":"StructuredDocumentation","src":"10286:49:15","text":"Represents a transaction's broadcast details."},"members":[{"constant":false,"id":13200,"mutability":"mutable","name":"txHash","nameLocation":"10444:6:15","nodeType":"VariableDeclaration","scope":13210,"src":"10436:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":13199,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10436:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":13203,"mutability":"mutable","name":"txType","nameLocation":"10549:6:15","nodeType":"VariableDeclaration","scope":13210,"src":"10533:22:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_BroadcastTxType_$13026","typeString":"enum VmSafe.BroadcastTxType"},"typeName":{"id":13202,"nodeType":"UserDefinedTypeName","pathNode":{"id":13201,"name":"BroadcastTxType","nameLocations":["10533:15:15"],"nodeType":"IdentifierPath","referencedDeclaration":13026,"src":"10533:15:15"},"referencedDeclaration":13026,"src":"10533:15:15","typeDescriptions":{"typeIdentifier":"t_enum$_BroadcastTxType_$13026","typeString":"enum VmSafe.BroadcastTxType"}},"visibility":"internal"},{"constant":false,"id":13205,"mutability":"mutable","name":"contractAddress","nameLocation":"10735:15:15","nodeType":"VariableDeclaration","scope":13210,"src":"10727:23:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":13204,"name":"address","nodeType":"ElementaryTypeName","src":"10727:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":13207,"mutability":"mutable","name":"blockNumber","nameLocation":"10822:11:15","nodeType":"VariableDeclaration","scope":13210,"src":"10815:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":13206,"name":"uint64","nodeType":"ElementaryTypeName","src":"10815:6:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":13209,"mutability":"mutable","name":"success","nameLocation":"10926:7:15","nodeType":"VariableDeclaration","scope":13210,"src":"10921:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":13208,"name":"bool","nodeType":"ElementaryTypeName","src":"10921:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"BroadcastTxSummary","nameLocation":"10347:18:15","scope":16930,"visibility":"public"},{"id":13222,"nodeType":"StructDefinition","src":"11051:605:15","nodes":[],"canonicalName":"VmSafe.SignedDelegation","documentation":{"id":13211,"nodeType":"StructuredDocumentation","src":"10946:100:15","text":"Holds a signed EIP-7702 authorization for an authority account to delegate to an implementation."},"members":[{"constant":false,"id":13213,"mutability":"mutable","name":"v","nameLocation":"11162:1:15","nodeType":"VariableDeclaration","scope":13222,"src":"11156:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":13212,"name":"uint8","nodeType":"ElementaryTypeName","src":"11156:5:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":13215,"mutability":"mutable","name":"r","nameLocation":"11225:1:15","nodeType":"VariableDeclaration","scope":13222,"src":"11217:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":13214,"name":"bytes32","nodeType":"ElementaryTypeName","src":"11217:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":13217,"mutability":"mutable","name":"s","nameLocation":"11289:1:15","nodeType":"VariableDeclaration","scope":13222,"src":"11281:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":13216,"name":"bytes32","nodeType":"ElementaryTypeName","src":"11281:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":13219,"mutability":"mutable","name":"nonce","nameLocation":"11461:5:15","nodeType":"VariableDeclaration","scope":13222,"src":"11454:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":13218,"name":"uint64","nodeType":"ElementaryTypeName","src":"11454:6:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":13221,"mutability":"mutable","name":"implementation","nameLocation":"11635:14:15","nodeType":"VariableDeclaration","scope":13222,"src":"11627:22:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":13220,"name":"address","nodeType":"ElementaryTypeName","src":"11627:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"SignedDelegation","nameLocation":"11058:16:15","scope":16930,"visibility":"public"},{"id":13230,"nodeType":"StructDefinition","src":"11905:373:15","nodes":[],"canonicalName":"VmSafe.PotentialRevert","documentation":{"id":13223,"nodeType":"StructuredDocumentation","src":"11662:238:15","text":"Represents a \"potential\" revert reason from a single subsequent call when using `vm.assumeNoReverts`.\n Reverts that match will result in a FOUNDRY::ASSUME rejection, whereas unmatched reverts will be surfaced\n as normal."},"members":[{"constant":false,"id":13225,"mutability":"mutable","name":"reverter","nameLocation":"12041:8:15","nodeType":"VariableDeclaration","scope":13230,"src":"12033:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":13224,"name":"address","nodeType":"ElementaryTypeName","src":"12033:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":13227,"mutability":"mutable","name":"partialMatch","nameLocation":"12177:12:15","nodeType":"VariableDeclaration","scope":13230,"src":"12172:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":13226,"name":"bool","nodeType":"ElementaryTypeName","src":"12172:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":13229,"mutability":"mutable","name":"revertData","nameLocation":"12261:10:15","nodeType":"VariableDeclaration","scope":13230,"src":"12255:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":13228,"name":"bytes","nodeType":"ElementaryTypeName","src":"12255:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"PotentialRevert","nameLocation":"11912:15:15","scope":16930,"visibility":"public"},{"id":13237,"nodeType":"StructDefinition","src":"12322:191:15","nodes":[],"canonicalName":"VmSafe.AccessListItem","documentation":{"id":13231,"nodeType":"StructuredDocumentation","src":"12284:33:15","text":"An EIP-2930 access list item."},"members":[{"constant":false,"id":13233,"mutability":"mutable","name":"target","nameLocation":"12413:6:15","nodeType":"VariableDeclaration","scope":13237,"src":"12405:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":13232,"name":"address","nodeType":"ElementaryTypeName","src":"12405:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":13236,"mutability":"mutable","name":"storageKeys","nameLocation":"12495:11:15","nodeType":"VariableDeclaration","scope":13237,"src":"12485:21:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":13234,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12485:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":13235,"nodeType":"ArrayTypeName","src":"12485:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"name":"AccessListItem","nameLocation":"12329:14:15","scope":16930,"visibility":"public"},{"id":13246,"nodeType":"FunctionDefinition","src":"12656:91:15","nodes":[],"documentation":{"id":13238,"nodeType":"StructuredDocumentation","src":"12552:99:15","text":"Derives a private key from the name, labels the account with that name, and returns the wallet."},"functionSelector":"7404f1d2","implemented":false,"kind":"function","modifiers":[],"name":"createWallet","nameLocation":"12665:12:15","parameters":{"id":13241,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13240,"mutability":"mutable","name":"walletLabel","nameLocation":"12694:11:15","nodeType":"VariableDeclaration","scope":13246,"src":"12678:27:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13239,"name":"string","nodeType":"ElementaryTypeName","src":"12678:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"12677:29:15"},"returnParameters":{"id":13245,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13244,"mutability":"mutable","name":"wallet","nameLocation":"12739:6:15","nodeType":"VariableDeclaration","scope":13246,"src":"12725:20:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Wallet_$13100_memory_ptr","typeString":"struct VmSafe.Wallet"},"typeName":{"id":13243,"nodeType":"UserDefinedTypeName","pathNode":{"id":13242,"name":"Wallet","nameLocations":["12725:6:15"],"nodeType":"IdentifierPath","referencedDeclaration":13100,"src":"12725:6:15"},"referencedDeclaration":13100,"src":"12725:6:15","typeDescriptions":{"typeIdentifier":"t_struct$_Wallet_$13100_storage_ptr","typeString":"struct VmSafe.Wallet"}},"visibility":"internal"}],"src":"12724:22:15"},"scope":16930,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13255,"nodeType":"FunctionDefinition","src":"12825:82:15","nodes":[],"documentation":{"id":13247,"nodeType":"StructuredDocumentation","src":"12753:67:15","text":"Generates a wallet from the private key and returns the wallet."},"functionSelector":"7a675bb6","implemented":false,"kind":"function","modifiers":[],"name":"createWallet","nameLocation":"12834:12:15","parameters":{"id":13250,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13249,"mutability":"mutable","name":"privateKey","nameLocation":"12855:10:15","nodeType":"VariableDeclaration","scope":13255,"src":"12847:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13248,"name":"uint256","nodeType":"ElementaryTypeName","src":"12847:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12846:20:15"},"returnParameters":{"id":13254,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13253,"mutability":"mutable","name":"wallet","nameLocation":"12899:6:15","nodeType":"VariableDeclaration","scope":13255,"src":"12885:20:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Wallet_$13100_memory_ptr","typeString":"struct VmSafe.Wallet"},"typeName":{"id":13252,"nodeType":"UserDefinedTypeName","pathNode":{"id":13251,"name":"Wallet","nameLocations":["12885:6:15"],"nodeType":"IdentifierPath","referencedDeclaration":13100,"src":"12885:6:15"},"referencedDeclaration":13100,"src":"12885:6:15","typeDescriptions":{"typeIdentifier":"t_struct$_Wallet_$13100_storage_ptr","typeString":"struct VmSafe.Wallet"}},"visibility":"internal"}],"src":"12884:22:15"},"scope":16930,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13266,"nodeType":"FunctionDefinition","src":"13021:111:15","nodes":[],"documentation":{"id":13256,"nodeType":"StructuredDocumentation","src":"12913:103:15","text":"Generates a wallet from the private key, labels the account with that name, and returns the wallet."},"functionSelector":"ed7c5462","implemented":false,"kind":"function","modifiers":[],"name":"createWallet","nameLocation":"13030:12:15","parameters":{"id":13261,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13258,"mutability":"mutable","name":"privateKey","nameLocation":"13051:10:15","nodeType":"VariableDeclaration","scope":13266,"src":"13043:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13257,"name":"uint256","nodeType":"ElementaryTypeName","src":"13043:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":13260,"mutability":"mutable","name":"walletLabel","nameLocation":"13079:11:15","nodeType":"VariableDeclaration","scope":13266,"src":"13063:27:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13259,"name":"string","nodeType":"ElementaryTypeName","src":"13063:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"13042:49:15"},"returnParameters":{"id":13265,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13264,"mutability":"mutable","name":"wallet","nameLocation":"13124:6:15","nodeType":"VariableDeclaration","scope":13266,"src":"13110:20:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Wallet_$13100_memory_ptr","typeString":"struct VmSafe.Wallet"},"typeName":{"id":13263,"nodeType":"UserDefinedTypeName","pathNode":{"id":13262,"name":"Wallet","nameLocations":["13110:6:15"],"nodeType":"IdentifierPath","referencedDeclaration":13100,"src":"13110:6:15"},"referencedDeclaration":13100,"src":"13110:6:15","typeDescriptions":{"typeIdentifier":"t_struct$_Wallet_$13100_storage_ptr","typeString":"struct VmSafe.Wallet"}},"visibility":"internal"}],"src":"13109:22:15"},"scope":16930,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13276,"nodeType":"FunctionDefinition","src":"13280:102:15","nodes":[],"documentation":{"id":13267,"nodeType":"StructuredDocumentation","src":"13138:137:15","text":"Derive a private key from a provided mnenomic string (or mnenomic file path)\n at the derivation path `m/44'/60'/0'/0/{index}`."},"functionSelector":"6229498b","implemented":false,"kind":"function","modifiers":[],"name":"deriveKey","nameLocation":"13289:9:15","parameters":{"id":13272,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13269,"mutability":"mutable","name":"mnemonic","nameLocation":"13315:8:15","nodeType":"VariableDeclaration","scope":13276,"src":"13299:24:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13268,"name":"string","nodeType":"ElementaryTypeName","src":"13299:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13271,"mutability":"mutable","name":"index","nameLocation":"13332:5:15","nodeType":"VariableDeclaration","scope":13276,"src":"13325:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":13270,"name":"uint32","nodeType":"ElementaryTypeName","src":"13325:6:15","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"13298:40:15"},"returnParameters":{"id":13275,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13274,"mutability":"mutable","name":"privateKey","nameLocation":"13370:10:15","nodeType":"VariableDeclaration","scope":13276,"src":"13362:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13273,"name":"uint256","nodeType":"ElementaryTypeName","src":"13362:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13361:20:15"},"scope":16930,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13288,"nodeType":"FunctionDefinition","src":"13511:158:15","nodes":[],"documentation":{"id":13277,"nodeType":"StructuredDocumentation","src":"13388:118:15","text":"Derive a private key from a provided mnenomic string (or mnenomic file path)\n at `{derivationPath}{index}`."},"functionSelector":"6bcb2c1b","implemented":false,"kind":"function","modifiers":[],"name":"deriveKey","nameLocation":"13520:9:15","parameters":{"id":13284,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13279,"mutability":"mutable","name":"mnemonic","nameLocation":"13546:8:15","nodeType":"VariableDeclaration","scope":13288,"src":"13530:24:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13278,"name":"string","nodeType":"ElementaryTypeName","src":"13530:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13281,"mutability":"mutable","name":"derivationPath","nameLocation":"13572:14:15","nodeType":"VariableDeclaration","scope":13288,"src":"13556:30:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13280,"name":"string","nodeType":"ElementaryTypeName","src":"13556:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13283,"mutability":"mutable","name":"index","nameLocation":"13595:5:15","nodeType":"VariableDeclaration","scope":13288,"src":"13588:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":13282,"name":"uint32","nodeType":"ElementaryTypeName","src":"13588:6:15","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"13529:72:15"},"returnParameters":{"id":13287,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13286,"mutability":"mutable","name":"privateKey","nameLocation":"13657:10:15","nodeType":"VariableDeclaration","scope":13288,"src":"13649:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13285,"name":"uint256","nodeType":"ElementaryTypeName","src":"13649:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13648:20:15"},"scope":16930,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13300,"nodeType":"FunctionDefinition","src":"13843:152:15","nodes":[],"documentation":{"id":13289,"nodeType":"StructuredDocumentation","src":"13675:163:15","text":"Derive a private key from a provided mnenomic string (or mnenomic file path) in the specified language\n at the derivation path `m/44'/60'/0'/0/{index}`."},"functionSelector":"32c8176d","implemented":false,"kind":"function","modifiers":[],"name":"deriveKey","nameLocation":"13852:9:15","parameters":{"id":13296,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13291,"mutability":"mutable","name":"mnemonic","nameLocation":"13878:8:15","nodeType":"VariableDeclaration","scope":13300,"src":"13862:24:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13290,"name":"string","nodeType":"ElementaryTypeName","src":"13862:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13293,"mutability":"mutable","name":"index","nameLocation":"13895:5:15","nodeType":"VariableDeclaration","scope":13300,"src":"13888:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":13292,"name":"uint32","nodeType":"ElementaryTypeName","src":"13888:6:15","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":13295,"mutability":"mutable","name":"language","nameLocation":"13918:8:15","nodeType":"VariableDeclaration","scope":13300,"src":"13902:24:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13294,"name":"string","nodeType":"ElementaryTypeName","src":"13902:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"13861:66:15"},"returnParameters":{"id":13299,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13298,"mutability":"mutable","name":"privateKey","nameLocation":"13983:10:15","nodeType":"VariableDeclaration","scope":13300,"src":"13975:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13297,"name":"uint256","nodeType":"ElementaryTypeName","src":"13975:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13974:20:15"},"scope":16930,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13314,"nodeType":"FunctionDefinition","src":"14150:184:15","nodes":[],"documentation":{"id":13301,"nodeType":"StructuredDocumentation","src":"14001:144:15","text":"Derive a private key from a provided mnenomic string (or mnenomic file path) in the specified language\n at `{derivationPath}{index}`."},"functionSelector":"29233b1f","implemented":false,"kind":"function","modifiers":[],"name":"deriveKey","nameLocation":"14159:9:15","parameters":{"id":13310,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13303,"mutability":"mutable","name":"mnemonic","nameLocation":"14185:8:15","nodeType":"VariableDeclaration","scope":13314,"src":"14169:24:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13302,"name":"string","nodeType":"ElementaryTypeName","src":"14169:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13305,"mutability":"mutable","name":"derivationPath","nameLocation":"14211:14:15","nodeType":"VariableDeclaration","scope":13314,"src":"14195:30:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13304,"name":"string","nodeType":"ElementaryTypeName","src":"14195:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13307,"mutability":"mutable","name":"index","nameLocation":"14234:5:15","nodeType":"VariableDeclaration","scope":13314,"src":"14227:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":13306,"name":"uint32","nodeType":"ElementaryTypeName","src":"14227:6:15","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":13309,"mutability":"mutable","name":"language","nameLocation":"14257:8:15","nodeType":"VariableDeclaration","scope":13314,"src":"14241:24:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13308,"name":"string","nodeType":"ElementaryTypeName","src":"14241:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"14168:98:15"},"returnParameters":{"id":13313,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13312,"mutability":"mutable","name":"privateKey","nameLocation":"14322:10:15","nodeType":"VariableDeclaration","scope":13314,"src":"14314:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13311,"name":"uint256","nodeType":"ElementaryTypeName","src":"14314:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14313:20:15"},"scope":16930,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13324,"nodeType":"FunctionDefinition","src":"14409:106:15","nodes":[],"documentation":{"id":13315,"nodeType":"StructuredDocumentation","src":"14340:64:15","text":"Derives secp256r1 public key from the provided `privateKey`."},"functionSelector":"c453949e","implemented":false,"kind":"function","modifiers":[],"name":"publicKeyP256","nameLocation":"14418:13:15","parameters":{"id":13318,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13317,"mutability":"mutable","name":"privateKey","nameLocation":"14440:10:15","nodeType":"VariableDeclaration","scope":13324,"src":"14432:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13316,"name":"uint256","nodeType":"ElementaryTypeName","src":"14432:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14431:20:15"},"returnParameters":{"id":13323,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13320,"mutability":"mutable","name":"publicKeyX","nameLocation":"14483:10:15","nodeType":"VariableDeclaration","scope":13324,"src":"14475:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13319,"name":"uint256","nodeType":"ElementaryTypeName","src":"14475:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":13322,"mutability":"mutable","name":"publicKeyY","nameLocation":"14503:10:15","nodeType":"VariableDeclaration","scope":13324,"src":"14495:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13321,"name":"uint256","nodeType":"ElementaryTypeName","src":"14495:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14474:40:15"},"scope":16930,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13332,"nodeType":"FunctionDefinition","src":"14599:76:15","nodes":[],"documentation":{"id":13325,"nodeType":"StructuredDocumentation","src":"14521:73:15","text":"Adds a private key to the local forge wallet and returns the address."},"functionSelector":"22100064","implemented":false,"kind":"function","modifiers":[],"name":"rememberKey","nameLocation":"14608:11:15","parameters":{"id":13328,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13327,"mutability":"mutable","name":"privateKey","nameLocation":"14628:10:15","nodeType":"VariableDeclaration","scope":13332,"src":"14620:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13326,"name":"uint256","nodeType":"ElementaryTypeName","src":"14620:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14619:20:15"},"returnParameters":{"id":13331,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13330,"mutability":"mutable","name":"keyAddr","nameLocation":"14666:7:15","nodeType":"VariableDeclaration","scope":13332,"src":"14658:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":13329,"name":"address","nodeType":"ElementaryTypeName","src":"14658:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14657:17:15"},"scope":16930,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13345,"nodeType":"FunctionDefinition","src":"14908:155:15","nodes":[],"documentation":{"id":13333,"nodeType":"StructuredDocumentation","src":"14681:222:15","text":"Derive a set number of wallets from a mnemonic at the derivation path `m/44'/60'/0'/0/{0..count}`.\n The respective private keys are saved to the local forge wallet for later use and their addresses are returned."},"functionSelector":"97cb9189","implemented":false,"kind":"function","modifiers":[],"name":"rememberKeys","nameLocation":"14917:12:15","parameters":{"id":13340,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13335,"mutability":"mutable","name":"mnemonic","nameLocation":"14946:8:15","nodeType":"VariableDeclaration","scope":13345,"src":"14930:24:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13334,"name":"string","nodeType":"ElementaryTypeName","src":"14930:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13337,"mutability":"mutable","name":"derivationPath","nameLocation":"14972:14:15","nodeType":"VariableDeclaration","scope":13345,"src":"14956:30:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13336,"name":"string","nodeType":"ElementaryTypeName","src":"14956:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13339,"mutability":"mutable","name":"count","nameLocation":"14995:5:15","nodeType":"VariableDeclaration","scope":13345,"src":"14988:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":13338,"name":"uint32","nodeType":"ElementaryTypeName","src":"14988:6:15","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"14929:72:15"},"returnParameters":{"id":13344,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13343,"mutability":"mutable","name":"keyAddrs","nameLocation":"15053:8:15","nodeType":"VariableDeclaration","scope":13345,"src":"15036:25:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":13341,"name":"address","nodeType":"ElementaryTypeName","src":"15036:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":13342,"nodeType":"ArrayTypeName","src":"15036:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"15035:27:15"},"scope":16930,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13360,"nodeType":"FunctionDefinition","src":"15322:203:15","nodes":[],"documentation":{"id":13346,"nodeType":"StructuredDocumentation","src":"15069:248:15","text":"Derive a set number of wallets from a mnemonic in the specified language at the derivation path `m/44'/60'/0'/0/{0..count}`.\n The respective private keys are saved to the local forge wallet for later use and their addresses are returned."},"functionSelector":"f8d58eaf","implemented":false,"kind":"function","modifiers":[],"name":"rememberKeys","nameLocation":"15331:12:15","parameters":{"id":13355,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13348,"mutability":"mutable","name":"mnemonic","nameLocation":"15369:8:15","nodeType":"VariableDeclaration","scope":13360,"src":"15353:24:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13347,"name":"string","nodeType":"ElementaryTypeName","src":"15353:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13350,"mutability":"mutable","name":"derivationPath","nameLocation":"15403:14:15","nodeType":"VariableDeclaration","scope":13360,"src":"15387:30:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13349,"name":"string","nodeType":"ElementaryTypeName","src":"15387:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13352,"mutability":"mutable","name":"language","nameLocation":"15443:8:15","nodeType":"VariableDeclaration","scope":13360,"src":"15427:24:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13351,"name":"string","nodeType":"ElementaryTypeName","src":"15427:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13354,"mutability":"mutable","name":"count","nameLocation":"15468:5:15","nodeType":"VariableDeclaration","scope":13360,"src":"15461:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":13353,"name":"uint32","nodeType":"ElementaryTypeName","src":"15461:6:15","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"15343:136:15"},"returnParameters":{"id":13359,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13358,"mutability":"mutable","name":"keyAddrs","nameLocation":"15515:8:15","nodeType":"VariableDeclaration","scope":13360,"src":"15498:25:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":13356,"name":"address","nodeType":"ElementaryTypeName","src":"15498:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":13357,"nodeType":"ArrayTypeName","src":"15498:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"15497:27:15"},"scope":16930,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13373,"nodeType":"FunctionDefinition","src":"15804:102:15","nodes":[],"documentation":{"id":13361,"nodeType":"StructuredDocumentation","src":"15531:268:15","text":"Signs data with a `Wallet`.\n Returns a compact signature (`r`, `vs`) as per EIP-2098, where `vs` encodes both the\n signature's `s` value, and the recovery id `v` in a single bytes32.\n This format reduces the signature size from 65 to 64 bytes."},"functionSelector":"3d0e292f","implemented":false,"kind":"function","modifiers":[],"name":"signCompact","nameLocation":"15813:11:15","parameters":{"id":13367,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13364,"mutability":"mutable","name":"wallet","nameLocation":"15841:6:15","nodeType":"VariableDeclaration","scope":13373,"src":"15825:22:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_Wallet_$13100_calldata_ptr","typeString":"struct VmSafe.Wallet"},"typeName":{"id":13363,"nodeType":"UserDefinedTypeName","pathNode":{"id":13362,"name":"Wallet","nameLocations":["15825:6:15"],"nodeType":"IdentifierPath","referencedDeclaration":13100,"src":"15825:6:15"},"referencedDeclaration":13100,"src":"15825:6:15","typeDescriptions":{"typeIdentifier":"t_struct$_Wallet_$13100_storage_ptr","typeString":"struct VmSafe.Wallet"}},"visibility":"internal"},{"constant":false,"id":13366,"mutability":"mutable","name":"digest","nameLocation":"15857:6:15","nodeType":"VariableDeclaration","scope":13373,"src":"15849:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":13365,"name":"bytes32","nodeType":"ElementaryTypeName","src":"15849:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"15824:40:15"},"returnParameters":{"id":13372,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13369,"mutability":"mutable","name":"r","nameLocation":"15891:1:15","nodeType":"VariableDeclaration","scope":13373,"src":"15883:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":13368,"name":"bytes32","nodeType":"ElementaryTypeName","src":"15883:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":13371,"mutability":"mutable","name":"vs","nameLocation":"15902:2:15","nodeType":"VariableDeclaration","scope":13373,"src":"15894:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":13370,"name":"bytes32","nodeType":"ElementaryTypeName","src":"15894:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"15882:23:15"},"scope":16930,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13385,"nodeType":"FunctionDefinition","src":"16217:103:15","nodes":[],"documentation":{"id":13374,"nodeType":"StructuredDocumentation","src":"15912:300:15","text":"Signs `digest` with `privateKey` using the secp256k1 curve.\n Returns a compact signature (`r`, `vs`) as per EIP-2098, where `vs` encodes both the\n signature's `s` value, and the recovery id `v` in a single bytes32.\n This format reduces the signature size from 65 to 64 bytes."},"functionSelector":"cc2a781f","implemented":false,"kind":"function","modifiers":[],"name":"signCompact","nameLocation":"16226:11:15","parameters":{"id":13379,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13376,"mutability":"mutable","name":"privateKey","nameLocation":"16246:10:15","nodeType":"VariableDeclaration","scope":13385,"src":"16238:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13375,"name":"uint256","nodeType":"ElementaryTypeName","src":"16238:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":13378,"mutability":"mutable","name":"digest","nameLocation":"16266:6:15","nodeType":"VariableDeclaration","scope":13385,"src":"16258:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":13377,"name":"bytes32","nodeType":"ElementaryTypeName","src":"16258:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"16237:36:15"},"returnParameters":{"id":13384,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13381,"mutability":"mutable","name":"r","nameLocation":"16305:1:15","nodeType":"VariableDeclaration","scope":13385,"src":"16297:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":13380,"name":"bytes32","nodeType":"ElementaryTypeName","src":"16297:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":13383,"mutability":"mutable","name":"vs","nameLocation":"16316:2:15","nodeType":"VariableDeclaration","scope":13385,"src":"16308:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":13382,"name":"bytes32","nodeType":"ElementaryTypeName","src":"16308:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"16296:23:15"},"scope":16930,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13395,"nodeType":"FunctionDefinition","src":"16996:83:15","nodes":[],"documentation":{"id":13386,"nodeType":"StructuredDocumentation","src":"16326:665:15","text":"Signs `digest` with signer provided to script using the secp256k1 curve.\n Returns a compact signature (`r`, `vs`) as per EIP-2098, where `vs` encodes both the\n signature's `s` value, and the recovery id `v` in a single bytes32.\n This format reduces the signature size from 65 to 64 bytes.\n If `--sender` is provided, the signer with provided address is used, otherwise,\n if exactly one signer is provided to the script, that signer is used.\n Raises error if signer passed through `--sender` does not match any unlocked signers or\n if `--sender` is not provided and not exactly one signer is passed to the script."},"functionSelector":"a282dc4b","implemented":false,"kind":"function","modifiers":[],"name":"signCompact","nameLocation":"17005:11:15","parameters":{"id":13389,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13388,"mutability":"mutable","name":"digest","nameLocation":"17025:6:15","nodeType":"VariableDeclaration","scope":13395,"src":"17017:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":13387,"name":"bytes32","nodeType":"ElementaryTypeName","src":"17017:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"17016:16:15"},"returnParameters":{"id":13394,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13391,"mutability":"mutable","name":"r","nameLocation":"17064:1:15","nodeType":"VariableDeclaration","scope":13395,"src":"17056:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":13390,"name":"bytes32","nodeType":"ElementaryTypeName","src":"17056:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":13393,"mutability":"mutable","name":"vs","nameLocation":"17075:2:15","nodeType":"VariableDeclaration","scope":13395,"src":"17067:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":13392,"name":"bytes32","nodeType":"ElementaryTypeName","src":"17067:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"17055:23:15"},"scope":16930,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13407,"nodeType":"FunctionDefinition","src":"17493:99:15","nodes":[],"documentation":{"id":13396,"nodeType":"StructuredDocumentation","src":"17085:403:15","text":"Signs `digest` with signer provided to script using the secp256k1 curve.\n Returns a compact signature (`r`, `vs`) as per EIP-2098, where `vs` encodes both the\n signature's `s` value, and the recovery id `v` in a single bytes32.\n This format reduces the signature size from 65 to 64 bytes.\n Raises error if none of the signers passed into the script have provided address."},"functionSelector":"8e2f97bf","implemented":false,"kind":"function","modifiers":[],"name":"signCompact","nameLocation":"17502:11:15","parameters":{"id":13401,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13398,"mutability":"mutable","name":"signer","nameLocation":"17522:6:15","nodeType":"VariableDeclaration","scope":13407,"src":"17514:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":13397,"name":"address","nodeType":"ElementaryTypeName","src":"17514:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":13400,"mutability":"mutable","name":"digest","nameLocation":"17538:6:15","nodeType":"VariableDeclaration","scope":13407,"src":"17530:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":13399,"name":"bytes32","nodeType":"ElementaryTypeName","src":"17530:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"17513:32:15"},"returnParameters":{"id":13406,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13403,"mutability":"mutable","name":"r","nameLocation":"17577:1:15","nodeType":"VariableDeclaration","scope":13407,"src":"17569:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":13402,"name":"bytes32","nodeType":"ElementaryTypeName","src":"17569:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":13405,"mutability":"mutable","name":"vs","nameLocation":"17588:2:15","nodeType":"VariableDeclaration","scope":13407,"src":"17580:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":13404,"name":"bytes32","nodeType":"ElementaryTypeName","src":"17580:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"17568:23:15"},"scope":16930,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13419,"nodeType":"FunctionDefinition","src":"17666:99:15","nodes":[],"documentation":{"id":13408,"nodeType":"StructuredDocumentation","src":"17598:63:15","text":"Signs `digest` with `privateKey` using the secp256r1 curve."},"functionSelector":"83211b40","implemented":false,"kind":"function","modifiers":[],"name":"signP256","nameLocation":"17675:8:15","parameters":{"id":13413,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13410,"mutability":"mutable","name":"privateKey","nameLocation":"17692:10:15","nodeType":"VariableDeclaration","scope":13419,"src":"17684:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13409,"name":"uint256","nodeType":"ElementaryTypeName","src":"17684:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":13412,"mutability":"mutable","name":"digest","nameLocation":"17712:6:15","nodeType":"VariableDeclaration","scope":13419,"src":"17704:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":13411,"name":"bytes32","nodeType":"ElementaryTypeName","src":"17704:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"17683:36:15"},"returnParameters":{"id":13418,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13415,"mutability":"mutable","name":"r","nameLocation":"17751:1:15","nodeType":"VariableDeclaration","scope":13419,"src":"17743:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":13414,"name":"bytes32","nodeType":"ElementaryTypeName","src":"17743:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":13417,"mutability":"mutable","name":"s","nameLocation":"17762:1:15","nodeType":"VariableDeclaration","scope":13419,"src":"17754:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":13416,"name":"bytes32","nodeType":"ElementaryTypeName","src":"17754:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"17742:22:15"},"scope":16930,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13434,"nodeType":"FunctionDefinition","src":"17807:103:15","nodes":[],"documentation":{"id":13420,"nodeType":"StructuredDocumentation","src":"17771:31:15","text":"Signs data with a `Wallet`."},"functionSelector":"b25c5a25","implemented":false,"kind":"function","modifiers":[],"name":"sign","nameLocation":"17816:4:15","parameters":{"id":13426,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13423,"mutability":"mutable","name":"wallet","nameLocation":"17837:6:15","nodeType":"VariableDeclaration","scope":13434,"src":"17821:22:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_Wallet_$13100_calldata_ptr","typeString":"struct VmSafe.Wallet"},"typeName":{"id":13422,"nodeType":"UserDefinedTypeName","pathNode":{"id":13421,"name":"Wallet","nameLocations":["17821:6:15"],"nodeType":"IdentifierPath","referencedDeclaration":13100,"src":"17821:6:15"},"referencedDeclaration":13100,"src":"17821:6:15","typeDescriptions":{"typeIdentifier":"t_struct$_Wallet_$13100_storage_ptr","typeString":"struct VmSafe.Wallet"}},"visibility":"internal"},{"constant":false,"id":13425,"mutability":"mutable","name":"digest","nameLocation":"17853:6:15","nodeType":"VariableDeclaration","scope":13434,"src":"17845:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":13424,"name":"bytes32","nodeType":"ElementaryTypeName","src":"17845:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"17820:40:15"},"returnParameters":{"id":13433,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13428,"mutability":"mutable","name":"v","nameLocation":"17885:1:15","nodeType":"VariableDeclaration","scope":13434,"src":"17879:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":13427,"name":"uint8","nodeType":"ElementaryTypeName","src":"17879:5:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":13430,"mutability":"mutable","name":"r","nameLocation":"17896:1:15","nodeType":"VariableDeclaration","scope":13434,"src":"17888:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":13429,"name":"bytes32","nodeType":"ElementaryTypeName","src":"17888:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":13432,"mutability":"mutable","name":"s","nameLocation":"17907:1:15","nodeType":"VariableDeclaration","scope":13434,"src":"17899:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":13431,"name":"bytes32","nodeType":"ElementaryTypeName","src":"17899:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"17878:31:15"},"scope":16930,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13448,"nodeType":"FunctionDefinition","src":"17984:104:15","nodes":[],"documentation":{"id":13435,"nodeType":"StructuredDocumentation","src":"17916:63:15","text":"Signs `digest` with `privateKey` using the secp256k1 curve."},"functionSelector":"e341eaa4","implemented":false,"kind":"function","modifiers":[],"name":"sign","nameLocation":"17993:4:15","parameters":{"id":13440,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13437,"mutability":"mutable","name":"privateKey","nameLocation":"18006:10:15","nodeType":"VariableDeclaration","scope":13448,"src":"17998:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13436,"name":"uint256","nodeType":"ElementaryTypeName","src":"17998:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":13439,"mutability":"mutable","name":"digest","nameLocation":"18026:6:15","nodeType":"VariableDeclaration","scope":13448,"src":"18018:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":13438,"name":"bytes32","nodeType":"ElementaryTypeName","src":"18018:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"17997:36:15"},"returnParameters":{"id":13447,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13442,"mutability":"mutable","name":"v","nameLocation":"18063:1:15","nodeType":"VariableDeclaration","scope":13448,"src":"18057:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":13441,"name":"uint8","nodeType":"ElementaryTypeName","src":"18057:5:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":13444,"mutability":"mutable","name":"r","nameLocation":"18074:1:15","nodeType":"VariableDeclaration","scope":13448,"src":"18066:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":13443,"name":"bytes32","nodeType":"ElementaryTypeName","src":"18066:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":13446,"mutability":"mutable","name":"s","nameLocation":"18085:1:15","nodeType":"VariableDeclaration","scope":13448,"src":"18077:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":13445,"name":"bytes32","nodeType":"ElementaryTypeName","src":"18077:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"18056:31:15"},"scope":16930,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13460,"nodeType":"FunctionDefinition","src":"18527:84:15","nodes":[],"documentation":{"id":13449,"nodeType":"StructuredDocumentation","src":"18094:428:15","text":"Signs `digest` with signer provided to script using the secp256k1 curve.\n If `--sender` is provided, the signer with provided address is used, otherwise,\n if exactly one signer is provided to the script, that signer is used.\n Raises error if signer passed through `--sender` does not match any unlocked signers or\n if `--sender` is not provided and not exactly one signer is passed to the script."},"functionSelector":"799cd333","implemented":false,"kind":"function","modifiers":[],"name":"sign","nameLocation":"18536:4:15","parameters":{"id":13452,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13451,"mutability":"mutable","name":"digest","nameLocation":"18549:6:15","nodeType":"VariableDeclaration","scope":13460,"src":"18541:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":13450,"name":"bytes32","nodeType":"ElementaryTypeName","src":"18541:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"18540:16:15"},"returnParameters":{"id":13459,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13454,"mutability":"mutable","name":"v","nameLocation":"18586:1:15","nodeType":"VariableDeclaration","scope":13460,"src":"18580:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":13453,"name":"uint8","nodeType":"ElementaryTypeName","src":"18580:5:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":13456,"mutability":"mutable","name":"r","nameLocation":"18597:1:15","nodeType":"VariableDeclaration","scope":13460,"src":"18589:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":13455,"name":"bytes32","nodeType":"ElementaryTypeName","src":"18589:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":13458,"mutability":"mutable","name":"s","nameLocation":"18608:1:15","nodeType":"VariableDeclaration","scope":13460,"src":"18600:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":13457,"name":"bytes32","nodeType":"ElementaryTypeName","src":"18600:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"18579:31:15"},"scope":16930,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13474,"nodeType":"FunctionDefinition","src":"18788:100:15","nodes":[],"documentation":{"id":13461,"nodeType":"StructuredDocumentation","src":"18617:166:15","text":"Signs `digest` with signer provided to script using the secp256k1 curve.\n Raises error if none of the signers passed into the script have provided address."},"functionSelector":"8c1aa205","implemented":false,"kind":"function","modifiers":[],"name":"sign","nameLocation":"18797:4:15","parameters":{"id":13466,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13463,"mutability":"mutable","name":"signer","nameLocation":"18810:6:15","nodeType":"VariableDeclaration","scope":13474,"src":"18802:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":13462,"name":"address","nodeType":"ElementaryTypeName","src":"18802:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":13465,"mutability":"mutable","name":"digest","nameLocation":"18826:6:15","nodeType":"VariableDeclaration","scope":13474,"src":"18818:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":13464,"name":"bytes32","nodeType":"ElementaryTypeName","src":"18818:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"18801:32:15"},"returnParameters":{"id":13473,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13468,"mutability":"mutable","name":"v","nameLocation":"18863:1:15","nodeType":"VariableDeclaration","scope":13474,"src":"18857:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":13467,"name":"uint8","nodeType":"ElementaryTypeName","src":"18857:5:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":13470,"mutability":"mutable","name":"r","nameLocation":"18874:1:15","nodeType":"VariableDeclaration","scope":13474,"src":"18866:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":13469,"name":"bytes32","nodeType":"ElementaryTypeName","src":"18866:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":13472,"mutability":"mutable","name":"s","nameLocation":"18885:1:15","nodeType":"VariableDeclaration","scope":13474,"src":"18877:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":13471,"name":"bytes32","nodeType":"ElementaryTypeName","src":"18877:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"18856:31:15"},"scope":16930,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13482,"nodeType":"FunctionDefinition","src":"19075:80:15","nodes":[],"documentation":{"id":13475,"nodeType":"StructuredDocumentation","src":"18932:138:15","text":"Gets the environment variable `name` and parses it as `address`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"350d56bf","implemented":false,"kind":"function","modifiers":[],"name":"envAddress","nameLocation":"19084:10:15","parameters":{"id":13478,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13477,"mutability":"mutable","name":"name","nameLocation":"19111:4:15","nodeType":"VariableDeclaration","scope":13482,"src":"19095:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13476,"name":"string","nodeType":"ElementaryTypeName","src":"19095:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"19094:22:15"},"returnParameters":{"id":13481,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13480,"mutability":"mutable","name":"value","nameLocation":"19148:5:15","nodeType":"VariableDeclaration","scope":13482,"src":"19140:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":13479,"name":"address","nodeType":"ElementaryTypeName","src":"19140:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"19139:15:15"},"scope":16930,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":13493,"nodeType":"FunctionDefinition","src":"19338:112:15","nodes":[],"documentation":{"id":13483,"nodeType":"StructuredDocumentation","src":"19161:172:15","text":"Gets the environment variable `name` and parses it as an array of `address`, delimited by `delim`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"ad31b9fa","implemented":false,"kind":"function","modifiers":[],"name":"envAddress","nameLocation":"19347:10:15","parameters":{"id":13488,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13485,"mutability":"mutable","name":"name","nameLocation":"19374:4:15","nodeType":"VariableDeclaration","scope":13493,"src":"19358:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13484,"name":"string","nodeType":"ElementaryTypeName","src":"19358:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13487,"mutability":"mutable","name":"delim","nameLocation":"19396:5:15","nodeType":"VariableDeclaration","scope":13493,"src":"19380:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13486,"name":"string","nodeType":"ElementaryTypeName","src":"19380:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"19357:45:15"},"returnParameters":{"id":13492,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13491,"mutability":"mutable","name":"value","nameLocation":"19443:5:15","nodeType":"VariableDeclaration","scope":13493,"src":"19426:22:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":13489,"name":"address","nodeType":"ElementaryTypeName","src":"19426:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":13490,"nodeType":"ArrayTypeName","src":"19426:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"19425:24:15"},"scope":16930,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":13501,"nodeType":"FunctionDefinition","src":"19596:74:15","nodes":[],"documentation":{"id":13494,"nodeType":"StructuredDocumentation","src":"19456:135:15","text":"Gets the environment variable `name` and parses it as `bool`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"7ed1ec7d","implemented":false,"kind":"function","modifiers":[],"name":"envBool","nameLocation":"19605:7:15","parameters":{"id":13497,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13496,"mutability":"mutable","name":"name","nameLocation":"19629:4:15","nodeType":"VariableDeclaration","scope":13501,"src":"19613:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13495,"name":"string","nodeType":"ElementaryTypeName","src":"19613:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"19612:22:15"},"returnParameters":{"id":13500,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13499,"mutability":"mutable","name":"value","nameLocation":"19663:5:15","nodeType":"VariableDeclaration","scope":13501,"src":"19658:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":13498,"name":"bool","nodeType":"ElementaryTypeName","src":"19658:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"19657:12:15"},"scope":16930,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":13512,"nodeType":"FunctionDefinition","src":"19850:106:15","nodes":[],"documentation":{"id":13502,"nodeType":"StructuredDocumentation","src":"19676:169:15","text":"Gets the environment variable `name` and parses it as an array of `bool`, delimited by `delim`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"aaaddeaf","implemented":false,"kind":"function","modifiers":[],"name":"envBool","nameLocation":"19859:7:15","parameters":{"id":13507,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13504,"mutability":"mutable","name":"name","nameLocation":"19883:4:15","nodeType":"VariableDeclaration","scope":13512,"src":"19867:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13503,"name":"string","nodeType":"ElementaryTypeName","src":"19867:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13506,"mutability":"mutable","name":"delim","nameLocation":"19905:5:15","nodeType":"VariableDeclaration","scope":13512,"src":"19889:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13505,"name":"string","nodeType":"ElementaryTypeName","src":"19889:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"19866:45:15"},"returnParameters":{"id":13511,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13510,"mutability":"mutable","name":"value","nameLocation":"19949:5:15","nodeType":"VariableDeclaration","scope":13512,"src":"19935:19:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":13508,"name":"bool","nodeType":"ElementaryTypeName","src":"19935:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":13509,"nodeType":"ArrayTypeName","src":"19935:6:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"}],"src":"19934:21:15"},"scope":16930,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":13520,"nodeType":"FunctionDefinition","src":"20105:80:15","nodes":[],"documentation":{"id":13513,"nodeType":"StructuredDocumentation","src":"19962:138:15","text":"Gets the environment variable `name` and parses it as `bytes32`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"97949042","implemented":false,"kind":"function","modifiers":[],"name":"envBytes32","nameLocation":"20114:10:15","parameters":{"id":13516,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13515,"mutability":"mutable","name":"name","nameLocation":"20141:4:15","nodeType":"VariableDeclaration","scope":13520,"src":"20125:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13514,"name":"string","nodeType":"ElementaryTypeName","src":"20125:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"20124:22:15"},"returnParameters":{"id":13519,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13518,"mutability":"mutable","name":"value","nameLocation":"20178:5:15","nodeType":"VariableDeclaration","scope":13520,"src":"20170:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":13517,"name":"bytes32","nodeType":"ElementaryTypeName","src":"20170:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"20169:15:15"},"scope":16930,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":13531,"nodeType":"FunctionDefinition","src":"20368:112:15","nodes":[],"documentation":{"id":13521,"nodeType":"StructuredDocumentation","src":"20191:172:15","text":"Gets the environment variable `name` and parses it as an array of `bytes32`, delimited by `delim`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"5af231c1","implemented":false,"kind":"function","modifiers":[],"name":"envBytes32","nameLocation":"20377:10:15","parameters":{"id":13526,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13523,"mutability":"mutable","name":"name","nameLocation":"20404:4:15","nodeType":"VariableDeclaration","scope":13531,"src":"20388:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13522,"name":"string","nodeType":"ElementaryTypeName","src":"20388:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13525,"mutability":"mutable","name":"delim","nameLocation":"20426:5:15","nodeType":"VariableDeclaration","scope":13531,"src":"20410:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13524,"name":"string","nodeType":"ElementaryTypeName","src":"20410:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"20387:45:15"},"returnParameters":{"id":13530,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13529,"mutability":"mutable","name":"value","nameLocation":"20473:5:15","nodeType":"VariableDeclaration","scope":13531,"src":"20456:22:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":13527,"name":"bytes32","nodeType":"ElementaryTypeName","src":"20456:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":13528,"nodeType":"ArrayTypeName","src":"20456:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"20455:24:15"},"scope":16930,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":13539,"nodeType":"FunctionDefinition","src":"20627:83:15","nodes":[],"documentation":{"id":13532,"nodeType":"StructuredDocumentation","src":"20486:136:15","text":"Gets the environment variable `name` and parses it as `bytes`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"4d7baf06","implemented":false,"kind":"function","modifiers":[],"name":"envBytes","nameLocation":"20636:8:15","parameters":{"id":13535,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13534,"mutability":"mutable","name":"name","nameLocation":"20661:4:15","nodeType":"VariableDeclaration","scope":13539,"src":"20645:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13533,"name":"string","nodeType":"ElementaryTypeName","src":"20645:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"20644:22:15"},"returnParameters":{"id":13538,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13537,"mutability":"mutable","name":"value","nameLocation":"20703:5:15","nodeType":"VariableDeclaration","scope":13539,"src":"20690:18:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":13536,"name":"bytes","nodeType":"ElementaryTypeName","src":"20690:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"20689:20:15"},"scope":16930,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":13550,"nodeType":"FunctionDefinition","src":"20891:108:15","nodes":[],"documentation":{"id":13540,"nodeType":"StructuredDocumentation","src":"20716:170:15","text":"Gets the environment variable `name` and parses it as an array of `bytes`, delimited by `delim`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"ddc2651b","implemented":false,"kind":"function","modifiers":[],"name":"envBytes","nameLocation":"20900:8:15","parameters":{"id":13545,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13542,"mutability":"mutable","name":"name","nameLocation":"20925:4:15","nodeType":"VariableDeclaration","scope":13550,"src":"20909:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13541,"name":"string","nodeType":"ElementaryTypeName","src":"20909:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13544,"mutability":"mutable","name":"delim","nameLocation":"20947:5:15","nodeType":"VariableDeclaration","scope":13550,"src":"20931:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13543,"name":"string","nodeType":"ElementaryTypeName","src":"20931:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"20908:45:15"},"returnParameters":{"id":13549,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13548,"mutability":"mutable","name":"value","nameLocation":"20992:5:15","nodeType":"VariableDeclaration","scope":13550,"src":"20977:20:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":13546,"name":"bytes","nodeType":"ElementaryTypeName","src":"20977:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":13547,"nodeType":"ArrayTypeName","src":"20977:7:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"20976:22:15"},"scope":16930,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":13558,"nodeType":"FunctionDefinition","src":"21101:77:15","nodes":[],"documentation":{"id":13551,"nodeType":"StructuredDocumentation","src":"21005:91:15","text":"Gets the environment variable `name` and returns true if it exists, else returns false."},"functionSelector":"ce8365f9","implemented":false,"kind":"function","modifiers":[],"name":"envExists","nameLocation":"21110:9:15","parameters":{"id":13554,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13553,"mutability":"mutable","name":"name","nameLocation":"21136:4:15","nodeType":"VariableDeclaration","scope":13558,"src":"21120:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13552,"name":"string","nodeType":"ElementaryTypeName","src":"21120:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"21119:22:15"},"returnParameters":{"id":13557,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13556,"mutability":"mutable","name":"result","nameLocation":"21170:6:15","nodeType":"VariableDeclaration","scope":13558,"src":"21165:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":13555,"name":"bool","nodeType":"ElementaryTypeName","src":"21165:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"21164:13:15"},"scope":16930,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":13566,"nodeType":"FunctionDefinition","src":"21326:75:15","nodes":[],"documentation":{"id":13559,"nodeType":"StructuredDocumentation","src":"21184:137:15","text":"Gets the environment variable `name` and parses it as `int256`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"892a0c61","implemented":false,"kind":"function","modifiers":[],"name":"envInt","nameLocation":"21335:6:15","parameters":{"id":13562,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13561,"mutability":"mutable","name":"name","nameLocation":"21358:4:15","nodeType":"VariableDeclaration","scope":13566,"src":"21342:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13560,"name":"string","nodeType":"ElementaryTypeName","src":"21342:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"21341:22:15"},"returnParameters":{"id":13565,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13564,"mutability":"mutable","name":"value","nameLocation":"21394:5:15","nodeType":"VariableDeclaration","scope":13566,"src":"21387:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":13563,"name":"int256","nodeType":"ElementaryTypeName","src":"21387:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"21386:14:15"},"scope":16930,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":13577,"nodeType":"FunctionDefinition","src":"21583:107:15","nodes":[],"documentation":{"id":13567,"nodeType":"StructuredDocumentation","src":"21407:171:15","text":"Gets the environment variable `name` and parses it as an array of `int256`, delimited by `delim`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"42181150","implemented":false,"kind":"function","modifiers":[],"name":"envInt","nameLocation":"21592:6:15","parameters":{"id":13572,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13569,"mutability":"mutable","name":"name","nameLocation":"21615:4:15","nodeType":"VariableDeclaration","scope":13577,"src":"21599:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13568,"name":"string","nodeType":"ElementaryTypeName","src":"21599:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13571,"mutability":"mutable","name":"delim","nameLocation":"21637:5:15","nodeType":"VariableDeclaration","scope":13577,"src":"21621:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13570,"name":"string","nodeType":"ElementaryTypeName","src":"21621:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"21598:45:15"},"returnParameters":{"id":13576,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13575,"mutability":"mutable","name":"value","nameLocation":"21683:5:15","nodeType":"VariableDeclaration","scope":13577,"src":"21667:21:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_memory_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":13573,"name":"int256","nodeType":"ElementaryTypeName","src":"21667:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":13574,"nodeType":"ArrayTypeName","src":"21667:8:15","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"}],"src":"21666:23:15"},"scope":16930,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":13587,"nodeType":"FunctionDefinition","src":"21881:91:15","nodes":[],"documentation":{"id":13578,"nodeType":"StructuredDocumentation","src":"21696:180:15","text":"Gets the environment variable `name` and parses it as `bool`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"4777f3cf","implemented":false,"kind":"function","modifiers":[],"name":"envOr","nameLocation":"21890:5:15","parameters":{"id":13583,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13580,"mutability":"mutable","name":"name","nameLocation":"21912:4:15","nodeType":"VariableDeclaration","scope":13587,"src":"21896:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13579,"name":"string","nodeType":"ElementaryTypeName","src":"21896:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13582,"mutability":"mutable","name":"defaultValue","nameLocation":"21923:12:15","nodeType":"VariableDeclaration","scope":13587,"src":"21918:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":13581,"name":"bool","nodeType":"ElementaryTypeName","src":"21918:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"21895:41:15"},"returnParameters":{"id":13586,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13585,"mutability":"mutable","name":"value","nameLocation":"21965:5:15","nodeType":"VariableDeclaration","scope":13587,"src":"21960:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":13584,"name":"bool","nodeType":"ElementaryTypeName","src":"21960:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"21959:12:15"},"scope":16930,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":13597,"nodeType":"FunctionDefinition","src":"22166:97:15","nodes":[],"documentation":{"id":13588,"nodeType":"StructuredDocumentation","src":"21978:183:15","text":"Gets the environment variable `name` and parses it as `uint256`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"5e97348f","implemented":false,"kind":"function","modifiers":[],"name":"envOr","nameLocation":"22175:5:15","parameters":{"id":13593,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13590,"mutability":"mutable","name":"name","nameLocation":"22197:4:15","nodeType":"VariableDeclaration","scope":13597,"src":"22181:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13589,"name":"string","nodeType":"ElementaryTypeName","src":"22181:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13592,"mutability":"mutable","name":"defaultValue","nameLocation":"22211:12:15","nodeType":"VariableDeclaration","scope":13597,"src":"22203:20:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13591,"name":"uint256","nodeType":"ElementaryTypeName","src":"22203:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"22180:44:15"},"returnParameters":{"id":13596,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13595,"mutability":"mutable","name":"value","nameLocation":"22256:5:15","nodeType":"VariableDeclaration","scope":13597,"src":"22248:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13594,"name":"uint256","nodeType":"ElementaryTypeName","src":"22248:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"22247:15:15"},"scope":16930,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":13611,"nodeType":"FunctionDefinition","src":"22491:164:15","nodes":[],"documentation":{"id":13598,"nodeType":"StructuredDocumentation","src":"22269:217:15","text":"Gets the environment variable `name` and parses it as an array of `address`, delimited by `delim`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"c74e9deb","implemented":false,"kind":"function","modifiers":[],"name":"envOr","nameLocation":"22500:5:15","parameters":{"id":13606,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13600,"mutability":"mutable","name":"name","nameLocation":"22522:4:15","nodeType":"VariableDeclaration","scope":13611,"src":"22506:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13599,"name":"string","nodeType":"ElementaryTypeName","src":"22506:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13602,"mutability":"mutable","name":"delim","nameLocation":"22544:5:15","nodeType":"VariableDeclaration","scope":13611,"src":"22528:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13601,"name":"string","nodeType":"ElementaryTypeName","src":"22528:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13605,"mutability":"mutable","name":"defaultValue","nameLocation":"22570:12:15","nodeType":"VariableDeclaration","scope":13611,"src":"22551:31:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":13603,"name":"address","nodeType":"ElementaryTypeName","src":"22551:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":13604,"nodeType":"ArrayTypeName","src":"22551:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"22505:78:15"},"returnParameters":{"id":13610,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13609,"mutability":"mutable","name":"value","nameLocation":"22648:5:15","nodeType":"VariableDeclaration","scope":13611,"src":"22631:22:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":13607,"name":"address","nodeType":"ElementaryTypeName","src":"22631:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":13608,"nodeType":"ArrayTypeName","src":"22631:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"22630:24:15"},"scope":16930,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":13625,"nodeType":"FunctionDefinition","src":"22883:164:15","nodes":[],"documentation":{"id":13612,"nodeType":"StructuredDocumentation","src":"22661:217:15","text":"Gets the environment variable `name` and parses it as an array of `bytes32`, delimited by `delim`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"2281f367","implemented":false,"kind":"function","modifiers":[],"name":"envOr","nameLocation":"22892:5:15","parameters":{"id":13620,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13614,"mutability":"mutable","name":"name","nameLocation":"22914:4:15","nodeType":"VariableDeclaration","scope":13625,"src":"22898:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13613,"name":"string","nodeType":"ElementaryTypeName","src":"22898:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13616,"mutability":"mutable","name":"delim","nameLocation":"22936:5:15","nodeType":"VariableDeclaration","scope":13625,"src":"22920:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13615,"name":"string","nodeType":"ElementaryTypeName","src":"22920:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13619,"mutability":"mutable","name":"defaultValue","nameLocation":"22962:12:15","nodeType":"VariableDeclaration","scope":13625,"src":"22943:31:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":13617,"name":"bytes32","nodeType":"ElementaryTypeName","src":"22943:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":13618,"nodeType":"ArrayTypeName","src":"22943:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"22897:78:15"},"returnParameters":{"id":13624,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13623,"mutability":"mutable","name":"value","nameLocation":"23040:5:15","nodeType":"VariableDeclaration","scope":13625,"src":"23023:22:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":13621,"name":"bytes32","nodeType":"ElementaryTypeName","src":"23023:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":13622,"nodeType":"ArrayTypeName","src":"23023:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"23022:24:15"},"scope":16930,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":13639,"nodeType":"FunctionDefinition","src":"23274:162:15","nodes":[],"documentation":{"id":13626,"nodeType":"StructuredDocumentation","src":"23053:216:15","text":"Gets the environment variable `name` and parses it as an array of `string`, delimited by `delim`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"859216bc","implemented":false,"kind":"function","modifiers":[],"name":"envOr","nameLocation":"23283:5:15","parameters":{"id":13634,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13628,"mutability":"mutable","name":"name","nameLocation":"23305:4:15","nodeType":"VariableDeclaration","scope":13639,"src":"23289:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13627,"name":"string","nodeType":"ElementaryTypeName","src":"23289:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13630,"mutability":"mutable","name":"delim","nameLocation":"23327:5:15","nodeType":"VariableDeclaration","scope":13639,"src":"23311:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13629,"name":"string","nodeType":"ElementaryTypeName","src":"23311:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13633,"mutability":"mutable","name":"defaultValue","nameLocation":"23352:12:15","nodeType":"VariableDeclaration","scope":13639,"src":"23334:30:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":13631,"name":"string","nodeType":"ElementaryTypeName","src":"23334:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":13632,"nodeType":"ArrayTypeName","src":"23334:8:15","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"23288:77:15"},"returnParameters":{"id":13638,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13637,"mutability":"mutable","name":"value","nameLocation":"23429:5:15","nodeType":"VariableDeclaration","scope":13639,"src":"23413:21:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":13635,"name":"string","nodeType":"ElementaryTypeName","src":"23413:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":13636,"nodeType":"ArrayTypeName","src":"23413:8:15","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"23412:23:15"},"scope":16930,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":13653,"nodeType":"FunctionDefinition","src":"23662:160:15","nodes":[],"documentation":{"id":13640,"nodeType":"StructuredDocumentation","src":"23442:215:15","text":"Gets the environment variable `name` and parses it as an array of `bytes`, delimited by `delim`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"64bc3e64","implemented":false,"kind":"function","modifiers":[],"name":"envOr","nameLocation":"23671:5:15","parameters":{"id":13648,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13642,"mutability":"mutable","name":"name","nameLocation":"23693:4:15","nodeType":"VariableDeclaration","scope":13653,"src":"23677:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13641,"name":"string","nodeType":"ElementaryTypeName","src":"23677:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13644,"mutability":"mutable","name":"delim","nameLocation":"23715:5:15","nodeType":"VariableDeclaration","scope":13653,"src":"23699:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13643,"name":"string","nodeType":"ElementaryTypeName","src":"23699:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13647,"mutability":"mutable","name":"defaultValue","nameLocation":"23739:12:15","nodeType":"VariableDeclaration","scope":13653,"src":"23722:29:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":13645,"name":"bytes","nodeType":"ElementaryTypeName","src":"23722:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":13646,"nodeType":"ArrayTypeName","src":"23722:7:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"23676:76:15"},"returnParameters":{"id":13652,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13651,"mutability":"mutable","name":"value","nameLocation":"23815:5:15","nodeType":"VariableDeclaration","scope":13653,"src":"23800:20:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":13649,"name":"bytes","nodeType":"ElementaryTypeName","src":"23800:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":13650,"nodeType":"ArrayTypeName","src":"23800:7:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"23799:22:15"},"scope":16930,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":13663,"nodeType":"FunctionDefinition","src":"24015:95:15","nodes":[],"documentation":{"id":13654,"nodeType":"StructuredDocumentation","src":"23828:182:15","text":"Gets the environment variable `name` and parses it as `int256`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"bbcb713e","implemented":false,"kind":"function","modifiers":[],"name":"envOr","nameLocation":"24024:5:15","parameters":{"id":13659,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13656,"mutability":"mutable","name":"name","nameLocation":"24046:4:15","nodeType":"VariableDeclaration","scope":13663,"src":"24030:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13655,"name":"string","nodeType":"ElementaryTypeName","src":"24030:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13658,"mutability":"mutable","name":"defaultValue","nameLocation":"24059:12:15","nodeType":"VariableDeclaration","scope":13663,"src":"24052:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":13657,"name":"int256","nodeType":"ElementaryTypeName","src":"24052:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"24029:43:15"},"returnParameters":{"id":13662,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13661,"mutability":"mutable","name":"value","nameLocation":"24103:5:15","nodeType":"VariableDeclaration","scope":13663,"src":"24096:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":13660,"name":"int256","nodeType":"ElementaryTypeName","src":"24096:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"24095:14:15"},"scope":16930,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":13673,"nodeType":"FunctionDefinition","src":"24304:97:15","nodes":[],"documentation":{"id":13664,"nodeType":"StructuredDocumentation","src":"24116:183:15","text":"Gets the environment variable `name` and parses it as `address`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"561fe540","implemented":false,"kind":"function","modifiers":[],"name":"envOr","nameLocation":"24313:5:15","parameters":{"id":13669,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13666,"mutability":"mutable","name":"name","nameLocation":"24335:4:15","nodeType":"VariableDeclaration","scope":13673,"src":"24319:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13665,"name":"string","nodeType":"ElementaryTypeName","src":"24319:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13668,"mutability":"mutable","name":"defaultValue","nameLocation":"24349:12:15","nodeType":"VariableDeclaration","scope":13673,"src":"24341:20:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":13667,"name":"address","nodeType":"ElementaryTypeName","src":"24341:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"24318:44:15"},"returnParameters":{"id":13672,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13671,"mutability":"mutable","name":"value","nameLocation":"24394:5:15","nodeType":"VariableDeclaration","scope":13673,"src":"24386:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":13670,"name":"address","nodeType":"ElementaryTypeName","src":"24386:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"24385:15:15"},"scope":16930,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":13683,"nodeType":"FunctionDefinition","src":"24595:97:15","nodes":[],"documentation":{"id":13674,"nodeType":"StructuredDocumentation","src":"24407:183:15","text":"Gets the environment variable `name` and parses it as `bytes32`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"b4a85892","implemented":false,"kind":"function","modifiers":[],"name":"envOr","nameLocation":"24604:5:15","parameters":{"id":13679,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13676,"mutability":"mutable","name":"name","nameLocation":"24626:4:15","nodeType":"VariableDeclaration","scope":13683,"src":"24610:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13675,"name":"string","nodeType":"ElementaryTypeName","src":"24610:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13678,"mutability":"mutable","name":"defaultValue","nameLocation":"24640:12:15","nodeType":"VariableDeclaration","scope":13683,"src":"24632:20:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":13677,"name":"bytes32","nodeType":"ElementaryTypeName","src":"24632:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"24609:44:15"},"returnParameters":{"id":13682,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13681,"mutability":"mutable","name":"value","nameLocation":"24685:5:15","nodeType":"VariableDeclaration","scope":13683,"src":"24677:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":13680,"name":"bytes32","nodeType":"ElementaryTypeName","src":"24677:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"24676:15:15"},"scope":16930,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":13693,"nodeType":"FunctionDefinition","src":"24885:111:15","nodes":[],"documentation":{"id":13684,"nodeType":"StructuredDocumentation","src":"24698:182:15","text":"Gets the environment variable `name` and parses it as `string`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"d145736c","implemented":false,"kind":"function","modifiers":[],"name":"envOr","nameLocation":"24894:5:15","parameters":{"id":13689,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13686,"mutability":"mutable","name":"name","nameLocation":"24916:4:15","nodeType":"VariableDeclaration","scope":13693,"src":"24900:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13685,"name":"string","nodeType":"ElementaryTypeName","src":"24900:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13688,"mutability":"mutable","name":"defaultValue","nameLocation":"24938:12:15","nodeType":"VariableDeclaration","scope":13693,"src":"24922:28:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13687,"name":"string","nodeType":"ElementaryTypeName","src":"24922:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"24899:52:15"},"returnParameters":{"id":13692,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13691,"mutability":"mutable","name":"value","nameLocation":"24989:5:15","nodeType":"VariableDeclaration","scope":13693,"src":"24975:19:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":13690,"name":"string","nodeType":"ElementaryTypeName","src":"24975:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"24974:21:15"},"scope":16930,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":13703,"nodeType":"FunctionDefinition","src":"25188:109:15","nodes":[],"documentation":{"id":13694,"nodeType":"StructuredDocumentation","src":"25002:181:15","text":"Gets the environment variable `name` and parses it as `bytes`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"b3e47705","implemented":false,"kind":"function","modifiers":[],"name":"envOr","nameLocation":"25197:5:15","parameters":{"id":13699,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13696,"mutability":"mutable","name":"name","nameLocation":"25219:4:15","nodeType":"VariableDeclaration","scope":13703,"src":"25203:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13695,"name":"string","nodeType":"ElementaryTypeName","src":"25203:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13698,"mutability":"mutable","name":"defaultValue","nameLocation":"25240:12:15","nodeType":"VariableDeclaration","scope":13703,"src":"25225:27:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":13697,"name":"bytes","nodeType":"ElementaryTypeName","src":"25225:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"25202:51:15"},"returnParameters":{"id":13702,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13701,"mutability":"mutable","name":"value","nameLocation":"25290:5:15","nodeType":"VariableDeclaration","scope":13703,"src":"25277:18:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":13700,"name":"bytes","nodeType":"ElementaryTypeName","src":"25277:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"25276:20:15"},"scope":16930,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":13717,"nodeType":"FunctionDefinition","src":"25522:158:15","nodes":[],"documentation":{"id":13704,"nodeType":"StructuredDocumentation","src":"25303:214:15","text":"Gets the environment variable `name` and parses it as an array of `bool`, delimited by `delim`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"eb85e83b","implemented":false,"kind":"function","modifiers":[],"name":"envOr","nameLocation":"25531:5:15","parameters":{"id":13712,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13706,"mutability":"mutable","name":"name","nameLocation":"25553:4:15","nodeType":"VariableDeclaration","scope":13717,"src":"25537:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13705,"name":"string","nodeType":"ElementaryTypeName","src":"25537:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13708,"mutability":"mutable","name":"delim","nameLocation":"25575:5:15","nodeType":"VariableDeclaration","scope":13717,"src":"25559:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13707,"name":"string","nodeType":"ElementaryTypeName","src":"25559:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13711,"mutability":"mutable","name":"defaultValue","nameLocation":"25598:12:15","nodeType":"VariableDeclaration","scope":13717,"src":"25582:28:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":13709,"name":"bool","nodeType":"ElementaryTypeName","src":"25582:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":13710,"nodeType":"ArrayTypeName","src":"25582:6:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"}],"src":"25536:75:15"},"returnParameters":{"id":13716,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13715,"mutability":"mutable","name":"value","nameLocation":"25673:5:15","nodeType":"VariableDeclaration","scope":13717,"src":"25659:19:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":13713,"name":"bool","nodeType":"ElementaryTypeName","src":"25659:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":13714,"nodeType":"ArrayTypeName","src":"25659:6:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"}],"src":"25658:21:15"},"scope":16930,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":13731,"nodeType":"FunctionDefinition","src":"25908:164:15","nodes":[],"documentation":{"id":13718,"nodeType":"StructuredDocumentation","src":"25686:217:15","text":"Gets the environment variable `name` and parses it as an array of `uint256`, delimited by `delim`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"74318528","implemented":false,"kind":"function","modifiers":[],"name":"envOr","nameLocation":"25917:5:15","parameters":{"id":13726,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13720,"mutability":"mutable","name":"name","nameLocation":"25939:4:15","nodeType":"VariableDeclaration","scope":13731,"src":"25923:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13719,"name":"string","nodeType":"ElementaryTypeName","src":"25923:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13722,"mutability":"mutable","name":"delim","nameLocation":"25961:5:15","nodeType":"VariableDeclaration","scope":13731,"src":"25945:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13721,"name":"string","nodeType":"ElementaryTypeName","src":"25945:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13725,"mutability":"mutable","name":"defaultValue","nameLocation":"25987:12:15","nodeType":"VariableDeclaration","scope":13731,"src":"25968:31:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":13723,"name":"uint256","nodeType":"ElementaryTypeName","src":"25968:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":13724,"nodeType":"ArrayTypeName","src":"25968:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"25922:78:15"},"returnParameters":{"id":13730,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13729,"mutability":"mutable","name":"value","nameLocation":"26065:5:15","nodeType":"VariableDeclaration","scope":13731,"src":"26048:22:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":13727,"name":"uint256","nodeType":"ElementaryTypeName","src":"26048:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":13728,"nodeType":"ArrayTypeName","src":"26048:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"26047:24:15"},"scope":16930,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":13745,"nodeType":"FunctionDefinition","src":"26299:162:15","nodes":[],"documentation":{"id":13732,"nodeType":"StructuredDocumentation","src":"26078:216:15","text":"Gets the environment variable `name` and parses it as an array of `int256`, delimited by `delim`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"4700d74b","implemented":false,"kind":"function","modifiers":[],"name":"envOr","nameLocation":"26308:5:15","parameters":{"id":13740,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13734,"mutability":"mutable","name":"name","nameLocation":"26330:4:15","nodeType":"VariableDeclaration","scope":13745,"src":"26314:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13733,"name":"string","nodeType":"ElementaryTypeName","src":"26314:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13736,"mutability":"mutable","name":"delim","nameLocation":"26352:5:15","nodeType":"VariableDeclaration","scope":13745,"src":"26336:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13735,"name":"string","nodeType":"ElementaryTypeName","src":"26336:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13739,"mutability":"mutable","name":"defaultValue","nameLocation":"26377:12:15","nodeType":"VariableDeclaration","scope":13745,"src":"26359:30:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_calldata_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":13737,"name":"int256","nodeType":"ElementaryTypeName","src":"26359:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":13738,"nodeType":"ArrayTypeName","src":"26359:8:15","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"}],"src":"26313:77:15"},"returnParameters":{"id":13744,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13743,"mutability":"mutable","name":"value","nameLocation":"26454:5:15","nodeType":"VariableDeclaration","scope":13745,"src":"26438:21:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_memory_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":13741,"name":"int256","nodeType":"ElementaryTypeName","src":"26438:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":13742,"nodeType":"ArrayTypeName","src":"26438:8:15","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"}],"src":"26437:23:15"},"scope":16930,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":13753,"nodeType":"FunctionDefinition","src":"26609:85:15","nodes":[],"documentation":{"id":13746,"nodeType":"StructuredDocumentation","src":"26467:137:15","text":"Gets the environment variable `name` and parses it as `string`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"f877cb19","implemented":false,"kind":"function","modifiers":[],"name":"envString","nameLocation":"26618:9:15","parameters":{"id":13749,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13748,"mutability":"mutable","name":"name","nameLocation":"26644:4:15","nodeType":"VariableDeclaration","scope":13753,"src":"26628:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13747,"name":"string","nodeType":"ElementaryTypeName","src":"26628:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"26627:22:15"},"returnParameters":{"id":13752,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13751,"mutability":"mutable","name":"value","nameLocation":"26687:5:15","nodeType":"VariableDeclaration","scope":13753,"src":"26673:19:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":13750,"name":"string","nodeType":"ElementaryTypeName","src":"26673:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"26672:21:15"},"scope":16930,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":13764,"nodeType":"FunctionDefinition","src":"26876:110:15","nodes":[],"documentation":{"id":13754,"nodeType":"StructuredDocumentation","src":"26700:171:15","text":"Gets the environment variable `name` and parses it as an array of `string`, delimited by `delim`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"14b02bc9","implemented":false,"kind":"function","modifiers":[],"name":"envString","nameLocation":"26885:9:15","parameters":{"id":13759,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13756,"mutability":"mutable","name":"name","nameLocation":"26911:4:15","nodeType":"VariableDeclaration","scope":13764,"src":"26895:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13755,"name":"string","nodeType":"ElementaryTypeName","src":"26895:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13758,"mutability":"mutable","name":"delim","nameLocation":"26933:5:15","nodeType":"VariableDeclaration","scope":13764,"src":"26917:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13757,"name":"string","nodeType":"ElementaryTypeName","src":"26917:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"26894:45:15"},"returnParameters":{"id":13763,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13762,"mutability":"mutable","name":"value","nameLocation":"26979:5:15","nodeType":"VariableDeclaration","scope":13764,"src":"26963:21:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":13760,"name":"string","nodeType":"ElementaryTypeName","src":"26963:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":13761,"nodeType":"ArrayTypeName","src":"26963:8:15","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"26962:23:15"},"scope":16930,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":13772,"nodeType":"FunctionDefinition","src":"27135:77:15","nodes":[],"documentation":{"id":13765,"nodeType":"StructuredDocumentation","src":"26992:138:15","text":"Gets the environment variable `name` and parses it as `uint256`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"c1978d1f","implemented":false,"kind":"function","modifiers":[],"name":"envUint","nameLocation":"27144:7:15","parameters":{"id":13768,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13767,"mutability":"mutable","name":"name","nameLocation":"27168:4:15","nodeType":"VariableDeclaration","scope":13772,"src":"27152:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13766,"name":"string","nodeType":"ElementaryTypeName","src":"27152:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"27151:22:15"},"returnParameters":{"id":13771,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13770,"mutability":"mutable","name":"value","nameLocation":"27205:5:15","nodeType":"VariableDeclaration","scope":13772,"src":"27197:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13769,"name":"uint256","nodeType":"ElementaryTypeName","src":"27197:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"27196:15:15"},"scope":16930,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":13783,"nodeType":"FunctionDefinition","src":"27395:109:15","nodes":[],"documentation":{"id":13773,"nodeType":"StructuredDocumentation","src":"27218:172:15","text":"Gets the environment variable `name` and parses it as an array of `uint256`, delimited by `delim`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"f3dec099","implemented":false,"kind":"function","modifiers":[],"name":"envUint","nameLocation":"27404:7:15","parameters":{"id":13778,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13775,"mutability":"mutable","name":"name","nameLocation":"27428:4:15","nodeType":"VariableDeclaration","scope":13783,"src":"27412:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13774,"name":"string","nodeType":"ElementaryTypeName","src":"27412:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13777,"mutability":"mutable","name":"delim","nameLocation":"27450:5:15","nodeType":"VariableDeclaration","scope":13783,"src":"27434:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13776,"name":"string","nodeType":"ElementaryTypeName","src":"27434:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"27411:45:15"},"returnParameters":{"id":13782,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13781,"mutability":"mutable","name":"value","nameLocation":"27497:5:15","nodeType":"VariableDeclaration","scope":13783,"src":"27480:22:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":13779,"name":"uint256","nodeType":"ElementaryTypeName","src":"27480:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":13780,"nodeType":"ArrayTypeName","src":"27480:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"27479:24:15"},"scope":16930,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":13792,"nodeType":"FunctionDefinition","src":"27581:77:15","nodes":[],"documentation":{"id":13784,"nodeType":"StructuredDocumentation","src":"27510:66:15","text":"Returns true if `forge` command was executed in given context."},"functionSelector":"64af255d","implemented":false,"kind":"function","modifiers":[],"name":"isContext","nameLocation":"27590:9:15","parameters":{"id":13788,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13787,"mutability":"mutable","name":"context","nameLocation":"27613:7:15","nodeType":"VariableDeclaration","scope":13792,"src":"27600:20:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_ForgeContext_$13021","typeString":"enum VmSafe.ForgeContext"},"typeName":{"id":13786,"nodeType":"UserDefinedTypeName","pathNode":{"id":13785,"name":"ForgeContext","nameLocations":["27600:12:15"],"nodeType":"IdentifierPath","referencedDeclaration":13021,"src":"27600:12:15"},"referencedDeclaration":13021,"src":"27600:12:15","typeDescriptions":{"typeIdentifier":"t_enum$_ForgeContext_$13021","typeString":"enum VmSafe.ForgeContext"}},"visibility":"internal"}],"src":"27599:22:15"},"returnParameters":{"id":13791,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13790,"mutability":"mutable","name":"result","nameLocation":"27650:6:15","nodeType":"VariableDeclaration","scope":13792,"src":"27645:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":13789,"name":"bool","nodeType":"ElementaryTypeName","src":"27645:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"27644:13:15"},"scope":16930,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":13800,"nodeType":"FunctionDefinition","src":"27700:70:15","nodes":[],"documentation":{"id":13793,"nodeType":"StructuredDocumentation","src":"27664:31:15","text":"Sets environment variables."},"functionSelector":"3d5923ee","implemented":false,"kind":"function","modifiers":[],"name":"setEnv","nameLocation":"27709:6:15","parameters":{"id":13798,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13795,"mutability":"mutable","name":"name","nameLocation":"27732:4:15","nodeType":"VariableDeclaration","scope":13800,"src":"27716:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13794,"name":"string","nodeType":"ElementaryTypeName","src":"27716:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13797,"mutability":"mutable","name":"value","nameLocation":"27754:5:15","nodeType":"VariableDeclaration","scope":13800,"src":"27738:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13796,"name":"string","nodeType":"ElementaryTypeName","src":"27738:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"27715:45:15"},"returnParameters":{"id":13799,"nodeType":"ParameterList","parameters":[],"src":"27769:0:15"},"scope":16930,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13812,"nodeType":"FunctionDefinition","src":"27902:109:15","nodes":[],"documentation":{"id":13801,"nodeType":"StructuredDocumentation","src":"27806:91:15","text":"Gets all accessed reads and write slot from a `vm.record` session, for a given address."},"functionSelector":"65bc9481","implemented":false,"kind":"function","modifiers":[],"name":"accesses","nameLocation":"27911:8:15","parameters":{"id":13804,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13803,"mutability":"mutable","name":"target","nameLocation":"27928:6:15","nodeType":"VariableDeclaration","scope":13812,"src":"27920:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":13802,"name":"address","nodeType":"ElementaryTypeName","src":"27920:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"27919:16:15"},"returnParameters":{"id":13811,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13807,"mutability":"mutable","name":"readSlots","nameLocation":"27971:9:15","nodeType":"VariableDeclaration","scope":13812,"src":"27954:26:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":13805,"name":"bytes32","nodeType":"ElementaryTypeName","src":"27954:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":13806,"nodeType":"ArrayTypeName","src":"27954:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":13810,"mutability":"mutable","name":"writeSlots","nameLocation":"27999:10:15","nodeType":"VariableDeclaration","scope":13812,"src":"27982:27:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":13808,"name":"bytes32","nodeType":"ElementaryTypeName","src":"27982:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":13809,"nodeType":"ArrayTypeName","src":"27982:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"27953:57:15"},"scope":16930,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13820,"nodeType":"FunctionDefinition","src":"28067:74:15","nodes":[],"documentation":{"id":13813,"nodeType":"StructuredDocumentation","src":"28017:45:15","text":"Gets the address for a given private key."},"functionSelector":"ffa18649","implemented":false,"kind":"function","modifiers":[],"name":"addr","nameLocation":"28076:4:15","parameters":{"id":13816,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13815,"mutability":"mutable","name":"privateKey","nameLocation":"28089:10:15","nodeType":"VariableDeclaration","scope":13820,"src":"28081:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13814,"name":"uint256","nodeType":"ElementaryTypeName","src":"28081:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"28080:20:15"},"returnParameters":{"id":13819,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13818,"mutability":"mutable","name":"keyAddr","nameLocation":"28132:7:15","nodeType":"VariableDeclaration","scope":13820,"src":"28124:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":13817,"name":"address","nodeType":"ElementaryTypeName","src":"28124:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"28123:17:15"},"scope":16930,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13837,"nodeType":"FunctionDefinition","src":"28204:160:15","nodes":[],"documentation":{"id":13821,"nodeType":"StructuredDocumentation","src":"28147:52:15","text":"Gets all the logs according to specified filter."},"functionSelector":"35e1349b","implemented":false,"kind":"function","modifiers":[],"name":"eth_getLogs","nameLocation":"28213:11:15","parameters":{"id":13831,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13823,"mutability":"mutable","name":"fromBlock","nameLocation":"28233:9:15","nodeType":"VariableDeclaration","scope":13837,"src":"28225:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13822,"name":"uint256","nodeType":"ElementaryTypeName","src":"28225:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":13825,"mutability":"mutable","name":"toBlock","nameLocation":"28252:7:15","nodeType":"VariableDeclaration","scope":13837,"src":"28244:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13824,"name":"uint256","nodeType":"ElementaryTypeName","src":"28244:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":13827,"mutability":"mutable","name":"target","nameLocation":"28269:6:15","nodeType":"VariableDeclaration","scope":13837,"src":"28261:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":13826,"name":"address","nodeType":"ElementaryTypeName","src":"28261:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":13830,"mutability":"mutable","name":"topics","nameLocation":"28296:6:15","nodeType":"VariableDeclaration","scope":13837,"src":"28277:25:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":13828,"name":"bytes32","nodeType":"ElementaryTypeName","src":"28277:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":13829,"nodeType":"ArrayTypeName","src":"28277:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"28224:79:15"},"returnParameters":{"id":13836,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13835,"mutability":"mutable","name":"logs","nameLocation":"28358:4:15","nodeType":"VariableDeclaration","scope":13837,"src":"28338:24:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_EthGetLogs_$13062_memory_ptr_$dyn_memory_ptr","typeString":"struct VmSafe.EthGetLogs[]"},"typeName":{"baseType":{"id":13833,"nodeType":"UserDefinedTypeName","pathNode":{"id":13832,"name":"EthGetLogs","nameLocations":["28338:10:15"],"nodeType":"IdentifierPath","referencedDeclaration":13062,"src":"28338:10:15"},"referencedDeclaration":13062,"src":"28338:10:15","typeDescriptions":{"typeIdentifier":"t_struct$_EthGetLogs_$13062_storage_ptr","typeString":"struct VmSafe.EthGetLogs"}},"id":13834,"nodeType":"ArrayTypeName","src":"28338:12:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_EthGetLogs_$13062_storage_$dyn_storage_ptr","typeString":"struct VmSafe.EthGetLogs[]"}},"visibility":"internal"}],"src":"28337:26:15"},"scope":16930,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13843,"nodeType":"FunctionDefinition","src":"28701:70:15","nodes":[],"documentation":{"id":13838,"nodeType":"StructuredDocumentation","src":"28370:326:15","text":"Gets the current `block.blobbasefee`.\n You should use this instead of `block.blobbasefee` if you use `vm.blobBaseFee`, as `block.blobbasefee` is assumed to be constant across a transaction,\n and as a result will get optimized out by the compiler.\n See https://github.com/foundry-rs/foundry/issues/6180"},"functionSelector":"1f6d6ef7","implemented":false,"kind":"function","modifiers":[],"name":"getBlobBaseFee","nameLocation":"28710:14:15","parameters":{"id":13839,"nodeType":"ParameterList","parameters":[],"src":"28724:2:15"},"returnParameters":{"id":13842,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13841,"mutability":"mutable","name":"blobBaseFee","nameLocation":"28758:11:15","nodeType":"VariableDeclaration","scope":13843,"src":"28750:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13840,"name":"uint256","nodeType":"ElementaryTypeName","src":"28750:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"28749:21:15"},"scope":16930,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":13849,"nodeType":"FunctionDefinition","src":"29086:65:15","nodes":[],"documentation":{"id":13844,"nodeType":"StructuredDocumentation","src":"28777:304:15","text":"Gets the current `block.number`.\n You should use this instead of `block.number` if you use `vm.roll`, as `block.number` is assumed to be constant across a transaction,\n and as a result will get optimized out by the compiler.\n See https://github.com/foundry-rs/foundry/issues/6180"},"functionSelector":"42cbb15c","implemented":false,"kind":"function","modifiers":[],"name":"getBlockNumber","nameLocation":"29095:14:15","parameters":{"id":13845,"nodeType":"ParameterList","parameters":[],"src":"29109:2:15"},"returnParameters":{"id":13848,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13847,"mutability":"mutable","name":"height","nameLocation":"29143:6:15","nodeType":"VariableDeclaration","scope":13849,"src":"29135:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13846,"name":"uint256","nodeType":"ElementaryTypeName","src":"29135:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"29134:16:15"},"scope":16930,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":13855,"nodeType":"FunctionDefinition","src":"29475:71:15","nodes":[],"documentation":{"id":13850,"nodeType":"StructuredDocumentation","src":"29157:313:15","text":"Gets the current `block.timestamp`.\n You should use this instead of `block.timestamp` if you use `vm.warp`, as `block.timestamp` is assumed to be constant across a transaction,\n and as a result will get optimized out by the compiler.\n See https://github.com/foundry-rs/foundry/issues/6180"},"functionSelector":"796b89b9","implemented":false,"kind":"function","modifiers":[],"name":"getBlockTimestamp","nameLocation":"29484:17:15","parameters":{"id":13851,"nodeType":"ParameterList","parameters":[],"src":"29501:2:15"},"returnParameters":{"id":13854,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13853,"mutability":"mutable","name":"timestamp","nameLocation":"29535:9:15","nodeType":"VariableDeclaration","scope":13855,"src":"29527:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13852,"name":"uint256","nodeType":"ElementaryTypeName","src":"29527:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"29526:19:15"},"scope":16930,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":13869,"nodeType":"FunctionDefinition","src":"29639:146:15","nodes":[],"documentation":{"id":13856,"nodeType":"StructuredDocumentation","src":"29552:82:15","text":"Gets the map key and parent of a mapping at a given slot, for a given address."},"functionSelector":"876e24e6","implemented":false,"kind":"function","modifiers":[],"name":"getMappingKeyAndParentOf","nameLocation":"29648:24:15","parameters":{"id":13861,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13858,"mutability":"mutable","name":"target","nameLocation":"29681:6:15","nodeType":"VariableDeclaration","scope":13869,"src":"29673:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":13857,"name":"address","nodeType":"ElementaryTypeName","src":"29673:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":13860,"mutability":"mutable","name":"elementSlot","nameLocation":"29697:11:15","nodeType":"VariableDeclaration","scope":13869,"src":"29689:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":13859,"name":"bytes32","nodeType":"ElementaryTypeName","src":"29689:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"29672:37:15"},"returnParameters":{"id":13868,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13863,"mutability":"mutable","name":"found","nameLocation":"29749:5:15","nodeType":"VariableDeclaration","scope":13869,"src":"29744:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":13862,"name":"bool","nodeType":"ElementaryTypeName","src":"29744:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":13865,"mutability":"mutable","name":"key","nameLocation":"29764:3:15","nodeType":"VariableDeclaration","scope":13869,"src":"29756:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":13864,"name":"bytes32","nodeType":"ElementaryTypeName","src":"29756:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":13867,"mutability":"mutable","name":"parent","nameLocation":"29777:6:15","nodeType":"VariableDeclaration","scope":13869,"src":"29769:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":13866,"name":"bytes32","nodeType":"ElementaryTypeName","src":"29769:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"29743:41:15"},"scope":16930,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13879,"nodeType":"FunctionDefinition","src":"29882:97:15","nodes":[],"documentation":{"id":13870,"nodeType":"StructuredDocumentation","src":"29791:86:15","text":"Gets the number of elements in the mapping at the given slot, for a given address."},"functionSelector":"2f2fd63f","implemented":false,"kind":"function","modifiers":[],"name":"getMappingLength","nameLocation":"29891:16:15","parameters":{"id":13875,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13872,"mutability":"mutable","name":"target","nameLocation":"29916:6:15","nodeType":"VariableDeclaration","scope":13879,"src":"29908:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":13871,"name":"address","nodeType":"ElementaryTypeName","src":"29908:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":13874,"mutability":"mutable","name":"mappingSlot","nameLocation":"29932:11:15","nodeType":"VariableDeclaration","scope":13879,"src":"29924:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":13873,"name":"bytes32","nodeType":"ElementaryTypeName","src":"29924:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"29907:37:15"},"returnParameters":{"id":13878,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13877,"mutability":"mutable","name":"length","nameLocation":"29971:6:15","nodeType":"VariableDeclaration","scope":13879,"src":"29963:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13876,"name":"uint256","nodeType":"ElementaryTypeName","src":"29963:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"29962:16:15"},"scope":16930,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13891,"nodeType":"FunctionDefinition","src":"30183:109:15","nodes":[],"documentation":{"id":13880,"nodeType":"StructuredDocumentation","src":"29985:193:15","text":"Gets the elements at index idx of the mapping at the given slot, for a given address. The\n index must be less than the length of the mapping (i.e. the number of keys in the mapping)."},"functionSelector":"ebc73ab4","implemented":false,"kind":"function","modifiers":[],"name":"getMappingSlotAt","nameLocation":"30192:16:15","parameters":{"id":13887,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13882,"mutability":"mutable","name":"target","nameLocation":"30217:6:15","nodeType":"VariableDeclaration","scope":13891,"src":"30209:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":13881,"name":"address","nodeType":"ElementaryTypeName","src":"30209:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":13884,"mutability":"mutable","name":"mappingSlot","nameLocation":"30233:11:15","nodeType":"VariableDeclaration","scope":13891,"src":"30225:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":13883,"name":"bytes32","nodeType":"ElementaryTypeName","src":"30225:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":13886,"mutability":"mutable","name":"idx","nameLocation":"30254:3:15","nodeType":"VariableDeclaration","scope":13891,"src":"30246:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13885,"name":"uint256","nodeType":"ElementaryTypeName","src":"30246:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"30208:50:15"},"returnParameters":{"id":13890,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13889,"mutability":"mutable","name":"value","nameLocation":"30285:5:15","nodeType":"VariableDeclaration","scope":13891,"src":"30277:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":13888,"name":"bytes32","nodeType":"ElementaryTypeName","src":"30277:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"30276:15:15"},"scope":16930,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13899,"nodeType":"FunctionDefinition","src":"30336:72:15","nodes":[],"documentation":{"id":13892,"nodeType":"StructuredDocumentation","src":"30298:33:15","text":"Gets the nonce of an account."},"functionSelector":"2d0335ab","implemented":false,"kind":"function","modifiers":[],"name":"getNonce","nameLocation":"30345:8:15","parameters":{"id":13895,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13894,"mutability":"mutable","name":"account","nameLocation":"30362:7:15","nodeType":"VariableDeclaration","scope":13899,"src":"30354:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":13893,"name":"address","nodeType":"ElementaryTypeName","src":"30354:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"30353:17:15"},"returnParameters":{"id":13898,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13897,"mutability":"mutable","name":"nonce","nameLocation":"30401:5:15","nodeType":"VariableDeclaration","scope":13899,"src":"30394:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":13896,"name":"uint64","nodeType":"ElementaryTypeName","src":"30394:6:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"30393:14:15"},"scope":16930,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":13908,"nodeType":"FunctionDefinition","src":"30451:74:15","nodes":[],"documentation":{"id":13900,"nodeType":"StructuredDocumentation","src":"30414:32:15","text":"Get the nonce of a `Wallet`."},"functionSelector":"a5748aad","implemented":false,"kind":"function","modifiers":[],"name":"getNonce","nameLocation":"30460:8:15","parameters":{"id":13904,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13903,"mutability":"mutable","name":"wallet","nameLocation":"30485:6:15","nodeType":"VariableDeclaration","scope":13908,"src":"30469:22:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_Wallet_$13100_calldata_ptr","typeString":"struct VmSafe.Wallet"},"typeName":{"id":13902,"nodeType":"UserDefinedTypeName","pathNode":{"id":13901,"name":"Wallet","nameLocations":["30469:6:15"],"nodeType":"IdentifierPath","referencedDeclaration":13100,"src":"30469:6:15"},"referencedDeclaration":13100,"src":"30469:6:15","typeDescriptions":{"typeIdentifier":"t_struct$_Wallet_$13100_storage_ptr","typeString":"struct VmSafe.Wallet"}},"visibility":"internal"}],"src":"30468:24:15"},"returnParameters":{"id":13907,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13906,"mutability":"mutable","name":"nonce","nameLocation":"30518:5:15","nodeType":"VariableDeclaration","scope":13908,"src":"30511:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":13905,"name":"uint64","nodeType":"ElementaryTypeName","src":"30511:6:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"30510:14:15"},"scope":16930,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13916,"nodeType":"FunctionDefinition","src":"30567:64:15","nodes":[],"documentation":{"id":13909,"nodeType":"StructuredDocumentation","src":"30531:31:15","text":"Gets all the recorded logs."},"functionSelector":"191553a4","implemented":false,"kind":"function","modifiers":[],"name":"getRecordedLogs","nameLocation":"30576:15:15","parameters":{"id":13910,"nodeType":"ParameterList","parameters":[],"src":"30591:2:15"},"returnParameters":{"id":13915,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13914,"mutability":"mutable","name":"logs","nameLocation":"30625:4:15","nodeType":"VariableDeclaration","scope":13916,"src":"30612:17:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Log_$13035_memory_ptr_$dyn_memory_ptr","typeString":"struct VmSafe.Log[]"},"typeName":{"baseType":{"id":13912,"nodeType":"UserDefinedTypeName","pathNode":{"id":13911,"name":"Log","nameLocations":["30612:3:15"],"nodeType":"IdentifierPath","referencedDeclaration":13035,"src":"30612:3:15"},"referencedDeclaration":13035,"src":"30612:3:15","typeDescriptions":{"typeIdentifier":"t_struct$_Log_$13035_storage_ptr","typeString":"struct VmSafe.Log"}},"id":13913,"nodeType":"ArrayTypeName","src":"30612:5:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Log_$13035_storage_$dyn_storage_ptr","typeString":"struct VmSafe.Log[]"}},"visibility":"internal"}],"src":"30611:19:15"},"scope":16930,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13922,"nodeType":"FunctionDefinition","src":"30716:67:15","nodes":[],"documentation":{"id":13917,"nodeType":"StructuredDocumentation","src":"30637:74:15","text":"Returns state diffs from current `vm.startStateDiffRecording` session."},"functionSelector":"80df01cc","implemented":false,"kind":"function","modifiers":[],"name":"getStateDiff","nameLocation":"30725:12:15","parameters":{"id":13918,"nodeType":"ParameterList","parameters":[],"src":"30737:2:15"},"returnParameters":{"id":13921,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13920,"mutability":"mutable","name":"diff","nameLocation":"30777:4:15","nodeType":"VariableDeclaration","scope":13922,"src":"30763:18:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":13919,"name":"string","nodeType":"ElementaryTypeName","src":"30763:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"30762:20:15"},"scope":16930,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":13928,"nodeType":"FunctionDefinition","src":"30884:71:15","nodes":[],"documentation":{"id":13923,"nodeType":"StructuredDocumentation","src":"30789:90:15","text":"Returns state diffs from current `vm.startStateDiffRecording` session, in json format."},"functionSelector":"f54fe009","implemented":false,"kind":"function","modifiers":[],"name":"getStateDiffJson","nameLocation":"30893:16:15","parameters":{"id":13924,"nodeType":"ParameterList","parameters":[],"src":"30909:2:15"},"returnParameters":{"id":13927,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13926,"mutability":"mutable","name":"diff","nameLocation":"30949:4:15","nodeType":"VariableDeclaration","scope":13928,"src":"30935:18:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":13925,"name":"string","nodeType":"ElementaryTypeName","src":"30935:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"30934:20:15"},"scope":16930,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":13935,"nodeType":"FunctionDefinition","src":"31033:62:15","nodes":[],"documentation":{"id":13929,"nodeType":"StructuredDocumentation","src":"30961:67:15","text":"Gets the gas used in the last call from the callee perspective."},"functionSelector":"2b589b28","implemented":false,"kind":"function","modifiers":[],"name":"lastCallGas","nameLocation":"31042:11:15","parameters":{"id":13930,"nodeType":"ParameterList","parameters":[],"src":"31053:2:15"},"returnParameters":{"id":13934,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13933,"mutability":"mutable","name":"gas","nameLocation":"31090:3:15","nodeType":"VariableDeclaration","scope":13935,"src":"31079:14:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Gas_$13182_memory_ptr","typeString":"struct VmSafe.Gas"},"typeName":{"id":13932,"nodeType":"UserDefinedTypeName","pathNode":{"id":13931,"name":"Gas","nameLocations":["31079:3:15"],"nodeType":"IdentifierPath","referencedDeclaration":13182,"src":"31079:3:15"},"referencedDeclaration":13182,"src":"31079:3:15","typeDescriptions":{"typeIdentifier":"t_struct$_Gas_$13182_storage_ptr","typeString":"struct VmSafe.Gas"}},"visibility":"internal"}],"src":"31078:16:15"},"scope":16930,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":13945,"nodeType":"FunctionDefinition","src":"31147:81:15","nodes":[],"documentation":{"id":13936,"nodeType":"StructuredDocumentation","src":"31101:41:15","text":"Loads a storage slot from an address."},"functionSelector":"667f9d70","implemented":false,"kind":"function","modifiers":[],"name":"load","nameLocation":"31156:4:15","parameters":{"id":13941,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13938,"mutability":"mutable","name":"target","nameLocation":"31169:6:15","nodeType":"VariableDeclaration","scope":13945,"src":"31161:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":13937,"name":"address","nodeType":"ElementaryTypeName","src":"31161:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":13940,"mutability":"mutable","name":"slot","nameLocation":"31185:4:15","nodeType":"VariableDeclaration","scope":13945,"src":"31177:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":13939,"name":"bytes32","nodeType":"ElementaryTypeName","src":"31177:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"31160:30:15"},"returnParameters":{"id":13944,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13943,"mutability":"mutable","name":"data","nameLocation":"31222:4:15","nodeType":"VariableDeclaration","scope":13945,"src":"31214:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":13942,"name":"bytes32","nodeType":"ElementaryTypeName","src":"31214:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"31213:14:15"},"scope":16930,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":13949,"nodeType":"FunctionDefinition","src":"31319:37:15","nodes":[],"documentation":{"id":13946,"nodeType":"StructuredDocumentation","src":"31234:80:15","text":"Pauses gas metering (i.e. gas usage is not counted). Noop if already paused."},"functionSelector":"d1a5b36f","implemented":false,"kind":"function","modifiers":[],"name":"pauseGasMetering","nameLocation":"31328:16:15","parameters":{"id":13947,"nodeType":"ParameterList","parameters":[],"src":"31344:2:15"},"returnParameters":{"id":13948,"nodeType":"ParameterList","parameters":[],"src":"31355:0:15"},"scope":16930,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13953,"nodeType":"FunctionDefinition","src":"31408:27:15","nodes":[],"documentation":{"id":13950,"nodeType":"StructuredDocumentation","src":"31362:41:15","text":"Records all storage reads and writes."},"functionSelector":"266cf109","implemented":false,"kind":"function","modifiers":[],"name":"record","nameLocation":"31417:6:15","parameters":{"id":13951,"nodeType":"ParameterList","parameters":[],"src":"31423:2:15"},"returnParameters":{"id":13952,"nodeType":"ParameterList","parameters":[],"src":"31434:0:15"},"scope":16930,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13957,"nodeType":"FunctionDefinition","src":"31482:31:15","nodes":[],"documentation":{"id":13954,"nodeType":"StructuredDocumentation","src":"31441:36:15","text":"Record all the transaction logs."},"functionSelector":"41af2f52","implemented":false,"kind":"function","modifiers":[],"name":"recordLogs","nameLocation":"31491:10:15","parameters":{"id":13955,"nodeType":"ParameterList","parameters":[],"src":"31501:2:15"},"returnParameters":{"id":13956,"nodeType":"ParameterList","parameters":[],"src":"31512:0:15"},"scope":16930,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13961,"nodeType":"FunctionDefinition","src":"31584:37:15","nodes":[],"documentation":{"id":13958,"nodeType":"StructuredDocumentation","src":"31519:60:15","text":"Reset gas metering (i.e. gas usage is set to gas limit)."},"functionSelector":"be367dd3","implemented":false,"kind":"function","modifiers":[],"name":"resetGasMetering","nameLocation":"31593:16:15","parameters":{"id":13959,"nodeType":"ParameterList","parameters":[],"src":"31609:2:15"},"returnParameters":{"id":13960,"nodeType":"ParameterList","parameters":[],"src":"31620:0:15"},"scope":16930,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13965,"nodeType":"FunctionDefinition","src":"31711:38:15","nodes":[],"documentation":{"id":13962,"nodeType":"StructuredDocumentation","src":"31627:79:15","text":"Resumes gas metering (i.e. gas usage is counted again). Noop if already on."},"functionSelector":"2bcd50e0","implemented":false,"kind":"function","modifiers":[],"name":"resumeGasMetering","nameLocation":"31720:17:15","parameters":{"id":13963,"nodeType":"ParameterList","parameters":[],"src":"31737:2:15"},"returnParameters":{"id":13964,"nodeType":"ParameterList","parameters":[],"src":"31748:0:15"},"scope":16930,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13975,"nodeType":"FunctionDefinition","src":"31826:98:15","nodes":[],"documentation":{"id":13966,"nodeType":"StructuredDocumentation","src":"31755:66:15","text":"Performs an Ethereum JSON-RPC request to the current fork URL."},"functionSelector":"1206c8a8","implemented":false,"kind":"function","modifiers":[],"name":"rpc","nameLocation":"31835:3:15","parameters":{"id":13971,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13968,"mutability":"mutable","name":"method","nameLocation":"31855:6:15","nodeType":"VariableDeclaration","scope":13975,"src":"31839:22:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13967,"name":"string","nodeType":"ElementaryTypeName","src":"31839:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13970,"mutability":"mutable","name":"params","nameLocation":"31879:6:15","nodeType":"VariableDeclaration","scope":13975,"src":"31863:22:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13969,"name":"string","nodeType":"ElementaryTypeName","src":"31863:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"31838:48:15"},"returnParameters":{"id":13974,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13973,"mutability":"mutable","name":"data","nameLocation":"31918:4:15","nodeType":"VariableDeclaration","scope":13975,"src":"31905:17:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":13972,"name":"bytes","nodeType":"ElementaryTypeName","src":"31905:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"31904:19:15"},"scope":16930,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13987,"nodeType":"FunctionDefinition","src":"31999:142:15","nodes":[],"documentation":{"id":13976,"nodeType":"StructuredDocumentation","src":"31930:64:15","text":"Performs an Ethereum JSON-RPC request to the given endpoint."},"functionSelector":"0199a220","implemented":false,"kind":"function","modifiers":[],"name":"rpc","nameLocation":"32008:3:15","parameters":{"id":13983,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13978,"mutability":"mutable","name":"urlOrAlias","nameLocation":"32028:10:15","nodeType":"VariableDeclaration","scope":13987,"src":"32012:26:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13977,"name":"string","nodeType":"ElementaryTypeName","src":"32012:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13980,"mutability":"mutable","name":"method","nameLocation":"32056:6:15","nodeType":"VariableDeclaration","scope":13987,"src":"32040:22:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13979,"name":"string","nodeType":"ElementaryTypeName","src":"32040:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13982,"mutability":"mutable","name":"params","nameLocation":"32080:6:15","nodeType":"VariableDeclaration","scope":13987,"src":"32064:22:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13981,"name":"string","nodeType":"ElementaryTypeName","src":"32064:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"32011:76:15"},"returnParameters":{"id":13986,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13985,"mutability":"mutable","name":"data","nameLocation":"32135:4:15","nodeType":"VariableDeclaration","scope":13987,"src":"32122:17:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":13984,"name":"bytes","nodeType":"ElementaryTypeName","src":"32122:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"32121:19:15"},"scope":16930,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13991,"nodeType":"FunctionDefinition","src":"32195:45:15","nodes":[],"documentation":{"id":13988,"nodeType":"StructuredDocumentation","src":"32147:43:15","text":"Records the debug trace during the run."},"functionSelector":"419c8832","implemented":false,"kind":"function","modifiers":[],"name":"startDebugTraceRecording","nameLocation":"32204:24:15","parameters":{"id":13989,"nodeType":"ParameterList","parameters":[],"src":"32228:2:15"},"returnParameters":{"id":13990,"nodeType":"ParameterList","parameters":[],"src":"32239:0:15"},"scope":16930,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13995,"nodeType":"FunctionDefinition","src":"32308:42:15","nodes":[],"documentation":{"id":13992,"nodeType":"StructuredDocumentation","src":"32246:57:15","text":"Starts recording all map SSTOREs for later retrieval."},"functionSelector":"3e9705c0","implemented":false,"kind":"function","modifiers":[],"name":"startMappingRecording","nameLocation":"32317:21:15","parameters":{"id":13993,"nodeType":"ParameterList","parameters":[],"src":"32338:2:15"},"returnParameters":{"id":13994,"nodeType":"ParameterList","parameters":[],"src":"32349:0:15"},"scope":16930,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13999,"nodeType":"FunctionDefinition","src":"32494:44:15","nodes":[],"documentation":{"id":13996,"nodeType":"StructuredDocumentation","src":"32356:133:15","text":"Record all account accesses as part of CREATE, CALL or SELFDESTRUCT opcodes in order,\n along with the context of the calls"},"functionSelector":"cf22e3c9","implemented":false,"kind":"function","modifiers":[],"name":"startStateDiffRecording","nameLocation":"32503:23:15","parameters":{"id":13997,"nodeType":"ParameterList","parameters":[],"src":"32526:2:15"},"returnParameters":{"id":13998,"nodeType":"ParameterList","parameters":[],"src":"32537:0:15"},"scope":16930,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":14007,"nodeType":"FunctionDefinition","src":"32617:87:15","nodes":[],"documentation":{"id":14000,"nodeType":"StructuredDocumentation","src":"32544:68:15","text":"Stop debug trace recording and returns the recorded debug trace."},"functionSelector":"ced398a2","implemented":false,"kind":"function","modifiers":[],"name":"stopAndReturnDebugTraceRecording","nameLocation":"32626:32:15","parameters":{"id":14001,"nodeType":"ParameterList","parameters":[],"src":"32658:2:15"},"returnParameters":{"id":14006,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14005,"mutability":"mutable","name":"step","nameLocation":"32698:4:15","nodeType":"VariableDeclaration","scope":14007,"src":"32679:23:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_DebugStep_$13197_memory_ptr_$dyn_memory_ptr","typeString":"struct VmSafe.DebugStep[]"},"typeName":{"baseType":{"id":14003,"nodeType":"UserDefinedTypeName","pathNode":{"id":14002,"name":"DebugStep","nameLocations":["32679:9:15"],"nodeType":"IdentifierPath","referencedDeclaration":13197,"src":"32679:9:15"},"referencedDeclaration":13197,"src":"32679:9:15","typeDescriptions":{"typeIdentifier":"t_struct$_DebugStep_$13197_storage_ptr","typeString":"struct VmSafe.DebugStep"}},"id":14004,"nodeType":"ArrayTypeName","src":"32679:11:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_DebugStep_$13197_storage_$dyn_storage_ptr","typeString":"struct VmSafe.DebugStep[]"}},"visibility":"internal"}],"src":"32678:25:15"},"scope":16930,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":14015,"nodeType":"FunctionDefinition","src":"32812:92:15","nodes":[],"documentation":{"id":14008,"nodeType":"StructuredDocumentation","src":"32710:97:15","text":"Returns an ordered array of all account accesses from a `vm.startStateDiffRecording` session."},"functionSelector":"aa5cf90e","implemented":false,"kind":"function","modifiers":[],"name":"stopAndReturnStateDiff","nameLocation":"32821:22:15","parameters":{"id":14009,"nodeType":"ParameterList","parameters":[],"src":"32843:2:15"},"returnParameters":{"id":14014,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14013,"mutability":"mutable","name":"accountAccesses","nameLocation":"32887:15:15","nodeType":"VariableDeclaration","scope":14015,"src":"32864:38:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AccountAccess_$13156_memory_ptr_$dyn_memory_ptr","typeString":"struct VmSafe.AccountAccess[]"},"typeName":{"baseType":{"id":14011,"nodeType":"UserDefinedTypeName","pathNode":{"id":14010,"name":"AccountAccess","nameLocations":["32864:13:15"],"nodeType":"IdentifierPath","referencedDeclaration":13156,"src":"32864:13:15"},"referencedDeclaration":13156,"src":"32864:13:15","typeDescriptions":{"typeIdentifier":"t_struct$_AccountAccess_$13156_storage_ptr","typeString":"struct VmSafe.AccountAccess"}},"id":14012,"nodeType":"ArrayTypeName","src":"32864:15:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AccountAccess_$13156_storage_$dyn_storage_ptr","typeString":"struct VmSafe.AccountAccess[]"}},"visibility":"internal"}],"src":"32863:40:15"},"scope":16930,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":14019,"nodeType":"FunctionDefinition","src":"33000:41:15","nodes":[],"documentation":{"id":14016,"nodeType":"StructuredDocumentation","src":"32910:85:15","text":"Stops recording all map SSTOREs for later retrieval and clears the recorded data."},"functionSelector":"0d4aae9b","implemented":false,"kind":"function","modifiers":[],"name":"stopMappingRecording","nameLocation":"33009:20:15","parameters":{"id":14017,"nodeType":"ParameterList","parameters":[],"src":"33029:2:15"},"returnParameters":{"id":14018,"nodeType":"ParameterList","parameters":[],"src":"33040:0:15"},"scope":16930,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":14025,"nodeType":"FunctionDefinition","src":"33240:50:15","nodes":[],"documentation":{"id":14020,"nodeType":"StructuredDocumentation","src":"33084:151:15","text":"Closes file for reading, resetting the offset and allowing to read it from beginning with readLine.\n `path` is relative to the project root."},"functionSelector":"48c3241f","implemented":false,"kind":"function","modifiers":[],"name":"closeFile","nameLocation":"33249:9:15","parameters":{"id":14023,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14022,"mutability":"mutable","name":"path","nameLocation":"33275:4:15","nodeType":"VariableDeclaration","scope":14025,"src":"33259:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14021,"name":"string","nodeType":"ElementaryTypeName","src":"33259:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"33258:22:15"},"returnParameters":{"id":14024,"nodeType":"ParameterList","parameters":[],"src":"33289:0:15"},"scope":16930,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":14035,"nodeType":"FunctionDefinition","src":"33605:93:15","nodes":[],"documentation":{"id":14026,"nodeType":"StructuredDocumentation","src":"33296:304:15","text":"Copies the contents of one file to another. This function will **overwrite** the contents of `to`.\n On success, the total number of bytes copied is returned and it is equal to the length of the `to` file as reported by `metadata`.\n Both `from` and `to` are relative to the project root."},"functionSelector":"a54a87d8","implemented":false,"kind":"function","modifiers":[],"name":"copyFile","nameLocation":"33614:8:15","parameters":{"id":14031,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14028,"mutability":"mutable","name":"from","nameLocation":"33639:4:15","nodeType":"VariableDeclaration","scope":14035,"src":"33623:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14027,"name":"string","nodeType":"ElementaryTypeName","src":"33623:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14030,"mutability":"mutable","name":"to","nameLocation":"33661:2:15","nodeType":"VariableDeclaration","scope":14035,"src":"33645:18:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14029,"name":"string","nodeType":"ElementaryTypeName","src":"33645:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"33622:42:15"},"returnParameters":{"id":14034,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14033,"mutability":"mutable","name":"copied","nameLocation":"33690:6:15","nodeType":"VariableDeclaration","scope":14035,"src":"33683:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":14032,"name":"uint64","nodeType":"ElementaryTypeName","src":"33683:6:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"33682:15:15"},"scope":16930,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":14043,"nodeType":"FunctionDefinition","src":"34103:66:15","nodes":[],"documentation":{"id":14036,"nodeType":"StructuredDocumentation","src":"33704:394:15","text":"Creates a new, empty directory at the provided path.\n This cheatcode will revert in the following situations, but is not limited to just these cases:\n - User lacks permissions to modify `path`.\n - A parent of the given path doesn't exist and `recursive` is false.\n - `path` already exists and `recursive` is false.\n `path` is relative to the project root."},"functionSelector":"168b64d3","implemented":false,"kind":"function","modifiers":[],"name":"createDir","nameLocation":"34112:9:15","parameters":{"id":14041,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14038,"mutability":"mutable","name":"path","nameLocation":"34138:4:15","nodeType":"VariableDeclaration","scope":14043,"src":"34122:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14037,"name":"string","nodeType":"ElementaryTypeName","src":"34122:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14040,"mutability":"mutable","name":"recursive","nameLocation":"34149:9:15","nodeType":"VariableDeclaration","scope":14043,"src":"34144:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":14039,"name":"bool","nodeType":"ElementaryTypeName","src":"34144:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"34121:38:15"},"returnParameters":{"id":14042,"nodeType":"ParameterList","parameters":[],"src":"34168:0:15"},"scope":16930,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":14051,"nodeType":"FunctionDefinition","src":"34399:93:15","nodes":[],"documentation":{"id":14044,"nodeType":"StructuredDocumentation","src":"34175:219:15","text":"Deploys a contract from an artifact file. Takes in the relative path to the json file or the path to the\n artifact in the form of <path>:<contract>:<version> where <contract> and <version> parts are optional."},"functionSelector":"9a8325a0","implemented":false,"kind":"function","modifiers":[],"name":"deployCode","nameLocation":"34408:10:15","parameters":{"id":14047,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14046,"mutability":"mutable","name":"artifactPath","nameLocation":"34435:12:15","nodeType":"VariableDeclaration","scope":14051,"src":"34419:28:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14045,"name":"string","nodeType":"ElementaryTypeName","src":"34419:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"34418:30:15"},"returnParameters":{"id":14050,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14049,"mutability":"mutable","name":"deployedAddress","nameLocation":"34475:15:15","nodeType":"VariableDeclaration","scope":14051,"src":"34467:23:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":14048,"name":"address","nodeType":"ElementaryTypeName","src":"34467:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"34466:25:15"},"scope":16930,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":14061,"nodeType":"FunctionDefinition","src":"34786:141:15","nodes":[],"documentation":{"id":14052,"nodeType":"StructuredDocumentation","src":"34498:283:15","text":"Deploys a contract from an artifact file. Takes in the relative path to the json file or the path to the\n artifact in the form of <path>:<contract>:<version> where <contract> and <version> parts are optional.\n Additionally accepts abi-encoded constructor arguments."},"functionSelector":"29ce9dde","implemented":false,"kind":"function","modifiers":[],"name":"deployCode","nameLocation":"34795:10:15","parameters":{"id":14057,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14054,"mutability":"mutable","name":"artifactPath","nameLocation":"34822:12:15","nodeType":"VariableDeclaration","scope":14061,"src":"34806:28:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14053,"name":"string","nodeType":"ElementaryTypeName","src":"34806:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14056,"mutability":"mutable","name":"constructorArgs","nameLocation":"34851:15:15","nodeType":"VariableDeclaration","scope":14061,"src":"34836:30:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":14055,"name":"bytes","nodeType":"ElementaryTypeName","src":"34836:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"34805:62:15"},"returnParameters":{"id":14060,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14059,"mutability":"mutable","name":"deployedAddress","nameLocation":"34910:15:15","nodeType":"VariableDeclaration","scope":14061,"src":"34902:23:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":14058,"name":"address","nodeType":"ElementaryTypeName","src":"34902:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"34901:25:15"},"scope":16930,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":14071,"nodeType":"FunctionDefinition","src":"35199:108:15","nodes":[],"documentation":{"id":14062,"nodeType":"StructuredDocumentation","src":"34933:261:15","text":"Deploys a contract from an artifact file. Takes in the relative path to the json file or the path to the\n artifact in the form of <path>:<contract>:<version> where <contract> and <version> parts are optional.\n Additionally accepts `msg.value`."},"functionSelector":"0af6a701","implemented":false,"kind":"function","modifiers":[],"name":"deployCode","nameLocation":"35208:10:15","parameters":{"id":14067,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14064,"mutability":"mutable","name":"artifactPath","nameLocation":"35235:12:15","nodeType":"VariableDeclaration","scope":14071,"src":"35219:28:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14063,"name":"string","nodeType":"ElementaryTypeName","src":"35219:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14066,"mutability":"mutable","name":"value","nameLocation":"35257:5:15","nodeType":"VariableDeclaration","scope":14071,"src":"35249:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14065,"name":"uint256","nodeType":"ElementaryTypeName","src":"35249:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"35218:45:15"},"returnParameters":{"id":14070,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14069,"mutability":"mutable","name":"deployedAddress","nameLocation":"35290:15:15","nodeType":"VariableDeclaration","scope":14071,"src":"35282:23:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":14068,"name":"address","nodeType":"ElementaryTypeName","src":"35282:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"35281:25:15"},"scope":16930,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":14083,"nodeType":"FunctionDefinition","src":"35617:156:15","nodes":[],"documentation":{"id":14072,"nodeType":"StructuredDocumentation","src":"35313:299:15","text":"Deploys a contract from an artifact file. Takes in the relative path to the json file or the path to the\n artifact in the form of <path>:<contract>:<version> where <contract> and <version> parts are optional.\n Additionally accepts abi-encoded constructor arguments and `msg.value`."},"functionSelector":"ff5d64e4","implemented":false,"kind":"function","modifiers":[],"name":"deployCode","nameLocation":"35626:10:15","parameters":{"id":14079,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14074,"mutability":"mutable","name":"artifactPath","nameLocation":"35653:12:15","nodeType":"VariableDeclaration","scope":14083,"src":"35637:28:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14073,"name":"string","nodeType":"ElementaryTypeName","src":"35637:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14076,"mutability":"mutable","name":"constructorArgs","nameLocation":"35682:15:15","nodeType":"VariableDeclaration","scope":14083,"src":"35667:30:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":14075,"name":"bytes","nodeType":"ElementaryTypeName","src":"35667:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":14078,"mutability":"mutable","name":"value","nameLocation":"35707:5:15","nodeType":"VariableDeclaration","scope":14083,"src":"35699:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14077,"name":"uint256","nodeType":"ElementaryTypeName","src":"35699:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"35636:77:15"},"returnParameters":{"id":14082,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14081,"mutability":"mutable","name":"deployedAddress","nameLocation":"35756:15:15","nodeType":"VariableDeclaration","scope":14083,"src":"35748:23:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":14080,"name":"address","nodeType":"ElementaryTypeName","src":"35748:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"35747:25:15"},"scope":16930,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":14093,"nodeType":"FunctionDefinition","src":"36027:107:15","nodes":[],"documentation":{"id":14084,"nodeType":"StructuredDocumentation","src":"35779:243:15","text":"Deploys a contract from an artifact file, using the CREATE2 salt. Takes in the relative path to the json file or the path to the\n artifact in the form of <path>:<contract>:<version> where <contract> and <version> parts are optional."},"functionSelector":"17ab1d79","implemented":false,"kind":"function","modifiers":[],"name":"deployCode","nameLocation":"36036:10:15","parameters":{"id":14089,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14086,"mutability":"mutable","name":"artifactPath","nameLocation":"36063:12:15","nodeType":"VariableDeclaration","scope":14093,"src":"36047:28:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14085,"name":"string","nodeType":"ElementaryTypeName","src":"36047:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14088,"mutability":"mutable","name":"salt","nameLocation":"36085:4:15","nodeType":"VariableDeclaration","scope":14093,"src":"36077:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":14087,"name":"bytes32","nodeType":"ElementaryTypeName","src":"36077:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"36046:44:15"},"returnParameters":{"id":14092,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14091,"mutability":"mutable","name":"deployedAddress","nameLocation":"36117:15:15","nodeType":"VariableDeclaration","scope":14093,"src":"36109:23:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":14090,"name":"address","nodeType":"ElementaryTypeName","src":"36109:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"36108:25:15"},"scope":16930,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":14105,"nodeType":"FunctionDefinition","src":"36452:155:15","nodes":[],"documentation":{"id":14094,"nodeType":"StructuredDocumentation","src":"36140:307:15","text":"Deploys a contract from an artifact file, using the CREATE2 salt. Takes in the relative path to the json file or the path to the\n artifact in the form of <path>:<contract>:<version> where <contract> and <version> parts are optional.\n Additionally accepts abi-encoded constructor arguments."},"functionSelector":"016155bf","implemented":false,"kind":"function","modifiers":[],"name":"deployCode","nameLocation":"36461:10:15","parameters":{"id":14101,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14096,"mutability":"mutable","name":"artifactPath","nameLocation":"36488:12:15","nodeType":"VariableDeclaration","scope":14105,"src":"36472:28:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14095,"name":"string","nodeType":"ElementaryTypeName","src":"36472:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14098,"mutability":"mutable","name":"constructorArgs","nameLocation":"36517:15:15","nodeType":"VariableDeclaration","scope":14105,"src":"36502:30:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":14097,"name":"bytes","nodeType":"ElementaryTypeName","src":"36502:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":14100,"mutability":"mutable","name":"salt","nameLocation":"36542:4:15","nodeType":"VariableDeclaration","scope":14105,"src":"36534:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":14099,"name":"bytes32","nodeType":"ElementaryTypeName","src":"36534:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"36471:76:15"},"returnParameters":{"id":14104,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14103,"mutability":"mutable","name":"deployedAddress","nameLocation":"36590:15:15","nodeType":"VariableDeclaration","scope":14105,"src":"36582:23:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":14102,"name":"address","nodeType":"ElementaryTypeName","src":"36582:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"36581:25:15"},"scope":16930,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":14117,"nodeType":"FunctionDefinition","src":"36903:138:15","nodes":[],"documentation":{"id":14106,"nodeType":"StructuredDocumentation","src":"36613:285:15","text":"Deploys a contract from an artifact file, using the CREATE2 salt. Takes in the relative path to the json file or the path to the\n artifact in the form of <path>:<contract>:<version> where <contract> and <version> parts are optional.\n Additionally accepts `msg.value`."},"functionSelector":"002cb687","implemented":false,"kind":"function","modifiers":[],"name":"deployCode","nameLocation":"36912:10:15","parameters":{"id":14113,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14108,"mutability":"mutable","name":"artifactPath","nameLocation":"36939:12:15","nodeType":"VariableDeclaration","scope":14117,"src":"36923:28:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14107,"name":"string","nodeType":"ElementaryTypeName","src":"36923:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14110,"mutability":"mutable","name":"value","nameLocation":"36961:5:15","nodeType":"VariableDeclaration","scope":14117,"src":"36953:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14109,"name":"uint256","nodeType":"ElementaryTypeName","src":"36953:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14112,"mutability":"mutable","name":"salt","nameLocation":"36976:4:15","nodeType":"VariableDeclaration","scope":14117,"src":"36968:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":14111,"name":"bytes32","nodeType":"ElementaryTypeName","src":"36968:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"36922:59:15"},"returnParameters":{"id":14116,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14115,"mutability":"mutable","name":"deployedAddress","nameLocation":"37024:15:15","nodeType":"VariableDeclaration","scope":14117,"src":"37016:23:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":14114,"name":"address","nodeType":"ElementaryTypeName","src":"37016:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"37015:25:15"},"scope":16930,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":14131,"nodeType":"FunctionDefinition","src":"37375:170:15","nodes":[],"documentation":{"id":14118,"nodeType":"StructuredDocumentation","src":"37047:323:15","text":"Deploys a contract from an artifact file, using the CREATE2 salt. Takes in the relative path to the json file or the path to the\n artifact in the form of <path>:<contract>:<version> where <contract> and <version> parts are optional.\n Additionally accepts abi-encoded constructor arguments and `msg.value`."},"functionSelector":"3aa773ea","implemented":false,"kind":"function","modifiers":[],"name":"deployCode","nameLocation":"37384:10:15","parameters":{"id":14127,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14120,"mutability":"mutable","name":"artifactPath","nameLocation":"37411:12:15","nodeType":"VariableDeclaration","scope":14131,"src":"37395:28:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14119,"name":"string","nodeType":"ElementaryTypeName","src":"37395:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14122,"mutability":"mutable","name":"constructorArgs","nameLocation":"37440:15:15","nodeType":"VariableDeclaration","scope":14131,"src":"37425:30:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":14121,"name":"bytes","nodeType":"ElementaryTypeName","src":"37425:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":14124,"mutability":"mutable","name":"value","nameLocation":"37465:5:15","nodeType":"VariableDeclaration","scope":14131,"src":"37457:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14123,"name":"uint256","nodeType":"ElementaryTypeName","src":"37457:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14126,"mutability":"mutable","name":"salt","nameLocation":"37480:4:15","nodeType":"VariableDeclaration","scope":14131,"src":"37472:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":14125,"name":"bytes32","nodeType":"ElementaryTypeName","src":"37472:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"37394:91:15"},"returnParameters":{"id":14130,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14129,"mutability":"mutable","name":"deployedAddress","nameLocation":"37528:15:15","nodeType":"VariableDeclaration","scope":14131,"src":"37520:23:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":14128,"name":"address","nodeType":"ElementaryTypeName","src":"37520:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"37519:25:15"},"scope":16930,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":14139,"nodeType":"FunctionDefinition","src":"37640:74:15","nodes":[],"documentation":{"id":14132,"nodeType":"StructuredDocumentation","src":"37551:84:15","text":"Returns true if the given path points to an existing entity, else returns false."},"functionSelector":"261a323e","implemented":false,"kind":"function","modifiers":[],"name":"exists","nameLocation":"37649:6:15","parameters":{"id":14135,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14134,"mutability":"mutable","name":"path","nameLocation":"37672:4:15","nodeType":"VariableDeclaration","scope":14139,"src":"37656:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14133,"name":"string","nodeType":"ElementaryTypeName","src":"37656:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"37655:22:15"},"returnParameters":{"id":14138,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14137,"mutability":"mutable","name":"result","nameLocation":"37706:6:15","nodeType":"VariableDeclaration","scope":14139,"src":"37701:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":14136,"name":"bool","nodeType":"ElementaryTypeName","src":"37701:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"37700:13:15"},"scope":16930,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":14148,"nodeType":"FunctionDefinition","src":"37779:84:15","nodes":[],"documentation":{"id":14140,"nodeType":"StructuredDocumentation","src":"37720:54:15","text":"Performs a foreign function call via the terminal."},"functionSelector":"89160467","implemented":false,"kind":"function","modifiers":[],"name":"ffi","nameLocation":"37788:3:15","parameters":{"id":14144,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14143,"mutability":"mutable","name":"commandInput","nameLocation":"37810:12:15","nodeType":"VariableDeclaration","scope":14148,"src":"37792:30:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":14141,"name":"string","nodeType":"ElementaryTypeName","src":"37792:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":14142,"nodeType":"ArrayTypeName","src":"37792:8:15","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"37791:32:15"},"returnParameters":{"id":14147,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14146,"mutability":"mutable","name":"result","nameLocation":"37855:6:15","nodeType":"VariableDeclaration","scope":14148,"src":"37842:19:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":14145,"name":"bytes","nodeType":"ElementaryTypeName","src":"37842:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"37841:21:15"},"scope":16930,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":14157,"nodeType":"FunctionDefinition","src":"37962:93:15","nodes":[],"documentation":{"id":14149,"nodeType":"StructuredDocumentation","src":"37869:88:15","text":"Given a path, query the file system to get information about a file, directory, etc."},"functionSelector":"af368a08","implemented":false,"kind":"function","modifiers":[],"name":"fsMetadata","nameLocation":"37971:10:15","parameters":{"id":14152,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14151,"mutability":"mutable","name":"path","nameLocation":"37998:4:15","nodeType":"VariableDeclaration","scope":14157,"src":"37982:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14150,"name":"string","nodeType":"ElementaryTypeName","src":"37982:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"37981:22:15"},"returnParameters":{"id":14156,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14155,"mutability":"mutable","name":"metadata","nameLocation":"38045:8:15","nodeType":"VariableDeclaration","scope":14157,"src":"38027:26:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_FsMetadata_$13090_memory_ptr","typeString":"struct VmSafe.FsMetadata"},"typeName":{"id":14154,"nodeType":"UserDefinedTypeName","pathNode":{"id":14153,"name":"FsMetadata","nameLocations":["38027:10:15"],"nodeType":"IdentifierPath","referencedDeclaration":13090,"src":"38027:10:15"},"referencedDeclaration":13090,"src":"38027:10:15","typeDescriptions":{"typeIdentifier":"t_struct$_FsMetadata_$13090_storage_ptr","typeString":"struct VmSafe.FsMetadata"}},"visibility":"internal"}],"src":"38026:28:15"},"scope":16930,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":14165,"nodeType":"FunctionDefinition","src":"38124:95:15","nodes":[],"documentation":{"id":14158,"nodeType":"StructuredDocumentation","src":"38061:58:15","text":"Gets the artifact path from code (aka. creation code)."},"functionSelector":"eb74848c","implemented":false,"kind":"function","modifiers":[],"name":"getArtifactPathByCode","nameLocation":"38133:21:15","parameters":{"id":14161,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14160,"mutability":"mutable","name":"code","nameLocation":"38170:4:15","nodeType":"VariableDeclaration","scope":14165,"src":"38155:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":14159,"name":"bytes","nodeType":"ElementaryTypeName","src":"38155:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"38154:21:15"},"returnParameters":{"id":14164,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14163,"mutability":"mutable","name":"path","nameLocation":"38213:4:15","nodeType":"VariableDeclaration","scope":14165,"src":"38199:18:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":14162,"name":"string","nodeType":"ElementaryTypeName","src":"38199:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"38198:20:15"},"scope":16930,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":14173,"nodeType":"FunctionDefinition","src":"38296:111:15","nodes":[],"documentation":{"id":14166,"nodeType":"StructuredDocumentation","src":"38225:66:15","text":"Gets the artifact path from deployed code (aka. runtime code)."},"functionSelector":"6d853ba5","implemented":false,"kind":"function","modifiers":[],"name":"getArtifactPathByDeployedCode","nameLocation":"38305:29:15","parameters":{"id":14169,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14168,"mutability":"mutable","name":"deployedCode","nameLocation":"38350:12:15","nodeType":"VariableDeclaration","scope":14173,"src":"38335:27:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":14167,"name":"bytes","nodeType":"ElementaryTypeName","src":"38335:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"38334:29:15"},"returnParameters":{"id":14172,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14171,"mutability":"mutable","name":"path","nameLocation":"38401:4:15","nodeType":"VariableDeclaration","scope":14173,"src":"38387:18:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":14170,"name":"string","nodeType":"ElementaryTypeName","src":"38387:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"38386:20:15"},"scope":16930,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":14187,"nodeType":"FunctionDefinition","src":"38702:166:15","nodes":[],"documentation":{"id":14174,"nodeType":"StructuredDocumentation","src":"38413:284:15","text":"Returns the most recent broadcast for the given contract on `chainId` matching `txType`.\n For example:\n The most recent deployment can be fetched by passing `txType` as `CREATE` or `CREATE2`.\n The most recent call can be fetched by passing `txType` as `CALL`."},"functionSelector":"3dc90cb3","implemented":false,"kind":"function","modifiers":[],"name":"getBroadcast","nameLocation":"38711:12:15","parameters":{"id":14182,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14176,"mutability":"mutable","name":"contractName","nameLocation":"38740:12:15","nodeType":"VariableDeclaration","scope":14187,"src":"38724:28:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14175,"name":"string","nodeType":"ElementaryTypeName","src":"38724:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14178,"mutability":"mutable","name":"chainId","nameLocation":"38761:7:15","nodeType":"VariableDeclaration","scope":14187,"src":"38754:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":14177,"name":"uint64","nodeType":"ElementaryTypeName","src":"38754:6:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":14181,"mutability":"mutable","name":"txType","nameLocation":"38786:6:15","nodeType":"VariableDeclaration","scope":14187,"src":"38770:22:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_BroadcastTxType_$13026","typeString":"enum VmSafe.BroadcastTxType"},"typeName":{"id":14180,"nodeType":"UserDefinedTypeName","pathNode":{"id":14179,"name":"BroadcastTxType","nameLocations":["38770:15:15"],"nodeType":"IdentifierPath","referencedDeclaration":13026,"src":"38770:15:15"},"referencedDeclaration":13026,"src":"38770:15:15","typeDescriptions":{"typeIdentifier":"t_enum$_BroadcastTxType_$13026","typeString":"enum VmSafe.BroadcastTxType"}},"visibility":"internal"}],"src":"38723:70:15"},"returnParameters":{"id":14186,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14185,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":14187,"src":"38841:25:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_BroadcastTxSummary_$13210_memory_ptr","typeString":"struct VmSafe.BroadcastTxSummary"},"typeName":{"id":14184,"nodeType":"UserDefinedTypeName","pathNode":{"id":14183,"name":"BroadcastTxSummary","nameLocations":["38841:18:15"],"nodeType":"IdentifierPath","referencedDeclaration":13210,"src":"38841:18:15"},"referencedDeclaration":13210,"src":"38841:18:15","typeDescriptions":{"typeIdentifier":"t_struct$_BroadcastTxSummary_$13210_storage_ptr","typeString":"struct VmSafe.BroadcastTxSummary"}},"visibility":"internal"}],"src":"38840:27:15"},"scope":16930,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":14202,"nodeType":"FunctionDefinition","src":"39127:169:15","nodes":[],"documentation":{"id":14188,"nodeType":"StructuredDocumentation","src":"38874:248:15","text":"Returns all broadcasts for the given contract on `chainId` with the specified `txType`.\n Sorted such that the most recent broadcast is the first element, and the oldest is the last. i.e descending order of BroadcastTxSummary.blockNumber."},"functionSelector":"f7afe919","implemented":false,"kind":"function","modifiers":[],"name":"getBroadcasts","nameLocation":"39136:13:15","parameters":{"id":14196,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14190,"mutability":"mutable","name":"contractName","nameLocation":"39166:12:15","nodeType":"VariableDeclaration","scope":14202,"src":"39150:28:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14189,"name":"string","nodeType":"ElementaryTypeName","src":"39150:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14192,"mutability":"mutable","name":"chainId","nameLocation":"39187:7:15","nodeType":"VariableDeclaration","scope":14202,"src":"39180:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":14191,"name":"uint64","nodeType":"ElementaryTypeName","src":"39180:6:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":14195,"mutability":"mutable","name":"txType","nameLocation":"39212:6:15","nodeType":"VariableDeclaration","scope":14202,"src":"39196:22:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_BroadcastTxType_$13026","typeString":"enum VmSafe.BroadcastTxType"},"typeName":{"id":14194,"nodeType":"UserDefinedTypeName","pathNode":{"id":14193,"name":"BroadcastTxType","nameLocations":["39196:15:15"],"nodeType":"IdentifierPath","referencedDeclaration":13026,"src":"39196:15:15"},"referencedDeclaration":13026,"src":"39196:15:15","typeDescriptions":{"typeIdentifier":"t_enum$_BroadcastTxType_$13026","typeString":"enum VmSafe.BroadcastTxType"}},"visibility":"internal"}],"src":"39149:70:15"},"returnParameters":{"id":14201,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14200,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":14202,"src":"39267:27:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_BroadcastTxSummary_$13210_memory_ptr_$dyn_memory_ptr","typeString":"struct VmSafe.BroadcastTxSummary[]"},"typeName":{"baseType":{"id":14198,"nodeType":"UserDefinedTypeName","pathNode":{"id":14197,"name":"BroadcastTxSummary","nameLocations":["39267:18:15"],"nodeType":"IdentifierPath","referencedDeclaration":13210,"src":"39267:18:15"},"referencedDeclaration":13210,"src":"39267:18:15","typeDescriptions":{"typeIdentifier":"t_struct$_BroadcastTxSummary_$13210_storage_ptr","typeString":"struct VmSafe.BroadcastTxSummary"}},"id":14199,"nodeType":"ArrayTypeName","src":"39267:20:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_BroadcastTxSummary_$13210_storage_$dyn_storage_ptr","typeString":"struct VmSafe.BroadcastTxSummary[]"}},"visibility":"internal"}],"src":"39266:29:15"},"scope":16930,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":14214,"nodeType":"FunctionDefinition","src":"39527:145:15","nodes":[],"documentation":{"id":14203,"nodeType":"StructuredDocumentation","src":"39302:220:15","text":"Returns all broadcasts for the given contract on `chainId`.\n Sorted such that the most recent broadcast is the first element, and the oldest is the last. i.e descending order of BroadcastTxSummary.blockNumber."},"functionSelector":"f2fa4a26","implemented":false,"kind":"function","modifiers":[],"name":"getBroadcasts","nameLocation":"39536:13:15","parameters":{"id":14208,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14205,"mutability":"mutable","name":"contractName","nameLocation":"39566:12:15","nodeType":"VariableDeclaration","scope":14214,"src":"39550:28:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14204,"name":"string","nodeType":"ElementaryTypeName","src":"39550:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14207,"mutability":"mutable","name":"chainId","nameLocation":"39587:7:15","nodeType":"VariableDeclaration","scope":14214,"src":"39580:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":14206,"name":"uint64","nodeType":"ElementaryTypeName","src":"39580:6:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"39549:46:15"},"returnParameters":{"id":14213,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14212,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":14214,"src":"39643:27:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_BroadcastTxSummary_$13210_memory_ptr_$dyn_memory_ptr","typeString":"struct VmSafe.BroadcastTxSummary[]"},"typeName":{"baseType":{"id":14210,"nodeType":"UserDefinedTypeName","pathNode":{"id":14209,"name":"BroadcastTxSummary","nameLocations":["39643:18:15"],"nodeType":"IdentifierPath","referencedDeclaration":13210,"src":"39643:18:15"},"referencedDeclaration":13210,"src":"39643:18:15","typeDescriptions":{"typeIdentifier":"t_struct$_BroadcastTxSummary_$13210_storage_ptr","typeString":"struct VmSafe.BroadcastTxSummary"}},"id":14211,"nodeType":"ArrayTypeName","src":"39643:20:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_BroadcastTxSummary_$13210_storage_$dyn_storage_ptr","typeString":"struct VmSafe.BroadcastTxSummary[]"}},"visibility":"internal"}],"src":"39642:29:15"},"scope":16930,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":14222,"nodeType":"FunctionDefinition","src":"39910:101:15","nodes":[],"documentation":{"id":14215,"nodeType":"StructuredDocumentation","src":"39678:227:15","text":"Gets the creation bytecode from an artifact file. Takes in the relative path to the json file or the path to the\n artifact in the form of <path>:<contract>:<version> where <contract> and <version> parts are optional."},"functionSelector":"8d1cc925","implemented":false,"kind":"function","modifiers":[],"name":"getCode","nameLocation":"39919:7:15","parameters":{"id":14218,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14217,"mutability":"mutable","name":"artifactPath","nameLocation":"39943:12:15","nodeType":"VariableDeclaration","scope":14222,"src":"39927:28:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14216,"name":"string","nodeType":"ElementaryTypeName","src":"39927:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"39926:30:15"},"returnParameters":{"id":14221,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14220,"mutability":"mutable","name":"creationBytecode","nameLocation":"39993:16:15","nodeType":"VariableDeclaration","scope":14222,"src":"39980:29:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":14219,"name":"bytes","nodeType":"ElementaryTypeName","src":"39980:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"39979:31:15"},"scope":16930,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":14230,"nodeType":"FunctionDefinition","src":"40249:108:15","nodes":[],"documentation":{"id":14223,"nodeType":"StructuredDocumentation","src":"40017:227:15","text":"Gets the deployed bytecode from an artifact file. Takes in the relative path to the json file or the path to the\n artifact in the form of <path>:<contract>:<version> where <contract> and <version> parts are optional."},"functionSelector":"3ebf73b4","implemented":false,"kind":"function","modifiers":[],"name":"getDeployedCode","nameLocation":"40258:15:15","parameters":{"id":14226,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14225,"mutability":"mutable","name":"artifactPath","nameLocation":"40290:12:15","nodeType":"VariableDeclaration","scope":14230,"src":"40274:28:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14224,"name":"string","nodeType":"ElementaryTypeName","src":"40274:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"40273:30:15"},"returnParameters":{"id":14229,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14228,"mutability":"mutable","name":"runtimeBytecode","nameLocation":"40340:15:15","nodeType":"VariableDeclaration","scope":14230,"src":"40327:28:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":14227,"name":"bytes","nodeType":"ElementaryTypeName","src":"40327:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"40326:30:15"},"scope":16930,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":14238,"nodeType":"FunctionDefinition","src":"40433:101:15","nodes":[],"documentation":{"id":14231,"nodeType":"StructuredDocumentation","src":"40363:65:15","text":"Returns the most recent deployment for the current `chainId`."},"functionSelector":"a8091d97","implemented":false,"kind":"function","modifiers":[],"name":"getDeployment","nameLocation":"40442:13:15","parameters":{"id":14234,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14233,"mutability":"mutable","name":"contractName","nameLocation":"40472:12:15","nodeType":"VariableDeclaration","scope":14238,"src":"40456:28:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14232,"name":"string","nodeType":"ElementaryTypeName","src":"40456:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"40455:30:15"},"returnParameters":{"id":14237,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14236,"mutability":"mutable","name":"deployedAddress","nameLocation":"40517:15:15","nodeType":"VariableDeclaration","scope":14238,"src":"40509:23:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":14235,"name":"address","nodeType":"ElementaryTypeName","src":"40509:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"40508:25:15"},"scope":16930,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":14248,"nodeType":"FunctionDefinition","src":"40619:141:15","nodes":[],"documentation":{"id":14239,"nodeType":"StructuredDocumentation","src":"40540:74:15","text":"Returns the most recent deployment for the given contract on `chainId`"},"functionSelector":"0debd5d6","implemented":false,"kind":"function","modifiers":[],"name":"getDeployment","nameLocation":"40628:13:15","parameters":{"id":14244,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14241,"mutability":"mutable","name":"contractName","nameLocation":"40658:12:15","nodeType":"VariableDeclaration","scope":14248,"src":"40642:28:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14240,"name":"string","nodeType":"ElementaryTypeName","src":"40642:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14243,"mutability":"mutable","name":"chainId","nameLocation":"40679:7:15","nodeType":"VariableDeclaration","scope":14248,"src":"40672:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":14242,"name":"uint64","nodeType":"ElementaryTypeName","src":"40672:6:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"40641:46:15"},"returnParameters":{"id":14247,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14246,"mutability":"mutable","name":"deployedAddress","nameLocation":"40743:15:15","nodeType":"VariableDeclaration","scope":14248,"src":"40735:23:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":14245,"name":"address","nodeType":"ElementaryTypeName","src":"40735:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"40734:25:15"},"scope":16930,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":14259,"nodeType":"FunctionDefinition","src":"41029:153:15","nodes":[],"documentation":{"id":14249,"nodeType":"StructuredDocumentation","src":"40766:258:15","text":"Returns all deployments for the given contract on `chainId`\n Sorted in descending order of deployment time i.e descending order of BroadcastTxSummary.blockNumber.\n The most recent deployment is the first element, and the oldest is the last."},"functionSelector":"74e133dd","implemented":false,"kind":"function","modifiers":[],"name":"getDeployments","nameLocation":"41038:14:15","parameters":{"id":14254,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14251,"mutability":"mutable","name":"contractName","nameLocation":"41069:12:15","nodeType":"VariableDeclaration","scope":14259,"src":"41053:28:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14250,"name":"string","nodeType":"ElementaryTypeName","src":"41053:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14253,"mutability":"mutable","name":"chainId","nameLocation":"41090:7:15","nodeType":"VariableDeclaration","scope":14259,"src":"41083:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":14252,"name":"uint64","nodeType":"ElementaryTypeName","src":"41083:6:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"41052:46:15"},"returnParameters":{"id":14258,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14257,"mutability":"mutable","name":"deployedAddresses","nameLocation":"41163:17:15","nodeType":"VariableDeclaration","scope":14259,"src":"41146:34:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":14255,"name":"address","nodeType":"ElementaryTypeName","src":"41146:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":14256,"nodeType":"ArrayTypeName","src":"41146:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"41145:36:15"},"scope":16930,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":14267,"nodeType":"FunctionDefinition","src":"41288:73:15","nodes":[],"documentation":{"id":14260,"nodeType":"StructuredDocumentation","src":"41188:95:15","text":"Returns true if the path exists on disk and is pointing at a directory, else returns false."},"functionSelector":"7d15d019","implemented":false,"kind":"function","modifiers":[],"name":"isDir","nameLocation":"41297:5:15","parameters":{"id":14263,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14262,"mutability":"mutable","name":"path","nameLocation":"41319:4:15","nodeType":"VariableDeclaration","scope":14267,"src":"41303:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14261,"name":"string","nodeType":"ElementaryTypeName","src":"41303:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"41302:22:15"},"returnParameters":{"id":14266,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14265,"mutability":"mutable","name":"result","nameLocation":"41353:6:15","nodeType":"VariableDeclaration","scope":14267,"src":"41348:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":14264,"name":"bool","nodeType":"ElementaryTypeName","src":"41348:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"41347:13:15"},"scope":16930,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":14275,"nodeType":"FunctionDefinition","src":"41470:74:15","nodes":[],"documentation":{"id":14268,"nodeType":"StructuredDocumentation","src":"41367:98:15","text":"Returns true if the path exists on disk and is pointing at a regular file, else returns false."},"functionSelector":"e0eb04d4","implemented":false,"kind":"function","modifiers":[],"name":"isFile","nameLocation":"41479:6:15","parameters":{"id":14271,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14270,"mutability":"mutable","name":"path","nameLocation":"41502:4:15","nodeType":"VariableDeclaration","scope":14275,"src":"41486:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14269,"name":"string","nodeType":"ElementaryTypeName","src":"41486:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"41485:22:15"},"returnParameters":{"id":14274,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14273,"mutability":"mutable","name":"result","nameLocation":"41536:6:15","nodeType":"VariableDeclaration","scope":14275,"src":"41531:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":14272,"name":"bool","nodeType":"ElementaryTypeName","src":"41531:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"41530:13:15"},"scope":16930,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":14281,"nodeType":"FunctionDefinition","src":"41600:66:15","nodes":[],"documentation":{"id":14276,"nodeType":"StructuredDocumentation","src":"41550:45:15","text":"Get the path of the current project root."},"functionSelector":"d930a0e6","implemented":false,"kind":"function","modifiers":[],"name":"projectRoot","nameLocation":"41609:11:15","parameters":{"id":14277,"nodeType":"ParameterList","parameters":[],"src":"41620:2:15"},"returnParameters":{"id":14280,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14279,"mutability":"mutable","name":"path","nameLocation":"41660:4:15","nodeType":"VariableDeclaration","scope":14281,"src":"41646:18:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":14278,"name":"string","nodeType":"ElementaryTypeName","src":"41646:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"41645:20:15"},"scope":16930,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":14289,"nodeType":"FunctionDefinition","src":"41733:83:15","nodes":[],"documentation":{"id":14282,"nodeType":"StructuredDocumentation","src":"41672:56:15","text":"Prompts the user for a string value in the terminal."},"functionSelector":"47eaf474","implemented":false,"kind":"function","modifiers":[],"name":"prompt","nameLocation":"41742:6:15","parameters":{"id":14285,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14284,"mutability":"mutable","name":"promptText","nameLocation":"41765:10:15","nodeType":"VariableDeclaration","scope":14289,"src":"41749:26:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14283,"name":"string","nodeType":"ElementaryTypeName","src":"41749:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"41748:28:15"},"returnParameters":{"id":14288,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14287,"mutability":"mutable","name":"input","nameLocation":"41809:5:15","nodeType":"VariableDeclaration","scope":14289,"src":"41795:19:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":14286,"name":"string","nodeType":"ElementaryTypeName","src":"41795:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"41794:21:15"},"scope":16930,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":14297,"nodeType":"FunctionDefinition","src":"41879:78:15","nodes":[],"documentation":{"id":14290,"nodeType":"StructuredDocumentation","src":"41822:52:15","text":"Prompts the user for an address in the terminal."},"functionSelector":"62ee05f4","implemented":false,"kind":"function","modifiers":[],"name":"promptAddress","nameLocation":"41888:13:15","parameters":{"id":14293,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14292,"mutability":"mutable","name":"promptText","nameLocation":"41918:10:15","nodeType":"VariableDeclaration","scope":14297,"src":"41902:26:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14291,"name":"string","nodeType":"ElementaryTypeName","src":"41902:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"41901:28:15"},"returnParameters":{"id":14296,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14295,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":14297,"src":"41948:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":14294,"name":"address","nodeType":"ElementaryTypeName","src":"41948:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"41947:9:15"},"scope":16930,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":14305,"nodeType":"FunctionDefinition","src":"42031:89:15","nodes":[],"documentation":{"id":14298,"nodeType":"StructuredDocumentation","src":"41963:63:15","text":"Prompts the user for a hidden string value in the terminal."},"functionSelector":"1e279d41","implemented":false,"kind":"function","modifiers":[],"name":"promptSecret","nameLocation":"42040:12:15","parameters":{"id":14301,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14300,"mutability":"mutable","name":"promptText","nameLocation":"42069:10:15","nodeType":"VariableDeclaration","scope":14305,"src":"42053:26:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14299,"name":"string","nodeType":"ElementaryTypeName","src":"42053:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"42052:28:15"},"returnParameters":{"id":14304,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14303,"mutability":"mutable","name":"input","nameLocation":"42113:5:15","nodeType":"VariableDeclaration","scope":14305,"src":"42099:19:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":14302,"name":"string","nodeType":"ElementaryTypeName","src":"42099:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"42098:21:15"},"scope":16930,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":14313,"nodeType":"FunctionDefinition","src":"42200:81:15","nodes":[],"documentation":{"id":14306,"nodeType":"StructuredDocumentation","src":"42126:69:15","text":"Prompts the user for hidden uint256 in the terminal (usually pk)."},"functionSelector":"69ca02b7","implemented":false,"kind":"function","modifiers":[],"name":"promptSecretUint","nameLocation":"42209:16:15","parameters":{"id":14309,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14308,"mutability":"mutable","name":"promptText","nameLocation":"42242:10:15","nodeType":"VariableDeclaration","scope":14313,"src":"42226:26:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14307,"name":"string","nodeType":"ElementaryTypeName","src":"42226:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"42225:28:15"},"returnParameters":{"id":14312,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14311,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":14313,"src":"42272:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14310,"name":"uint256","nodeType":"ElementaryTypeName","src":"42272:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"42271:9:15"},"scope":16930,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":14321,"nodeType":"FunctionDefinition","src":"42341:75:15","nodes":[],"documentation":{"id":14314,"nodeType":"StructuredDocumentation","src":"42287:49:15","text":"Prompts the user for uint256 in the terminal."},"functionSelector":"652fd489","implemented":false,"kind":"function","modifiers":[],"name":"promptUint","nameLocation":"42350:10:15","parameters":{"id":14317,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14316,"mutability":"mutable","name":"promptText","nameLocation":"42377:10:15","nodeType":"VariableDeclaration","scope":14321,"src":"42361:26:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14315,"name":"string","nodeType":"ElementaryTypeName","src":"42361:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"42360:28:15"},"returnParameters":{"id":14320,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14319,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":14321,"src":"42407:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14318,"name":"uint256","nodeType":"ElementaryTypeName","src":"42407:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"42406:9:15"},"scope":16930,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":14331,"nodeType":"FunctionDefinition","src":"42664:89:15","nodes":[],"documentation":{"id":14322,"nodeType":"StructuredDocumentation","src":"42422:237:15","text":"Reads the directory at the given path recursively, up to `maxDepth`.\n `maxDepth` defaults to 1, meaning only the direct children of the given directory will be returned.\n Follows symbolic links if `followLinks` is true."},"functionSelector":"c4bc59e0","implemented":false,"kind":"function","modifiers":[],"name":"readDir","nameLocation":"42673:7:15","parameters":{"id":14325,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14324,"mutability":"mutable","name":"path","nameLocation":"42697:4:15","nodeType":"VariableDeclaration","scope":14331,"src":"42681:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14323,"name":"string","nodeType":"ElementaryTypeName","src":"42681:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"42680:22:15"},"returnParameters":{"id":14330,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14329,"mutability":"mutable","name":"entries","nameLocation":"42744:7:15","nodeType":"VariableDeclaration","scope":14331,"src":"42726:25:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_DirEntry_$13074_memory_ptr_$dyn_memory_ptr","typeString":"struct VmSafe.DirEntry[]"},"typeName":{"baseType":{"id":14327,"nodeType":"UserDefinedTypeName","pathNode":{"id":14326,"name":"DirEntry","nameLocations":["42726:8:15"],"nodeType":"IdentifierPath","referencedDeclaration":13074,"src":"42726:8:15"},"referencedDeclaration":13074,"src":"42726:8:15","typeDescriptions":{"typeIdentifier":"t_struct$_DirEntry_$13074_storage_ptr","typeString":"struct VmSafe.DirEntry"}},"id":14328,"nodeType":"ArrayTypeName","src":"42726:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_DirEntry_$13074_storage_$dyn_storage_ptr","typeString":"struct VmSafe.DirEntry[]"}},"visibility":"internal"}],"src":"42725:27:15"},"scope":16930,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":14343,"nodeType":"FunctionDefinition","src":"42790:106:15","nodes":[],"documentation":{"id":14332,"nodeType":"StructuredDocumentation","src":"42759:26:15","text":"See `readDir(string)`."},"functionSelector":"1497876c","implemented":false,"kind":"function","modifiers":[],"name":"readDir","nameLocation":"42799:7:15","parameters":{"id":14337,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14334,"mutability":"mutable","name":"path","nameLocation":"42823:4:15","nodeType":"VariableDeclaration","scope":14343,"src":"42807:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14333,"name":"string","nodeType":"ElementaryTypeName","src":"42807:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14336,"mutability":"mutable","name":"maxDepth","nameLocation":"42836:8:15","nodeType":"VariableDeclaration","scope":14343,"src":"42829:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":14335,"name":"uint64","nodeType":"ElementaryTypeName","src":"42829:6:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"42806:39:15"},"returnParameters":{"id":14342,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14341,"mutability":"mutable","name":"entries","nameLocation":"42887:7:15","nodeType":"VariableDeclaration","scope":14343,"src":"42869:25:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_DirEntry_$13074_memory_ptr_$dyn_memory_ptr","typeString":"struct VmSafe.DirEntry[]"},"typeName":{"baseType":{"id":14339,"nodeType":"UserDefinedTypeName","pathNode":{"id":14338,"name":"DirEntry","nameLocations":["42869:8:15"],"nodeType":"IdentifierPath","referencedDeclaration":13074,"src":"42869:8:15"},"referencedDeclaration":13074,"src":"42869:8:15","typeDescriptions":{"typeIdentifier":"t_struct$_DirEntry_$13074_storage_ptr","typeString":"struct VmSafe.DirEntry"}},"id":14340,"nodeType":"ArrayTypeName","src":"42869:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_DirEntry_$13074_storage_$dyn_storage_ptr","typeString":"struct VmSafe.DirEntry[]"}},"visibility":"internal"}],"src":"42868:27:15"},"scope":16930,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":14357,"nodeType":"FunctionDefinition","src":"42933:148:15","nodes":[],"documentation":{"id":14344,"nodeType":"StructuredDocumentation","src":"42902:26:15","text":"See `readDir(string)`."},"functionSelector":"8102d70d","implemented":false,"kind":"function","modifiers":[],"name":"readDir","nameLocation":"42942:7:15","parameters":{"id":14351,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14346,"mutability":"mutable","name":"path","nameLocation":"42966:4:15","nodeType":"VariableDeclaration","scope":14357,"src":"42950:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14345,"name":"string","nodeType":"ElementaryTypeName","src":"42950:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14348,"mutability":"mutable","name":"maxDepth","nameLocation":"42979:8:15","nodeType":"VariableDeclaration","scope":14357,"src":"42972:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":14347,"name":"uint64","nodeType":"ElementaryTypeName","src":"42972:6:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":14350,"mutability":"mutable","name":"followLinks","nameLocation":"42994:11:15","nodeType":"VariableDeclaration","scope":14357,"src":"42989:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":14349,"name":"bool","nodeType":"ElementaryTypeName","src":"42989:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"42949:57:15"},"returnParameters":{"id":14356,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14355,"mutability":"mutable","name":"entries","nameLocation":"43072:7:15","nodeType":"VariableDeclaration","scope":14357,"src":"43054:25:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_DirEntry_$13074_memory_ptr_$dyn_memory_ptr","typeString":"struct VmSafe.DirEntry[]"},"typeName":{"baseType":{"id":14353,"nodeType":"UserDefinedTypeName","pathNode":{"id":14352,"name":"DirEntry","nameLocations":["43054:8:15"],"nodeType":"IdentifierPath","referencedDeclaration":13074,"src":"43054:8:15"},"referencedDeclaration":13074,"src":"43054:8:15","typeDescriptions":{"typeIdentifier":"t_struct$_DirEntry_$13074_storage_ptr","typeString":"struct VmSafe.DirEntry"}},"id":14354,"nodeType":"ArrayTypeName","src":"43054:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_DirEntry_$13074_storage_$dyn_storage_ptr","typeString":"struct VmSafe.DirEntry[]"}},"visibility":"internal"}],"src":"43053:27:15"},"scope":16930,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":14365,"nodeType":"FunctionDefinition","src":"43179:83:15","nodes":[],"documentation":{"id":14358,"nodeType":"StructuredDocumentation","src":"43087:87:15","text":"Reads the entire content of file to string. `path` is relative to the project root."},"functionSelector":"60f9bb11","implemented":false,"kind":"function","modifiers":[],"name":"readFile","nameLocation":"43188:8:15","parameters":{"id":14361,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14360,"mutability":"mutable","name":"path","nameLocation":"43213:4:15","nodeType":"VariableDeclaration","scope":14365,"src":"43197:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14359,"name":"string","nodeType":"ElementaryTypeName","src":"43197:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"43196:22:15"},"returnParameters":{"id":14364,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14363,"mutability":"mutable","name":"data","nameLocation":"43256:4:15","nodeType":"VariableDeclaration","scope":14365,"src":"43242:18:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":14362,"name":"string","nodeType":"ElementaryTypeName","src":"43242:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"43241:20:15"},"scope":16930,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":14373,"nodeType":"FunctionDefinition","src":"43360:88:15","nodes":[],"documentation":{"id":14366,"nodeType":"StructuredDocumentation","src":"43268:87:15","text":"Reads the entire content of file as binary. `path` is relative to the project root."},"functionSelector":"16ed7bc4","implemented":false,"kind":"function","modifiers":[],"name":"readFileBinary","nameLocation":"43369:14:15","parameters":{"id":14369,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14368,"mutability":"mutable","name":"path","nameLocation":"43400:4:15","nodeType":"VariableDeclaration","scope":14373,"src":"43384:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14367,"name":"string","nodeType":"ElementaryTypeName","src":"43384:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"43383:22:15"},"returnParameters":{"id":14372,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14371,"mutability":"mutable","name":"data","nameLocation":"43442:4:15","nodeType":"VariableDeclaration","scope":14373,"src":"43429:17:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":14370,"name":"bytes","nodeType":"ElementaryTypeName","src":"43429:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"43428:19:15"},"scope":16930,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":14381,"nodeType":"FunctionDefinition","src":"43497:83:15","nodes":[],"documentation":{"id":14374,"nodeType":"StructuredDocumentation","src":"43454:38:15","text":"Reads next line of file to string."},"functionSelector":"70f55728","implemented":false,"kind":"function","modifiers":[],"name":"readLine","nameLocation":"43506:8:15","parameters":{"id":14377,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14376,"mutability":"mutable","name":"path","nameLocation":"43531:4:15","nodeType":"VariableDeclaration","scope":14381,"src":"43515:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14375,"name":"string","nodeType":"ElementaryTypeName","src":"43515:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"43514:22:15"},"returnParameters":{"id":14380,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14379,"mutability":"mutable","name":"line","nameLocation":"43574:4:15","nodeType":"VariableDeclaration","scope":14381,"src":"43560:18:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":14378,"name":"string","nodeType":"ElementaryTypeName","src":"43560:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"43559:20:15"},"scope":16930,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":14389,"nodeType":"FunctionDefinition","src":"43839:93:15","nodes":[],"documentation":{"id":14382,"nodeType":"StructuredDocumentation","src":"43586:248:15","text":"Reads a symbolic link, returning the path that the link points to.\n This cheatcode will revert in the following situations, but is not limited to just these cases:\n - `path` is not a symbolic link.\n - `path` does not exist."},"functionSelector":"9f5684a2","implemented":false,"kind":"function","modifiers":[],"name":"readLink","nameLocation":"43848:8:15","parameters":{"id":14385,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14384,"mutability":"mutable","name":"linkPath","nameLocation":"43873:8:15","nodeType":"VariableDeclaration","scope":14389,"src":"43857:24:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14383,"name":"string","nodeType":"ElementaryTypeName","src":"43857:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"43856:26:15"},"returnParameters":{"id":14388,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14387,"mutability":"mutable","name":"targetPath","nameLocation":"43920:10:15","nodeType":"VariableDeclaration","scope":14389,"src":"43906:24:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":14386,"name":"string","nodeType":"ElementaryTypeName","src":"43906:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"43905:26:15"},"scope":16930,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":14397,"nodeType":"FunctionDefinition","src":"44322:66:15","nodes":[],"documentation":{"id":14390,"nodeType":"StructuredDocumentation","src":"43938:379:15","text":"Removes a directory at the provided path.\n This cheatcode will revert in the following situations, but is not limited to just these cases:\n - `path` doesn't exist.\n - `path` isn't a directory.\n - User lacks permissions to modify `path`.\n - The directory is not empty and `recursive` is false.\n `path` is relative to the project root."},"functionSelector":"45c62011","implemented":false,"kind":"function","modifiers":[],"name":"removeDir","nameLocation":"44331:9:15","parameters":{"id":14395,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14392,"mutability":"mutable","name":"path","nameLocation":"44357:4:15","nodeType":"VariableDeclaration","scope":14397,"src":"44341:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14391,"name":"string","nodeType":"ElementaryTypeName","src":"44341:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14394,"mutability":"mutable","name":"recursive","nameLocation":"44368:9:15","nodeType":"VariableDeclaration","scope":14397,"src":"44363:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":14393,"name":"bool","nodeType":"ElementaryTypeName","src":"44363:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"44340:38:15"},"returnParameters":{"id":14396,"nodeType":"ParameterList","parameters":[],"src":"44387:0:15"},"scope":16930,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":14403,"nodeType":"FunctionDefinition","src":"44721:51:15","nodes":[],"documentation":{"id":14398,"nodeType":"StructuredDocumentation","src":"44394:322:15","text":"Removes a file from the filesystem.\n This cheatcode will revert in the following situations, but is not limited to just these cases:\n - `path` points to a directory.\n - The file doesn't exist.\n - The user lacks permissions to remove the file.\n `path` is relative to the project root."},"functionSelector":"f1afe04d","implemented":false,"kind":"function","modifiers":[],"name":"removeFile","nameLocation":"44730:10:15","parameters":{"id":14401,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14400,"mutability":"mutable","name":"path","nameLocation":"44757:4:15","nodeType":"VariableDeclaration","scope":14403,"src":"44741:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14399,"name":"string","nodeType":"ElementaryTypeName","src":"44741:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"44740:22:15"},"returnParameters":{"id":14402,"nodeType":"ParameterList","parameters":[],"src":"44771:0:15"},"scope":16930,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":14413,"nodeType":"FunctionDefinition","src":"44879:91:15","nodes":[],"documentation":{"id":14404,"nodeType":"StructuredDocumentation","src":"44778:96:15","text":"Performs a foreign function call via terminal and returns the exit code, stdout, and stderr."},"functionSelector":"f45c1ce7","implemented":false,"kind":"function","modifiers":[],"name":"tryFfi","nameLocation":"44888:6:15","parameters":{"id":14408,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14407,"mutability":"mutable","name":"commandInput","nameLocation":"44913:12:15","nodeType":"VariableDeclaration","scope":14413,"src":"44895:30:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":14405,"name":"string","nodeType":"ElementaryTypeName","src":"44895:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":14406,"nodeType":"ArrayTypeName","src":"44895:8:15","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"44894:32:15"},"returnParameters":{"id":14412,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14411,"mutability":"mutable","name":"result","nameLocation":"44962:6:15","nodeType":"VariableDeclaration","scope":14413,"src":"44945:23:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_FfiResult_$13108_memory_ptr","typeString":"struct VmSafe.FfiResult"},"typeName":{"id":14410,"nodeType":"UserDefinedTypeName","pathNode":{"id":14409,"name":"FfiResult","nameLocations":["44945:9:15"],"nodeType":"IdentifierPath","referencedDeclaration":13108,"src":"44945:9:15"},"referencedDeclaration":13108,"src":"44945:9:15","typeDescriptions":{"typeIdentifier":"t_struct$_FfiResult_$13108_storage_ptr","typeString":"struct VmSafe.FfiResult"}},"visibility":"internal"}],"src":"44944:25:15"},"scope":16930,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":14419,"nodeType":"FunctionDefinition","src":"45035:65:15","nodes":[],"documentation":{"id":14414,"nodeType":"StructuredDocumentation","src":"44976:54:15","text":"Returns the time since unix epoch in milliseconds."},"functionSelector":"625387dc","implemented":false,"kind":"function","modifiers":[],"name":"unixTime","nameLocation":"45044:8:15","parameters":{"id":14415,"nodeType":"ParameterList","parameters":[],"src":"45052:2:15"},"returnParameters":{"id":14418,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14417,"mutability":"mutable","name":"milliseconds","nameLocation":"45086:12:15","nodeType":"VariableDeclaration","scope":14419,"src":"45078:20:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14416,"name":"uint256","nodeType":"ElementaryTypeName","src":"45078:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"45077:22:15"},"scope":16930,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":14427,"nodeType":"FunctionDefinition","src":"45269:72:15","nodes":[],"documentation":{"id":14420,"nodeType":"StructuredDocumentation","src":"45106:158:15","text":"Writes data to file, creating a file if it does not exist, and entirely replacing its contents if it does.\n `path` is relative to the project root."},"functionSelector":"897e0a97","implemented":false,"kind":"function","modifiers":[],"name":"writeFile","nameLocation":"45278:9:15","parameters":{"id":14425,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14422,"mutability":"mutable","name":"path","nameLocation":"45304:4:15","nodeType":"VariableDeclaration","scope":14427,"src":"45288:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14421,"name":"string","nodeType":"ElementaryTypeName","src":"45288:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14424,"mutability":"mutable","name":"data","nameLocation":"45326:4:15","nodeType":"VariableDeclaration","scope":14427,"src":"45310:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14423,"name":"string","nodeType":"ElementaryTypeName","src":"45310:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"45287:44:15"},"returnParameters":{"id":14426,"nodeType":"ParameterList","parameters":[],"src":"45340:0:15"},"scope":16930,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":14435,"nodeType":"FunctionDefinition","src":"45519:77:15","nodes":[],"documentation":{"id":14428,"nodeType":"StructuredDocumentation","src":"45347:167:15","text":"Writes binary data to a file, creating a file if it does not exist, and entirely replacing its contents if it does.\n `path` is relative to the project root."},"functionSelector":"1f21fc80","implemented":false,"kind":"function","modifiers":[],"name":"writeFileBinary","nameLocation":"45528:15:15","parameters":{"id":14433,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14430,"mutability":"mutable","name":"path","nameLocation":"45560:4:15","nodeType":"VariableDeclaration","scope":14435,"src":"45544:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14429,"name":"string","nodeType":"ElementaryTypeName","src":"45544:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14432,"mutability":"mutable","name":"data","nameLocation":"45581:4:15","nodeType":"VariableDeclaration","scope":14435,"src":"45566:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":14431,"name":"bytes","nodeType":"ElementaryTypeName","src":"45566:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"45543:43:15"},"returnParameters":{"id":14434,"nodeType":"ParameterList","parameters":[],"src":"45595:0:15"},"scope":16930,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":14443,"nodeType":"FunctionDefinition","src":"45717:72:15","nodes":[],"documentation":{"id":14436,"nodeType":"StructuredDocumentation","src":"45602:110:15","text":"Writes line to file, creating a file if it does not exist.\n `path` is relative to the project root."},"functionSelector":"619d897f","implemented":false,"kind":"function","modifiers":[],"name":"writeLine","nameLocation":"45726:9:15","parameters":{"id":14441,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14438,"mutability":"mutable","name":"path","nameLocation":"45752:4:15","nodeType":"VariableDeclaration","scope":14443,"src":"45736:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14437,"name":"string","nodeType":"ElementaryTypeName","src":"45736:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14440,"mutability":"mutable","name":"data","nameLocation":"45774:4:15","nodeType":"VariableDeclaration","scope":14443,"src":"45758:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14439,"name":"string","nodeType":"ElementaryTypeName","src":"45758:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"45735:44:15"},"returnParameters":{"id":14442,"nodeType":"ParameterList","parameters":[],"src":"45788:0:15"},"scope":16930,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":14453,"nodeType":"FunctionDefinition","src":"45875:95:15","nodes":[],"documentation":{"id":14444,"nodeType":"StructuredDocumentation","src":"45826:44:15","text":"Checks if `key` exists in a JSON object."},"functionSelector":"db4235f6","implemented":false,"kind":"function","modifiers":[],"name":"keyExistsJson","nameLocation":"45884:13:15","parameters":{"id":14449,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14446,"mutability":"mutable","name":"json","nameLocation":"45914:4:15","nodeType":"VariableDeclaration","scope":14453,"src":"45898:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14445,"name":"string","nodeType":"ElementaryTypeName","src":"45898:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14448,"mutability":"mutable","name":"key","nameLocation":"45936:3:15","nodeType":"VariableDeclaration","scope":14453,"src":"45920:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14447,"name":"string","nodeType":"ElementaryTypeName","src":"45920:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"45897:43:15"},"returnParameters":{"id":14452,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14451,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":14453,"src":"45964:4:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":14450,"name":"bool","nodeType":"ElementaryTypeName","src":"45964:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"45963:6:15"},"scope":16930,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":14463,"nodeType":"FunctionDefinition","src":"46051:101:15","nodes":[],"documentation":{"id":14454,"nodeType":"StructuredDocumentation","src":"45976:70:15","text":"Parses a string of JSON data at `key` and coerces it to `address`."},"functionSelector":"1e19e657","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonAddress","nameLocation":"46060:16:15","parameters":{"id":14459,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14456,"mutability":"mutable","name":"json","nameLocation":"46093:4:15","nodeType":"VariableDeclaration","scope":14463,"src":"46077:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14455,"name":"string","nodeType":"ElementaryTypeName","src":"46077:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14458,"mutability":"mutable","name":"key","nameLocation":"46115:3:15","nodeType":"VariableDeclaration","scope":14463,"src":"46099:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14457,"name":"string","nodeType":"ElementaryTypeName","src":"46099:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"46076:43:15"},"returnParameters":{"id":14462,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14461,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":14463,"src":"46143:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":14460,"name":"address","nodeType":"ElementaryTypeName","src":"46143:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"46142:9:15"},"scope":16930,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14474,"nodeType":"FunctionDefinition","src":"46235:139:15","nodes":[],"documentation":{"id":14464,"nodeType":"StructuredDocumentation","src":"46158:72:15","text":"Parses a string of JSON data at `key` and coerces it to `address[]`."},"functionSelector":"2fce7883","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonAddressArray","nameLocation":"46244:21:15","parameters":{"id":14469,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14466,"mutability":"mutable","name":"json","nameLocation":"46282:4:15","nodeType":"VariableDeclaration","scope":14474,"src":"46266:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14465,"name":"string","nodeType":"ElementaryTypeName","src":"46266:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14468,"mutability":"mutable","name":"key","nameLocation":"46304:3:15","nodeType":"VariableDeclaration","scope":14474,"src":"46288:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14467,"name":"string","nodeType":"ElementaryTypeName","src":"46288:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"46265:43:15"},"returnParameters":{"id":14473,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14472,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":14474,"src":"46356:16:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":14470,"name":"address","nodeType":"ElementaryTypeName","src":"46356:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":14471,"nodeType":"ArrayTypeName","src":"46356:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"46355:18:15"},"scope":16930,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14484,"nodeType":"FunctionDefinition","src":"46452:95:15","nodes":[],"documentation":{"id":14475,"nodeType":"StructuredDocumentation","src":"46380:67:15","text":"Parses a string of JSON data at `key` and coerces it to `bool`."},"functionSelector":"9f86dc91","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonBool","nameLocation":"46461:13:15","parameters":{"id":14480,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14477,"mutability":"mutable","name":"json","nameLocation":"46491:4:15","nodeType":"VariableDeclaration","scope":14484,"src":"46475:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14476,"name":"string","nodeType":"ElementaryTypeName","src":"46475:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14479,"mutability":"mutable","name":"key","nameLocation":"46513:3:15","nodeType":"VariableDeclaration","scope":14484,"src":"46497:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14478,"name":"string","nodeType":"ElementaryTypeName","src":"46497:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"46474:43:15"},"returnParameters":{"id":14483,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14482,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":14484,"src":"46541:4:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":14481,"name":"bool","nodeType":"ElementaryTypeName","src":"46541:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"46540:6:15"},"scope":16930,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14495,"nodeType":"FunctionDefinition","src":"46627:109:15","nodes":[],"documentation":{"id":14485,"nodeType":"StructuredDocumentation","src":"46553:69:15","text":"Parses a string of JSON data at `key` and coerces it to `bool[]`."},"functionSelector":"91f3b94f","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonBoolArray","nameLocation":"46636:18:15","parameters":{"id":14490,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14487,"mutability":"mutable","name":"json","nameLocation":"46671:4:15","nodeType":"VariableDeclaration","scope":14495,"src":"46655:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14486,"name":"string","nodeType":"ElementaryTypeName","src":"46655:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14489,"mutability":"mutable","name":"key","nameLocation":"46693:3:15","nodeType":"VariableDeclaration","scope":14495,"src":"46677:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14488,"name":"string","nodeType":"ElementaryTypeName","src":"46677:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"46654:43:15"},"returnParameters":{"id":14494,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14493,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":14495,"src":"46721:13:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":14491,"name":"bool","nodeType":"ElementaryTypeName","src":"46721:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":14492,"nodeType":"ArrayTypeName","src":"46721:6:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"}],"src":"46720:15:15"},"scope":16930,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14505,"nodeType":"FunctionDefinition","src":"46815:104:15","nodes":[],"documentation":{"id":14496,"nodeType":"StructuredDocumentation","src":"46742:68:15","text":"Parses a string of JSON data at `key` and coerces it to `bytes`."},"functionSelector":"fd921be8","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonBytes","nameLocation":"46824:14:15","parameters":{"id":14501,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14498,"mutability":"mutable","name":"json","nameLocation":"46855:4:15","nodeType":"VariableDeclaration","scope":14505,"src":"46839:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14497,"name":"string","nodeType":"ElementaryTypeName","src":"46839:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14500,"mutability":"mutable","name":"key","nameLocation":"46877:3:15","nodeType":"VariableDeclaration","scope":14505,"src":"46861:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14499,"name":"string","nodeType":"ElementaryTypeName","src":"46861:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"46838:43:15"},"returnParameters":{"id":14504,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14503,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":14505,"src":"46905:12:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":14502,"name":"bytes","nodeType":"ElementaryTypeName","src":"46905:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"46904:14:15"},"scope":16930,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14515,"nodeType":"FunctionDefinition","src":"47000:101:15","nodes":[],"documentation":{"id":14506,"nodeType":"StructuredDocumentation","src":"46925:70:15","text":"Parses a string of JSON data at `key` and coerces it to `bytes32`."},"functionSelector":"1777e59d","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonBytes32","nameLocation":"47009:16:15","parameters":{"id":14511,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14508,"mutability":"mutable","name":"json","nameLocation":"47042:4:15","nodeType":"VariableDeclaration","scope":14515,"src":"47026:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14507,"name":"string","nodeType":"ElementaryTypeName","src":"47026:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14510,"mutability":"mutable","name":"key","nameLocation":"47064:3:15","nodeType":"VariableDeclaration","scope":14515,"src":"47048:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14509,"name":"string","nodeType":"ElementaryTypeName","src":"47048:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"47025:43:15"},"returnParameters":{"id":14514,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14513,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":14515,"src":"47092:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":14512,"name":"bytes32","nodeType":"ElementaryTypeName","src":"47092:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"47091:9:15"},"scope":16930,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14526,"nodeType":"FunctionDefinition","src":"47184:139:15","nodes":[],"documentation":{"id":14516,"nodeType":"StructuredDocumentation","src":"47107:72:15","text":"Parses a string of JSON data at `key` and coerces it to `bytes32[]`."},"functionSelector":"91c75bc3","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonBytes32Array","nameLocation":"47193:21:15","parameters":{"id":14521,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14518,"mutability":"mutable","name":"json","nameLocation":"47231:4:15","nodeType":"VariableDeclaration","scope":14526,"src":"47215:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14517,"name":"string","nodeType":"ElementaryTypeName","src":"47215:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14520,"mutability":"mutable","name":"key","nameLocation":"47253:3:15","nodeType":"VariableDeclaration","scope":14526,"src":"47237:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14519,"name":"string","nodeType":"ElementaryTypeName","src":"47237:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"47214:43:15"},"returnParameters":{"id":14525,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14524,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":14526,"src":"47305:16:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":14522,"name":"bytes32","nodeType":"ElementaryTypeName","src":"47305:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":14523,"nodeType":"ArrayTypeName","src":"47305:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"47304:18:15"},"scope":16930,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14537,"nodeType":"FunctionDefinition","src":"47404:111:15","nodes":[],"documentation":{"id":14527,"nodeType":"StructuredDocumentation","src":"47329:70:15","text":"Parses a string of JSON data at `key` and coerces it to `bytes[]`."},"functionSelector":"6631aa99","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonBytesArray","nameLocation":"47413:19:15","parameters":{"id":14532,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14529,"mutability":"mutable","name":"json","nameLocation":"47449:4:15","nodeType":"VariableDeclaration","scope":14537,"src":"47433:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14528,"name":"string","nodeType":"ElementaryTypeName","src":"47433:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14531,"mutability":"mutable","name":"key","nameLocation":"47471:3:15","nodeType":"VariableDeclaration","scope":14537,"src":"47455:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14530,"name":"string","nodeType":"ElementaryTypeName","src":"47455:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"47432:43:15"},"returnParameters":{"id":14536,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14535,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":14537,"src":"47499:14:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":14533,"name":"bytes","nodeType":"ElementaryTypeName","src":"47499:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":14534,"nodeType":"ArrayTypeName","src":"47499:7:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"47498:16:15"},"scope":16930,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14547,"nodeType":"FunctionDefinition","src":"47595:96:15","nodes":[],"documentation":{"id":14538,"nodeType":"StructuredDocumentation","src":"47521:69:15","text":"Parses a string of JSON data at `key` and coerces it to `int256`."},"functionSelector":"7b048ccd","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonInt","nameLocation":"47604:12:15","parameters":{"id":14543,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14540,"mutability":"mutable","name":"json","nameLocation":"47633:4:15","nodeType":"VariableDeclaration","scope":14547,"src":"47617:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14539,"name":"string","nodeType":"ElementaryTypeName","src":"47617:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14542,"mutability":"mutable","name":"key","nameLocation":"47655:3:15","nodeType":"VariableDeclaration","scope":14547,"src":"47639:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14541,"name":"string","nodeType":"ElementaryTypeName","src":"47639:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"47616:43:15"},"returnParameters":{"id":14546,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14545,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":14547,"src":"47683:6:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14544,"name":"int256","nodeType":"ElementaryTypeName","src":"47683:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"47682:8:15"},"scope":16930,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14558,"nodeType":"FunctionDefinition","src":"47773:110:15","nodes":[],"documentation":{"id":14548,"nodeType":"StructuredDocumentation","src":"47697:71:15","text":"Parses a string of JSON data at `key` and coerces it to `int256[]`."},"functionSelector":"9983c28a","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonIntArray","nameLocation":"47782:17:15","parameters":{"id":14553,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14550,"mutability":"mutable","name":"json","nameLocation":"47816:4:15","nodeType":"VariableDeclaration","scope":14558,"src":"47800:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14549,"name":"string","nodeType":"ElementaryTypeName","src":"47800:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14552,"mutability":"mutable","name":"key","nameLocation":"47838:3:15","nodeType":"VariableDeclaration","scope":14558,"src":"47822:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14551,"name":"string","nodeType":"ElementaryTypeName","src":"47822:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"47799:43:15"},"returnParameters":{"id":14557,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14556,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":14558,"src":"47866:15:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_memory_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":14554,"name":"int256","nodeType":"ElementaryTypeName","src":"47866:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":14555,"nodeType":"ArrayTypeName","src":"47866:8:15","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"}],"src":"47865:17:15"},"scope":16930,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14569,"nodeType":"FunctionDefinition","src":"47948:111:15","nodes":[],"documentation":{"id":14559,"nodeType":"StructuredDocumentation","src":"47889:54:15","text":"Returns an array of all the keys in a JSON object."},"functionSelector":"213e4198","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonKeys","nameLocation":"47957:13:15","parameters":{"id":14564,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14561,"mutability":"mutable","name":"json","nameLocation":"47987:4:15","nodeType":"VariableDeclaration","scope":14569,"src":"47971:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14560,"name":"string","nodeType":"ElementaryTypeName","src":"47971:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14563,"mutability":"mutable","name":"key","nameLocation":"48009:3:15","nodeType":"VariableDeclaration","scope":14569,"src":"47993:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14562,"name":"string","nodeType":"ElementaryTypeName","src":"47993:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"47970:43:15"},"returnParameters":{"id":14568,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14567,"mutability":"mutable","name":"keys","nameLocation":"48053:4:15","nodeType":"VariableDeclaration","scope":14569,"src":"48037:20:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":14565,"name":"string","nodeType":"ElementaryTypeName","src":"48037:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":14566,"nodeType":"ArrayTypeName","src":"48037:8:15","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"48036:22:15"},"scope":16930,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14579,"nodeType":"FunctionDefinition","src":"48139:106:15","nodes":[],"documentation":{"id":14570,"nodeType":"StructuredDocumentation","src":"48065:69:15","text":"Parses a string of JSON data at `key` and coerces it to `string`."},"functionSelector":"49c4fac8","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonString","nameLocation":"48148:15:15","parameters":{"id":14575,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14572,"mutability":"mutable","name":"json","nameLocation":"48180:4:15","nodeType":"VariableDeclaration","scope":14579,"src":"48164:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14571,"name":"string","nodeType":"ElementaryTypeName","src":"48164:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14574,"mutability":"mutable","name":"key","nameLocation":"48202:3:15","nodeType":"VariableDeclaration","scope":14579,"src":"48186:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14573,"name":"string","nodeType":"ElementaryTypeName","src":"48186:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"48163:43:15"},"returnParameters":{"id":14578,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14577,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":14579,"src":"48230:13:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":14576,"name":"string","nodeType":"ElementaryTypeName","src":"48230:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"48229:15:15"},"scope":16930,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14590,"nodeType":"FunctionDefinition","src":"48327:113:15","nodes":[],"documentation":{"id":14580,"nodeType":"StructuredDocumentation","src":"48251:71:15","text":"Parses a string of JSON data at `key` and coerces it to `string[]`."},"functionSelector":"498fdcf4","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonStringArray","nameLocation":"48336:20:15","parameters":{"id":14585,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14582,"mutability":"mutable","name":"json","nameLocation":"48373:4:15","nodeType":"VariableDeclaration","scope":14590,"src":"48357:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14581,"name":"string","nodeType":"ElementaryTypeName","src":"48357:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14584,"mutability":"mutable","name":"key","nameLocation":"48395:3:15","nodeType":"VariableDeclaration","scope":14590,"src":"48379:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14583,"name":"string","nodeType":"ElementaryTypeName","src":"48379:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"48356:43:15"},"returnParameters":{"id":14589,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14588,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":14590,"src":"48423:15:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":14586,"name":"string","nodeType":"ElementaryTypeName","src":"48423:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":14587,"nodeType":"ArrayTypeName","src":"48423:8:15","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"48422:17:15"},"scope":16930,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14602,"nodeType":"FunctionDefinition","src":"48557:165:15","nodes":[],"documentation":{"id":14591,"nodeType":"StructuredDocumentation","src":"48446:106:15","text":"Parses a string of JSON data at `key` and coerces it to type array corresponding to `typeDescription`."},"functionSelector":"0175d535","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonTypeArray","nameLocation":"48566:18:15","parameters":{"id":14598,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14593,"mutability":"mutable","name":"json","nameLocation":"48601:4:15","nodeType":"VariableDeclaration","scope":14602,"src":"48585:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14592,"name":"string","nodeType":"ElementaryTypeName","src":"48585:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14595,"mutability":"mutable","name":"key","nameLocation":"48623:3:15","nodeType":"VariableDeclaration","scope":14602,"src":"48607:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14594,"name":"string","nodeType":"ElementaryTypeName","src":"48607:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14597,"mutability":"mutable","name":"typeDescription","nameLocation":"48644:15:15","nodeType":"VariableDeclaration","scope":14602,"src":"48628:31:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14596,"name":"string","nodeType":"ElementaryTypeName","src":"48628:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"48584:76:15"},"returnParameters":{"id":14601,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14600,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":14602,"src":"48708:12:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":14599,"name":"bytes","nodeType":"ElementaryTypeName","src":"48708:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"48707:14:15"},"scope":16930,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14612,"nodeType":"FunctionDefinition","src":"48824:139:15","nodes":[],"documentation":{"id":14603,"nodeType":"StructuredDocumentation","src":"48728:91:15","text":"Parses a string of JSON data and coerces it to type corresponding to `typeDescription`."},"functionSelector":"a9da313b","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonType","nameLocation":"48833:13:15","parameters":{"id":14608,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14605,"mutability":"mutable","name":"json","nameLocation":"48863:4:15","nodeType":"VariableDeclaration","scope":14612,"src":"48847:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14604,"name":"string","nodeType":"ElementaryTypeName","src":"48847:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14607,"mutability":"mutable","name":"typeDescription","nameLocation":"48885:15:15","nodeType":"VariableDeclaration","scope":14612,"src":"48869:31:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14606,"name":"string","nodeType":"ElementaryTypeName","src":"48869:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"48846:55:15"},"returnParameters":{"id":14611,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14610,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":14612,"src":"48949:12:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":14609,"name":"bytes","nodeType":"ElementaryTypeName","src":"48949:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"48948:14:15"},"scope":16930,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14624,"nodeType":"FunctionDefinition","src":"49074:160:15","nodes":[],"documentation":{"id":14613,"nodeType":"StructuredDocumentation","src":"48969:100:15","text":"Parses a string of JSON data at `key` and coerces it to type corresponding to `typeDescription`."},"functionSelector":"e3f5ae33","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonType","nameLocation":"49083:13:15","parameters":{"id":14620,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14615,"mutability":"mutable","name":"json","nameLocation":"49113:4:15","nodeType":"VariableDeclaration","scope":14624,"src":"49097:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14614,"name":"string","nodeType":"ElementaryTypeName","src":"49097:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14617,"mutability":"mutable","name":"key","nameLocation":"49135:3:15","nodeType":"VariableDeclaration","scope":14624,"src":"49119:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14616,"name":"string","nodeType":"ElementaryTypeName","src":"49119:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14619,"mutability":"mutable","name":"typeDescription","nameLocation":"49156:15:15","nodeType":"VariableDeclaration","scope":14624,"src":"49140:31:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14618,"name":"string","nodeType":"ElementaryTypeName","src":"49140:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"49096:76:15"},"returnParameters":{"id":14623,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14622,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":14624,"src":"49220:12:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":14621,"name":"bytes","nodeType":"ElementaryTypeName","src":"49220:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"49219:14:15"},"scope":16930,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14634,"nodeType":"FunctionDefinition","src":"49315:98:15","nodes":[],"documentation":{"id":14625,"nodeType":"StructuredDocumentation","src":"49240:70:15","text":"Parses a string of JSON data at `key` and coerces it to `uint256`."},"functionSelector":"addde2b6","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonUint","nameLocation":"49324:13:15","parameters":{"id":14630,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14627,"mutability":"mutable","name":"json","nameLocation":"49354:4:15","nodeType":"VariableDeclaration","scope":14634,"src":"49338:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14626,"name":"string","nodeType":"ElementaryTypeName","src":"49338:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14629,"mutability":"mutable","name":"key","nameLocation":"49376:3:15","nodeType":"VariableDeclaration","scope":14634,"src":"49360:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14628,"name":"string","nodeType":"ElementaryTypeName","src":"49360:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"49337:43:15"},"returnParameters":{"id":14633,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14632,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":14634,"src":"49404:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14631,"name":"uint256","nodeType":"ElementaryTypeName","src":"49404:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"49403:9:15"},"scope":16930,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14645,"nodeType":"FunctionDefinition","src":"49496:112:15","nodes":[],"documentation":{"id":14635,"nodeType":"StructuredDocumentation","src":"49419:72:15","text":"Parses a string of JSON data at `key` and coerces it to `uint256[]`."},"functionSelector":"522074ab","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonUintArray","nameLocation":"49505:18:15","parameters":{"id":14640,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14637,"mutability":"mutable","name":"json","nameLocation":"49540:4:15","nodeType":"VariableDeclaration","scope":14645,"src":"49524:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14636,"name":"string","nodeType":"ElementaryTypeName","src":"49524:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14639,"mutability":"mutable","name":"key","nameLocation":"49562:3:15","nodeType":"VariableDeclaration","scope":14645,"src":"49546:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14638,"name":"string","nodeType":"ElementaryTypeName","src":"49546:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"49523:43:15"},"returnParameters":{"id":14644,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14643,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":14645,"src":"49590:16:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":14641,"name":"uint256","nodeType":"ElementaryTypeName","src":"49590:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":14642,"nodeType":"ArrayTypeName","src":"49590:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"49589:18:15"},"scope":16930,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14653,"nodeType":"FunctionDefinition","src":"49649:93:15","nodes":[],"documentation":{"id":14646,"nodeType":"StructuredDocumentation","src":"49614:30:15","text":"ABI-encodes a JSON object."},"functionSelector":"6a82600a","implemented":false,"kind":"function","modifiers":[],"name":"parseJson","nameLocation":"49658:9:15","parameters":{"id":14649,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14648,"mutability":"mutable","name":"json","nameLocation":"49684:4:15","nodeType":"VariableDeclaration","scope":14653,"src":"49668:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14647,"name":"string","nodeType":"ElementaryTypeName","src":"49668:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"49667:22:15"},"returnParameters":{"id":14652,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14651,"mutability":"mutable","name":"abiEncodedData","nameLocation":"49726:14:15","nodeType":"VariableDeclaration","scope":14653,"src":"49713:27:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":14650,"name":"bytes","nodeType":"ElementaryTypeName","src":"49713:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"49712:29:15"},"scope":16930,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14663,"nodeType":"FunctionDefinition","src":"49792:114:15","nodes":[],"documentation":{"id":14654,"nodeType":"StructuredDocumentation","src":"49748:39:15","text":"ABI-encodes a JSON object at `key`."},"functionSelector":"85940ef1","implemented":false,"kind":"function","modifiers":[],"name":"parseJson","nameLocation":"49801:9:15","parameters":{"id":14659,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14656,"mutability":"mutable","name":"json","nameLocation":"49827:4:15","nodeType":"VariableDeclaration","scope":14663,"src":"49811:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14655,"name":"string","nodeType":"ElementaryTypeName","src":"49811:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14658,"mutability":"mutable","name":"key","nameLocation":"49849:3:15","nodeType":"VariableDeclaration","scope":14663,"src":"49833:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14657,"name":"string","nodeType":"ElementaryTypeName","src":"49833:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"49810:43:15"},"returnParameters":{"id":14662,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14661,"mutability":"mutable","name":"abiEncodedData","nameLocation":"49890:14:15","nodeType":"VariableDeclaration","scope":14663,"src":"49877:27:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":14660,"name":"bytes","nodeType":"ElementaryTypeName","src":"49877:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"49876:29:15"},"scope":16930,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14675,"nodeType":"FunctionDefinition","src":"49941:148:15","nodes":[],"documentation":{"id":14664,"nodeType":"StructuredDocumentation","src":"49912:24:15","text":"See `serializeJson`."},"functionSelector":"972c6062","implemented":false,"kind":"function","modifiers":[],"name":"serializeAddress","nameLocation":"49950:16:15","parameters":{"id":14671,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14666,"mutability":"mutable","name":"objectKey","nameLocation":"49983:9:15","nodeType":"VariableDeclaration","scope":14675,"src":"49967:25:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14665,"name":"string","nodeType":"ElementaryTypeName","src":"49967:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14668,"mutability":"mutable","name":"valueKey","nameLocation":"50010:8:15","nodeType":"VariableDeclaration","scope":14675,"src":"49994:24:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14667,"name":"string","nodeType":"ElementaryTypeName","src":"49994:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14670,"mutability":"mutable","name":"value","nameLocation":"50028:5:15","nodeType":"VariableDeclaration","scope":14675,"src":"50020:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":14669,"name":"address","nodeType":"ElementaryTypeName","src":"50020:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"49966:68:15"},"returnParameters":{"id":14674,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14673,"mutability":"mutable","name":"json","nameLocation":"50083:4:15","nodeType":"VariableDeclaration","scope":14675,"src":"50069:18:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":14672,"name":"string","nodeType":"ElementaryTypeName","src":"50069:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"50068:20:15"},"scope":16930,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":14688,"nodeType":"FunctionDefinition","src":"50124:160:15","nodes":[],"documentation":{"id":14676,"nodeType":"StructuredDocumentation","src":"50095:24:15","text":"See `serializeJson`."},"functionSelector":"1e356e1a","implemented":false,"kind":"function","modifiers":[],"name":"serializeAddress","nameLocation":"50133:16:15","parameters":{"id":14684,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14678,"mutability":"mutable","name":"objectKey","nameLocation":"50166:9:15","nodeType":"VariableDeclaration","scope":14688,"src":"50150:25:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14677,"name":"string","nodeType":"ElementaryTypeName","src":"50150:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14680,"mutability":"mutable","name":"valueKey","nameLocation":"50193:8:15","nodeType":"VariableDeclaration","scope":14688,"src":"50177:24:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14679,"name":"string","nodeType":"ElementaryTypeName","src":"50177:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14683,"mutability":"mutable","name":"values","nameLocation":"50222:6:15","nodeType":"VariableDeclaration","scope":14688,"src":"50203:25:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":14681,"name":"address","nodeType":"ElementaryTypeName","src":"50203:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":14682,"nodeType":"ArrayTypeName","src":"50203:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"50149:80:15"},"returnParameters":{"id":14687,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14686,"mutability":"mutable","name":"json","nameLocation":"50278:4:15","nodeType":"VariableDeclaration","scope":14688,"src":"50264:18:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":14685,"name":"string","nodeType":"ElementaryTypeName","src":"50264:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"50263:20:15"},"scope":16930,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":14700,"nodeType":"FunctionDefinition","src":"50319:142:15","nodes":[],"documentation":{"id":14689,"nodeType":"StructuredDocumentation","src":"50290:24:15","text":"See `serializeJson`."},"functionSelector":"ac22e971","implemented":false,"kind":"function","modifiers":[],"name":"serializeBool","nameLocation":"50328:13:15","parameters":{"id":14696,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14691,"mutability":"mutable","name":"objectKey","nameLocation":"50358:9:15","nodeType":"VariableDeclaration","scope":14700,"src":"50342:25:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14690,"name":"string","nodeType":"ElementaryTypeName","src":"50342:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14693,"mutability":"mutable","name":"valueKey","nameLocation":"50385:8:15","nodeType":"VariableDeclaration","scope":14700,"src":"50369:24:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14692,"name":"string","nodeType":"ElementaryTypeName","src":"50369:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14695,"mutability":"mutable","name":"value","nameLocation":"50400:5:15","nodeType":"VariableDeclaration","scope":14700,"src":"50395:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":14694,"name":"bool","nodeType":"ElementaryTypeName","src":"50395:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"50341:65:15"},"returnParameters":{"id":14699,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14698,"mutability":"mutable","name":"json","nameLocation":"50455:4:15","nodeType":"VariableDeclaration","scope":14700,"src":"50441:18:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":14697,"name":"string","nodeType":"ElementaryTypeName","src":"50441:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"50440:20:15"},"scope":16930,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":14713,"nodeType":"FunctionDefinition","src":"50496:154:15","nodes":[],"documentation":{"id":14701,"nodeType":"StructuredDocumentation","src":"50467:24:15","text":"See `serializeJson`."},"functionSelector":"92925aa1","implemented":false,"kind":"function","modifiers":[],"name":"serializeBool","nameLocation":"50505:13:15","parameters":{"id":14709,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14703,"mutability":"mutable","name":"objectKey","nameLocation":"50535:9:15","nodeType":"VariableDeclaration","scope":14713,"src":"50519:25:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14702,"name":"string","nodeType":"ElementaryTypeName","src":"50519:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14705,"mutability":"mutable","name":"valueKey","nameLocation":"50562:8:15","nodeType":"VariableDeclaration","scope":14713,"src":"50546:24:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14704,"name":"string","nodeType":"ElementaryTypeName","src":"50546:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14708,"mutability":"mutable","name":"values","nameLocation":"50588:6:15","nodeType":"VariableDeclaration","scope":14713,"src":"50572:22:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":14706,"name":"bool","nodeType":"ElementaryTypeName","src":"50572:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":14707,"nodeType":"ArrayTypeName","src":"50572:6:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"}],"src":"50518:77:15"},"returnParameters":{"id":14712,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14711,"mutability":"mutable","name":"json","nameLocation":"50644:4:15","nodeType":"VariableDeclaration","scope":14713,"src":"50630:18:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":14710,"name":"string","nodeType":"ElementaryTypeName","src":"50630:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"50629:20:15"},"scope":16930,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":14725,"nodeType":"FunctionDefinition","src":"50685:148:15","nodes":[],"documentation":{"id":14714,"nodeType":"StructuredDocumentation","src":"50656:24:15","text":"See `serializeJson`."},"functionSelector":"2d812b44","implemented":false,"kind":"function","modifiers":[],"name":"serializeBytes32","nameLocation":"50694:16:15","parameters":{"id":14721,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14716,"mutability":"mutable","name":"objectKey","nameLocation":"50727:9:15","nodeType":"VariableDeclaration","scope":14725,"src":"50711:25:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14715,"name":"string","nodeType":"ElementaryTypeName","src":"50711:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14718,"mutability":"mutable","name":"valueKey","nameLocation":"50754:8:15","nodeType":"VariableDeclaration","scope":14725,"src":"50738:24:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14717,"name":"string","nodeType":"ElementaryTypeName","src":"50738:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14720,"mutability":"mutable","name":"value","nameLocation":"50772:5:15","nodeType":"VariableDeclaration","scope":14725,"src":"50764:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":14719,"name":"bytes32","nodeType":"ElementaryTypeName","src":"50764:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"50710:68:15"},"returnParameters":{"id":14724,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14723,"mutability":"mutable","name":"json","nameLocation":"50827:4:15","nodeType":"VariableDeclaration","scope":14725,"src":"50813:18:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":14722,"name":"string","nodeType":"ElementaryTypeName","src":"50813:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"50812:20:15"},"scope":16930,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":14738,"nodeType":"FunctionDefinition","src":"50868:160:15","nodes":[],"documentation":{"id":14726,"nodeType":"StructuredDocumentation","src":"50839:24:15","text":"See `serializeJson`."},"functionSelector":"201e43e2","implemented":false,"kind":"function","modifiers":[],"name":"serializeBytes32","nameLocation":"50877:16:15","parameters":{"id":14734,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14728,"mutability":"mutable","name":"objectKey","nameLocation":"50910:9:15","nodeType":"VariableDeclaration","scope":14738,"src":"50894:25:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14727,"name":"string","nodeType":"ElementaryTypeName","src":"50894:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14730,"mutability":"mutable","name":"valueKey","nameLocation":"50937:8:15","nodeType":"VariableDeclaration","scope":14738,"src":"50921:24:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14729,"name":"string","nodeType":"ElementaryTypeName","src":"50921:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14733,"mutability":"mutable","name":"values","nameLocation":"50966:6:15","nodeType":"VariableDeclaration","scope":14738,"src":"50947:25:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":14731,"name":"bytes32","nodeType":"ElementaryTypeName","src":"50947:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":14732,"nodeType":"ArrayTypeName","src":"50947:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"50893:80:15"},"returnParameters":{"id":14737,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14736,"mutability":"mutable","name":"json","nameLocation":"51022:4:15","nodeType":"VariableDeclaration","scope":14738,"src":"51008:18:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":14735,"name":"string","nodeType":"ElementaryTypeName","src":"51008:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"51007:20:15"},"scope":16930,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":14750,"nodeType":"FunctionDefinition","src":"51063:153:15","nodes":[],"documentation":{"id":14739,"nodeType":"StructuredDocumentation","src":"51034:24:15","text":"See `serializeJson`."},"functionSelector":"f21d52c7","implemented":false,"kind":"function","modifiers":[],"name":"serializeBytes","nameLocation":"51072:14:15","parameters":{"id":14746,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14741,"mutability":"mutable","name":"objectKey","nameLocation":"51103:9:15","nodeType":"VariableDeclaration","scope":14750,"src":"51087:25:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14740,"name":"string","nodeType":"ElementaryTypeName","src":"51087:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14743,"mutability":"mutable","name":"valueKey","nameLocation":"51130:8:15","nodeType":"VariableDeclaration","scope":14750,"src":"51114:24:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14742,"name":"string","nodeType":"ElementaryTypeName","src":"51114:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14745,"mutability":"mutable","name":"value","nameLocation":"51155:5:15","nodeType":"VariableDeclaration","scope":14750,"src":"51140:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":14744,"name":"bytes","nodeType":"ElementaryTypeName","src":"51140:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"51086:75:15"},"returnParameters":{"id":14749,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14748,"mutability":"mutable","name":"json","nameLocation":"51210:4:15","nodeType":"VariableDeclaration","scope":14750,"src":"51196:18:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":14747,"name":"string","nodeType":"ElementaryTypeName","src":"51196:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"51195:20:15"},"scope":16930,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":14763,"nodeType":"FunctionDefinition","src":"51251:156:15","nodes":[],"documentation":{"id":14751,"nodeType":"StructuredDocumentation","src":"51222:24:15","text":"See `serializeJson`."},"functionSelector":"9884b232","implemented":false,"kind":"function","modifiers":[],"name":"serializeBytes","nameLocation":"51260:14:15","parameters":{"id":14759,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14753,"mutability":"mutable","name":"objectKey","nameLocation":"51291:9:15","nodeType":"VariableDeclaration","scope":14763,"src":"51275:25:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14752,"name":"string","nodeType":"ElementaryTypeName","src":"51275:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14755,"mutability":"mutable","name":"valueKey","nameLocation":"51318:8:15","nodeType":"VariableDeclaration","scope":14763,"src":"51302:24:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14754,"name":"string","nodeType":"ElementaryTypeName","src":"51302:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14758,"mutability":"mutable","name":"values","nameLocation":"51345:6:15","nodeType":"VariableDeclaration","scope":14763,"src":"51328:23:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":14756,"name":"bytes","nodeType":"ElementaryTypeName","src":"51328:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":14757,"nodeType":"ArrayTypeName","src":"51328:7:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"51274:78:15"},"returnParameters":{"id":14762,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14761,"mutability":"mutable","name":"json","nameLocation":"51401:4:15","nodeType":"VariableDeclaration","scope":14763,"src":"51387:18:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":14760,"name":"string","nodeType":"ElementaryTypeName","src":"51387:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"51386:20:15"},"scope":16930,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":14775,"nodeType":"FunctionDefinition","src":"51442:143:15","nodes":[],"documentation":{"id":14764,"nodeType":"StructuredDocumentation","src":"51413:24:15","text":"See `serializeJson`."},"functionSelector":"3f33db60","implemented":false,"kind":"function","modifiers":[],"name":"serializeInt","nameLocation":"51451:12:15","parameters":{"id":14771,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14766,"mutability":"mutable","name":"objectKey","nameLocation":"51480:9:15","nodeType":"VariableDeclaration","scope":14775,"src":"51464:25:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14765,"name":"string","nodeType":"ElementaryTypeName","src":"51464:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14768,"mutability":"mutable","name":"valueKey","nameLocation":"51507:8:15","nodeType":"VariableDeclaration","scope":14775,"src":"51491:24:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14767,"name":"string","nodeType":"ElementaryTypeName","src":"51491:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14770,"mutability":"mutable","name":"value","nameLocation":"51524:5:15","nodeType":"VariableDeclaration","scope":14775,"src":"51517:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14769,"name":"int256","nodeType":"ElementaryTypeName","src":"51517:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"51463:67:15"},"returnParameters":{"id":14774,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14773,"mutability":"mutable","name":"json","nameLocation":"51579:4:15","nodeType":"VariableDeclaration","scope":14775,"src":"51565:18:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":14772,"name":"string","nodeType":"ElementaryTypeName","src":"51565:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"51564:20:15"},"scope":16930,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":14788,"nodeType":"FunctionDefinition","src":"51620:155:15","nodes":[],"documentation":{"id":14776,"nodeType":"StructuredDocumentation","src":"51591:24:15","text":"See `serializeJson`."},"functionSelector":"7676e127","implemented":false,"kind":"function","modifiers":[],"name":"serializeInt","nameLocation":"51629:12:15","parameters":{"id":14784,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14778,"mutability":"mutable","name":"objectKey","nameLocation":"51658:9:15","nodeType":"VariableDeclaration","scope":14788,"src":"51642:25:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14777,"name":"string","nodeType":"ElementaryTypeName","src":"51642:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14780,"mutability":"mutable","name":"valueKey","nameLocation":"51685:8:15","nodeType":"VariableDeclaration","scope":14788,"src":"51669:24:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14779,"name":"string","nodeType":"ElementaryTypeName","src":"51669:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14783,"mutability":"mutable","name":"values","nameLocation":"51713:6:15","nodeType":"VariableDeclaration","scope":14788,"src":"51695:24:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_calldata_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":14781,"name":"int256","nodeType":"ElementaryTypeName","src":"51695:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":14782,"nodeType":"ArrayTypeName","src":"51695:8:15","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"}],"src":"51641:79:15"},"returnParameters":{"id":14787,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14786,"mutability":"mutable","name":"json","nameLocation":"51769:4:15","nodeType":"VariableDeclaration","scope":14788,"src":"51755:18:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":14785,"name":"string","nodeType":"ElementaryTypeName","src":"51755:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"51754:20:15"},"scope":16930,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":14798,"nodeType":"FunctionDefinition","src":"51972:111:15","nodes":[],"documentation":{"id":14789,"nodeType":"StructuredDocumentation","src":"51781:186:15","text":"Serializes a key and value to a JSON object stored in-memory that can be later written to a file.\n Returns the stringified version of the specific JSON file up to that moment."},"functionSelector":"9b3358b0","implemented":false,"kind":"function","modifiers":[],"name":"serializeJson","nameLocation":"51981:13:15","parameters":{"id":14794,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14791,"mutability":"mutable","name":"objectKey","nameLocation":"52011:9:15","nodeType":"VariableDeclaration","scope":14798,"src":"51995:25:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14790,"name":"string","nodeType":"ElementaryTypeName","src":"51995:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14793,"mutability":"mutable","name":"value","nameLocation":"52038:5:15","nodeType":"VariableDeclaration","scope":14798,"src":"52022:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14792,"name":"string","nodeType":"ElementaryTypeName","src":"52022:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"51994:50:15"},"returnParameters":{"id":14797,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14796,"mutability":"mutable","name":"json","nameLocation":"52077:4:15","nodeType":"VariableDeclaration","scope":14798,"src":"52063:18:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":14795,"name":"string","nodeType":"ElementaryTypeName","src":"52063:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"52062:20:15"},"scope":16930,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":14808,"nodeType":"FunctionDefinition","src":"52118:149:15","nodes":[],"documentation":{"id":14799,"nodeType":"StructuredDocumentation","src":"52089:24:15","text":"See `serializeJson`."},"functionSelector":"6d4f96a6","implemented":false,"kind":"function","modifiers":[],"name":"serializeJsonType","nameLocation":"52127:17:15","parameters":{"id":14804,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14801,"mutability":"mutable","name":"typeDescription","nameLocation":"52161:15:15","nodeType":"VariableDeclaration","scope":14808,"src":"52145:31:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14800,"name":"string","nodeType":"ElementaryTypeName","src":"52145:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14803,"mutability":"mutable","name":"value","nameLocation":"52193:5:15","nodeType":"VariableDeclaration","scope":14808,"src":"52178:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":14802,"name":"bytes","nodeType":"ElementaryTypeName","src":"52178:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"52144:55:15"},"returnParameters":{"id":14807,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14806,"mutability":"mutable","name":"json","nameLocation":"52261:4:15","nodeType":"VariableDeclaration","scope":14808,"src":"52247:18:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":14805,"name":"string","nodeType":"ElementaryTypeName","src":"52247:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"52246:20:15"},"scope":16930,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14822,"nodeType":"FunctionDefinition","src":"52302:211:15","nodes":[],"documentation":{"id":14809,"nodeType":"StructuredDocumentation","src":"52273:24:15","text":"See `serializeJson`."},"functionSelector":"6f93bccb","implemented":false,"kind":"function","modifiers":[],"name":"serializeJsonType","nameLocation":"52311:17:15","parameters":{"id":14818,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14811,"mutability":"mutable","name":"objectKey","nameLocation":"52354:9:15","nodeType":"VariableDeclaration","scope":14822,"src":"52338:25:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14810,"name":"string","nodeType":"ElementaryTypeName","src":"52338:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14813,"mutability":"mutable","name":"valueKey","nameLocation":"52389:8:15","nodeType":"VariableDeclaration","scope":14822,"src":"52373:24:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14812,"name":"string","nodeType":"ElementaryTypeName","src":"52373:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14815,"mutability":"mutable","name":"typeDescription","nameLocation":"52423:15:15","nodeType":"VariableDeclaration","scope":14822,"src":"52407:31:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14814,"name":"string","nodeType":"ElementaryTypeName","src":"52407:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14817,"mutability":"mutable","name":"value","nameLocation":"52463:5:15","nodeType":"VariableDeclaration","scope":14822,"src":"52448:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":14816,"name":"bytes","nodeType":"ElementaryTypeName","src":"52448:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"52328:146:15"},"returnParameters":{"id":14821,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14820,"mutability":"mutable","name":"json","nameLocation":"52507:4:15","nodeType":"VariableDeclaration","scope":14822,"src":"52493:18:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":14819,"name":"string","nodeType":"ElementaryTypeName","src":"52493:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"52492:20:15"},"scope":16930,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":14834,"nodeType":"FunctionDefinition","src":"52548:155:15","nodes":[],"documentation":{"id":14823,"nodeType":"StructuredDocumentation","src":"52519:24:15","text":"See `serializeJson`."},"functionSelector":"88da6d35","implemented":false,"kind":"function","modifiers":[],"name":"serializeString","nameLocation":"52557:15:15","parameters":{"id":14830,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14825,"mutability":"mutable","name":"objectKey","nameLocation":"52589:9:15","nodeType":"VariableDeclaration","scope":14834,"src":"52573:25:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14824,"name":"string","nodeType":"ElementaryTypeName","src":"52573:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14827,"mutability":"mutable","name":"valueKey","nameLocation":"52616:8:15","nodeType":"VariableDeclaration","scope":14834,"src":"52600:24:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14826,"name":"string","nodeType":"ElementaryTypeName","src":"52600:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14829,"mutability":"mutable","name":"value","nameLocation":"52642:5:15","nodeType":"VariableDeclaration","scope":14834,"src":"52626:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14828,"name":"string","nodeType":"ElementaryTypeName","src":"52626:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"52572:76:15"},"returnParameters":{"id":14833,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14832,"mutability":"mutable","name":"json","nameLocation":"52697:4:15","nodeType":"VariableDeclaration","scope":14834,"src":"52683:18:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":14831,"name":"string","nodeType":"ElementaryTypeName","src":"52683:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"52682:20:15"},"scope":16930,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":14847,"nodeType":"FunctionDefinition","src":"52738:158:15","nodes":[],"documentation":{"id":14835,"nodeType":"StructuredDocumentation","src":"52709:24:15","text":"See `serializeJson`."},"functionSelector":"561cd6f3","implemented":false,"kind":"function","modifiers":[],"name":"serializeString","nameLocation":"52747:15:15","parameters":{"id":14843,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14837,"mutability":"mutable","name":"objectKey","nameLocation":"52779:9:15","nodeType":"VariableDeclaration","scope":14847,"src":"52763:25:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14836,"name":"string","nodeType":"ElementaryTypeName","src":"52763:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14839,"mutability":"mutable","name":"valueKey","nameLocation":"52806:8:15","nodeType":"VariableDeclaration","scope":14847,"src":"52790:24:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14838,"name":"string","nodeType":"ElementaryTypeName","src":"52790:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14842,"mutability":"mutable","name":"values","nameLocation":"52834:6:15","nodeType":"VariableDeclaration","scope":14847,"src":"52816:24:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":14840,"name":"string","nodeType":"ElementaryTypeName","src":"52816:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":14841,"nodeType":"ArrayTypeName","src":"52816:8:15","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"52762:79:15"},"returnParameters":{"id":14846,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14845,"mutability":"mutable","name":"json","nameLocation":"52890:4:15","nodeType":"VariableDeclaration","scope":14847,"src":"52876:18:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":14844,"name":"string","nodeType":"ElementaryTypeName","src":"52876:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"52875:20:15"},"scope":16930,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":14859,"nodeType":"FunctionDefinition","src":"52931:150:15","nodes":[],"documentation":{"id":14848,"nodeType":"StructuredDocumentation","src":"52902:24:15","text":"See `serializeJson`."},"functionSelector":"ae5a2ae8","implemented":false,"kind":"function","modifiers":[],"name":"serializeUintToHex","nameLocation":"52940:18:15","parameters":{"id":14855,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14850,"mutability":"mutable","name":"objectKey","nameLocation":"52975:9:15","nodeType":"VariableDeclaration","scope":14859,"src":"52959:25:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14849,"name":"string","nodeType":"ElementaryTypeName","src":"52959:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14852,"mutability":"mutable","name":"valueKey","nameLocation":"53002:8:15","nodeType":"VariableDeclaration","scope":14859,"src":"52986:24:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14851,"name":"string","nodeType":"ElementaryTypeName","src":"52986:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14854,"mutability":"mutable","name":"value","nameLocation":"53020:5:15","nodeType":"VariableDeclaration","scope":14859,"src":"53012:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14853,"name":"uint256","nodeType":"ElementaryTypeName","src":"53012:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"52958:68:15"},"returnParameters":{"id":14858,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14857,"mutability":"mutable","name":"json","nameLocation":"53075:4:15","nodeType":"VariableDeclaration","scope":14859,"src":"53061:18:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":14856,"name":"string","nodeType":"ElementaryTypeName","src":"53061:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"53060:20:15"},"scope":16930,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":14871,"nodeType":"FunctionDefinition","src":"53116:145:15","nodes":[],"documentation":{"id":14860,"nodeType":"StructuredDocumentation","src":"53087:24:15","text":"See `serializeJson`."},"functionSelector":"129e9002","implemented":false,"kind":"function","modifiers":[],"name":"serializeUint","nameLocation":"53125:13:15","parameters":{"id":14867,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14862,"mutability":"mutable","name":"objectKey","nameLocation":"53155:9:15","nodeType":"VariableDeclaration","scope":14871,"src":"53139:25:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14861,"name":"string","nodeType":"ElementaryTypeName","src":"53139:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14864,"mutability":"mutable","name":"valueKey","nameLocation":"53182:8:15","nodeType":"VariableDeclaration","scope":14871,"src":"53166:24:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14863,"name":"string","nodeType":"ElementaryTypeName","src":"53166:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14866,"mutability":"mutable","name":"value","nameLocation":"53200:5:15","nodeType":"VariableDeclaration","scope":14871,"src":"53192:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14865,"name":"uint256","nodeType":"ElementaryTypeName","src":"53192:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"53138:68:15"},"returnParameters":{"id":14870,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14869,"mutability":"mutable","name":"json","nameLocation":"53255:4:15","nodeType":"VariableDeclaration","scope":14871,"src":"53241:18:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":14868,"name":"string","nodeType":"ElementaryTypeName","src":"53241:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"53240:20:15"},"scope":16930,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":14884,"nodeType":"FunctionDefinition","src":"53296:157:15","nodes":[],"documentation":{"id":14872,"nodeType":"StructuredDocumentation","src":"53267:24:15","text":"See `serializeJson`."},"functionSelector":"fee9a469","implemented":false,"kind":"function","modifiers":[],"name":"serializeUint","nameLocation":"53305:13:15","parameters":{"id":14880,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14874,"mutability":"mutable","name":"objectKey","nameLocation":"53335:9:15","nodeType":"VariableDeclaration","scope":14884,"src":"53319:25:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14873,"name":"string","nodeType":"ElementaryTypeName","src":"53319:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14876,"mutability":"mutable","name":"valueKey","nameLocation":"53362:8:15","nodeType":"VariableDeclaration","scope":14884,"src":"53346:24:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14875,"name":"string","nodeType":"ElementaryTypeName","src":"53346:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14879,"mutability":"mutable","name":"values","nameLocation":"53391:6:15","nodeType":"VariableDeclaration","scope":14884,"src":"53372:25:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":14877,"name":"uint256","nodeType":"ElementaryTypeName","src":"53372:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":14878,"nodeType":"ArrayTypeName","src":"53372:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"53318:80:15"},"returnParameters":{"id":14883,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14882,"mutability":"mutable","name":"json","nameLocation":"53447:4:15","nodeType":"VariableDeclaration","scope":14884,"src":"53433:18:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":14881,"name":"string","nodeType":"ElementaryTypeName","src":"53433:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"53432:20:15"},"scope":16930,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":14892,"nodeType":"FunctionDefinition","src":"53553:72:15","nodes":[],"documentation":{"id":14885,"nodeType":"StructuredDocumentation","src":"53459:89:15","text":"Write a serialized JSON object to a file. If the file exists, it will be overwritten."},"functionSelector":"e23cd19f","implemented":false,"kind":"function","modifiers":[],"name":"writeJson","nameLocation":"53562:9:15","parameters":{"id":14890,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14887,"mutability":"mutable","name":"json","nameLocation":"53588:4:15","nodeType":"VariableDeclaration","scope":14892,"src":"53572:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14886,"name":"string","nodeType":"ElementaryTypeName","src":"53572:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14889,"mutability":"mutable","name":"path","nameLocation":"53610:4:15","nodeType":"VariableDeclaration","scope":14892,"src":"53594:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14888,"name":"string","nodeType":"ElementaryTypeName","src":"53594:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"53571:44:15"},"returnParameters":{"id":14891,"nodeType":"ParameterList","parameters":[],"src":"53624:0:15"},"scope":16930,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":14902,"nodeType":"FunctionDefinition","src":"53851:98:15","nodes":[],"documentation":{"id":14893,"nodeType":"StructuredDocumentation","src":"53631:215:15","text":"Write a serialized JSON object to an **existing** JSON file, replacing a value with key = <value_key.>\n This is useful to replace a specific value of a JSON file, without having to parse the entire thing."},"functionSelector":"35d6ad46","implemented":false,"kind":"function","modifiers":[],"name":"writeJson","nameLocation":"53860:9:15","parameters":{"id":14900,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14895,"mutability":"mutable","name":"json","nameLocation":"53886:4:15","nodeType":"VariableDeclaration","scope":14902,"src":"53870:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14894,"name":"string","nodeType":"ElementaryTypeName","src":"53870:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14897,"mutability":"mutable","name":"path","nameLocation":"53908:4:15","nodeType":"VariableDeclaration","scope":14902,"src":"53892:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14896,"name":"string","nodeType":"ElementaryTypeName","src":"53892:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14899,"mutability":"mutable","name":"valueKey","nameLocation":"53930:8:15","nodeType":"VariableDeclaration","scope":14902,"src":"53914:24:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14898,"name":"string","nodeType":"ElementaryTypeName","src":"53914:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"53869:70:15"},"returnParameters":{"id":14901,"nodeType":"ParameterList","parameters":[],"src":"53948:0:15"},"scope":16930,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":14912,"nodeType":"FunctionDefinition","src":"54111:91:15","nodes":[],"documentation":{"id":14903,"nodeType":"StructuredDocumentation","src":"53955:151:15","text":"Checks if `key` exists in a JSON object\n `keyExists` is being deprecated in favor of `keyExistsJson`. It will be removed in future versions."},"functionSelector":"528a683c","implemented":false,"kind":"function","modifiers":[],"name":"keyExists","nameLocation":"54120:9:15","parameters":{"id":14908,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14905,"mutability":"mutable","name":"json","nameLocation":"54146:4:15","nodeType":"VariableDeclaration","scope":14912,"src":"54130:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14904,"name":"string","nodeType":"ElementaryTypeName","src":"54130:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14907,"mutability":"mutable","name":"key","nameLocation":"54168:3:15","nodeType":"VariableDeclaration","scope":14912,"src":"54152:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14906,"name":"string","nodeType":"ElementaryTypeName","src":"54152:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"54129:43:15"},"returnParameters":{"id":14911,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14910,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":14912,"src":"54196:4:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":14909,"name":"bool","nodeType":"ElementaryTypeName","src":"54196:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"54195:6:15"},"scope":16930,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":14918,"nodeType":"FunctionDefinition","src":"54293:50:15","nodes":[],"documentation":{"id":14913,"nodeType":"StructuredDocumentation","src":"54244:44:15","text":"Attach an EIP-4844 blob to the next call"},"functionSelector":"10cb385c","implemented":false,"kind":"function","modifiers":[],"name":"attachBlob","nameLocation":"54302:10:15","parameters":{"id":14916,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14915,"mutability":"mutable","name":"blob","nameLocation":"54328:4:15","nodeType":"VariableDeclaration","scope":14918,"src":"54313:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":14914,"name":"bytes","nodeType":"ElementaryTypeName","src":"54313:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"54312:21:15"},"returnParameters":{"id":14917,"nodeType":"ParameterList","parameters":[],"src":"54342:0:15"},"scope":16930,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":14925,"nodeType":"FunctionDefinition","src":"54408:79:15","nodes":[],"documentation":{"id":14919,"nodeType":"StructuredDocumentation","src":"54349:54:15","text":"Designate the next call as an EIP-7702 transaction"},"functionSelector":"14ae3519","implemented":false,"kind":"function","modifiers":[],"name":"attachDelegation","nameLocation":"54417:16:15","parameters":{"id":14923,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14922,"mutability":"mutable","name":"signedDelegation","nameLocation":"54460:16:15","nodeType":"VariableDeclaration","scope":14925,"src":"54434:42:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_SignedDelegation_$13222_calldata_ptr","typeString":"struct VmSafe.SignedDelegation"},"typeName":{"id":14921,"nodeType":"UserDefinedTypeName","pathNode":{"id":14920,"name":"SignedDelegation","nameLocations":["54434:16:15"],"nodeType":"IdentifierPath","referencedDeclaration":13222,"src":"54434:16:15"},"referencedDeclaration":13222,"src":"54434:16:15","typeDescriptions":{"typeIdentifier":"t_struct$_SignedDelegation_$13222_storage_ptr","typeString":"struct VmSafe.SignedDelegation"}},"visibility":"internal"}],"src":"54433:44:15"},"returnParameters":{"id":14924,"nodeType":"ParameterList","parameters":[],"src":"54486:0:15"},"scope":16930,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":14931,"nodeType":"FunctionDefinition","src":"54562:63:15","nodes":[],"documentation":{"id":14926,"nodeType":"StructuredDocumentation","src":"54493:64:15","text":"Takes a signed transaction and broadcasts it to the network."},"functionSelector":"8c0c72e0","implemented":false,"kind":"function","modifiers":[],"name":"broadcastRawTransaction","nameLocation":"54571:23:15","parameters":{"id":14929,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14928,"mutability":"mutable","name":"data","nameLocation":"54610:4:15","nodeType":"VariableDeclaration","scope":14931,"src":"54595:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":14927,"name":"bytes","nodeType":"ElementaryTypeName","src":"54595:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"54594:21:15"},"returnParameters":{"id":14930,"nodeType":"ParameterList","parameters":[],"src":"54624:0:15"},"scope":16930,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":14935,"nodeType":"FunctionDefinition","src":"55128:30:15","nodes":[],"documentation":{"id":14932,"nodeType":"StructuredDocumentation","src":"54631:492:15","text":"Has the next call (at this call depth only) create transactions that can later be signed and sent onchain.\n Broadcasting address is determined by checking the following in order:\n 1. If `--sender` argument was provided, that address is used.\n 2. If exactly one signer (e.g. private key, hw wallet, keystore) is set when `forge broadcast` is invoked, that signer is used.\n 3. Otherwise, default foundry sender (1804c8AB1F12E6bbf3894d4083f33e07309d1f38) is used."},"functionSelector":"afc98040","implemented":false,"kind":"function","modifiers":[],"name":"broadcast","nameLocation":"55137:9:15","parameters":{"id":14933,"nodeType":"ParameterList","parameters":[],"src":"55146:2:15"},"returnParameters":{"id":14934,"nodeType":"ParameterList","parameters":[],"src":"55157:0:15"},"scope":16930,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":14941,"nodeType":"FunctionDefinition","src":"55328:44:15","nodes":[],"documentation":{"id":14936,"nodeType":"StructuredDocumentation","src":"55164:159:15","text":"Has the next call (at this call depth only) create a transaction with the address provided\n as the sender that can later be signed and sent onchain."},"functionSelector":"e6962cdb","implemented":false,"kind":"function","modifiers":[],"name":"broadcast","nameLocation":"55337:9:15","parameters":{"id":14939,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14938,"mutability":"mutable","name":"signer","nameLocation":"55355:6:15","nodeType":"VariableDeclaration","scope":14941,"src":"55347:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":14937,"name":"address","nodeType":"ElementaryTypeName","src":"55347:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"55346:16:15"},"returnParameters":{"id":14940,"nodeType":"ParameterList","parameters":[],"src":"55371:0:15"},"scope":16930,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":14947,"nodeType":"FunctionDefinition","src":"55546:48:15","nodes":[],"documentation":{"id":14942,"nodeType":"StructuredDocumentation","src":"55378:163:15","text":"Has the next call (at this call depth only) create a transaction with the private key\n provided as the sender that can later be signed and sent onchain."},"functionSelector":"f67a965b","implemented":false,"kind":"function","modifiers":[],"name":"broadcast","nameLocation":"55555:9:15","parameters":{"id":14945,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14944,"mutability":"mutable","name":"privateKey","nameLocation":"55573:10:15","nodeType":"VariableDeclaration","scope":14947,"src":"55565:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14943,"name":"uint256","nodeType":"ElementaryTypeName","src":"55565:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"55564:20:15"},"returnParameters":{"id":14946,"nodeType":"ParameterList","parameters":[],"src":"55593:0:15"},"scope":16930,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":14954,"nodeType":"FunctionDefinition","src":"55683:66:15","nodes":[],"documentation":{"id":14948,"nodeType":"StructuredDocumentation","src":"55600:78:15","text":"Returns addresses of available unlocked wallets in the script environment."},"functionSelector":"db7a4605","implemented":false,"kind":"function","modifiers":[],"name":"getWallets","nameLocation":"55692:10:15","parameters":{"id":14949,"nodeType":"ParameterList","parameters":[],"src":"55702:2:15"},"returnParameters":{"id":14953,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14952,"mutability":"mutable","name":"wallets","nameLocation":"55740:7:15","nodeType":"VariableDeclaration","scope":14954,"src":"55723:24:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":14950,"name":"address","nodeType":"ElementaryTypeName","src":"55723:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":14951,"nodeType":"ArrayTypeName","src":"55723:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"55722:26:15"},"scope":16930,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":14965,"nodeType":"FunctionDefinition","src":"55849:153:15","nodes":[],"documentation":{"id":14955,"nodeType":"StructuredDocumentation","src":"55755:89:15","text":"Sign an EIP-7702 authorization and designate the next call as an EIP-7702 transaction"},"functionSelector":"c7fa7288","implemented":false,"kind":"function","modifiers":[],"name":"signAndAttachDelegation","nameLocation":"55858:23:15","parameters":{"id":14960,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14957,"mutability":"mutable","name":"implementation","nameLocation":"55890:14:15","nodeType":"VariableDeclaration","scope":14965,"src":"55882:22:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":14956,"name":"address","nodeType":"ElementaryTypeName","src":"55882:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":14959,"mutability":"mutable","name":"privateKey","nameLocation":"55914:10:15","nodeType":"VariableDeclaration","scope":14965,"src":"55906:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14958,"name":"uint256","nodeType":"ElementaryTypeName","src":"55906:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"55881:44:15"},"returnParameters":{"id":14964,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14963,"mutability":"mutable","name":"signedDelegation","nameLocation":"55984:16:15","nodeType":"VariableDeclaration","scope":14965,"src":"55960:40:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_SignedDelegation_$13222_memory_ptr","typeString":"struct VmSafe.SignedDelegation"},"typeName":{"id":14962,"nodeType":"UserDefinedTypeName","pathNode":{"id":14961,"name":"SignedDelegation","nameLocations":["55960:16:15"],"nodeType":"IdentifierPath","referencedDeclaration":13222,"src":"55960:16:15"},"referencedDeclaration":13222,"src":"55960:16:15","typeDescriptions":{"typeIdentifier":"t_struct$_SignedDelegation_$13222_storage_ptr","typeString":"struct VmSafe.SignedDelegation"}},"visibility":"internal"}],"src":"55959:42:15"},"scope":16930,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":14978,"nodeType":"FunctionDefinition","src":"56121:167:15","nodes":[],"documentation":{"id":14966,"nodeType":"StructuredDocumentation","src":"56008:108:15","text":"Sign an EIP-7702 authorization and designate the next call as an EIP-7702 transaction for specific nonce"},"functionSelector":"cde3e5be","implemented":false,"kind":"function","modifiers":[],"name":"signAndAttachDelegation","nameLocation":"56130:23:15","parameters":{"id":14973,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14968,"mutability":"mutable","name":"implementation","nameLocation":"56162:14:15","nodeType":"VariableDeclaration","scope":14978,"src":"56154:22:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":14967,"name":"address","nodeType":"ElementaryTypeName","src":"56154:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":14970,"mutability":"mutable","name":"privateKey","nameLocation":"56186:10:15","nodeType":"VariableDeclaration","scope":14978,"src":"56178:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14969,"name":"uint256","nodeType":"ElementaryTypeName","src":"56178:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14972,"mutability":"mutable","name":"nonce","nameLocation":"56205:5:15","nodeType":"VariableDeclaration","scope":14978,"src":"56198:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":14971,"name":"uint64","nodeType":"ElementaryTypeName","src":"56198:6:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"56153:58:15"},"returnParameters":{"id":14977,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14976,"mutability":"mutable","name":"signedDelegation","nameLocation":"56270:16:15","nodeType":"VariableDeclaration","scope":14978,"src":"56246:40:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_SignedDelegation_$13222_memory_ptr","typeString":"struct VmSafe.SignedDelegation"},"typeName":{"id":14975,"nodeType":"UserDefinedTypeName","pathNode":{"id":14974,"name":"SignedDelegation","nameLocations":["56246:16:15"],"nodeType":"IdentifierPath","referencedDeclaration":13222,"src":"56246:16:15"},"referencedDeclaration":13222,"src":"56246:16:15","typeDescriptions":{"typeIdentifier":"t_struct$_SignedDelegation_$13222_storage_ptr","typeString":"struct VmSafe.SignedDelegation"}},"visibility":"internal"}],"src":"56245:42:15"},"scope":16930,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":14989,"nodeType":"FunctionDefinition","src":"56348:144:15","nodes":[],"documentation":{"id":14979,"nodeType":"StructuredDocumentation","src":"56294:49:15","text":"Sign an EIP-7702 authorization for delegation"},"functionSelector":"5b593c7b","implemented":false,"kind":"function","modifiers":[],"name":"signDelegation","nameLocation":"56357:14:15","parameters":{"id":14984,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14981,"mutability":"mutable","name":"implementation","nameLocation":"56380:14:15","nodeType":"VariableDeclaration","scope":14989,"src":"56372:22:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":14980,"name":"address","nodeType":"ElementaryTypeName","src":"56372:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":14983,"mutability":"mutable","name":"privateKey","nameLocation":"56404:10:15","nodeType":"VariableDeclaration","scope":14989,"src":"56396:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14982,"name":"uint256","nodeType":"ElementaryTypeName","src":"56396:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"56371:44:15"},"returnParameters":{"id":14988,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14987,"mutability":"mutable","name":"signedDelegation","nameLocation":"56474:16:15","nodeType":"VariableDeclaration","scope":14989,"src":"56450:40:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_SignedDelegation_$13222_memory_ptr","typeString":"struct VmSafe.SignedDelegation"},"typeName":{"id":14986,"nodeType":"UserDefinedTypeName","pathNode":{"id":14985,"name":"SignedDelegation","nameLocations":["56450:16:15"],"nodeType":"IdentifierPath","referencedDeclaration":13222,"src":"56450:16:15"},"referencedDeclaration":13222,"src":"56450:16:15","typeDescriptions":{"typeIdentifier":"t_struct$_SignedDelegation_$13222_storage_ptr","typeString":"struct VmSafe.SignedDelegation"}},"visibility":"internal"}],"src":"56449:42:15"},"scope":16930,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15002,"nodeType":"FunctionDefinition","src":"56571:158:15","nodes":[],"documentation":{"id":14990,"nodeType":"StructuredDocumentation","src":"56498:68:15","text":"Sign an EIP-7702 authorization for delegation for specific nonce"},"functionSelector":"ceba2ec3","implemented":false,"kind":"function","modifiers":[],"name":"signDelegation","nameLocation":"56580:14:15","parameters":{"id":14997,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14992,"mutability":"mutable","name":"implementation","nameLocation":"56603:14:15","nodeType":"VariableDeclaration","scope":15002,"src":"56595:22:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":14991,"name":"address","nodeType":"ElementaryTypeName","src":"56595:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":14994,"mutability":"mutable","name":"privateKey","nameLocation":"56627:10:15","nodeType":"VariableDeclaration","scope":15002,"src":"56619:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14993,"name":"uint256","nodeType":"ElementaryTypeName","src":"56619:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14996,"mutability":"mutable","name":"nonce","nameLocation":"56646:5:15","nodeType":"VariableDeclaration","scope":15002,"src":"56639:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":14995,"name":"uint64","nodeType":"ElementaryTypeName","src":"56639:6:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"56594:58:15"},"returnParameters":{"id":15001,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15000,"mutability":"mutable","name":"signedDelegation","nameLocation":"56711:16:15","nodeType":"VariableDeclaration","scope":15002,"src":"56687:40:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_SignedDelegation_$13222_memory_ptr","typeString":"struct VmSafe.SignedDelegation"},"typeName":{"id":14999,"nodeType":"UserDefinedTypeName","pathNode":{"id":14998,"name":"SignedDelegation","nameLocations":["56687:16:15"],"nodeType":"IdentifierPath","referencedDeclaration":13222,"src":"56687:16:15"},"referencedDeclaration":13222,"src":"56687:16:15","typeDescriptions":{"typeIdentifier":"t_struct$_SignedDelegation_$13222_storage_ptr","typeString":"struct VmSafe.SignedDelegation"}},"visibility":"internal"}],"src":"56686:42:15"},"scope":16930,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15006,"nodeType":"FunctionDefinition","src":"57239:35:15","nodes":[],"documentation":{"id":15003,"nodeType":"StructuredDocumentation","src":"56735:499:15","text":"Has all subsequent calls (at this call depth only) create transactions that can later be signed and sent onchain.\n Broadcasting address is determined by checking the following in order:\n 1. If `--sender` argument was provided, that address is used.\n 2. If exactly one signer (e.g. private key, hw wallet, keystore) is set when `forge broadcast` is invoked, that signer is used.\n 3. Otherwise, default foundry sender (1804c8AB1F12E6bbf3894d4083f33e07309d1f38) is used."},"functionSelector":"7fb5297f","implemented":false,"kind":"function","modifiers":[],"name":"startBroadcast","nameLocation":"57248:14:15","parameters":{"id":15004,"nodeType":"ParameterList","parameters":[],"src":"57262:2:15"},"returnParameters":{"id":15005,"nodeType":"ParameterList","parameters":[],"src":"57273:0:15"},"scope":16930,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15012,"nodeType":"FunctionDefinition","src":"57436:49:15","nodes":[],"documentation":{"id":15007,"nodeType":"StructuredDocumentation","src":"57280:151:15","text":"Has all subsequent calls (at this call depth only) create transactions with the address\n provided that can later be signed and sent onchain."},"functionSelector":"7fec2a8d","implemented":false,"kind":"function","modifiers":[],"name":"startBroadcast","nameLocation":"57445:14:15","parameters":{"id":15010,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15009,"mutability":"mutable","name":"signer","nameLocation":"57468:6:15","nodeType":"VariableDeclaration","scope":15012,"src":"57460:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15008,"name":"address","nodeType":"ElementaryTypeName","src":"57460:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"57459:16:15"},"returnParameters":{"id":15011,"nodeType":"ParameterList","parameters":[],"src":"57484:0:15"},"scope":16930,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15018,"nodeType":"FunctionDefinition","src":"57651:53:15","nodes":[],"documentation":{"id":15013,"nodeType":"StructuredDocumentation","src":"57491:155:15","text":"Has all subsequent calls (at this call depth only) create transactions with the private key\n provided that can later be signed and sent onchain."},"functionSelector":"ce817d47","implemented":false,"kind":"function","modifiers":[],"name":"startBroadcast","nameLocation":"57660:14:15","parameters":{"id":15016,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15015,"mutability":"mutable","name":"privateKey","nameLocation":"57683:10:15","nodeType":"VariableDeclaration","scope":15018,"src":"57675:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15014,"name":"uint256","nodeType":"ElementaryTypeName","src":"57675:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"57674:20:15"},"returnParameters":{"id":15017,"nodeType":"ParameterList","parameters":[],"src":"57703:0:15"},"scope":16930,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15022,"nodeType":"FunctionDefinition","src":"57757:34:15","nodes":[],"documentation":{"id":15019,"nodeType":"StructuredDocumentation","src":"57710:42:15","text":"Stops collecting onchain transactions."},"functionSelector":"76eadd36","implemented":false,"kind":"function","modifiers":[],"name":"stopBroadcast","nameLocation":"57766:13:15","parameters":{"id":15020,"nodeType":"ParameterList","parameters":[],"src":"57779:2:15"},"returnParameters":{"id":15021,"nodeType":"ParameterList","parameters":[],"src":"57790:0:15"},"scope":16930,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15032,"nodeType":"FunctionDefinition","src":"57903:98:15","nodes":[],"documentation":{"id":15023,"nodeType":"StructuredDocumentation","src":"57830:68:15","text":"Returns true if `search` is found in `subject`, false otherwise."},"functionSelector":"3fb18aec","implemented":false,"kind":"function","modifiers":[],"name":"contains","nameLocation":"57912:8:15","parameters":{"id":15028,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15025,"mutability":"mutable","name":"subject","nameLocation":"57937:7:15","nodeType":"VariableDeclaration","scope":15032,"src":"57921:23:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15024,"name":"string","nodeType":"ElementaryTypeName","src":"57921:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":15027,"mutability":"mutable","name":"search","nameLocation":"57962:6:15","nodeType":"VariableDeclaration","scope":15032,"src":"57946:22:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15026,"name":"string","nodeType":"ElementaryTypeName","src":"57946:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"57920:49:15"},"returnParameters":{"id":15031,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15030,"mutability":"mutable","name":"result","nameLocation":"57993:6:15","nodeType":"VariableDeclaration","scope":15032,"src":"57988:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":15029,"name":"bool","nodeType":"ElementaryTypeName","src":"57988:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"57987:13:15"},"scope":16930,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15042,"nodeType":"FunctionDefinition","src":"58217:93:15","nodes":[],"documentation":{"id":15033,"nodeType":"StructuredDocumentation","src":"58007:205:15","text":"Returns the index of the first occurrence of a `key` in an `input` string.\n Returns `NOT_FOUND` (i.e. `type(uint256).max`) if the `key` is not found.\n Returns 0 in case of an empty `key`."},"functionSelector":"8a0807b7","implemented":false,"kind":"function","modifiers":[],"name":"indexOf","nameLocation":"58226:7:15","parameters":{"id":15038,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15035,"mutability":"mutable","name":"input","nameLocation":"58250:5:15","nodeType":"VariableDeclaration","scope":15042,"src":"58234:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15034,"name":"string","nodeType":"ElementaryTypeName","src":"58234:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":15037,"mutability":"mutable","name":"key","nameLocation":"58273:3:15","nodeType":"VariableDeclaration","scope":15042,"src":"58257:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15036,"name":"string","nodeType":"ElementaryTypeName","src":"58257:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"58233:44:15"},"returnParameters":{"id":15041,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15040,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":15042,"src":"58301:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15039,"name":"uint256","nodeType":"ElementaryTypeName","src":"58301:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"58300:9:15"},"scope":16930,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15050,"nodeType":"FunctionDefinition","src":"58369:100:15","nodes":[],"documentation":{"id":15043,"nodeType":"StructuredDocumentation","src":"58316:48:15","text":"Parses the given `string` into an `address`."},"functionSelector":"c6ce059d","implemented":false,"kind":"function","modifiers":[],"name":"parseAddress","nameLocation":"58378:12:15","parameters":{"id":15046,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15045,"mutability":"mutable","name":"stringifiedValue","nameLocation":"58407:16:15","nodeType":"VariableDeclaration","scope":15050,"src":"58391:32:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15044,"name":"string","nodeType":"ElementaryTypeName","src":"58391:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"58390:34:15"},"returnParameters":{"id":15049,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15048,"mutability":"mutable","name":"parsedValue","nameLocation":"58456:11:15","nodeType":"VariableDeclaration","scope":15050,"src":"58448:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15047,"name":"address","nodeType":"ElementaryTypeName","src":"58448:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"58447:21:15"},"scope":16930,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15058,"nodeType":"FunctionDefinition","src":"58524:94:15","nodes":[],"documentation":{"id":15051,"nodeType":"StructuredDocumentation","src":"58475:44:15","text":"Parses the given `string` into a `bool`."},"functionSelector":"974ef924","implemented":false,"kind":"function","modifiers":[],"name":"parseBool","nameLocation":"58533:9:15","parameters":{"id":15054,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15053,"mutability":"mutable","name":"stringifiedValue","nameLocation":"58559:16:15","nodeType":"VariableDeclaration","scope":15058,"src":"58543:32:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15052,"name":"string","nodeType":"ElementaryTypeName","src":"58543:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"58542:34:15"},"returnParameters":{"id":15057,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15056,"mutability":"mutable","name":"parsedValue","nameLocation":"58605:11:15","nodeType":"VariableDeclaration","scope":15058,"src":"58600:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":15055,"name":"bool","nodeType":"ElementaryTypeName","src":"58600:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"58599:18:15"},"scope":16930,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15066,"nodeType":"FunctionDefinition","src":"58672:103:15","nodes":[],"documentation":{"id":15059,"nodeType":"StructuredDocumentation","src":"58624:43:15","text":"Parses the given `string` into `bytes`."},"functionSelector":"8f5d232d","implemented":false,"kind":"function","modifiers":[],"name":"parseBytes","nameLocation":"58681:10:15","parameters":{"id":15062,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15061,"mutability":"mutable","name":"stringifiedValue","nameLocation":"58708:16:15","nodeType":"VariableDeclaration","scope":15066,"src":"58692:32:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15060,"name":"string","nodeType":"ElementaryTypeName","src":"58692:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"58691:34:15"},"returnParameters":{"id":15065,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15064,"mutability":"mutable","name":"parsedValue","nameLocation":"58762:11:15","nodeType":"VariableDeclaration","scope":15066,"src":"58749:24:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":15063,"name":"bytes","nodeType":"ElementaryTypeName","src":"58749:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"58748:26:15"},"scope":16930,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15074,"nodeType":"FunctionDefinition","src":"58833:100:15","nodes":[],"documentation":{"id":15067,"nodeType":"StructuredDocumentation","src":"58781:47:15","text":"Parses the given `string` into a `bytes32`."},"functionSelector":"087e6e81","implemented":false,"kind":"function","modifiers":[],"name":"parseBytes32","nameLocation":"58842:12:15","parameters":{"id":15070,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15069,"mutability":"mutable","name":"stringifiedValue","nameLocation":"58871:16:15","nodeType":"VariableDeclaration","scope":15074,"src":"58855:32:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15068,"name":"string","nodeType":"ElementaryTypeName","src":"58855:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"58854:34:15"},"returnParameters":{"id":15073,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15072,"mutability":"mutable","name":"parsedValue","nameLocation":"58920:11:15","nodeType":"VariableDeclaration","scope":15074,"src":"58912:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":15071,"name":"bytes32","nodeType":"ElementaryTypeName","src":"58912:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"58911:21:15"},"scope":16930,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15082,"nodeType":"FunctionDefinition","src":"58990:95:15","nodes":[],"documentation":{"id":15075,"nodeType":"StructuredDocumentation","src":"58939:46:15","text":"Parses the given `string` into a `int256`."},"functionSelector":"42346c5e","implemented":false,"kind":"function","modifiers":[],"name":"parseInt","nameLocation":"58999:8:15","parameters":{"id":15078,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15077,"mutability":"mutable","name":"stringifiedValue","nameLocation":"59024:16:15","nodeType":"VariableDeclaration","scope":15082,"src":"59008:32:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15076,"name":"string","nodeType":"ElementaryTypeName","src":"59008:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"59007:34:15"},"returnParameters":{"id":15081,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15080,"mutability":"mutable","name":"parsedValue","nameLocation":"59072:11:15","nodeType":"VariableDeclaration","scope":15082,"src":"59065:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":15079,"name":"int256","nodeType":"ElementaryTypeName","src":"59065:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"59064:20:15"},"scope":16930,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15090,"nodeType":"FunctionDefinition","src":"59143:97:15","nodes":[],"documentation":{"id":15083,"nodeType":"StructuredDocumentation","src":"59091:47:15","text":"Parses the given `string` into a `uint256`."},"functionSelector":"fa91454d","implemented":false,"kind":"function","modifiers":[],"name":"parseUint","nameLocation":"59152:9:15","parameters":{"id":15086,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15085,"mutability":"mutable","name":"stringifiedValue","nameLocation":"59178:16:15","nodeType":"VariableDeclaration","scope":15090,"src":"59162:32:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15084,"name":"string","nodeType":"ElementaryTypeName","src":"59162:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"59161:34:15"},"returnParameters":{"id":15089,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15088,"mutability":"mutable","name":"parsedValue","nameLocation":"59227:11:15","nodeType":"VariableDeclaration","scope":15090,"src":"59219:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15087,"name":"uint256","nodeType":"ElementaryTypeName","src":"59219:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"59218:21:15"},"scope":16930,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15102,"nodeType":"FunctionDefinition","src":"59318:151:15","nodes":[],"documentation":{"id":15091,"nodeType":"StructuredDocumentation","src":"59246:67:15","text":"Replaces occurrences of `from` in the given `string` with `to`."},"functionSelector":"e00ad03e","implemented":false,"kind":"function","modifiers":[],"name":"replace","nameLocation":"59327:7:15","parameters":{"id":15098,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15093,"mutability":"mutable","name":"input","nameLocation":"59351:5:15","nodeType":"VariableDeclaration","scope":15102,"src":"59335:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15092,"name":"string","nodeType":"ElementaryTypeName","src":"59335:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":15095,"mutability":"mutable","name":"from","nameLocation":"59374:4:15","nodeType":"VariableDeclaration","scope":15102,"src":"59358:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15094,"name":"string","nodeType":"ElementaryTypeName","src":"59358:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":15097,"mutability":"mutable","name":"to","nameLocation":"59396:2:15","nodeType":"VariableDeclaration","scope":15102,"src":"59380:18:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15096,"name":"string","nodeType":"ElementaryTypeName","src":"59380:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"59334:65:15"},"returnParameters":{"id":15101,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15100,"mutability":"mutable","name":"output","nameLocation":"59461:6:15","nodeType":"VariableDeclaration","scope":15102,"src":"59447:20:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":15099,"name":"string","nodeType":"ElementaryTypeName","src":"59447:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"59446:22:15"},"scope":16930,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15113,"nodeType":"FunctionDefinition","src":"59562:113:15","nodes":[],"documentation":{"id":15103,"nodeType":"StructuredDocumentation","src":"59475:82:15","text":"Splits the given `string` into an array of strings divided by the `delimiter`."},"functionSelector":"8bb75533","implemented":false,"kind":"function","modifiers":[],"name":"split","nameLocation":"59571:5:15","parameters":{"id":15108,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15105,"mutability":"mutable","name":"input","nameLocation":"59593:5:15","nodeType":"VariableDeclaration","scope":15113,"src":"59577:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15104,"name":"string","nodeType":"ElementaryTypeName","src":"59577:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":15107,"mutability":"mutable","name":"delimiter","nameLocation":"59616:9:15","nodeType":"VariableDeclaration","scope":15113,"src":"59600:25:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15106,"name":"string","nodeType":"ElementaryTypeName","src":"59600:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"59576:50:15"},"returnParameters":{"id":15112,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15111,"mutability":"mutable","name":"outputs","nameLocation":"59666:7:15","nodeType":"VariableDeclaration","scope":15113,"src":"59650:23:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":15109,"name":"string","nodeType":"ElementaryTypeName","src":"59650:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":15110,"nodeType":"ArrayTypeName","src":"59650:8:15","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"59649:25:15"},"scope":16930,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15121,"nodeType":"FunctionDefinition","src":"59737:89:15","nodes":[],"documentation":{"id":15114,"nodeType":"StructuredDocumentation","src":"59681:51:15","text":"Converts the given `string` value to Lowercase."},"functionSelector":"50bb0884","implemented":false,"kind":"function","modifiers":[],"name":"toLowercase","nameLocation":"59746:11:15","parameters":{"id":15117,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15116,"mutability":"mutable","name":"input","nameLocation":"59774:5:15","nodeType":"VariableDeclaration","scope":15121,"src":"59758:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15115,"name":"string","nodeType":"ElementaryTypeName","src":"59758:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"59757:23:15"},"returnParameters":{"id":15120,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15119,"mutability":"mutable","name":"output","nameLocation":"59818:6:15","nodeType":"VariableDeclaration","scope":15121,"src":"59804:20:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":15118,"name":"string","nodeType":"ElementaryTypeName","src":"59804:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"59803:22:15"},"scope":16930,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15129,"nodeType":"FunctionDefinition","src":"59880:88:15","nodes":[],"documentation":{"id":15122,"nodeType":"StructuredDocumentation","src":"59832:43:15","text":"Converts the given value to a `string`."},"functionSelector":"56ca623e","implemented":false,"kind":"function","modifiers":[],"name":"toString","nameLocation":"59889:8:15","parameters":{"id":15125,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15124,"mutability":"mutable","name":"value","nameLocation":"59906:5:15","nodeType":"VariableDeclaration","scope":15129,"src":"59898:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15123,"name":"address","nodeType":"ElementaryTypeName","src":"59898:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"59897:15:15"},"returnParameters":{"id":15128,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15127,"mutability":"mutable","name":"stringifiedValue","nameLocation":"59950:16:15","nodeType":"VariableDeclaration","scope":15129,"src":"59936:30:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":15126,"name":"string","nodeType":"ElementaryTypeName","src":"59936:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"59935:32:15"},"scope":16930,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15137,"nodeType":"FunctionDefinition","src":"60022:95:15","nodes":[],"documentation":{"id":15130,"nodeType":"StructuredDocumentation","src":"59974:43:15","text":"Converts the given value to a `string`."},"functionSelector":"71aad10d","implemented":false,"kind":"function","modifiers":[],"name":"toString","nameLocation":"60031:8:15","parameters":{"id":15133,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15132,"mutability":"mutable","name":"value","nameLocation":"60055:5:15","nodeType":"VariableDeclaration","scope":15137,"src":"60040:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":15131,"name":"bytes","nodeType":"ElementaryTypeName","src":"60040:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"60039:22:15"},"returnParameters":{"id":15136,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15135,"mutability":"mutable","name":"stringifiedValue","nameLocation":"60099:16:15","nodeType":"VariableDeclaration","scope":15137,"src":"60085:30:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":15134,"name":"string","nodeType":"ElementaryTypeName","src":"60085:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"60084:32:15"},"scope":16930,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15145,"nodeType":"FunctionDefinition","src":"60171:88:15","nodes":[],"documentation":{"id":15138,"nodeType":"StructuredDocumentation","src":"60123:43:15","text":"Converts the given value to a `string`."},"functionSelector":"b11a19e8","implemented":false,"kind":"function","modifiers":[],"name":"toString","nameLocation":"60180:8:15","parameters":{"id":15141,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15140,"mutability":"mutable","name":"value","nameLocation":"60197:5:15","nodeType":"VariableDeclaration","scope":15145,"src":"60189:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":15139,"name":"bytes32","nodeType":"ElementaryTypeName","src":"60189:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"60188:15:15"},"returnParameters":{"id":15144,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15143,"mutability":"mutable","name":"stringifiedValue","nameLocation":"60241:16:15","nodeType":"VariableDeclaration","scope":15145,"src":"60227:30:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":15142,"name":"string","nodeType":"ElementaryTypeName","src":"60227:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"60226:32:15"},"scope":16930,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15153,"nodeType":"FunctionDefinition","src":"60313:85:15","nodes":[],"documentation":{"id":15146,"nodeType":"StructuredDocumentation","src":"60265:43:15","text":"Converts the given value to a `string`."},"functionSelector":"71dce7da","implemented":false,"kind":"function","modifiers":[],"name":"toString","nameLocation":"60322:8:15","parameters":{"id":15149,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15148,"mutability":"mutable","name":"value","nameLocation":"60336:5:15","nodeType":"VariableDeclaration","scope":15153,"src":"60331:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":15147,"name":"bool","nodeType":"ElementaryTypeName","src":"60331:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"60330:12:15"},"returnParameters":{"id":15152,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15151,"mutability":"mutable","name":"stringifiedValue","nameLocation":"60380:16:15","nodeType":"VariableDeclaration","scope":15153,"src":"60366:30:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":15150,"name":"string","nodeType":"ElementaryTypeName","src":"60366:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"60365:32:15"},"scope":16930,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15161,"nodeType":"FunctionDefinition","src":"60452:88:15","nodes":[],"documentation":{"id":15154,"nodeType":"StructuredDocumentation","src":"60404:43:15","text":"Converts the given value to a `string`."},"functionSelector":"6900a3ae","implemented":false,"kind":"function","modifiers":[],"name":"toString","nameLocation":"60461:8:15","parameters":{"id":15157,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15156,"mutability":"mutable","name":"value","nameLocation":"60478:5:15","nodeType":"VariableDeclaration","scope":15161,"src":"60470:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15155,"name":"uint256","nodeType":"ElementaryTypeName","src":"60470:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"60469:15:15"},"returnParameters":{"id":15160,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15159,"mutability":"mutable","name":"stringifiedValue","nameLocation":"60522:16:15","nodeType":"VariableDeclaration","scope":15161,"src":"60508:30:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":15158,"name":"string","nodeType":"ElementaryTypeName","src":"60508:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"60507:32:15"},"scope":16930,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15169,"nodeType":"FunctionDefinition","src":"60594:87:15","nodes":[],"documentation":{"id":15162,"nodeType":"StructuredDocumentation","src":"60546:43:15","text":"Converts the given value to a `string`."},"functionSelector":"a322c40e","implemented":false,"kind":"function","modifiers":[],"name":"toString","nameLocation":"60603:8:15","parameters":{"id":15165,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15164,"mutability":"mutable","name":"value","nameLocation":"60619:5:15","nodeType":"VariableDeclaration","scope":15169,"src":"60612:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":15163,"name":"int256","nodeType":"ElementaryTypeName","src":"60612:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"60611:14:15"},"returnParameters":{"id":15168,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15167,"mutability":"mutable","name":"stringifiedValue","nameLocation":"60663:16:15","nodeType":"VariableDeclaration","scope":15169,"src":"60649:30:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":15166,"name":"string","nodeType":"ElementaryTypeName","src":"60649:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"60648:32:15"},"scope":16930,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15177,"nodeType":"FunctionDefinition","src":"60743:89:15","nodes":[],"documentation":{"id":15170,"nodeType":"StructuredDocumentation","src":"60687:51:15","text":"Converts the given `string` value to Uppercase."},"functionSelector":"074ae3d7","implemented":false,"kind":"function","modifiers":[],"name":"toUppercase","nameLocation":"60752:11:15","parameters":{"id":15173,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15172,"mutability":"mutable","name":"input","nameLocation":"60780:5:15","nodeType":"VariableDeclaration","scope":15177,"src":"60764:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15171,"name":"string","nodeType":"ElementaryTypeName","src":"60764:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"60763:23:15"},"returnParameters":{"id":15176,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15175,"mutability":"mutable","name":"output","nameLocation":"60824:6:15","nodeType":"VariableDeclaration","scope":15177,"src":"60810:20:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":15174,"name":"string","nodeType":"ElementaryTypeName","src":"60810:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"60809:22:15"},"scope":16930,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15185,"nodeType":"FunctionDefinition","src":"60915:82:15","nodes":[],"documentation":{"id":15178,"nodeType":"StructuredDocumentation","src":"60838:72:15","text":"Trims leading and trailing whitespace from the given `string` value."},"functionSelector":"b2dad155","implemented":false,"kind":"function","modifiers":[],"name":"trim","nameLocation":"60924:4:15","parameters":{"id":15181,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15180,"mutability":"mutable","name":"input","nameLocation":"60945:5:15","nodeType":"VariableDeclaration","scope":15185,"src":"60929:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15179,"name":"string","nodeType":"ElementaryTypeName","src":"60929:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"60928:23:15"},"returnParameters":{"id":15184,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15183,"mutability":"mutable","name":"output","nameLocation":"60989:6:15","nodeType":"VariableDeclaration","scope":15185,"src":"60975:20:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":15182,"name":"string","nodeType":"ElementaryTypeName","src":"60975:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"60974:22:15"},"scope":16930,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15197,"nodeType":"FunctionDefinition","src":"61192:113:15","nodes":[],"documentation":{"id":15186,"nodeType":"StructuredDocumentation","src":"61037:150:15","text":"Compares two `uint256` values. Expects difference to be less than or equal to `maxDelta`.\n Formats values with decimals in failure message."},"functionSelector":"045c55ce","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqAbsDecimal","nameLocation":"61201:24:15","parameters":{"id":15195,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15188,"mutability":"mutable","name":"left","nameLocation":"61234:4:15","nodeType":"VariableDeclaration","scope":15197,"src":"61226:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15187,"name":"uint256","nodeType":"ElementaryTypeName","src":"61226:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15190,"mutability":"mutable","name":"right","nameLocation":"61248:5:15","nodeType":"VariableDeclaration","scope":15197,"src":"61240:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15189,"name":"uint256","nodeType":"ElementaryTypeName","src":"61240:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15192,"mutability":"mutable","name":"maxDelta","nameLocation":"61263:8:15","nodeType":"VariableDeclaration","scope":15197,"src":"61255:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15191,"name":"uint256","nodeType":"ElementaryTypeName","src":"61255:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15194,"mutability":"mutable","name":"decimals","nameLocation":"61281:8:15","nodeType":"VariableDeclaration","scope":15197,"src":"61273:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15193,"name":"uint256","nodeType":"ElementaryTypeName","src":"61273:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"61225:65:15"},"returnParameters":{"id":15196,"nodeType":"ParameterList","parameters":[],"src":"61304:0:15"},"scope":16930,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15211,"nodeType":"FunctionDefinition","src":"61520:182:15","nodes":[],"documentation":{"id":15198,"nodeType":"StructuredDocumentation","src":"61311:204:15","text":"Compares two `uint256` values. Expects difference to be less than or equal to `maxDelta`.\n Formats values with decimals in failure message. Includes error message into revert string on failure."},"functionSelector":"60429eb2","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqAbsDecimal","nameLocation":"61529:24:15","parameters":{"id":15209,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15200,"mutability":"mutable","name":"left","nameLocation":"61571:4:15","nodeType":"VariableDeclaration","scope":15211,"src":"61563:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15199,"name":"uint256","nodeType":"ElementaryTypeName","src":"61563:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15202,"mutability":"mutable","name":"right","nameLocation":"61593:5:15","nodeType":"VariableDeclaration","scope":15211,"src":"61585:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15201,"name":"uint256","nodeType":"ElementaryTypeName","src":"61585:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15204,"mutability":"mutable","name":"maxDelta","nameLocation":"61616:8:15","nodeType":"VariableDeclaration","scope":15211,"src":"61608:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15203,"name":"uint256","nodeType":"ElementaryTypeName","src":"61608:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15206,"mutability":"mutable","name":"decimals","nameLocation":"61642:8:15","nodeType":"VariableDeclaration","scope":15211,"src":"61634:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15205,"name":"uint256","nodeType":"ElementaryTypeName","src":"61634:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15208,"mutability":"mutable","name":"error","nameLocation":"61676:5:15","nodeType":"VariableDeclaration","scope":15211,"src":"61660:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15207,"name":"string","nodeType":"ElementaryTypeName","src":"61660:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"61553:134:15"},"returnParameters":{"id":15210,"nodeType":"ParameterList","parameters":[],"src":"61701:0:15"},"scope":16930,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15223,"nodeType":"FunctionDefinition","src":"61862:111:15","nodes":[],"documentation":{"id":15212,"nodeType":"StructuredDocumentation","src":"61708:149:15","text":"Compares two `int256` values. Expects difference to be less than or equal to `maxDelta`.\n Formats values with decimals in failure message."},"functionSelector":"3d5bc8bc","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqAbsDecimal","nameLocation":"61871:24:15","parameters":{"id":15221,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15214,"mutability":"mutable","name":"left","nameLocation":"61903:4:15","nodeType":"VariableDeclaration","scope":15223,"src":"61896:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":15213,"name":"int256","nodeType":"ElementaryTypeName","src":"61896:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":15216,"mutability":"mutable","name":"right","nameLocation":"61916:5:15","nodeType":"VariableDeclaration","scope":15223,"src":"61909:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":15215,"name":"int256","nodeType":"ElementaryTypeName","src":"61909:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":15218,"mutability":"mutable","name":"maxDelta","nameLocation":"61931:8:15","nodeType":"VariableDeclaration","scope":15223,"src":"61923:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15217,"name":"uint256","nodeType":"ElementaryTypeName","src":"61923:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15220,"mutability":"mutable","name":"decimals","nameLocation":"61949:8:15","nodeType":"VariableDeclaration","scope":15223,"src":"61941:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15219,"name":"uint256","nodeType":"ElementaryTypeName","src":"61941:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"61895:63:15"},"returnParameters":{"id":15222,"nodeType":"ParameterList","parameters":[],"src":"61972:0:15"},"scope":16930,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15237,"nodeType":"FunctionDefinition","src":"62187:180:15","nodes":[],"documentation":{"id":15224,"nodeType":"StructuredDocumentation","src":"61979:203:15","text":"Compares two `int256` values. Expects difference to be less than or equal to `maxDelta`.\n Formats values with decimals in failure message. Includes error message into revert string on failure."},"functionSelector":"6a5066d4","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqAbsDecimal","nameLocation":"62196:24:15","parameters":{"id":15235,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15226,"mutability":"mutable","name":"left","nameLocation":"62237:4:15","nodeType":"VariableDeclaration","scope":15237,"src":"62230:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":15225,"name":"int256","nodeType":"ElementaryTypeName","src":"62230:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":15228,"mutability":"mutable","name":"right","nameLocation":"62258:5:15","nodeType":"VariableDeclaration","scope":15237,"src":"62251:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":15227,"name":"int256","nodeType":"ElementaryTypeName","src":"62251:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":15230,"mutability":"mutable","name":"maxDelta","nameLocation":"62281:8:15","nodeType":"VariableDeclaration","scope":15237,"src":"62273:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15229,"name":"uint256","nodeType":"ElementaryTypeName","src":"62273:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15232,"mutability":"mutable","name":"decimals","nameLocation":"62307:8:15","nodeType":"VariableDeclaration","scope":15237,"src":"62299:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15231,"name":"uint256","nodeType":"ElementaryTypeName","src":"62299:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15234,"mutability":"mutable","name":"error","nameLocation":"62341:5:15","nodeType":"VariableDeclaration","scope":15237,"src":"62325:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15233,"name":"string","nodeType":"ElementaryTypeName","src":"62325:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"62220:132:15"},"returnParameters":{"id":15236,"nodeType":"ParameterList","parameters":[],"src":"62366:0:15"},"scope":16930,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15247,"nodeType":"FunctionDefinition","src":"62471:88:15","nodes":[],"documentation":{"id":15238,"nodeType":"StructuredDocumentation","src":"62373:93:15","text":"Compares two `uint256` values. Expects difference to be less than or equal to `maxDelta`."},"functionSelector":"16d207c6","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqAbs","nameLocation":"62480:17:15","parameters":{"id":15245,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15240,"mutability":"mutable","name":"left","nameLocation":"62506:4:15","nodeType":"VariableDeclaration","scope":15247,"src":"62498:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15239,"name":"uint256","nodeType":"ElementaryTypeName","src":"62498:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15242,"mutability":"mutable","name":"right","nameLocation":"62520:5:15","nodeType":"VariableDeclaration","scope":15247,"src":"62512:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15241,"name":"uint256","nodeType":"ElementaryTypeName","src":"62512:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15244,"mutability":"mutable","name":"maxDelta","nameLocation":"62535:8:15","nodeType":"VariableDeclaration","scope":15247,"src":"62527:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15243,"name":"uint256","nodeType":"ElementaryTypeName","src":"62527:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"62497:47:15"},"returnParameters":{"id":15246,"nodeType":"ParameterList","parameters":[],"src":"62558:0:15"},"scope":16930,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15259,"nodeType":"FunctionDefinition","src":"62725:111:15","nodes":[],"documentation":{"id":15248,"nodeType":"StructuredDocumentation","src":"62565:155:15","text":"Compares two `uint256` values. Expects difference to be less than or equal to `maxDelta`.\n Includes error message into revert string on failure."},"functionSelector":"f710b062","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqAbs","nameLocation":"62734:17:15","parameters":{"id":15257,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15250,"mutability":"mutable","name":"left","nameLocation":"62760:4:15","nodeType":"VariableDeclaration","scope":15259,"src":"62752:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15249,"name":"uint256","nodeType":"ElementaryTypeName","src":"62752:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15252,"mutability":"mutable","name":"right","nameLocation":"62774:5:15","nodeType":"VariableDeclaration","scope":15259,"src":"62766:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15251,"name":"uint256","nodeType":"ElementaryTypeName","src":"62766:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15254,"mutability":"mutable","name":"maxDelta","nameLocation":"62789:8:15","nodeType":"VariableDeclaration","scope":15259,"src":"62781:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15253,"name":"uint256","nodeType":"ElementaryTypeName","src":"62781:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15256,"mutability":"mutable","name":"error","nameLocation":"62815:5:15","nodeType":"VariableDeclaration","scope":15259,"src":"62799:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15255,"name":"string","nodeType":"ElementaryTypeName","src":"62799:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"62751:70:15"},"returnParameters":{"id":15258,"nodeType":"ParameterList","parameters":[],"src":"62835:0:15"},"scope":16930,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15269,"nodeType":"FunctionDefinition","src":"62939:86:15","nodes":[],"documentation":{"id":15260,"nodeType":"StructuredDocumentation","src":"62842:92:15","text":"Compares two `int256` values. Expects difference to be less than or equal to `maxDelta`."},"functionSelector":"240f839d","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqAbs","nameLocation":"62948:17:15","parameters":{"id":15267,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15262,"mutability":"mutable","name":"left","nameLocation":"62973:4:15","nodeType":"VariableDeclaration","scope":15269,"src":"62966:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":15261,"name":"int256","nodeType":"ElementaryTypeName","src":"62966:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":15264,"mutability":"mutable","name":"right","nameLocation":"62986:5:15","nodeType":"VariableDeclaration","scope":15269,"src":"62979:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":15263,"name":"int256","nodeType":"ElementaryTypeName","src":"62979:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":15266,"mutability":"mutable","name":"maxDelta","nameLocation":"63001:8:15","nodeType":"VariableDeclaration","scope":15269,"src":"62993:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15265,"name":"uint256","nodeType":"ElementaryTypeName","src":"62993:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"62965:45:15"},"returnParameters":{"id":15268,"nodeType":"ParameterList","parameters":[],"src":"63024:0:15"},"scope":16930,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15281,"nodeType":"FunctionDefinition","src":"63190:109:15","nodes":[],"documentation":{"id":15270,"nodeType":"StructuredDocumentation","src":"63031:154:15","text":"Compares two `int256` values. Expects difference to be less than or equal to `maxDelta`.\n Includes error message into revert string on failure."},"functionSelector":"8289e621","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqAbs","nameLocation":"63199:17:15","parameters":{"id":15279,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15272,"mutability":"mutable","name":"left","nameLocation":"63224:4:15","nodeType":"VariableDeclaration","scope":15281,"src":"63217:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":15271,"name":"int256","nodeType":"ElementaryTypeName","src":"63217:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":15274,"mutability":"mutable","name":"right","nameLocation":"63237:5:15","nodeType":"VariableDeclaration","scope":15281,"src":"63230:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":15273,"name":"int256","nodeType":"ElementaryTypeName","src":"63230:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":15276,"mutability":"mutable","name":"maxDelta","nameLocation":"63252:8:15","nodeType":"VariableDeclaration","scope":15281,"src":"63244:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15275,"name":"uint256","nodeType":"ElementaryTypeName","src":"63244:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15278,"mutability":"mutable","name":"error","nameLocation":"63278:5:15","nodeType":"VariableDeclaration","scope":15281,"src":"63262:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15277,"name":"string","nodeType":"ElementaryTypeName","src":"63262:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"63216:68:15"},"returnParameters":{"id":15280,"nodeType":"ParameterList","parameters":[],"src":"63298:0:15"},"scope":16930,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15293,"nodeType":"FunctionDefinition","src":"63570:136:15","nodes":[],"documentation":{"id":15282,"nodeType":"StructuredDocumentation","src":"63305:260:15","text":"Compares two `uint256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`.\n `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100%\n Formats values with decimals in failure message."},"functionSelector":"21ed2977","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqRelDecimal","nameLocation":"63579:24:15","parameters":{"id":15291,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15284,"mutability":"mutable","name":"left","nameLocation":"63612:4:15","nodeType":"VariableDeclaration","scope":15293,"src":"63604:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15283,"name":"uint256","nodeType":"ElementaryTypeName","src":"63604:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15286,"mutability":"mutable","name":"right","nameLocation":"63626:5:15","nodeType":"VariableDeclaration","scope":15293,"src":"63618:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15285,"name":"uint256","nodeType":"ElementaryTypeName","src":"63618:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15288,"mutability":"mutable","name":"maxPercentDelta","nameLocation":"63641:15:15","nodeType":"VariableDeclaration","scope":15293,"src":"63633:23:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15287,"name":"uint256","nodeType":"ElementaryTypeName","src":"63633:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15290,"mutability":"mutable","name":"decimals","nameLocation":"63666:8:15","nodeType":"VariableDeclaration","scope":15293,"src":"63658:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15289,"name":"uint256","nodeType":"ElementaryTypeName","src":"63658:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"63603:72:15"},"returnParameters":{"id":15292,"nodeType":"ParameterList","parameters":[],"src":"63705:0:15"},"scope":16930,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15307,"nodeType":"FunctionDefinition","src":"64031:189:15","nodes":[],"documentation":{"id":15294,"nodeType":"StructuredDocumentation","src":"63712:314:15","text":"Compares two `uint256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`.\n `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100%\n Formats values with decimals in failure message. Includes error message into revert string on failure."},"functionSelector":"82d6c8fd","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqRelDecimal","nameLocation":"64040:24:15","parameters":{"id":15305,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15296,"mutability":"mutable","name":"left","nameLocation":"64082:4:15","nodeType":"VariableDeclaration","scope":15307,"src":"64074:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15295,"name":"uint256","nodeType":"ElementaryTypeName","src":"64074:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15298,"mutability":"mutable","name":"right","nameLocation":"64104:5:15","nodeType":"VariableDeclaration","scope":15307,"src":"64096:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15297,"name":"uint256","nodeType":"ElementaryTypeName","src":"64096:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15300,"mutability":"mutable","name":"maxPercentDelta","nameLocation":"64127:15:15","nodeType":"VariableDeclaration","scope":15307,"src":"64119:23:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15299,"name":"uint256","nodeType":"ElementaryTypeName","src":"64119:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15302,"mutability":"mutable","name":"decimals","nameLocation":"64160:8:15","nodeType":"VariableDeclaration","scope":15307,"src":"64152:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15301,"name":"uint256","nodeType":"ElementaryTypeName","src":"64152:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15304,"mutability":"mutable","name":"error","nameLocation":"64194:5:15","nodeType":"VariableDeclaration","scope":15307,"src":"64178:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15303,"name":"string","nodeType":"ElementaryTypeName","src":"64178:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"64064:141:15"},"returnParameters":{"id":15306,"nodeType":"ParameterList","parameters":[],"src":"64219:0:15"},"scope":16930,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15319,"nodeType":"FunctionDefinition","src":"64490:134:15","nodes":[],"documentation":{"id":15308,"nodeType":"StructuredDocumentation","src":"64226:259:15","text":"Compares two `int256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`.\n `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100%\n Formats values with decimals in failure message."},"functionSelector":"abbf21cc","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqRelDecimal","nameLocation":"64499:24:15","parameters":{"id":15317,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15310,"mutability":"mutable","name":"left","nameLocation":"64531:4:15","nodeType":"VariableDeclaration","scope":15319,"src":"64524:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":15309,"name":"int256","nodeType":"ElementaryTypeName","src":"64524:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":15312,"mutability":"mutable","name":"right","nameLocation":"64544:5:15","nodeType":"VariableDeclaration","scope":15319,"src":"64537:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":15311,"name":"int256","nodeType":"ElementaryTypeName","src":"64537:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":15314,"mutability":"mutable","name":"maxPercentDelta","nameLocation":"64559:15:15","nodeType":"VariableDeclaration","scope":15319,"src":"64551:23:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15313,"name":"uint256","nodeType":"ElementaryTypeName","src":"64551:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15316,"mutability":"mutable","name":"decimals","nameLocation":"64584:8:15","nodeType":"VariableDeclaration","scope":15319,"src":"64576:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15315,"name":"uint256","nodeType":"ElementaryTypeName","src":"64576:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"64523:70:15"},"returnParameters":{"id":15318,"nodeType":"ParameterList","parameters":[],"src":"64623:0:15"},"scope":16930,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15333,"nodeType":"FunctionDefinition","src":"64948:187:15","nodes":[],"documentation":{"id":15320,"nodeType":"StructuredDocumentation","src":"64630:313:15","text":"Compares two `int256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`.\n `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100%\n Formats values with decimals in failure message. Includes error message into revert string on failure."},"functionSelector":"fccc11c4","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqRelDecimal","nameLocation":"64957:24:15","parameters":{"id":15331,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15322,"mutability":"mutable","name":"left","nameLocation":"64998:4:15","nodeType":"VariableDeclaration","scope":15333,"src":"64991:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":15321,"name":"int256","nodeType":"ElementaryTypeName","src":"64991:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":15324,"mutability":"mutable","name":"right","nameLocation":"65019:5:15","nodeType":"VariableDeclaration","scope":15333,"src":"65012:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":15323,"name":"int256","nodeType":"ElementaryTypeName","src":"65012:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":15326,"mutability":"mutable","name":"maxPercentDelta","nameLocation":"65042:15:15","nodeType":"VariableDeclaration","scope":15333,"src":"65034:23:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15325,"name":"uint256","nodeType":"ElementaryTypeName","src":"65034:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15328,"mutability":"mutable","name":"decimals","nameLocation":"65075:8:15","nodeType":"VariableDeclaration","scope":15333,"src":"65067:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15327,"name":"uint256","nodeType":"ElementaryTypeName","src":"65067:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15330,"mutability":"mutable","name":"error","nameLocation":"65109:5:15","nodeType":"VariableDeclaration","scope":15333,"src":"65093:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15329,"name":"string","nodeType":"ElementaryTypeName","src":"65093:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"64981:139:15"},"returnParameters":{"id":15332,"nodeType":"ParameterList","parameters":[],"src":"65134:0:15"},"scope":16930,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15343,"nodeType":"FunctionDefinition","src":"65349:95:15","nodes":[],"documentation":{"id":15334,"nodeType":"StructuredDocumentation","src":"65141:203:15","text":"Compares two `uint256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`.\n `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100%"},"functionSelector":"8cf25ef4","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqRel","nameLocation":"65358:17:15","parameters":{"id":15341,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15336,"mutability":"mutable","name":"left","nameLocation":"65384:4:15","nodeType":"VariableDeclaration","scope":15343,"src":"65376:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15335,"name":"uint256","nodeType":"ElementaryTypeName","src":"65376:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15338,"mutability":"mutable","name":"right","nameLocation":"65398:5:15","nodeType":"VariableDeclaration","scope":15343,"src":"65390:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15337,"name":"uint256","nodeType":"ElementaryTypeName","src":"65390:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15340,"mutability":"mutable","name":"maxPercentDelta","nameLocation":"65413:15:15","nodeType":"VariableDeclaration","scope":15343,"src":"65405:23:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15339,"name":"uint256","nodeType":"ElementaryTypeName","src":"65405:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"65375:54:15"},"returnParameters":{"id":15342,"nodeType":"ParameterList","parameters":[],"src":"65443:0:15"},"scope":16930,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15355,"nodeType":"FunctionDefinition","src":"65720:134:15","nodes":[],"documentation":{"id":15344,"nodeType":"StructuredDocumentation","src":"65450:265:15","text":"Compares two `uint256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`.\n `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100%\n Includes error message into revert string on failure."},"functionSelector":"1ecb7d33","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqRel","nameLocation":"65729:17:15","parameters":{"id":15353,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15346,"mutability":"mutable","name":"left","nameLocation":"65755:4:15","nodeType":"VariableDeclaration","scope":15355,"src":"65747:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15345,"name":"uint256","nodeType":"ElementaryTypeName","src":"65747:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15348,"mutability":"mutable","name":"right","nameLocation":"65769:5:15","nodeType":"VariableDeclaration","scope":15355,"src":"65761:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15347,"name":"uint256","nodeType":"ElementaryTypeName","src":"65761:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15350,"mutability":"mutable","name":"maxPercentDelta","nameLocation":"65784:15:15","nodeType":"VariableDeclaration","scope":15355,"src":"65776:23:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15349,"name":"uint256","nodeType":"ElementaryTypeName","src":"65776:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15352,"mutability":"mutable","name":"error","nameLocation":"65817:5:15","nodeType":"VariableDeclaration","scope":15355,"src":"65801:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15351,"name":"string","nodeType":"ElementaryTypeName","src":"65801:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"65746:77:15"},"returnParameters":{"id":15354,"nodeType":"ParameterList","parameters":[],"src":"65853:0:15"},"scope":16930,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15365,"nodeType":"FunctionDefinition","src":"66067:93:15","nodes":[],"documentation":{"id":15356,"nodeType":"StructuredDocumentation","src":"65860:202:15","text":"Compares two `int256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`.\n `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100%"},"functionSelector":"fea2d14f","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqRel","nameLocation":"66076:17:15","parameters":{"id":15363,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15358,"mutability":"mutable","name":"left","nameLocation":"66101:4:15","nodeType":"VariableDeclaration","scope":15365,"src":"66094:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":15357,"name":"int256","nodeType":"ElementaryTypeName","src":"66094:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":15360,"mutability":"mutable","name":"right","nameLocation":"66114:5:15","nodeType":"VariableDeclaration","scope":15365,"src":"66107:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":15359,"name":"int256","nodeType":"ElementaryTypeName","src":"66107:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":15362,"mutability":"mutable","name":"maxPercentDelta","nameLocation":"66129:15:15","nodeType":"VariableDeclaration","scope":15365,"src":"66121:23:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15361,"name":"uint256","nodeType":"ElementaryTypeName","src":"66121:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"66093:52:15"},"returnParameters":{"id":15364,"nodeType":"ParameterList","parameters":[],"src":"66159:0:15"},"scope":16930,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15377,"nodeType":"FunctionDefinition","src":"66435:132:15","nodes":[],"documentation":{"id":15366,"nodeType":"StructuredDocumentation","src":"66166:264:15","text":"Compares two `int256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`.\n `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100%\n Includes error message into revert string on failure."},"functionSelector":"ef277d72","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqRel","nameLocation":"66444:17:15","parameters":{"id":15375,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15368,"mutability":"mutable","name":"left","nameLocation":"66469:4:15","nodeType":"VariableDeclaration","scope":15377,"src":"66462:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":15367,"name":"int256","nodeType":"ElementaryTypeName","src":"66462:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":15370,"mutability":"mutable","name":"right","nameLocation":"66482:5:15","nodeType":"VariableDeclaration","scope":15377,"src":"66475:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":15369,"name":"int256","nodeType":"ElementaryTypeName","src":"66475:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":15372,"mutability":"mutable","name":"maxPercentDelta","nameLocation":"66497:15:15","nodeType":"VariableDeclaration","scope":15377,"src":"66489:23:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15371,"name":"uint256","nodeType":"ElementaryTypeName","src":"66489:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15374,"mutability":"mutable","name":"error","nameLocation":"66530:5:15","nodeType":"VariableDeclaration","scope":15377,"src":"66514:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15373,"name":"string","nodeType":"ElementaryTypeName","src":"66514:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"66461:75:15"},"returnParameters":{"id":15376,"nodeType":"ParameterList","parameters":[],"src":"66566:0:15"},"scope":16930,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15387,"nodeType":"FunctionDefinition","src":"66676:86:15","nodes":[],"documentation":{"id":15378,"nodeType":"StructuredDocumentation","src":"66573:98:15","text":"Asserts that two `uint256` values are equal, formatting them with decimals in failure message."},"functionSelector":"27af7d9c","implemented":false,"kind":"function","modifiers":[],"name":"assertEqDecimal","nameLocation":"66685:15:15","parameters":{"id":15385,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15380,"mutability":"mutable","name":"left","nameLocation":"66709:4:15","nodeType":"VariableDeclaration","scope":15387,"src":"66701:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15379,"name":"uint256","nodeType":"ElementaryTypeName","src":"66701:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15382,"mutability":"mutable","name":"right","nameLocation":"66723:5:15","nodeType":"VariableDeclaration","scope":15387,"src":"66715:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15381,"name":"uint256","nodeType":"ElementaryTypeName","src":"66715:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15384,"mutability":"mutable","name":"decimals","nameLocation":"66738:8:15","nodeType":"VariableDeclaration","scope":15387,"src":"66730:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15383,"name":"uint256","nodeType":"ElementaryTypeName","src":"66730:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"66700:47:15"},"returnParameters":{"id":15386,"nodeType":"ParameterList","parameters":[],"src":"66761:0:15"},"scope":16930,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15399,"nodeType":"FunctionDefinition","src":"66933:109:15","nodes":[],"documentation":{"id":15388,"nodeType":"StructuredDocumentation","src":"66768:160:15","text":"Asserts that two `uint256` values are equal, formatting them with decimals in failure message.\n Includes error message into revert string on failure."},"functionSelector":"d0cbbdef","implemented":false,"kind":"function","modifiers":[],"name":"assertEqDecimal","nameLocation":"66942:15:15","parameters":{"id":15397,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15390,"mutability":"mutable","name":"left","nameLocation":"66966:4:15","nodeType":"VariableDeclaration","scope":15399,"src":"66958:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15389,"name":"uint256","nodeType":"ElementaryTypeName","src":"66958:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15392,"mutability":"mutable","name":"right","nameLocation":"66980:5:15","nodeType":"VariableDeclaration","scope":15399,"src":"66972:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15391,"name":"uint256","nodeType":"ElementaryTypeName","src":"66972:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15394,"mutability":"mutable","name":"decimals","nameLocation":"66995:8:15","nodeType":"VariableDeclaration","scope":15399,"src":"66987:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15393,"name":"uint256","nodeType":"ElementaryTypeName","src":"66987:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15396,"mutability":"mutable","name":"error","nameLocation":"67021:5:15","nodeType":"VariableDeclaration","scope":15399,"src":"67005:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15395,"name":"string","nodeType":"ElementaryTypeName","src":"67005:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"66957:70:15"},"returnParameters":{"id":15398,"nodeType":"ParameterList","parameters":[],"src":"67041:0:15"},"scope":16930,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15409,"nodeType":"FunctionDefinition","src":"67150:84:15","nodes":[],"documentation":{"id":15400,"nodeType":"StructuredDocumentation","src":"67048:97:15","text":"Asserts that two `int256` values are equal, formatting them with decimals in failure message."},"functionSelector":"48016c04","implemented":false,"kind":"function","modifiers":[],"name":"assertEqDecimal","nameLocation":"67159:15:15","parameters":{"id":15407,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15402,"mutability":"mutable","name":"left","nameLocation":"67182:4:15","nodeType":"VariableDeclaration","scope":15409,"src":"67175:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":15401,"name":"int256","nodeType":"ElementaryTypeName","src":"67175:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":15404,"mutability":"mutable","name":"right","nameLocation":"67195:5:15","nodeType":"VariableDeclaration","scope":15409,"src":"67188:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":15403,"name":"int256","nodeType":"ElementaryTypeName","src":"67188:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":15406,"mutability":"mutable","name":"decimals","nameLocation":"67210:8:15","nodeType":"VariableDeclaration","scope":15409,"src":"67202:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15405,"name":"uint256","nodeType":"ElementaryTypeName","src":"67202:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"67174:45:15"},"returnParameters":{"id":15408,"nodeType":"ParameterList","parameters":[],"src":"67233:0:15"},"scope":16930,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15421,"nodeType":"FunctionDefinition","src":"67404:107:15","nodes":[],"documentation":{"id":15410,"nodeType":"StructuredDocumentation","src":"67240:159:15","text":"Asserts that two `int256` values are equal, formatting them with decimals in failure message.\n Includes error message into revert string on failure."},"functionSelector":"7e77b0c5","implemented":false,"kind":"function","modifiers":[],"name":"assertEqDecimal","nameLocation":"67413:15:15","parameters":{"id":15419,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15412,"mutability":"mutable","name":"left","nameLocation":"67436:4:15","nodeType":"VariableDeclaration","scope":15421,"src":"67429:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":15411,"name":"int256","nodeType":"ElementaryTypeName","src":"67429:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":15414,"mutability":"mutable","name":"right","nameLocation":"67449:5:15","nodeType":"VariableDeclaration","scope":15421,"src":"67442:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":15413,"name":"int256","nodeType":"ElementaryTypeName","src":"67442:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":15416,"mutability":"mutable","name":"decimals","nameLocation":"67464:8:15","nodeType":"VariableDeclaration","scope":15421,"src":"67456:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15415,"name":"uint256","nodeType":"ElementaryTypeName","src":"67456:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15418,"mutability":"mutable","name":"error","nameLocation":"67490:5:15","nodeType":"VariableDeclaration","scope":15421,"src":"67474:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15417,"name":"string","nodeType":"ElementaryTypeName","src":"67474:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"67428:68:15"},"returnParameters":{"id":15420,"nodeType":"ParameterList","parameters":[],"src":"67510:0:15"},"scope":16930,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15429,"nodeType":"FunctionDefinition","src":"67567:55:15","nodes":[],"documentation":{"id":15422,"nodeType":"StructuredDocumentation","src":"67517:45:15","text":"Asserts that two `bool` values are equal."},"functionSelector":"f7fe3477","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"67576:8:15","parameters":{"id":15427,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15424,"mutability":"mutable","name":"left","nameLocation":"67590:4:15","nodeType":"VariableDeclaration","scope":15429,"src":"67585:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":15423,"name":"bool","nodeType":"ElementaryTypeName","src":"67585:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":15426,"mutability":"mutable","name":"right","nameLocation":"67601:5:15","nodeType":"VariableDeclaration","scope":15429,"src":"67596:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":15425,"name":"bool","nodeType":"ElementaryTypeName","src":"67596:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"67584:23:15"},"returnParameters":{"id":15428,"nodeType":"ParameterList","parameters":[],"src":"67621:0:15"},"scope":16930,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15439,"nodeType":"FunctionDefinition","src":"67735:78:15","nodes":[],"documentation":{"id":15430,"nodeType":"StructuredDocumentation","src":"67628:102:15","text":"Asserts that two `bool` values are equal and includes error message into revert string on failure."},"functionSelector":"4db19e7e","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"67744:8:15","parameters":{"id":15437,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15432,"mutability":"mutable","name":"left","nameLocation":"67758:4:15","nodeType":"VariableDeclaration","scope":15439,"src":"67753:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":15431,"name":"bool","nodeType":"ElementaryTypeName","src":"67753:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":15434,"mutability":"mutable","name":"right","nameLocation":"67769:5:15","nodeType":"VariableDeclaration","scope":15439,"src":"67764:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":15433,"name":"bool","nodeType":"ElementaryTypeName","src":"67764:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":15436,"mutability":"mutable","name":"error","nameLocation":"67792:5:15","nodeType":"VariableDeclaration","scope":15439,"src":"67776:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15435,"name":"string","nodeType":"ElementaryTypeName","src":"67776:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"67752:46:15"},"returnParameters":{"id":15438,"nodeType":"ParameterList","parameters":[],"src":"67812:0:15"},"scope":16930,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15447,"nodeType":"FunctionDefinition","src":"67871:77:15","nodes":[],"documentation":{"id":15440,"nodeType":"StructuredDocumentation","src":"67819:47:15","text":"Asserts that two `string` values are equal."},"functionSelector":"f320d963","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"67880:8:15","parameters":{"id":15445,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15442,"mutability":"mutable","name":"left","nameLocation":"67905:4:15","nodeType":"VariableDeclaration","scope":15447,"src":"67889:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15441,"name":"string","nodeType":"ElementaryTypeName","src":"67889:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":15444,"mutability":"mutable","name":"right","nameLocation":"67927:5:15","nodeType":"VariableDeclaration","scope":15447,"src":"67911:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15443,"name":"string","nodeType":"ElementaryTypeName","src":"67911:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"67888:45:15"},"returnParameters":{"id":15446,"nodeType":"ParameterList","parameters":[],"src":"67947:0:15"},"scope":16930,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15457,"nodeType":"FunctionDefinition","src":"68063:100:15","nodes":[],"documentation":{"id":15448,"nodeType":"StructuredDocumentation","src":"67954:104:15","text":"Asserts that two `string` values are equal and includes error message into revert string on failure."},"functionSelector":"36f656d8","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"68072:8:15","parameters":{"id":15455,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15450,"mutability":"mutable","name":"left","nameLocation":"68097:4:15","nodeType":"VariableDeclaration","scope":15457,"src":"68081:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15449,"name":"string","nodeType":"ElementaryTypeName","src":"68081:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":15452,"mutability":"mutable","name":"right","nameLocation":"68119:5:15","nodeType":"VariableDeclaration","scope":15457,"src":"68103:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15451,"name":"string","nodeType":"ElementaryTypeName","src":"68103:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":15454,"mutability":"mutable","name":"error","nameLocation":"68142:5:15","nodeType":"VariableDeclaration","scope":15457,"src":"68126:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15453,"name":"string","nodeType":"ElementaryTypeName","src":"68126:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"68080:68:15"},"returnParameters":{"id":15456,"nodeType":"ParameterList","parameters":[],"src":"68162:0:15"},"scope":16930,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15465,"nodeType":"FunctionDefinition","src":"68220:75:15","nodes":[],"documentation":{"id":15458,"nodeType":"StructuredDocumentation","src":"68169:46:15","text":"Asserts that two `bytes` values are equal."},"functionSelector":"97624631","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"68229:8:15","parameters":{"id":15463,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15460,"mutability":"mutable","name":"left","nameLocation":"68253:4:15","nodeType":"VariableDeclaration","scope":15465,"src":"68238:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":15459,"name":"bytes","nodeType":"ElementaryTypeName","src":"68238:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":15462,"mutability":"mutable","name":"right","nameLocation":"68274:5:15","nodeType":"VariableDeclaration","scope":15465,"src":"68259:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":15461,"name":"bytes","nodeType":"ElementaryTypeName","src":"68259:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"68237:43:15"},"returnParameters":{"id":15464,"nodeType":"ParameterList","parameters":[],"src":"68294:0:15"},"scope":16930,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15475,"nodeType":"FunctionDefinition","src":"68409:98:15","nodes":[],"documentation":{"id":15466,"nodeType":"StructuredDocumentation","src":"68301:103:15","text":"Asserts that two `bytes` values are equal and includes error message into revert string on failure."},"functionSelector":"e24fed00","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"68418:8:15","parameters":{"id":15473,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15468,"mutability":"mutable","name":"left","nameLocation":"68442:4:15","nodeType":"VariableDeclaration","scope":15475,"src":"68427:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":15467,"name":"bytes","nodeType":"ElementaryTypeName","src":"68427:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":15470,"mutability":"mutable","name":"right","nameLocation":"68463:5:15","nodeType":"VariableDeclaration","scope":15475,"src":"68448:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":15469,"name":"bytes","nodeType":"ElementaryTypeName","src":"68448:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":15472,"mutability":"mutable","name":"error","nameLocation":"68486:5:15","nodeType":"VariableDeclaration","scope":15475,"src":"68470:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15471,"name":"string","nodeType":"ElementaryTypeName","src":"68470:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"68426:66:15"},"returnParameters":{"id":15474,"nodeType":"ParameterList","parameters":[],"src":"68506:0:15"},"scope":16930,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15485,"nodeType":"FunctionDefinition","src":"68573:77:15","nodes":[],"documentation":{"id":15476,"nodeType":"StructuredDocumentation","src":"68513:55:15","text":"Asserts that two arrays of `bool` values are equal."},"functionSelector":"707df785","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"68582:8:15","parameters":{"id":15483,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15479,"mutability":"mutable","name":"left","nameLocation":"68607:4:15","nodeType":"VariableDeclaration","scope":15485,"src":"68591:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":15477,"name":"bool","nodeType":"ElementaryTypeName","src":"68591:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":15478,"nodeType":"ArrayTypeName","src":"68591:6:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":15482,"mutability":"mutable","name":"right","nameLocation":"68629:5:15","nodeType":"VariableDeclaration","scope":15485,"src":"68613:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":15480,"name":"bool","nodeType":"ElementaryTypeName","src":"68613:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":15481,"nodeType":"ArrayTypeName","src":"68613:6:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"}],"src":"68590:45:15"},"returnParameters":{"id":15484,"nodeType":"ParameterList","parameters":[],"src":"68649:0:15"},"scope":16930,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15497,"nodeType":"FunctionDefinition","src":"68773:100:15","nodes":[],"documentation":{"id":15486,"nodeType":"StructuredDocumentation","src":"68656:112:15","text":"Asserts that two arrays of `bool` values are equal and includes error message into revert string on failure."},"functionSelector":"e48a8f8d","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"68782:8:15","parameters":{"id":15495,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15489,"mutability":"mutable","name":"left","nameLocation":"68807:4:15","nodeType":"VariableDeclaration","scope":15497,"src":"68791:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":15487,"name":"bool","nodeType":"ElementaryTypeName","src":"68791:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":15488,"nodeType":"ArrayTypeName","src":"68791:6:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":15492,"mutability":"mutable","name":"right","nameLocation":"68829:5:15","nodeType":"VariableDeclaration","scope":15497,"src":"68813:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":15490,"name":"bool","nodeType":"ElementaryTypeName","src":"68813:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":15491,"nodeType":"ArrayTypeName","src":"68813:6:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":15494,"mutability":"mutable","name":"error","nameLocation":"68852:5:15","nodeType":"VariableDeclaration","scope":15497,"src":"68836:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15493,"name":"string","nodeType":"ElementaryTypeName","src":"68836:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"68790:68:15"},"returnParameters":{"id":15496,"nodeType":"ParameterList","parameters":[],"src":"68872:0:15"},"scope":16930,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15507,"nodeType":"FunctionDefinition","src":"68941:83:15","nodes":[],"documentation":{"id":15498,"nodeType":"StructuredDocumentation","src":"68879:57:15","text":"Asserts that two arrays of `uint256 values are equal."},"functionSelector":"975d5a12","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"68950:8:15","parameters":{"id":15505,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15501,"mutability":"mutable","name":"left","nameLocation":"68978:4:15","nodeType":"VariableDeclaration","scope":15507,"src":"68959:23:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":15499,"name":"uint256","nodeType":"ElementaryTypeName","src":"68959:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":15500,"nodeType":"ArrayTypeName","src":"68959:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":15504,"mutability":"mutable","name":"right","nameLocation":"69003:5:15","nodeType":"VariableDeclaration","scope":15507,"src":"68984:24:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":15502,"name":"uint256","nodeType":"ElementaryTypeName","src":"68984:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":15503,"nodeType":"ArrayTypeName","src":"68984:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"68958:51:15"},"returnParameters":{"id":15506,"nodeType":"ParameterList","parameters":[],"src":"69023:0:15"},"scope":16930,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15519,"nodeType":"FunctionDefinition","src":"69150:106:15","nodes":[],"documentation":{"id":15508,"nodeType":"StructuredDocumentation","src":"69030:115:15","text":"Asserts that two arrays of `uint256` values are equal and includes error message into revert string on failure."},"functionSelector":"5d18c73a","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"69159:8:15","parameters":{"id":15517,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15511,"mutability":"mutable","name":"left","nameLocation":"69187:4:15","nodeType":"VariableDeclaration","scope":15519,"src":"69168:23:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":15509,"name":"uint256","nodeType":"ElementaryTypeName","src":"69168:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":15510,"nodeType":"ArrayTypeName","src":"69168:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":15514,"mutability":"mutable","name":"right","nameLocation":"69212:5:15","nodeType":"VariableDeclaration","scope":15519,"src":"69193:24:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":15512,"name":"uint256","nodeType":"ElementaryTypeName","src":"69193:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":15513,"nodeType":"ArrayTypeName","src":"69193:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":15516,"mutability":"mutable","name":"error","nameLocation":"69235:5:15","nodeType":"VariableDeclaration","scope":15519,"src":"69219:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15515,"name":"string","nodeType":"ElementaryTypeName","src":"69219:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"69167:74:15"},"returnParameters":{"id":15518,"nodeType":"ParameterList","parameters":[],"src":"69255:0:15"},"scope":16930,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15529,"nodeType":"FunctionDefinition","src":"69324:81:15","nodes":[],"documentation":{"id":15520,"nodeType":"StructuredDocumentation","src":"69262:57:15","text":"Asserts that two arrays of `int256` values are equal."},"functionSelector":"711043ac","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"69333:8:15","parameters":{"id":15527,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15523,"mutability":"mutable","name":"left","nameLocation":"69360:4:15","nodeType":"VariableDeclaration","scope":15529,"src":"69342:22:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_calldata_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":15521,"name":"int256","nodeType":"ElementaryTypeName","src":"69342:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":15522,"nodeType":"ArrayTypeName","src":"69342:8:15","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"},{"constant":false,"id":15526,"mutability":"mutable","name":"right","nameLocation":"69384:5:15","nodeType":"VariableDeclaration","scope":15529,"src":"69366:23:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_calldata_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":15524,"name":"int256","nodeType":"ElementaryTypeName","src":"69366:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":15525,"nodeType":"ArrayTypeName","src":"69366:8:15","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"}],"src":"69341:49:15"},"returnParameters":{"id":15528,"nodeType":"ParameterList","parameters":[],"src":"69404:0:15"},"scope":16930,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15541,"nodeType":"FunctionDefinition","src":"69530:104:15","nodes":[],"documentation":{"id":15530,"nodeType":"StructuredDocumentation","src":"69411:114:15","text":"Asserts that two arrays of `int256` values are equal and includes error message into revert string on failure."},"functionSelector":"191f1b30","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"69539:8:15","parameters":{"id":15539,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15533,"mutability":"mutable","name":"left","nameLocation":"69566:4:15","nodeType":"VariableDeclaration","scope":15541,"src":"69548:22:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_calldata_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":15531,"name":"int256","nodeType":"ElementaryTypeName","src":"69548:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":15532,"nodeType":"ArrayTypeName","src":"69548:8:15","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"},{"constant":false,"id":15536,"mutability":"mutable","name":"right","nameLocation":"69590:5:15","nodeType":"VariableDeclaration","scope":15541,"src":"69572:23:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_calldata_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":15534,"name":"int256","nodeType":"ElementaryTypeName","src":"69572:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":15535,"nodeType":"ArrayTypeName","src":"69572:8:15","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"},{"constant":false,"id":15538,"mutability":"mutable","name":"error","nameLocation":"69613:5:15","nodeType":"VariableDeclaration","scope":15541,"src":"69597:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15537,"name":"string","nodeType":"ElementaryTypeName","src":"69597:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"69547:72:15"},"returnParameters":{"id":15540,"nodeType":"ParameterList","parameters":[],"src":"69633:0:15"},"scope":16930,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15549,"nodeType":"FunctionDefinition","src":"69693:61:15","nodes":[],"documentation":{"id":15542,"nodeType":"StructuredDocumentation","src":"69640:48:15","text":"Asserts that two `uint256` values are equal."},"functionSelector":"98296c54","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"69702:8:15","parameters":{"id":15547,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15544,"mutability":"mutable","name":"left","nameLocation":"69719:4:15","nodeType":"VariableDeclaration","scope":15549,"src":"69711:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15543,"name":"uint256","nodeType":"ElementaryTypeName","src":"69711:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15546,"mutability":"mutable","name":"right","nameLocation":"69733:5:15","nodeType":"VariableDeclaration","scope":15549,"src":"69725:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15545,"name":"uint256","nodeType":"ElementaryTypeName","src":"69725:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"69710:29:15"},"returnParameters":{"id":15548,"nodeType":"ParameterList","parameters":[],"src":"69753:0:15"},"scope":16930,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15559,"nodeType":"FunctionDefinition","src":"69823:83:15","nodes":[],"documentation":{"id":15550,"nodeType":"StructuredDocumentation","src":"69760:58:15","text":"Asserts that two arrays of `address` values are equal."},"functionSelector":"3868ac34","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"69832:8:15","parameters":{"id":15557,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15553,"mutability":"mutable","name":"left","nameLocation":"69860:4:15","nodeType":"VariableDeclaration","scope":15559,"src":"69841:23:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":15551,"name":"address","nodeType":"ElementaryTypeName","src":"69841:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":15552,"nodeType":"ArrayTypeName","src":"69841:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":15556,"mutability":"mutable","name":"right","nameLocation":"69885:5:15","nodeType":"VariableDeclaration","scope":15559,"src":"69866:24:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":15554,"name":"address","nodeType":"ElementaryTypeName","src":"69866:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":15555,"nodeType":"ArrayTypeName","src":"69866:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"69840:51:15"},"returnParameters":{"id":15558,"nodeType":"ParameterList","parameters":[],"src":"69905:0:15"},"scope":16930,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15571,"nodeType":"FunctionDefinition","src":"70032:106:15","nodes":[],"documentation":{"id":15560,"nodeType":"StructuredDocumentation","src":"69912:115:15","text":"Asserts that two arrays of `address` values are equal and includes error message into revert string on failure."},"functionSelector":"3e9173c5","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"70041:8:15","parameters":{"id":15569,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15563,"mutability":"mutable","name":"left","nameLocation":"70069:4:15","nodeType":"VariableDeclaration","scope":15571,"src":"70050:23:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":15561,"name":"address","nodeType":"ElementaryTypeName","src":"70050:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":15562,"nodeType":"ArrayTypeName","src":"70050:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":15566,"mutability":"mutable","name":"right","nameLocation":"70094:5:15","nodeType":"VariableDeclaration","scope":15571,"src":"70075:24:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":15564,"name":"address","nodeType":"ElementaryTypeName","src":"70075:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":15565,"nodeType":"ArrayTypeName","src":"70075:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":15568,"mutability":"mutable","name":"error","nameLocation":"70117:5:15","nodeType":"VariableDeclaration","scope":15571,"src":"70101:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15567,"name":"string","nodeType":"ElementaryTypeName","src":"70101:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"70049:74:15"},"returnParameters":{"id":15570,"nodeType":"ParameterList","parameters":[],"src":"70137:0:15"},"scope":16930,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15581,"nodeType":"FunctionDefinition","src":"70207:83:15","nodes":[],"documentation":{"id":15572,"nodeType":"StructuredDocumentation","src":"70144:58:15","text":"Asserts that two arrays of `bytes32` values are equal."},"functionSelector":"0cc9ee84","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"70216:8:15","parameters":{"id":15579,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15575,"mutability":"mutable","name":"left","nameLocation":"70244:4:15","nodeType":"VariableDeclaration","scope":15581,"src":"70225:23:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":15573,"name":"bytes32","nodeType":"ElementaryTypeName","src":"70225:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":15574,"nodeType":"ArrayTypeName","src":"70225:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":15578,"mutability":"mutable","name":"right","nameLocation":"70269:5:15","nodeType":"VariableDeclaration","scope":15581,"src":"70250:24:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":15576,"name":"bytes32","nodeType":"ElementaryTypeName","src":"70250:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":15577,"nodeType":"ArrayTypeName","src":"70250:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"70224:51:15"},"returnParameters":{"id":15580,"nodeType":"ParameterList","parameters":[],"src":"70289:0:15"},"scope":16930,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15593,"nodeType":"FunctionDefinition","src":"70416:106:15","nodes":[],"documentation":{"id":15582,"nodeType":"StructuredDocumentation","src":"70296:115:15","text":"Asserts that two arrays of `bytes32` values are equal and includes error message into revert string on failure."},"functionSelector":"e03e9177","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"70425:8:15","parameters":{"id":15591,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15585,"mutability":"mutable","name":"left","nameLocation":"70453:4:15","nodeType":"VariableDeclaration","scope":15593,"src":"70434:23:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":15583,"name":"bytes32","nodeType":"ElementaryTypeName","src":"70434:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":15584,"nodeType":"ArrayTypeName","src":"70434:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":15588,"mutability":"mutable","name":"right","nameLocation":"70478:5:15","nodeType":"VariableDeclaration","scope":15593,"src":"70459:24:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":15586,"name":"bytes32","nodeType":"ElementaryTypeName","src":"70459:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":15587,"nodeType":"ArrayTypeName","src":"70459:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":15590,"mutability":"mutable","name":"error","nameLocation":"70501:5:15","nodeType":"VariableDeclaration","scope":15593,"src":"70485:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15589,"name":"string","nodeType":"ElementaryTypeName","src":"70485:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"70433:74:15"},"returnParameters":{"id":15592,"nodeType":"ParameterList","parameters":[],"src":"70521:0:15"},"scope":16930,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15603,"nodeType":"FunctionDefinition","src":"70590:81:15","nodes":[],"documentation":{"id":15594,"nodeType":"StructuredDocumentation","src":"70528:57:15","text":"Asserts that two arrays of `string` values are equal."},"functionSelector":"cf1c049c","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"70599:8:15","parameters":{"id":15601,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15597,"mutability":"mutable","name":"left","nameLocation":"70626:4:15","nodeType":"VariableDeclaration","scope":15603,"src":"70608:22:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":15595,"name":"string","nodeType":"ElementaryTypeName","src":"70608:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":15596,"nodeType":"ArrayTypeName","src":"70608:8:15","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"},{"constant":false,"id":15600,"mutability":"mutable","name":"right","nameLocation":"70650:5:15","nodeType":"VariableDeclaration","scope":15603,"src":"70632:23:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":15598,"name":"string","nodeType":"ElementaryTypeName","src":"70632:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":15599,"nodeType":"ArrayTypeName","src":"70632:8:15","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"70607:49:15"},"returnParameters":{"id":15602,"nodeType":"ParameterList","parameters":[],"src":"70670:0:15"},"scope":16930,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15615,"nodeType":"FunctionDefinition","src":"70796:104:15","nodes":[],"documentation":{"id":15604,"nodeType":"StructuredDocumentation","src":"70677:114:15","text":"Asserts that two arrays of `string` values are equal and includes error message into revert string on failure."},"functionSelector":"eff6b27d","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"70805:8:15","parameters":{"id":15613,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15607,"mutability":"mutable","name":"left","nameLocation":"70832:4:15","nodeType":"VariableDeclaration","scope":15615,"src":"70814:22:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":15605,"name":"string","nodeType":"ElementaryTypeName","src":"70814:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":15606,"nodeType":"ArrayTypeName","src":"70814:8:15","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"},{"constant":false,"id":15610,"mutability":"mutable","name":"right","nameLocation":"70856:5:15","nodeType":"VariableDeclaration","scope":15615,"src":"70838:23:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":15608,"name":"string","nodeType":"ElementaryTypeName","src":"70838:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":15609,"nodeType":"ArrayTypeName","src":"70838:8:15","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"},{"constant":false,"id":15612,"mutability":"mutable","name":"error","nameLocation":"70879:5:15","nodeType":"VariableDeclaration","scope":15615,"src":"70863:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15611,"name":"string","nodeType":"ElementaryTypeName","src":"70863:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"70813:72:15"},"returnParameters":{"id":15614,"nodeType":"ParameterList","parameters":[],"src":"70899:0:15"},"scope":16930,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15625,"nodeType":"FunctionDefinition","src":"70967:79:15","nodes":[],"documentation":{"id":15616,"nodeType":"StructuredDocumentation","src":"70906:56:15","text":"Asserts that two arrays of `bytes` values are equal."},"functionSelector":"e5fb9b4a","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"70976:8:15","parameters":{"id":15623,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15619,"mutability":"mutable","name":"left","nameLocation":"71002:4:15","nodeType":"VariableDeclaration","scope":15625,"src":"70985:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":15617,"name":"bytes","nodeType":"ElementaryTypeName","src":"70985:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":15618,"nodeType":"ArrayTypeName","src":"70985:7:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"},{"constant":false,"id":15622,"mutability":"mutable","name":"right","nameLocation":"71025:5:15","nodeType":"VariableDeclaration","scope":15625,"src":"71008:22:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":15620,"name":"bytes","nodeType":"ElementaryTypeName","src":"71008:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":15621,"nodeType":"ArrayTypeName","src":"71008:7:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"70984:47:15"},"returnParameters":{"id":15624,"nodeType":"ParameterList","parameters":[],"src":"71045:0:15"},"scope":16930,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15637,"nodeType":"FunctionDefinition","src":"71170:102:15","nodes":[],"documentation":{"id":15626,"nodeType":"StructuredDocumentation","src":"71052:113:15","text":"Asserts that two arrays of `bytes` values are equal and includes error message into revert string on failure."},"functionSelector":"f413f0b6","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"71179:8:15","parameters":{"id":15635,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15629,"mutability":"mutable","name":"left","nameLocation":"71205:4:15","nodeType":"VariableDeclaration","scope":15637,"src":"71188:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":15627,"name":"bytes","nodeType":"ElementaryTypeName","src":"71188:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":15628,"nodeType":"ArrayTypeName","src":"71188:7:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"},{"constant":false,"id":15632,"mutability":"mutable","name":"right","nameLocation":"71228:5:15","nodeType":"VariableDeclaration","scope":15637,"src":"71211:22:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":15630,"name":"bytes","nodeType":"ElementaryTypeName","src":"71211:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":15631,"nodeType":"ArrayTypeName","src":"71211:7:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"},{"constant":false,"id":15634,"mutability":"mutable","name":"error","nameLocation":"71251:5:15","nodeType":"VariableDeclaration","scope":15637,"src":"71235:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15633,"name":"string","nodeType":"ElementaryTypeName","src":"71235:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"71187:70:15"},"returnParameters":{"id":15636,"nodeType":"ParameterList","parameters":[],"src":"71271:0:15"},"scope":16930,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15647,"nodeType":"FunctionDefinition","src":"71388:84:15","nodes":[],"documentation":{"id":15638,"nodeType":"StructuredDocumentation","src":"71278:105:15","text":"Asserts that two `uint256` values are equal and includes error message into revert string on failure."},"functionSelector":"88b44c85","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"71397:8:15","parameters":{"id":15645,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15640,"mutability":"mutable","name":"left","nameLocation":"71414:4:15","nodeType":"VariableDeclaration","scope":15647,"src":"71406:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15639,"name":"uint256","nodeType":"ElementaryTypeName","src":"71406:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15642,"mutability":"mutable","name":"right","nameLocation":"71428:5:15","nodeType":"VariableDeclaration","scope":15647,"src":"71420:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15641,"name":"uint256","nodeType":"ElementaryTypeName","src":"71420:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15644,"mutability":"mutable","name":"error","nameLocation":"71451:5:15","nodeType":"VariableDeclaration","scope":15647,"src":"71435:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15643,"name":"string","nodeType":"ElementaryTypeName","src":"71435:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"71405:52:15"},"returnParameters":{"id":15646,"nodeType":"ParameterList","parameters":[],"src":"71471:0:15"},"scope":16930,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15655,"nodeType":"FunctionDefinition","src":"71530:59:15","nodes":[],"documentation":{"id":15648,"nodeType":"StructuredDocumentation","src":"71478:47:15","text":"Asserts that two `int256` values are equal."},"functionSelector":"fe74f05b","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"71539:8:15","parameters":{"id":15653,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15650,"mutability":"mutable","name":"left","nameLocation":"71555:4:15","nodeType":"VariableDeclaration","scope":15655,"src":"71548:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":15649,"name":"int256","nodeType":"ElementaryTypeName","src":"71548:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":15652,"mutability":"mutable","name":"right","nameLocation":"71568:5:15","nodeType":"VariableDeclaration","scope":15655,"src":"71561:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":15651,"name":"int256","nodeType":"ElementaryTypeName","src":"71561:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"71547:27:15"},"returnParameters":{"id":15654,"nodeType":"ParameterList","parameters":[],"src":"71588:0:15"},"scope":16930,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15665,"nodeType":"FunctionDefinition","src":"71704:82:15","nodes":[],"documentation":{"id":15656,"nodeType":"StructuredDocumentation","src":"71595:104:15","text":"Asserts that two `int256` values are equal and includes error message into revert string on failure."},"functionSelector":"714a2f13","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"71713:8:15","parameters":{"id":15663,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15658,"mutability":"mutable","name":"left","nameLocation":"71729:4:15","nodeType":"VariableDeclaration","scope":15665,"src":"71722:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":15657,"name":"int256","nodeType":"ElementaryTypeName","src":"71722:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":15660,"mutability":"mutable","name":"right","nameLocation":"71742:5:15","nodeType":"VariableDeclaration","scope":15665,"src":"71735:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":15659,"name":"int256","nodeType":"ElementaryTypeName","src":"71735:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":15662,"mutability":"mutable","name":"error","nameLocation":"71765:5:15","nodeType":"VariableDeclaration","scope":15665,"src":"71749:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15661,"name":"string","nodeType":"ElementaryTypeName","src":"71749:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"71721:50:15"},"returnParameters":{"id":15664,"nodeType":"ParameterList","parameters":[],"src":"71785:0:15"},"scope":16930,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15673,"nodeType":"FunctionDefinition","src":"71845:61:15","nodes":[],"documentation":{"id":15666,"nodeType":"StructuredDocumentation","src":"71792:48:15","text":"Asserts that two `address` values are equal."},"functionSelector":"515361f6","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"71854:8:15","parameters":{"id":15671,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15668,"mutability":"mutable","name":"left","nameLocation":"71871:4:15","nodeType":"VariableDeclaration","scope":15673,"src":"71863:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15667,"name":"address","nodeType":"ElementaryTypeName","src":"71863:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":15670,"mutability":"mutable","name":"right","nameLocation":"71885:5:15","nodeType":"VariableDeclaration","scope":15673,"src":"71877:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15669,"name":"address","nodeType":"ElementaryTypeName","src":"71877:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"71862:29:15"},"returnParameters":{"id":15672,"nodeType":"ParameterList","parameters":[],"src":"71905:0:15"},"scope":16930,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15683,"nodeType":"FunctionDefinition","src":"72022:84:15","nodes":[],"documentation":{"id":15674,"nodeType":"StructuredDocumentation","src":"71912:105:15","text":"Asserts that two `address` values are equal and includes error message into revert string on failure."},"functionSelector":"2f2769d1","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"72031:8:15","parameters":{"id":15681,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15676,"mutability":"mutable","name":"left","nameLocation":"72048:4:15","nodeType":"VariableDeclaration","scope":15683,"src":"72040:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15675,"name":"address","nodeType":"ElementaryTypeName","src":"72040:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":15678,"mutability":"mutable","name":"right","nameLocation":"72062:5:15","nodeType":"VariableDeclaration","scope":15683,"src":"72054:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15677,"name":"address","nodeType":"ElementaryTypeName","src":"72054:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":15680,"mutability":"mutable","name":"error","nameLocation":"72085:5:15","nodeType":"VariableDeclaration","scope":15683,"src":"72069:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15679,"name":"string","nodeType":"ElementaryTypeName","src":"72069:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"72039:52:15"},"returnParameters":{"id":15682,"nodeType":"ParameterList","parameters":[],"src":"72105:0:15"},"scope":16930,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15691,"nodeType":"FunctionDefinition","src":"72165:61:15","nodes":[],"documentation":{"id":15684,"nodeType":"StructuredDocumentation","src":"72112:48:15","text":"Asserts that two `bytes32` values are equal."},"functionSelector":"7c84c69b","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"72174:8:15","parameters":{"id":15689,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15686,"mutability":"mutable","name":"left","nameLocation":"72191:4:15","nodeType":"VariableDeclaration","scope":15691,"src":"72183:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":15685,"name":"bytes32","nodeType":"ElementaryTypeName","src":"72183:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":15688,"mutability":"mutable","name":"right","nameLocation":"72205:5:15","nodeType":"VariableDeclaration","scope":15691,"src":"72197:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":15687,"name":"bytes32","nodeType":"ElementaryTypeName","src":"72197:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"72182:29:15"},"returnParameters":{"id":15690,"nodeType":"ParameterList","parameters":[],"src":"72225:0:15"},"scope":16930,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15701,"nodeType":"FunctionDefinition","src":"72342:84:15","nodes":[],"documentation":{"id":15692,"nodeType":"StructuredDocumentation","src":"72232:105:15","text":"Asserts that two `bytes32` values are equal and includes error message into revert string on failure."},"functionSelector":"c1fa1ed0","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"72351:8:15","parameters":{"id":15699,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15694,"mutability":"mutable","name":"left","nameLocation":"72368:4:15","nodeType":"VariableDeclaration","scope":15701,"src":"72360:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":15693,"name":"bytes32","nodeType":"ElementaryTypeName","src":"72360:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":15696,"mutability":"mutable","name":"right","nameLocation":"72382:5:15","nodeType":"VariableDeclaration","scope":15701,"src":"72374:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":15695,"name":"bytes32","nodeType":"ElementaryTypeName","src":"72374:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":15698,"mutability":"mutable","name":"error","nameLocation":"72405:5:15","nodeType":"VariableDeclaration","scope":15701,"src":"72389:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15697,"name":"string","nodeType":"ElementaryTypeName","src":"72389:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"72359:52:15"},"returnParameters":{"id":15700,"nodeType":"ParameterList","parameters":[],"src":"72425:0:15"},"scope":16930,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15707,"nodeType":"FunctionDefinition","src":"72483:51:15","nodes":[],"documentation":{"id":15702,"nodeType":"StructuredDocumentation","src":"72432:46:15","text":"Asserts that the given condition is false."},"functionSelector":"a5982885","implemented":false,"kind":"function","modifiers":[],"name":"assertFalse","nameLocation":"72492:11:15","parameters":{"id":15705,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15704,"mutability":"mutable","name":"condition","nameLocation":"72509:9:15","nodeType":"VariableDeclaration","scope":15707,"src":"72504:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":15703,"name":"bool","nodeType":"ElementaryTypeName","src":"72504:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"72503:16:15"},"returnParameters":{"id":15706,"nodeType":"ParameterList","parameters":[],"src":"72533:0:15"},"scope":16930,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15715,"nodeType":"FunctionDefinition","src":"72648:74:15","nodes":[],"documentation":{"id":15708,"nodeType":"StructuredDocumentation","src":"72540:103:15","text":"Asserts that the given condition is false and includes error message into revert string on failure."},"functionSelector":"7ba04809","implemented":false,"kind":"function","modifiers":[],"name":"assertFalse","nameLocation":"72657:11:15","parameters":{"id":15713,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15710,"mutability":"mutable","name":"condition","nameLocation":"72674:9:15","nodeType":"VariableDeclaration","scope":15715,"src":"72669:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":15709,"name":"bool","nodeType":"ElementaryTypeName","src":"72669:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":15712,"mutability":"mutable","name":"error","nameLocation":"72701:5:15","nodeType":"VariableDeclaration","scope":15715,"src":"72685:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15711,"name":"string","nodeType":"ElementaryTypeName","src":"72685:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"72668:39:15"},"returnParameters":{"id":15714,"nodeType":"ParameterList","parameters":[],"src":"72721:0:15"},"scope":16930,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15725,"nodeType":"FunctionDefinition","src":"72883:86:15","nodes":[],"documentation":{"id":15716,"nodeType":"StructuredDocumentation","src":"72728:150:15","text":"Compares two `uint256` values. Expects first value to be greater than or equal to second.\n Formats values with decimals in failure message."},"functionSelector":"3d1fe08a","implemented":false,"kind":"function","modifiers":[],"name":"assertGeDecimal","nameLocation":"72892:15:15","parameters":{"id":15723,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15718,"mutability":"mutable","name":"left","nameLocation":"72916:4:15","nodeType":"VariableDeclaration","scope":15725,"src":"72908:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15717,"name":"uint256","nodeType":"ElementaryTypeName","src":"72908:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15720,"mutability":"mutable","name":"right","nameLocation":"72930:5:15","nodeType":"VariableDeclaration","scope":15725,"src":"72922:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15719,"name":"uint256","nodeType":"ElementaryTypeName","src":"72922:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15722,"mutability":"mutable","name":"decimals","nameLocation":"72945:8:15","nodeType":"VariableDeclaration","scope":15725,"src":"72937:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15721,"name":"uint256","nodeType":"ElementaryTypeName","src":"72937:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"72907:47:15"},"returnParameters":{"id":15724,"nodeType":"ParameterList","parameters":[],"src":"72968:0:15"},"scope":16930,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15737,"nodeType":"FunctionDefinition","src":"73184:109:15","nodes":[],"documentation":{"id":15726,"nodeType":"StructuredDocumentation","src":"72975:204:15","text":"Compares two `uint256` values. Expects first value to be greater than or equal to second.\n Formats values with decimals in failure message. Includes error message into revert string on failure."},"functionSelector":"8bff9133","implemented":false,"kind":"function","modifiers":[],"name":"assertGeDecimal","nameLocation":"73193:15:15","parameters":{"id":15735,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15728,"mutability":"mutable","name":"left","nameLocation":"73217:4:15","nodeType":"VariableDeclaration","scope":15737,"src":"73209:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15727,"name":"uint256","nodeType":"ElementaryTypeName","src":"73209:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15730,"mutability":"mutable","name":"right","nameLocation":"73231:5:15","nodeType":"VariableDeclaration","scope":15737,"src":"73223:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15729,"name":"uint256","nodeType":"ElementaryTypeName","src":"73223:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15732,"mutability":"mutable","name":"decimals","nameLocation":"73246:8:15","nodeType":"VariableDeclaration","scope":15737,"src":"73238:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15731,"name":"uint256","nodeType":"ElementaryTypeName","src":"73238:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15734,"mutability":"mutable","name":"error","nameLocation":"73272:5:15","nodeType":"VariableDeclaration","scope":15737,"src":"73256:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15733,"name":"string","nodeType":"ElementaryTypeName","src":"73256:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"73208:70:15"},"returnParameters":{"id":15736,"nodeType":"ParameterList","parameters":[],"src":"73292:0:15"},"scope":16930,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15747,"nodeType":"FunctionDefinition","src":"73453:84:15","nodes":[],"documentation":{"id":15738,"nodeType":"StructuredDocumentation","src":"73299:149:15","text":"Compares two `int256` values. Expects first value to be greater than or equal to second.\n Formats values with decimals in failure message."},"functionSelector":"dc28c0f1","implemented":false,"kind":"function","modifiers":[],"name":"assertGeDecimal","nameLocation":"73462:15:15","parameters":{"id":15745,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15740,"mutability":"mutable","name":"left","nameLocation":"73485:4:15","nodeType":"VariableDeclaration","scope":15747,"src":"73478:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":15739,"name":"int256","nodeType":"ElementaryTypeName","src":"73478:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":15742,"mutability":"mutable","name":"right","nameLocation":"73498:5:15","nodeType":"VariableDeclaration","scope":15747,"src":"73491:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":15741,"name":"int256","nodeType":"ElementaryTypeName","src":"73491:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":15744,"mutability":"mutable","name":"decimals","nameLocation":"73513:8:15","nodeType":"VariableDeclaration","scope":15747,"src":"73505:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15743,"name":"uint256","nodeType":"ElementaryTypeName","src":"73505:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"73477:45:15"},"returnParameters":{"id":15746,"nodeType":"ParameterList","parameters":[],"src":"73536:0:15"},"scope":16930,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15759,"nodeType":"FunctionDefinition","src":"73751:107:15","nodes":[],"documentation":{"id":15748,"nodeType":"StructuredDocumentation","src":"73543:203:15","text":"Compares two `int256` values. Expects first value to be greater than or equal to second.\n Formats values with decimals in failure message. Includes error message into revert string on failure."},"functionSelector":"5df93c9b","implemented":false,"kind":"function","modifiers":[],"name":"assertGeDecimal","nameLocation":"73760:15:15","parameters":{"id":15757,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15750,"mutability":"mutable","name":"left","nameLocation":"73783:4:15","nodeType":"VariableDeclaration","scope":15759,"src":"73776:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":15749,"name":"int256","nodeType":"ElementaryTypeName","src":"73776:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":15752,"mutability":"mutable","name":"right","nameLocation":"73796:5:15","nodeType":"VariableDeclaration","scope":15759,"src":"73789:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":15751,"name":"int256","nodeType":"ElementaryTypeName","src":"73789:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":15754,"mutability":"mutable","name":"decimals","nameLocation":"73811:8:15","nodeType":"VariableDeclaration","scope":15759,"src":"73803:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15753,"name":"uint256","nodeType":"ElementaryTypeName","src":"73803:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15756,"mutability":"mutable","name":"error","nameLocation":"73837:5:15","nodeType":"VariableDeclaration","scope":15759,"src":"73821:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15755,"name":"string","nodeType":"ElementaryTypeName","src":"73821:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"73775:68:15"},"returnParameters":{"id":15758,"nodeType":"ParameterList","parameters":[],"src":"73857:0:15"},"scope":16930,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15767,"nodeType":"FunctionDefinition","src":"73962:61:15","nodes":[],"documentation":{"id":15760,"nodeType":"StructuredDocumentation","src":"73864:93:15","text":"Compares two `uint256` values. Expects first value to be greater than or equal to second."},"functionSelector":"a8d4d1d9","implemented":false,"kind":"function","modifiers":[],"name":"assertGe","nameLocation":"73971:8:15","parameters":{"id":15765,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15762,"mutability":"mutable","name":"left","nameLocation":"73988:4:15","nodeType":"VariableDeclaration","scope":15767,"src":"73980:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15761,"name":"uint256","nodeType":"ElementaryTypeName","src":"73980:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15764,"mutability":"mutable","name":"right","nameLocation":"74002:5:15","nodeType":"VariableDeclaration","scope":15767,"src":"73994:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15763,"name":"uint256","nodeType":"ElementaryTypeName","src":"73994:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"73979:29:15"},"returnParameters":{"id":15766,"nodeType":"ParameterList","parameters":[],"src":"74022:0:15"},"scope":16930,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15777,"nodeType":"FunctionDefinition","src":"74189:84:15","nodes":[],"documentation":{"id":15768,"nodeType":"StructuredDocumentation","src":"74029:155:15","text":"Compares two `uint256` values. Expects first value to be greater than or equal to second.\n Includes error message into revert string on failure."},"functionSelector":"e25242c0","implemented":false,"kind":"function","modifiers":[],"name":"assertGe","nameLocation":"74198:8:15","parameters":{"id":15775,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15770,"mutability":"mutable","name":"left","nameLocation":"74215:4:15","nodeType":"VariableDeclaration","scope":15777,"src":"74207:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15769,"name":"uint256","nodeType":"ElementaryTypeName","src":"74207:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15772,"mutability":"mutable","name":"right","nameLocation":"74229:5:15","nodeType":"VariableDeclaration","scope":15777,"src":"74221:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15771,"name":"uint256","nodeType":"ElementaryTypeName","src":"74221:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15774,"mutability":"mutable","name":"error","nameLocation":"74252:5:15","nodeType":"VariableDeclaration","scope":15777,"src":"74236:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15773,"name":"string","nodeType":"ElementaryTypeName","src":"74236:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"74206:52:15"},"returnParameters":{"id":15776,"nodeType":"ParameterList","parameters":[],"src":"74272:0:15"},"scope":16930,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15785,"nodeType":"FunctionDefinition","src":"74376:59:15","nodes":[],"documentation":{"id":15778,"nodeType":"StructuredDocumentation","src":"74279:92:15","text":"Compares two `int256` values. Expects first value to be greater than or equal to second."},"functionSelector":"0a30b771","implemented":false,"kind":"function","modifiers":[],"name":"assertGe","nameLocation":"74385:8:15","parameters":{"id":15783,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15780,"mutability":"mutable","name":"left","nameLocation":"74401:4:15","nodeType":"VariableDeclaration","scope":15785,"src":"74394:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":15779,"name":"int256","nodeType":"ElementaryTypeName","src":"74394:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":15782,"mutability":"mutable","name":"right","nameLocation":"74414:5:15","nodeType":"VariableDeclaration","scope":15785,"src":"74407:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":15781,"name":"int256","nodeType":"ElementaryTypeName","src":"74407:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"74393:27:15"},"returnParameters":{"id":15784,"nodeType":"ParameterList","parameters":[],"src":"74434:0:15"},"scope":16930,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15795,"nodeType":"FunctionDefinition","src":"74600:82:15","nodes":[],"documentation":{"id":15786,"nodeType":"StructuredDocumentation","src":"74441:154:15","text":"Compares two `int256` values. Expects first value to be greater than or equal to second.\n Includes error message into revert string on failure."},"functionSelector":"a84328dd","implemented":false,"kind":"function","modifiers":[],"name":"assertGe","nameLocation":"74609:8:15","parameters":{"id":15793,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15788,"mutability":"mutable","name":"left","nameLocation":"74625:4:15","nodeType":"VariableDeclaration","scope":15795,"src":"74618:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":15787,"name":"int256","nodeType":"ElementaryTypeName","src":"74618:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":15790,"mutability":"mutable","name":"right","nameLocation":"74638:5:15","nodeType":"VariableDeclaration","scope":15795,"src":"74631:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":15789,"name":"int256","nodeType":"ElementaryTypeName","src":"74631:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":15792,"mutability":"mutable","name":"error","nameLocation":"74661:5:15","nodeType":"VariableDeclaration","scope":15795,"src":"74645:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15791,"name":"string","nodeType":"ElementaryTypeName","src":"74645:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"74617:50:15"},"returnParameters":{"id":15794,"nodeType":"ParameterList","parameters":[],"src":"74681:0:15"},"scope":16930,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15805,"nodeType":"FunctionDefinition","src":"74831:86:15","nodes":[],"documentation":{"id":15796,"nodeType":"StructuredDocumentation","src":"74688:138:15","text":"Compares two `uint256` values. Expects first value to be greater than second.\n Formats values with decimals in failure message."},"functionSelector":"eccd2437","implemented":false,"kind":"function","modifiers":[],"name":"assertGtDecimal","nameLocation":"74840:15:15","parameters":{"id":15803,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15798,"mutability":"mutable","name":"left","nameLocation":"74864:4:15","nodeType":"VariableDeclaration","scope":15805,"src":"74856:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15797,"name":"uint256","nodeType":"ElementaryTypeName","src":"74856:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15800,"mutability":"mutable","name":"right","nameLocation":"74878:5:15","nodeType":"VariableDeclaration","scope":15805,"src":"74870:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15799,"name":"uint256","nodeType":"ElementaryTypeName","src":"74870:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15802,"mutability":"mutable","name":"decimals","nameLocation":"74893:8:15","nodeType":"VariableDeclaration","scope":15805,"src":"74885:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15801,"name":"uint256","nodeType":"ElementaryTypeName","src":"74885:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"74855:47:15"},"returnParameters":{"id":15804,"nodeType":"ParameterList","parameters":[],"src":"74916:0:15"},"scope":16930,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15817,"nodeType":"FunctionDefinition","src":"75120:109:15","nodes":[],"documentation":{"id":15806,"nodeType":"StructuredDocumentation","src":"74923:192:15","text":"Compares two `uint256` values. Expects first value to be greater than second.\n Formats values with decimals in failure message. Includes error message into revert string on failure."},"functionSelector":"64949a8d","implemented":false,"kind":"function","modifiers":[],"name":"assertGtDecimal","nameLocation":"75129:15:15","parameters":{"id":15815,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15808,"mutability":"mutable","name":"left","nameLocation":"75153:4:15","nodeType":"VariableDeclaration","scope":15817,"src":"75145:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15807,"name":"uint256","nodeType":"ElementaryTypeName","src":"75145:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15810,"mutability":"mutable","name":"right","nameLocation":"75167:5:15","nodeType":"VariableDeclaration","scope":15817,"src":"75159:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15809,"name":"uint256","nodeType":"ElementaryTypeName","src":"75159:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15812,"mutability":"mutable","name":"decimals","nameLocation":"75182:8:15","nodeType":"VariableDeclaration","scope":15817,"src":"75174:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15811,"name":"uint256","nodeType":"ElementaryTypeName","src":"75174:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15814,"mutability":"mutable","name":"error","nameLocation":"75208:5:15","nodeType":"VariableDeclaration","scope":15817,"src":"75192:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15813,"name":"string","nodeType":"ElementaryTypeName","src":"75192:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"75144:70:15"},"returnParameters":{"id":15816,"nodeType":"ParameterList","parameters":[],"src":"75228:0:15"},"scope":16930,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15827,"nodeType":"FunctionDefinition","src":"75377:84:15","nodes":[],"documentation":{"id":15818,"nodeType":"StructuredDocumentation","src":"75235:137:15","text":"Compares two `int256` values. Expects first value to be greater than second.\n Formats values with decimals in failure message."},"functionSelector":"78611f0e","implemented":false,"kind":"function","modifiers":[],"name":"assertGtDecimal","nameLocation":"75386:15:15","parameters":{"id":15825,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15820,"mutability":"mutable","name":"left","nameLocation":"75409:4:15","nodeType":"VariableDeclaration","scope":15827,"src":"75402:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":15819,"name":"int256","nodeType":"ElementaryTypeName","src":"75402:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":15822,"mutability":"mutable","name":"right","nameLocation":"75422:5:15","nodeType":"VariableDeclaration","scope":15827,"src":"75415:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":15821,"name":"int256","nodeType":"ElementaryTypeName","src":"75415:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":15824,"mutability":"mutable","name":"decimals","nameLocation":"75437:8:15","nodeType":"VariableDeclaration","scope":15827,"src":"75429:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15823,"name":"uint256","nodeType":"ElementaryTypeName","src":"75429:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"75401:45:15"},"returnParameters":{"id":15826,"nodeType":"ParameterList","parameters":[],"src":"75460:0:15"},"scope":16930,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15839,"nodeType":"FunctionDefinition","src":"75663:107:15","nodes":[],"documentation":{"id":15828,"nodeType":"StructuredDocumentation","src":"75467:191:15","text":"Compares two `int256` values. Expects first value to be greater than second.\n Formats values with decimals in failure message. Includes error message into revert string on failure."},"functionSelector":"04a5c7ab","implemented":false,"kind":"function","modifiers":[],"name":"assertGtDecimal","nameLocation":"75672:15:15","parameters":{"id":15837,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15830,"mutability":"mutable","name":"left","nameLocation":"75695:4:15","nodeType":"VariableDeclaration","scope":15839,"src":"75688:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":15829,"name":"int256","nodeType":"ElementaryTypeName","src":"75688:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":15832,"mutability":"mutable","name":"right","nameLocation":"75708:5:15","nodeType":"VariableDeclaration","scope":15839,"src":"75701:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":15831,"name":"int256","nodeType":"ElementaryTypeName","src":"75701:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":15834,"mutability":"mutable","name":"decimals","nameLocation":"75723:8:15","nodeType":"VariableDeclaration","scope":15839,"src":"75715:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15833,"name":"uint256","nodeType":"ElementaryTypeName","src":"75715:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15836,"mutability":"mutable","name":"error","nameLocation":"75749:5:15","nodeType":"VariableDeclaration","scope":15839,"src":"75733:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15835,"name":"string","nodeType":"ElementaryTypeName","src":"75733:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"75687:68:15"},"returnParameters":{"id":15838,"nodeType":"ParameterList","parameters":[],"src":"75769:0:15"},"scope":16930,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15847,"nodeType":"FunctionDefinition","src":"75862:61:15","nodes":[],"documentation":{"id":15840,"nodeType":"StructuredDocumentation","src":"75776:81:15","text":"Compares two `uint256` values. Expects first value to be greater than second."},"functionSelector":"db07fcd2","implemented":false,"kind":"function","modifiers":[],"name":"assertGt","nameLocation":"75871:8:15","parameters":{"id":15845,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15842,"mutability":"mutable","name":"left","nameLocation":"75888:4:15","nodeType":"VariableDeclaration","scope":15847,"src":"75880:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15841,"name":"uint256","nodeType":"ElementaryTypeName","src":"75880:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15844,"mutability":"mutable","name":"right","nameLocation":"75902:5:15","nodeType":"VariableDeclaration","scope":15847,"src":"75894:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15843,"name":"uint256","nodeType":"ElementaryTypeName","src":"75894:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"75879:29:15"},"returnParameters":{"id":15846,"nodeType":"ParameterList","parameters":[],"src":"75922:0:15"},"scope":16930,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15857,"nodeType":"FunctionDefinition","src":"76077:84:15","nodes":[],"documentation":{"id":15848,"nodeType":"StructuredDocumentation","src":"75929:143:15","text":"Compares two `uint256` values. Expects first value to be greater than second.\n Includes error message into revert string on failure."},"functionSelector":"d9a3c4d2","implemented":false,"kind":"function","modifiers":[],"name":"assertGt","nameLocation":"76086:8:15","parameters":{"id":15855,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15850,"mutability":"mutable","name":"left","nameLocation":"76103:4:15","nodeType":"VariableDeclaration","scope":15857,"src":"76095:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15849,"name":"uint256","nodeType":"ElementaryTypeName","src":"76095:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15852,"mutability":"mutable","name":"right","nameLocation":"76117:5:15","nodeType":"VariableDeclaration","scope":15857,"src":"76109:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15851,"name":"uint256","nodeType":"ElementaryTypeName","src":"76109:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15854,"mutability":"mutable","name":"error","nameLocation":"76140:5:15","nodeType":"VariableDeclaration","scope":15857,"src":"76124:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15853,"name":"string","nodeType":"ElementaryTypeName","src":"76124:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"76094:52:15"},"returnParameters":{"id":15856,"nodeType":"ParameterList","parameters":[],"src":"76160:0:15"},"scope":16930,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15865,"nodeType":"FunctionDefinition","src":"76252:59:15","nodes":[],"documentation":{"id":15858,"nodeType":"StructuredDocumentation","src":"76167:80:15","text":"Compares two `int256` values. Expects first value to be greater than second."},"functionSelector":"5a362d45","implemented":false,"kind":"function","modifiers":[],"name":"assertGt","nameLocation":"76261:8:15","parameters":{"id":15863,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15860,"mutability":"mutable","name":"left","nameLocation":"76277:4:15","nodeType":"VariableDeclaration","scope":15865,"src":"76270:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":15859,"name":"int256","nodeType":"ElementaryTypeName","src":"76270:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":15862,"mutability":"mutable","name":"right","nameLocation":"76290:5:15","nodeType":"VariableDeclaration","scope":15865,"src":"76283:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":15861,"name":"int256","nodeType":"ElementaryTypeName","src":"76283:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"76269:27:15"},"returnParameters":{"id":15864,"nodeType":"ParameterList","parameters":[],"src":"76310:0:15"},"scope":16930,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15875,"nodeType":"FunctionDefinition","src":"76464:82:15","nodes":[],"documentation":{"id":15866,"nodeType":"StructuredDocumentation","src":"76317:142:15","text":"Compares two `int256` values. Expects first value to be greater than second.\n Includes error message into revert string on failure."},"functionSelector":"f8d33b9b","implemented":false,"kind":"function","modifiers":[],"name":"assertGt","nameLocation":"76473:8:15","parameters":{"id":15873,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15868,"mutability":"mutable","name":"left","nameLocation":"76489:4:15","nodeType":"VariableDeclaration","scope":15875,"src":"76482:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":15867,"name":"int256","nodeType":"ElementaryTypeName","src":"76482:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":15870,"mutability":"mutable","name":"right","nameLocation":"76502:5:15","nodeType":"VariableDeclaration","scope":15875,"src":"76495:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":15869,"name":"int256","nodeType":"ElementaryTypeName","src":"76495:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":15872,"mutability":"mutable","name":"error","nameLocation":"76525:5:15","nodeType":"VariableDeclaration","scope":15875,"src":"76509:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15871,"name":"string","nodeType":"ElementaryTypeName","src":"76509:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"76481:50:15"},"returnParameters":{"id":15874,"nodeType":"ParameterList","parameters":[],"src":"76545:0:15"},"scope":16930,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15885,"nodeType":"FunctionDefinition","src":"76704:86:15","nodes":[],"documentation":{"id":15876,"nodeType":"StructuredDocumentation","src":"76552:147:15","text":"Compares two `uint256` values. Expects first value to be less than or equal to second.\n Formats values with decimals in failure message."},"functionSelector":"c304aab7","implemented":false,"kind":"function","modifiers":[],"name":"assertLeDecimal","nameLocation":"76713:15:15","parameters":{"id":15883,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15878,"mutability":"mutable","name":"left","nameLocation":"76737:4:15","nodeType":"VariableDeclaration","scope":15885,"src":"76729:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15877,"name":"uint256","nodeType":"ElementaryTypeName","src":"76729:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15880,"mutability":"mutable","name":"right","nameLocation":"76751:5:15","nodeType":"VariableDeclaration","scope":15885,"src":"76743:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15879,"name":"uint256","nodeType":"ElementaryTypeName","src":"76743:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15882,"mutability":"mutable","name":"decimals","nameLocation":"76766:8:15","nodeType":"VariableDeclaration","scope":15885,"src":"76758:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15881,"name":"uint256","nodeType":"ElementaryTypeName","src":"76758:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"76728:47:15"},"returnParameters":{"id":15884,"nodeType":"ParameterList","parameters":[],"src":"76789:0:15"},"scope":16930,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15897,"nodeType":"FunctionDefinition","src":"77002:109:15","nodes":[],"documentation":{"id":15886,"nodeType":"StructuredDocumentation","src":"76796:201:15","text":"Compares two `uint256` values. Expects first value to be less than or equal to second.\n Formats values with decimals in failure message. Includes error message into revert string on failure."},"functionSelector":"7fefbbe0","implemented":false,"kind":"function","modifiers":[],"name":"assertLeDecimal","nameLocation":"77011:15:15","parameters":{"id":15895,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15888,"mutability":"mutable","name":"left","nameLocation":"77035:4:15","nodeType":"VariableDeclaration","scope":15897,"src":"77027:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15887,"name":"uint256","nodeType":"ElementaryTypeName","src":"77027:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15890,"mutability":"mutable","name":"right","nameLocation":"77049:5:15","nodeType":"VariableDeclaration","scope":15897,"src":"77041:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15889,"name":"uint256","nodeType":"ElementaryTypeName","src":"77041:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15892,"mutability":"mutable","name":"decimals","nameLocation":"77064:8:15","nodeType":"VariableDeclaration","scope":15897,"src":"77056:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15891,"name":"uint256","nodeType":"ElementaryTypeName","src":"77056:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15894,"mutability":"mutable","name":"error","nameLocation":"77090:5:15","nodeType":"VariableDeclaration","scope":15897,"src":"77074:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15893,"name":"string","nodeType":"ElementaryTypeName","src":"77074:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"77026:70:15"},"returnParameters":{"id":15896,"nodeType":"ParameterList","parameters":[],"src":"77110:0:15"},"scope":16930,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15907,"nodeType":"FunctionDefinition","src":"77268:84:15","nodes":[],"documentation":{"id":15898,"nodeType":"StructuredDocumentation","src":"77117:146:15","text":"Compares two `int256` values. Expects first value to be less than or equal to second.\n Formats values with decimals in failure message."},"functionSelector":"11d1364a","implemented":false,"kind":"function","modifiers":[],"name":"assertLeDecimal","nameLocation":"77277:15:15","parameters":{"id":15905,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15900,"mutability":"mutable","name":"left","nameLocation":"77300:4:15","nodeType":"VariableDeclaration","scope":15907,"src":"77293:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":15899,"name":"int256","nodeType":"ElementaryTypeName","src":"77293:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":15902,"mutability":"mutable","name":"right","nameLocation":"77313:5:15","nodeType":"VariableDeclaration","scope":15907,"src":"77306:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":15901,"name":"int256","nodeType":"ElementaryTypeName","src":"77306:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":15904,"mutability":"mutable","name":"decimals","nameLocation":"77328:8:15","nodeType":"VariableDeclaration","scope":15907,"src":"77320:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15903,"name":"uint256","nodeType":"ElementaryTypeName","src":"77320:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"77292:45:15"},"returnParameters":{"id":15906,"nodeType":"ParameterList","parameters":[],"src":"77351:0:15"},"scope":16930,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15919,"nodeType":"FunctionDefinition","src":"77563:107:15","nodes":[],"documentation":{"id":15908,"nodeType":"StructuredDocumentation","src":"77358:200:15","text":"Compares two `int256` values. Expects first value to be less than or equal to second.\n Formats values with decimals in failure message. Includes error message into revert string on failure."},"functionSelector":"aa5cf788","implemented":false,"kind":"function","modifiers":[],"name":"assertLeDecimal","nameLocation":"77572:15:15","parameters":{"id":15917,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15910,"mutability":"mutable","name":"left","nameLocation":"77595:4:15","nodeType":"VariableDeclaration","scope":15919,"src":"77588:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":15909,"name":"int256","nodeType":"ElementaryTypeName","src":"77588:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":15912,"mutability":"mutable","name":"right","nameLocation":"77608:5:15","nodeType":"VariableDeclaration","scope":15919,"src":"77601:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":15911,"name":"int256","nodeType":"ElementaryTypeName","src":"77601:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":15914,"mutability":"mutable","name":"decimals","nameLocation":"77623:8:15","nodeType":"VariableDeclaration","scope":15919,"src":"77615:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15913,"name":"uint256","nodeType":"ElementaryTypeName","src":"77615:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15916,"mutability":"mutable","name":"error","nameLocation":"77649:5:15","nodeType":"VariableDeclaration","scope":15919,"src":"77633:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15915,"name":"string","nodeType":"ElementaryTypeName","src":"77633:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"77587:68:15"},"returnParameters":{"id":15918,"nodeType":"ParameterList","parameters":[],"src":"77669:0:15"},"scope":16930,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15927,"nodeType":"FunctionDefinition","src":"77771:61:15","nodes":[],"documentation":{"id":15920,"nodeType":"StructuredDocumentation","src":"77676:90:15","text":"Compares two `uint256` values. Expects first value to be less than or equal to second."},"functionSelector":"8466f415","implemented":false,"kind":"function","modifiers":[],"name":"assertLe","nameLocation":"77780:8:15","parameters":{"id":15925,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15922,"mutability":"mutable","name":"left","nameLocation":"77797:4:15","nodeType":"VariableDeclaration","scope":15927,"src":"77789:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15921,"name":"uint256","nodeType":"ElementaryTypeName","src":"77789:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15924,"mutability":"mutable","name":"right","nameLocation":"77811:5:15","nodeType":"VariableDeclaration","scope":15927,"src":"77803:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15923,"name":"uint256","nodeType":"ElementaryTypeName","src":"77803:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"77788:29:15"},"returnParameters":{"id":15926,"nodeType":"ParameterList","parameters":[],"src":"77831:0:15"},"scope":16930,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15937,"nodeType":"FunctionDefinition","src":"77995:84:15","nodes":[],"documentation":{"id":15928,"nodeType":"StructuredDocumentation","src":"77838:152:15","text":"Compares two `uint256` values. Expects first value to be less than or equal to second.\n Includes error message into revert string on failure."},"functionSelector":"d17d4b0d","implemented":false,"kind":"function","modifiers":[],"name":"assertLe","nameLocation":"78004:8:15","parameters":{"id":15935,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15930,"mutability":"mutable","name":"left","nameLocation":"78021:4:15","nodeType":"VariableDeclaration","scope":15937,"src":"78013:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15929,"name":"uint256","nodeType":"ElementaryTypeName","src":"78013:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15932,"mutability":"mutable","name":"right","nameLocation":"78035:5:15","nodeType":"VariableDeclaration","scope":15937,"src":"78027:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15931,"name":"uint256","nodeType":"ElementaryTypeName","src":"78027:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15934,"mutability":"mutable","name":"error","nameLocation":"78058:5:15","nodeType":"VariableDeclaration","scope":15937,"src":"78042:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15933,"name":"string","nodeType":"ElementaryTypeName","src":"78042:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"78012:52:15"},"returnParameters":{"id":15936,"nodeType":"ParameterList","parameters":[],"src":"78078:0:15"},"scope":16930,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15945,"nodeType":"FunctionDefinition","src":"78179:59:15","nodes":[],"documentation":{"id":15938,"nodeType":"StructuredDocumentation","src":"78085:89:15","text":"Compares two `int256` values. Expects first value to be less than or equal to second."},"functionSelector":"95fd154e","implemented":false,"kind":"function","modifiers":[],"name":"assertLe","nameLocation":"78188:8:15","parameters":{"id":15943,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15940,"mutability":"mutable","name":"left","nameLocation":"78204:4:15","nodeType":"VariableDeclaration","scope":15945,"src":"78197:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":15939,"name":"int256","nodeType":"ElementaryTypeName","src":"78197:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":15942,"mutability":"mutable","name":"right","nameLocation":"78217:5:15","nodeType":"VariableDeclaration","scope":15945,"src":"78210:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":15941,"name":"int256","nodeType":"ElementaryTypeName","src":"78210:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"78196:27:15"},"returnParameters":{"id":15944,"nodeType":"ParameterList","parameters":[],"src":"78237:0:15"},"scope":16930,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15955,"nodeType":"FunctionDefinition","src":"78400:82:15","nodes":[],"documentation":{"id":15946,"nodeType":"StructuredDocumentation","src":"78244:151:15","text":"Compares two `int256` values. Expects first value to be less than or equal to second.\n Includes error message into revert string on failure."},"functionSelector":"4dfe692c","implemented":false,"kind":"function","modifiers":[],"name":"assertLe","nameLocation":"78409:8:15","parameters":{"id":15953,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15948,"mutability":"mutable","name":"left","nameLocation":"78425:4:15","nodeType":"VariableDeclaration","scope":15955,"src":"78418:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":15947,"name":"int256","nodeType":"ElementaryTypeName","src":"78418:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":15950,"mutability":"mutable","name":"right","nameLocation":"78438:5:15","nodeType":"VariableDeclaration","scope":15955,"src":"78431:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":15949,"name":"int256","nodeType":"ElementaryTypeName","src":"78431:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":15952,"mutability":"mutable","name":"error","nameLocation":"78461:5:15","nodeType":"VariableDeclaration","scope":15955,"src":"78445:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15951,"name":"string","nodeType":"ElementaryTypeName","src":"78445:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"78417:50:15"},"returnParameters":{"id":15954,"nodeType":"ParameterList","parameters":[],"src":"78481:0:15"},"scope":16930,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15965,"nodeType":"FunctionDefinition","src":"78628:86:15","nodes":[],"documentation":{"id":15956,"nodeType":"StructuredDocumentation","src":"78488:135:15","text":"Compares two `uint256` values. Expects first value to be less than second.\n Formats values with decimals in failure message."},"functionSelector":"2077337e","implemented":false,"kind":"function","modifiers":[],"name":"assertLtDecimal","nameLocation":"78637:15:15","parameters":{"id":15963,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15958,"mutability":"mutable","name":"left","nameLocation":"78661:4:15","nodeType":"VariableDeclaration","scope":15965,"src":"78653:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15957,"name":"uint256","nodeType":"ElementaryTypeName","src":"78653:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15960,"mutability":"mutable","name":"right","nameLocation":"78675:5:15","nodeType":"VariableDeclaration","scope":15965,"src":"78667:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15959,"name":"uint256","nodeType":"ElementaryTypeName","src":"78667:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15962,"mutability":"mutable","name":"decimals","nameLocation":"78690:8:15","nodeType":"VariableDeclaration","scope":15965,"src":"78682:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15961,"name":"uint256","nodeType":"ElementaryTypeName","src":"78682:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"78652:47:15"},"returnParameters":{"id":15964,"nodeType":"ParameterList","parameters":[],"src":"78713:0:15"},"scope":16930,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15977,"nodeType":"FunctionDefinition","src":"78914:109:15","nodes":[],"documentation":{"id":15966,"nodeType":"StructuredDocumentation","src":"78720:189:15","text":"Compares two `uint256` values. Expects first value to be less than second.\n Formats values with decimals in failure message. Includes error message into revert string on failure."},"functionSelector":"a972d037","implemented":false,"kind":"function","modifiers":[],"name":"assertLtDecimal","nameLocation":"78923:15:15","parameters":{"id":15975,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15968,"mutability":"mutable","name":"left","nameLocation":"78947:4:15","nodeType":"VariableDeclaration","scope":15977,"src":"78939:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15967,"name":"uint256","nodeType":"ElementaryTypeName","src":"78939:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15970,"mutability":"mutable","name":"right","nameLocation":"78961:5:15","nodeType":"VariableDeclaration","scope":15977,"src":"78953:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15969,"name":"uint256","nodeType":"ElementaryTypeName","src":"78953:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15972,"mutability":"mutable","name":"decimals","nameLocation":"78976:8:15","nodeType":"VariableDeclaration","scope":15977,"src":"78968:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15971,"name":"uint256","nodeType":"ElementaryTypeName","src":"78968:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15974,"mutability":"mutable","name":"error","nameLocation":"79002:5:15","nodeType":"VariableDeclaration","scope":15977,"src":"78986:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15973,"name":"string","nodeType":"ElementaryTypeName","src":"78986:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"78938:70:15"},"returnParameters":{"id":15976,"nodeType":"ParameterList","parameters":[],"src":"79022:0:15"},"scope":16930,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15987,"nodeType":"FunctionDefinition","src":"79168:84:15","nodes":[],"documentation":{"id":15978,"nodeType":"StructuredDocumentation","src":"79029:134:15","text":"Compares two `int256` values. Expects first value to be less than second.\n Formats values with decimals in failure message."},"functionSelector":"dbe8d88b","implemented":false,"kind":"function","modifiers":[],"name":"assertLtDecimal","nameLocation":"79177:15:15","parameters":{"id":15985,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15980,"mutability":"mutable","name":"left","nameLocation":"79200:4:15","nodeType":"VariableDeclaration","scope":15987,"src":"79193:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":15979,"name":"int256","nodeType":"ElementaryTypeName","src":"79193:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":15982,"mutability":"mutable","name":"right","nameLocation":"79213:5:15","nodeType":"VariableDeclaration","scope":15987,"src":"79206:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":15981,"name":"int256","nodeType":"ElementaryTypeName","src":"79206:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":15984,"mutability":"mutable","name":"decimals","nameLocation":"79228:8:15","nodeType":"VariableDeclaration","scope":15987,"src":"79220:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15983,"name":"uint256","nodeType":"ElementaryTypeName","src":"79220:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"79192:45:15"},"returnParameters":{"id":15986,"nodeType":"ParameterList","parameters":[],"src":"79251:0:15"},"scope":16930,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15999,"nodeType":"FunctionDefinition","src":"79451:107:15","nodes":[],"documentation":{"id":15988,"nodeType":"StructuredDocumentation","src":"79258:188:15","text":"Compares two `int256` values. Expects first value to be less than second.\n Formats values with decimals in failure message. Includes error message into revert string on failure."},"functionSelector":"40f0b4e0","implemented":false,"kind":"function","modifiers":[],"name":"assertLtDecimal","nameLocation":"79460:15:15","parameters":{"id":15997,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15990,"mutability":"mutable","name":"left","nameLocation":"79483:4:15","nodeType":"VariableDeclaration","scope":15999,"src":"79476:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":15989,"name":"int256","nodeType":"ElementaryTypeName","src":"79476:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":15992,"mutability":"mutable","name":"right","nameLocation":"79496:5:15","nodeType":"VariableDeclaration","scope":15999,"src":"79489:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":15991,"name":"int256","nodeType":"ElementaryTypeName","src":"79489:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":15994,"mutability":"mutable","name":"decimals","nameLocation":"79511:8:15","nodeType":"VariableDeclaration","scope":15999,"src":"79503:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15993,"name":"uint256","nodeType":"ElementaryTypeName","src":"79503:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15996,"mutability":"mutable","name":"error","nameLocation":"79537:5:15","nodeType":"VariableDeclaration","scope":15999,"src":"79521:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15995,"name":"string","nodeType":"ElementaryTypeName","src":"79521:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"79475:68:15"},"returnParameters":{"id":15998,"nodeType":"ParameterList","parameters":[],"src":"79557:0:15"},"scope":16930,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16007,"nodeType":"FunctionDefinition","src":"79647:61:15","nodes":[],"documentation":{"id":16000,"nodeType":"StructuredDocumentation","src":"79564:78:15","text":"Compares two `uint256` values. Expects first value to be less than second."},"functionSelector":"b12fc005","implemented":false,"kind":"function","modifiers":[],"name":"assertLt","nameLocation":"79656:8:15","parameters":{"id":16005,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16002,"mutability":"mutable","name":"left","nameLocation":"79673:4:15","nodeType":"VariableDeclaration","scope":16007,"src":"79665:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16001,"name":"uint256","nodeType":"ElementaryTypeName","src":"79665:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":16004,"mutability":"mutable","name":"right","nameLocation":"79687:5:15","nodeType":"VariableDeclaration","scope":16007,"src":"79679:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16003,"name":"uint256","nodeType":"ElementaryTypeName","src":"79679:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"79664:29:15"},"returnParameters":{"id":16006,"nodeType":"ParameterList","parameters":[],"src":"79707:0:15"},"scope":16930,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16017,"nodeType":"FunctionDefinition","src":"79859:84:15","nodes":[],"documentation":{"id":16008,"nodeType":"StructuredDocumentation","src":"79714:140:15","text":"Compares two `uint256` values. Expects first value to be less than second.\n Includes error message into revert string on failure."},"functionSelector":"65d5c135","implemented":false,"kind":"function","modifiers":[],"name":"assertLt","nameLocation":"79868:8:15","parameters":{"id":16015,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16010,"mutability":"mutable","name":"left","nameLocation":"79885:4:15","nodeType":"VariableDeclaration","scope":16017,"src":"79877:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16009,"name":"uint256","nodeType":"ElementaryTypeName","src":"79877:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":16012,"mutability":"mutable","name":"right","nameLocation":"79899:5:15","nodeType":"VariableDeclaration","scope":16017,"src":"79891:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16011,"name":"uint256","nodeType":"ElementaryTypeName","src":"79891:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":16014,"mutability":"mutable","name":"error","nameLocation":"79922:5:15","nodeType":"VariableDeclaration","scope":16017,"src":"79906:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16013,"name":"string","nodeType":"ElementaryTypeName","src":"79906:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"79876:52:15"},"returnParameters":{"id":16016,"nodeType":"ParameterList","parameters":[],"src":"79942:0:15"},"scope":16930,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16025,"nodeType":"FunctionDefinition","src":"80031:59:15","nodes":[],"documentation":{"id":16018,"nodeType":"StructuredDocumentation","src":"79949:77:15","text":"Compares two `int256` values. Expects first value to be less than second."},"functionSelector":"3e914080","implemented":false,"kind":"function","modifiers":[],"name":"assertLt","nameLocation":"80040:8:15","parameters":{"id":16023,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16020,"mutability":"mutable","name":"left","nameLocation":"80056:4:15","nodeType":"VariableDeclaration","scope":16025,"src":"80049:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":16019,"name":"int256","nodeType":"ElementaryTypeName","src":"80049:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":16022,"mutability":"mutable","name":"right","nameLocation":"80069:5:15","nodeType":"VariableDeclaration","scope":16025,"src":"80062:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":16021,"name":"int256","nodeType":"ElementaryTypeName","src":"80062:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"80048:27:15"},"returnParameters":{"id":16024,"nodeType":"ParameterList","parameters":[],"src":"80089:0:15"},"scope":16930,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16035,"nodeType":"FunctionDefinition","src":"80240:82:15","nodes":[],"documentation":{"id":16026,"nodeType":"StructuredDocumentation","src":"80096:139:15","text":"Compares two `int256` values. Expects first value to be less than second.\n Includes error message into revert string on failure."},"functionSelector":"9ff531e3","implemented":false,"kind":"function","modifiers":[],"name":"assertLt","nameLocation":"80249:8:15","parameters":{"id":16033,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16028,"mutability":"mutable","name":"left","nameLocation":"80265:4:15","nodeType":"VariableDeclaration","scope":16035,"src":"80258:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":16027,"name":"int256","nodeType":"ElementaryTypeName","src":"80258:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":16030,"mutability":"mutable","name":"right","nameLocation":"80278:5:15","nodeType":"VariableDeclaration","scope":16035,"src":"80271:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":16029,"name":"int256","nodeType":"ElementaryTypeName","src":"80271:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":16032,"mutability":"mutable","name":"error","nameLocation":"80301:5:15","nodeType":"VariableDeclaration","scope":16035,"src":"80285:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16031,"name":"string","nodeType":"ElementaryTypeName","src":"80285:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"80257:50:15"},"returnParameters":{"id":16034,"nodeType":"ParameterList","parameters":[],"src":"80321:0:15"},"scope":16930,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16045,"nodeType":"FunctionDefinition","src":"80435:89:15","nodes":[],"documentation":{"id":16036,"nodeType":"StructuredDocumentation","src":"80328:102:15","text":"Asserts that two `uint256` values are not equal, formatting them with decimals in failure message."},"functionSelector":"669efca7","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEqDecimal","nameLocation":"80444:18:15","parameters":{"id":16043,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16038,"mutability":"mutable","name":"left","nameLocation":"80471:4:15","nodeType":"VariableDeclaration","scope":16045,"src":"80463:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16037,"name":"uint256","nodeType":"ElementaryTypeName","src":"80463:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":16040,"mutability":"mutable","name":"right","nameLocation":"80485:5:15","nodeType":"VariableDeclaration","scope":16045,"src":"80477:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16039,"name":"uint256","nodeType":"ElementaryTypeName","src":"80477:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":16042,"mutability":"mutable","name":"decimals","nameLocation":"80500:8:15","nodeType":"VariableDeclaration","scope":16045,"src":"80492:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16041,"name":"uint256","nodeType":"ElementaryTypeName","src":"80492:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"80462:47:15"},"returnParameters":{"id":16044,"nodeType":"ParameterList","parameters":[],"src":"80523:0:15"},"scope":16930,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16057,"nodeType":"FunctionDefinition","src":"80699:112:15","nodes":[],"documentation":{"id":16046,"nodeType":"StructuredDocumentation","src":"80530:164:15","text":"Asserts that two `uint256` values are not equal, formatting them with decimals in failure message.\n Includes error message into revert string on failure."},"functionSelector":"f5a55558","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEqDecimal","nameLocation":"80708:18:15","parameters":{"id":16055,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16048,"mutability":"mutable","name":"left","nameLocation":"80735:4:15","nodeType":"VariableDeclaration","scope":16057,"src":"80727:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16047,"name":"uint256","nodeType":"ElementaryTypeName","src":"80727:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":16050,"mutability":"mutable","name":"right","nameLocation":"80749:5:15","nodeType":"VariableDeclaration","scope":16057,"src":"80741:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16049,"name":"uint256","nodeType":"ElementaryTypeName","src":"80741:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":16052,"mutability":"mutable","name":"decimals","nameLocation":"80764:8:15","nodeType":"VariableDeclaration","scope":16057,"src":"80756:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16051,"name":"uint256","nodeType":"ElementaryTypeName","src":"80756:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":16054,"mutability":"mutable","name":"error","nameLocation":"80790:5:15","nodeType":"VariableDeclaration","scope":16057,"src":"80774:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16053,"name":"string","nodeType":"ElementaryTypeName","src":"80774:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"80726:70:15"},"returnParameters":{"id":16056,"nodeType":"ParameterList","parameters":[],"src":"80810:0:15"},"scope":16930,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16067,"nodeType":"FunctionDefinition","src":"80923:87:15","nodes":[],"documentation":{"id":16058,"nodeType":"StructuredDocumentation","src":"80817:101:15","text":"Asserts that two `int256` values are not equal, formatting them with decimals in failure message."},"functionSelector":"14e75680","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEqDecimal","nameLocation":"80932:18:15","parameters":{"id":16065,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16060,"mutability":"mutable","name":"left","nameLocation":"80958:4:15","nodeType":"VariableDeclaration","scope":16067,"src":"80951:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":16059,"name":"int256","nodeType":"ElementaryTypeName","src":"80951:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":16062,"mutability":"mutable","name":"right","nameLocation":"80971:5:15","nodeType":"VariableDeclaration","scope":16067,"src":"80964:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":16061,"name":"int256","nodeType":"ElementaryTypeName","src":"80964:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":16064,"mutability":"mutable","name":"decimals","nameLocation":"80986:8:15","nodeType":"VariableDeclaration","scope":16067,"src":"80978:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16063,"name":"uint256","nodeType":"ElementaryTypeName","src":"80978:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"80950:45:15"},"returnParameters":{"id":16066,"nodeType":"ParameterList","parameters":[],"src":"81009:0:15"},"scope":16930,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16079,"nodeType":"FunctionDefinition","src":"81184:110:15","nodes":[],"documentation":{"id":16068,"nodeType":"StructuredDocumentation","src":"81016:163:15","text":"Asserts that two `int256` values are not equal, formatting them with decimals in failure message.\n Includes error message into revert string on failure."},"functionSelector":"33949f0b","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEqDecimal","nameLocation":"81193:18:15","parameters":{"id":16077,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16070,"mutability":"mutable","name":"left","nameLocation":"81219:4:15","nodeType":"VariableDeclaration","scope":16079,"src":"81212:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":16069,"name":"int256","nodeType":"ElementaryTypeName","src":"81212:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":16072,"mutability":"mutable","name":"right","nameLocation":"81232:5:15","nodeType":"VariableDeclaration","scope":16079,"src":"81225:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":16071,"name":"int256","nodeType":"ElementaryTypeName","src":"81225:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":16074,"mutability":"mutable","name":"decimals","nameLocation":"81247:8:15","nodeType":"VariableDeclaration","scope":16079,"src":"81239:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16073,"name":"uint256","nodeType":"ElementaryTypeName","src":"81239:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":16076,"mutability":"mutable","name":"error","nameLocation":"81273:5:15","nodeType":"VariableDeclaration","scope":16079,"src":"81257:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16075,"name":"string","nodeType":"ElementaryTypeName","src":"81257:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"81211:68:15"},"returnParameters":{"id":16078,"nodeType":"ParameterList","parameters":[],"src":"81293:0:15"},"scope":16930,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16087,"nodeType":"FunctionDefinition","src":"81354:58:15","nodes":[],"documentation":{"id":16080,"nodeType":"StructuredDocumentation","src":"81300:49:15","text":"Asserts that two `bool` values are not equal."},"functionSelector":"236e4d66","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"81363:11:15","parameters":{"id":16085,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16082,"mutability":"mutable","name":"left","nameLocation":"81380:4:15","nodeType":"VariableDeclaration","scope":16087,"src":"81375:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":16081,"name":"bool","nodeType":"ElementaryTypeName","src":"81375:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":16084,"mutability":"mutable","name":"right","nameLocation":"81391:5:15","nodeType":"VariableDeclaration","scope":16087,"src":"81386:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":16083,"name":"bool","nodeType":"ElementaryTypeName","src":"81386:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"81374:23:15"},"returnParameters":{"id":16086,"nodeType":"ParameterList","parameters":[],"src":"81411:0:15"},"scope":16930,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16097,"nodeType":"FunctionDefinition","src":"81529:81:15","nodes":[],"documentation":{"id":16088,"nodeType":"StructuredDocumentation","src":"81418:106:15","text":"Asserts that two `bool` values are not equal and includes error message into revert string on failure."},"functionSelector":"1091a261","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"81538:11:15","parameters":{"id":16095,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16090,"mutability":"mutable","name":"left","nameLocation":"81555:4:15","nodeType":"VariableDeclaration","scope":16097,"src":"81550:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":16089,"name":"bool","nodeType":"ElementaryTypeName","src":"81550:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":16092,"mutability":"mutable","name":"right","nameLocation":"81566:5:15","nodeType":"VariableDeclaration","scope":16097,"src":"81561:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":16091,"name":"bool","nodeType":"ElementaryTypeName","src":"81561:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":16094,"mutability":"mutable","name":"error","nameLocation":"81589:5:15","nodeType":"VariableDeclaration","scope":16097,"src":"81573:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16093,"name":"string","nodeType":"ElementaryTypeName","src":"81573:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"81549:46:15"},"returnParameters":{"id":16096,"nodeType":"ParameterList","parameters":[],"src":"81609:0:15"},"scope":16930,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16105,"nodeType":"FunctionDefinition","src":"81672:80:15","nodes":[],"documentation":{"id":16098,"nodeType":"StructuredDocumentation","src":"81616:51:15","text":"Asserts that two `string` values are not equal."},"functionSelector":"6a8237b3","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"81681:11:15","parameters":{"id":16103,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16100,"mutability":"mutable","name":"left","nameLocation":"81709:4:15","nodeType":"VariableDeclaration","scope":16105,"src":"81693:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16099,"name":"string","nodeType":"ElementaryTypeName","src":"81693:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16102,"mutability":"mutable","name":"right","nameLocation":"81731:5:15","nodeType":"VariableDeclaration","scope":16105,"src":"81715:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16101,"name":"string","nodeType":"ElementaryTypeName","src":"81715:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"81692:45:15"},"returnParameters":{"id":16104,"nodeType":"ParameterList","parameters":[],"src":"81751:0:15"},"scope":16930,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16115,"nodeType":"FunctionDefinition","src":"81871:103:15","nodes":[],"documentation":{"id":16106,"nodeType":"StructuredDocumentation","src":"81758:108:15","text":"Asserts that two `string` values are not equal and includes error message into revert string on failure."},"functionSelector":"78bdcea7","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"81880:11:15","parameters":{"id":16113,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16108,"mutability":"mutable","name":"left","nameLocation":"81908:4:15","nodeType":"VariableDeclaration","scope":16115,"src":"81892:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16107,"name":"string","nodeType":"ElementaryTypeName","src":"81892:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16110,"mutability":"mutable","name":"right","nameLocation":"81930:5:15","nodeType":"VariableDeclaration","scope":16115,"src":"81914:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16109,"name":"string","nodeType":"ElementaryTypeName","src":"81914:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16112,"mutability":"mutable","name":"error","nameLocation":"81953:5:15","nodeType":"VariableDeclaration","scope":16115,"src":"81937:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16111,"name":"string","nodeType":"ElementaryTypeName","src":"81937:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"81891:68:15"},"returnParameters":{"id":16114,"nodeType":"ParameterList","parameters":[],"src":"81973:0:15"},"scope":16930,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16123,"nodeType":"FunctionDefinition","src":"82035:78:15","nodes":[],"documentation":{"id":16116,"nodeType":"StructuredDocumentation","src":"81980:50:15","text":"Asserts that two `bytes` values are not equal."},"functionSelector":"3cf78e28","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"82044:11:15","parameters":{"id":16121,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16118,"mutability":"mutable","name":"left","nameLocation":"82071:4:15","nodeType":"VariableDeclaration","scope":16123,"src":"82056:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":16117,"name":"bytes","nodeType":"ElementaryTypeName","src":"82056:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":16120,"mutability":"mutable","name":"right","nameLocation":"82092:5:15","nodeType":"VariableDeclaration","scope":16123,"src":"82077:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":16119,"name":"bytes","nodeType":"ElementaryTypeName","src":"82077:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"82055:43:15"},"returnParameters":{"id":16122,"nodeType":"ParameterList","parameters":[],"src":"82112:0:15"},"scope":16930,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16133,"nodeType":"FunctionDefinition","src":"82231:101:15","nodes":[],"documentation":{"id":16124,"nodeType":"StructuredDocumentation","src":"82119:107:15","text":"Asserts that two `bytes` values are not equal and includes error message into revert string on failure."},"functionSelector":"9507540e","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"82240:11:15","parameters":{"id":16131,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16126,"mutability":"mutable","name":"left","nameLocation":"82267:4:15","nodeType":"VariableDeclaration","scope":16133,"src":"82252:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":16125,"name":"bytes","nodeType":"ElementaryTypeName","src":"82252:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":16128,"mutability":"mutable","name":"right","nameLocation":"82288:5:15","nodeType":"VariableDeclaration","scope":16133,"src":"82273:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":16127,"name":"bytes","nodeType":"ElementaryTypeName","src":"82273:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":16130,"mutability":"mutable","name":"error","nameLocation":"82311:5:15","nodeType":"VariableDeclaration","scope":16133,"src":"82295:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16129,"name":"string","nodeType":"ElementaryTypeName","src":"82295:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"82251:66:15"},"returnParameters":{"id":16132,"nodeType":"ParameterList","parameters":[],"src":"82331:0:15"},"scope":16930,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16143,"nodeType":"FunctionDefinition","src":"82402:80:15","nodes":[],"documentation":{"id":16134,"nodeType":"StructuredDocumentation","src":"82338:59:15","text":"Asserts that two arrays of `bool` values are not equal."},"functionSelector":"286fafea","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"82411:11:15","parameters":{"id":16141,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16137,"mutability":"mutable","name":"left","nameLocation":"82439:4:15","nodeType":"VariableDeclaration","scope":16143,"src":"82423:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":16135,"name":"bool","nodeType":"ElementaryTypeName","src":"82423:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":16136,"nodeType":"ArrayTypeName","src":"82423:6:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":16140,"mutability":"mutable","name":"right","nameLocation":"82461:5:15","nodeType":"VariableDeclaration","scope":16143,"src":"82445:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":16138,"name":"bool","nodeType":"ElementaryTypeName","src":"82445:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":16139,"nodeType":"ArrayTypeName","src":"82445:6:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"}],"src":"82422:45:15"},"returnParameters":{"id":16142,"nodeType":"ParameterList","parameters":[],"src":"82481:0:15"},"scope":16930,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16155,"nodeType":"FunctionDefinition","src":"82609:103:15","nodes":[],"documentation":{"id":16144,"nodeType":"StructuredDocumentation","src":"82488:116:15","text":"Asserts that two arrays of `bool` values are not equal and includes error message into revert string on failure."},"functionSelector":"62c6f9fb","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"82618:11:15","parameters":{"id":16153,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16147,"mutability":"mutable","name":"left","nameLocation":"82646:4:15","nodeType":"VariableDeclaration","scope":16155,"src":"82630:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":16145,"name":"bool","nodeType":"ElementaryTypeName","src":"82630:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":16146,"nodeType":"ArrayTypeName","src":"82630:6:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":16150,"mutability":"mutable","name":"right","nameLocation":"82668:5:15","nodeType":"VariableDeclaration","scope":16155,"src":"82652:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":16148,"name":"bool","nodeType":"ElementaryTypeName","src":"82652:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":16149,"nodeType":"ArrayTypeName","src":"82652:6:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":16152,"mutability":"mutable","name":"error","nameLocation":"82691:5:15","nodeType":"VariableDeclaration","scope":16155,"src":"82675:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16151,"name":"string","nodeType":"ElementaryTypeName","src":"82675:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"82629:68:15"},"returnParameters":{"id":16154,"nodeType":"ParameterList","parameters":[],"src":"82711:0:15"},"scope":16930,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16165,"nodeType":"FunctionDefinition","src":"82785:86:15","nodes":[],"documentation":{"id":16156,"nodeType":"StructuredDocumentation","src":"82718:62:15","text":"Asserts that two arrays of `uint256` values are not equal."},"functionSelector":"56f29cba","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"82794:11:15","parameters":{"id":16163,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16159,"mutability":"mutable","name":"left","nameLocation":"82825:4:15","nodeType":"VariableDeclaration","scope":16165,"src":"82806:23:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":16157,"name":"uint256","nodeType":"ElementaryTypeName","src":"82806:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":16158,"nodeType":"ArrayTypeName","src":"82806:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":16162,"mutability":"mutable","name":"right","nameLocation":"82850:5:15","nodeType":"VariableDeclaration","scope":16165,"src":"82831:24:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":16160,"name":"uint256","nodeType":"ElementaryTypeName","src":"82831:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":16161,"nodeType":"ArrayTypeName","src":"82831:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"82805:51:15"},"returnParameters":{"id":16164,"nodeType":"ParameterList","parameters":[],"src":"82870:0:15"},"scope":16930,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16177,"nodeType":"FunctionDefinition","src":"83001:109:15","nodes":[],"documentation":{"id":16166,"nodeType":"StructuredDocumentation","src":"82877:119:15","text":"Asserts that two arrays of `uint256` values are not equal and includes error message into revert string on failure."},"functionSelector":"9a7fbd8f","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"83010:11:15","parameters":{"id":16175,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16169,"mutability":"mutable","name":"left","nameLocation":"83041:4:15","nodeType":"VariableDeclaration","scope":16177,"src":"83022:23:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":16167,"name":"uint256","nodeType":"ElementaryTypeName","src":"83022:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":16168,"nodeType":"ArrayTypeName","src":"83022:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":16172,"mutability":"mutable","name":"right","nameLocation":"83066:5:15","nodeType":"VariableDeclaration","scope":16177,"src":"83047:24:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":16170,"name":"uint256","nodeType":"ElementaryTypeName","src":"83047:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":16171,"nodeType":"ArrayTypeName","src":"83047:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":16174,"mutability":"mutable","name":"error","nameLocation":"83089:5:15","nodeType":"VariableDeclaration","scope":16177,"src":"83073:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16173,"name":"string","nodeType":"ElementaryTypeName","src":"83073:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"83021:74:15"},"returnParameters":{"id":16176,"nodeType":"ParameterList","parameters":[],"src":"83109:0:15"},"scope":16930,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16187,"nodeType":"FunctionDefinition","src":"83182:84:15","nodes":[],"documentation":{"id":16178,"nodeType":"StructuredDocumentation","src":"83116:61:15","text":"Asserts that two arrays of `int256` values are not equal."},"functionSelector":"0b72f4ef","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"83191:11:15","parameters":{"id":16185,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16181,"mutability":"mutable","name":"left","nameLocation":"83221:4:15","nodeType":"VariableDeclaration","scope":16187,"src":"83203:22:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_calldata_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":16179,"name":"int256","nodeType":"ElementaryTypeName","src":"83203:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":16180,"nodeType":"ArrayTypeName","src":"83203:8:15","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"},{"constant":false,"id":16184,"mutability":"mutable","name":"right","nameLocation":"83245:5:15","nodeType":"VariableDeclaration","scope":16187,"src":"83227:23:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_calldata_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":16182,"name":"int256","nodeType":"ElementaryTypeName","src":"83227:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":16183,"nodeType":"ArrayTypeName","src":"83227:8:15","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"}],"src":"83202:49:15"},"returnParameters":{"id":16186,"nodeType":"ParameterList","parameters":[],"src":"83265:0:15"},"scope":16930,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16199,"nodeType":"FunctionDefinition","src":"83395:107:15","nodes":[],"documentation":{"id":16188,"nodeType":"StructuredDocumentation","src":"83272:118:15","text":"Asserts that two arrays of `int256` values are not equal and includes error message into revert string on failure."},"functionSelector":"d3977322","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"83404:11:15","parameters":{"id":16197,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16191,"mutability":"mutable","name":"left","nameLocation":"83434:4:15","nodeType":"VariableDeclaration","scope":16199,"src":"83416:22:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_calldata_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":16189,"name":"int256","nodeType":"ElementaryTypeName","src":"83416:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":16190,"nodeType":"ArrayTypeName","src":"83416:8:15","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"},{"constant":false,"id":16194,"mutability":"mutable","name":"right","nameLocation":"83458:5:15","nodeType":"VariableDeclaration","scope":16199,"src":"83440:23:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_calldata_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":16192,"name":"int256","nodeType":"ElementaryTypeName","src":"83440:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":16193,"nodeType":"ArrayTypeName","src":"83440:8:15","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"},{"constant":false,"id":16196,"mutability":"mutable","name":"error","nameLocation":"83481:5:15","nodeType":"VariableDeclaration","scope":16199,"src":"83465:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16195,"name":"string","nodeType":"ElementaryTypeName","src":"83465:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"83415:72:15"},"returnParameters":{"id":16198,"nodeType":"ParameterList","parameters":[],"src":"83501:0:15"},"scope":16930,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16207,"nodeType":"FunctionDefinition","src":"83565:64:15","nodes":[],"documentation":{"id":16200,"nodeType":"StructuredDocumentation","src":"83508:52:15","text":"Asserts that two `uint256` values are not equal."},"functionSelector":"b7909320","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"83574:11:15","parameters":{"id":16205,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16202,"mutability":"mutable","name":"left","nameLocation":"83594:4:15","nodeType":"VariableDeclaration","scope":16207,"src":"83586:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16201,"name":"uint256","nodeType":"ElementaryTypeName","src":"83586:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":16204,"mutability":"mutable","name":"right","nameLocation":"83608:5:15","nodeType":"VariableDeclaration","scope":16207,"src":"83600:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16203,"name":"uint256","nodeType":"ElementaryTypeName","src":"83600:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"83585:29:15"},"returnParameters":{"id":16206,"nodeType":"ParameterList","parameters":[],"src":"83628:0:15"},"scope":16930,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16217,"nodeType":"FunctionDefinition","src":"83702:86:15","nodes":[],"documentation":{"id":16208,"nodeType":"StructuredDocumentation","src":"83635:62:15","text":"Asserts that two arrays of `address` values are not equal."},"functionSelector":"46d0b252","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"83711:11:15","parameters":{"id":16215,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16211,"mutability":"mutable","name":"left","nameLocation":"83742:4:15","nodeType":"VariableDeclaration","scope":16217,"src":"83723:23:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":16209,"name":"address","nodeType":"ElementaryTypeName","src":"83723:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":16210,"nodeType":"ArrayTypeName","src":"83723:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":16214,"mutability":"mutable","name":"right","nameLocation":"83767:5:15","nodeType":"VariableDeclaration","scope":16217,"src":"83748:24:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":16212,"name":"address","nodeType":"ElementaryTypeName","src":"83748:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":16213,"nodeType":"ArrayTypeName","src":"83748:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"83722:51:15"},"returnParameters":{"id":16216,"nodeType":"ParameterList","parameters":[],"src":"83787:0:15"},"scope":16930,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16229,"nodeType":"FunctionDefinition","src":"83918:109:15","nodes":[],"documentation":{"id":16218,"nodeType":"StructuredDocumentation","src":"83794:119:15","text":"Asserts that two arrays of `address` values are not equal and includes error message into revert string on failure."},"functionSelector":"72c7e0b5","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"83927:11:15","parameters":{"id":16227,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16221,"mutability":"mutable","name":"left","nameLocation":"83958:4:15","nodeType":"VariableDeclaration","scope":16229,"src":"83939:23:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":16219,"name":"address","nodeType":"ElementaryTypeName","src":"83939:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":16220,"nodeType":"ArrayTypeName","src":"83939:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":16224,"mutability":"mutable","name":"right","nameLocation":"83983:5:15","nodeType":"VariableDeclaration","scope":16229,"src":"83964:24:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":16222,"name":"address","nodeType":"ElementaryTypeName","src":"83964:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":16223,"nodeType":"ArrayTypeName","src":"83964:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":16226,"mutability":"mutable","name":"error","nameLocation":"84006:5:15","nodeType":"VariableDeclaration","scope":16229,"src":"83990:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16225,"name":"string","nodeType":"ElementaryTypeName","src":"83990:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"83938:74:15"},"returnParameters":{"id":16228,"nodeType":"ParameterList","parameters":[],"src":"84026:0:15"},"scope":16930,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16239,"nodeType":"FunctionDefinition","src":"84100:86:15","nodes":[],"documentation":{"id":16230,"nodeType":"StructuredDocumentation","src":"84033:62:15","text":"Asserts that two arrays of `bytes32` values are not equal."},"functionSelector":"0603ea68","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"84109:11:15","parameters":{"id":16237,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16233,"mutability":"mutable","name":"left","nameLocation":"84140:4:15","nodeType":"VariableDeclaration","scope":16239,"src":"84121:23:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":16231,"name":"bytes32","nodeType":"ElementaryTypeName","src":"84121:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":16232,"nodeType":"ArrayTypeName","src":"84121:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":16236,"mutability":"mutable","name":"right","nameLocation":"84165:5:15","nodeType":"VariableDeclaration","scope":16239,"src":"84146:24:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":16234,"name":"bytes32","nodeType":"ElementaryTypeName","src":"84146:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":16235,"nodeType":"ArrayTypeName","src":"84146:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"84120:51:15"},"returnParameters":{"id":16238,"nodeType":"ParameterList","parameters":[],"src":"84185:0:15"},"scope":16930,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16251,"nodeType":"FunctionDefinition","src":"84316:109:15","nodes":[],"documentation":{"id":16240,"nodeType":"StructuredDocumentation","src":"84192:119:15","text":"Asserts that two arrays of `bytes32` values are not equal and includes error message into revert string on failure."},"functionSelector":"b873634c","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"84325:11:15","parameters":{"id":16249,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16243,"mutability":"mutable","name":"left","nameLocation":"84356:4:15","nodeType":"VariableDeclaration","scope":16251,"src":"84337:23:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":16241,"name":"bytes32","nodeType":"ElementaryTypeName","src":"84337:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":16242,"nodeType":"ArrayTypeName","src":"84337:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":16246,"mutability":"mutable","name":"right","nameLocation":"84381:5:15","nodeType":"VariableDeclaration","scope":16251,"src":"84362:24:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":16244,"name":"bytes32","nodeType":"ElementaryTypeName","src":"84362:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":16245,"nodeType":"ArrayTypeName","src":"84362:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":16248,"mutability":"mutable","name":"error","nameLocation":"84404:5:15","nodeType":"VariableDeclaration","scope":16251,"src":"84388:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16247,"name":"string","nodeType":"ElementaryTypeName","src":"84388:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"84336:74:15"},"returnParameters":{"id":16250,"nodeType":"ParameterList","parameters":[],"src":"84424:0:15"},"scope":16930,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16261,"nodeType":"FunctionDefinition","src":"84497:84:15","nodes":[],"documentation":{"id":16252,"nodeType":"StructuredDocumentation","src":"84431:61:15","text":"Asserts that two arrays of `string` values are not equal."},"functionSelector":"bdfacbe8","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"84506:11:15","parameters":{"id":16259,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16255,"mutability":"mutable","name":"left","nameLocation":"84536:4:15","nodeType":"VariableDeclaration","scope":16261,"src":"84518:22:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":16253,"name":"string","nodeType":"ElementaryTypeName","src":"84518:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":16254,"nodeType":"ArrayTypeName","src":"84518:8:15","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"},{"constant":false,"id":16258,"mutability":"mutable","name":"right","nameLocation":"84560:5:15","nodeType":"VariableDeclaration","scope":16261,"src":"84542:23:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":16256,"name":"string","nodeType":"ElementaryTypeName","src":"84542:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":16257,"nodeType":"ArrayTypeName","src":"84542:8:15","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"84517:49:15"},"returnParameters":{"id":16260,"nodeType":"ParameterList","parameters":[],"src":"84580:0:15"},"scope":16930,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16273,"nodeType":"FunctionDefinition","src":"84710:107:15","nodes":[],"documentation":{"id":16262,"nodeType":"StructuredDocumentation","src":"84587:118:15","text":"Asserts that two arrays of `string` values are not equal and includes error message into revert string on failure."},"functionSelector":"b67187f3","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"84719:11:15","parameters":{"id":16271,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16265,"mutability":"mutable","name":"left","nameLocation":"84749:4:15","nodeType":"VariableDeclaration","scope":16273,"src":"84731:22:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":16263,"name":"string","nodeType":"ElementaryTypeName","src":"84731:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":16264,"nodeType":"ArrayTypeName","src":"84731:8:15","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"},{"constant":false,"id":16268,"mutability":"mutable","name":"right","nameLocation":"84773:5:15","nodeType":"VariableDeclaration","scope":16273,"src":"84755:23:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":16266,"name":"string","nodeType":"ElementaryTypeName","src":"84755:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":16267,"nodeType":"ArrayTypeName","src":"84755:8:15","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"},{"constant":false,"id":16270,"mutability":"mutable","name":"error","nameLocation":"84796:5:15","nodeType":"VariableDeclaration","scope":16273,"src":"84780:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16269,"name":"string","nodeType":"ElementaryTypeName","src":"84780:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"84730:72:15"},"returnParameters":{"id":16272,"nodeType":"ParameterList","parameters":[],"src":"84816:0:15"},"scope":16930,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16283,"nodeType":"FunctionDefinition","src":"84888:82:15","nodes":[],"documentation":{"id":16274,"nodeType":"StructuredDocumentation","src":"84823:60:15","text":"Asserts that two arrays of `bytes` values are not equal."},"functionSelector":"edecd035","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"84897:11:15","parameters":{"id":16281,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16277,"mutability":"mutable","name":"left","nameLocation":"84926:4:15","nodeType":"VariableDeclaration","scope":16283,"src":"84909:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":16275,"name":"bytes","nodeType":"ElementaryTypeName","src":"84909:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":16276,"nodeType":"ArrayTypeName","src":"84909:7:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"},{"constant":false,"id":16280,"mutability":"mutable","name":"right","nameLocation":"84949:5:15","nodeType":"VariableDeclaration","scope":16283,"src":"84932:22:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":16278,"name":"bytes","nodeType":"ElementaryTypeName","src":"84932:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":16279,"nodeType":"ArrayTypeName","src":"84932:7:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"84908:47:15"},"returnParameters":{"id":16282,"nodeType":"ParameterList","parameters":[],"src":"84969:0:15"},"scope":16930,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16295,"nodeType":"FunctionDefinition","src":"85098:105:15","nodes":[],"documentation":{"id":16284,"nodeType":"StructuredDocumentation","src":"84976:117:15","text":"Asserts that two arrays of `bytes` values are not equal and includes error message into revert string on failure."},"functionSelector":"1dcd1f68","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"85107:11:15","parameters":{"id":16293,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16287,"mutability":"mutable","name":"left","nameLocation":"85136:4:15","nodeType":"VariableDeclaration","scope":16295,"src":"85119:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":16285,"name":"bytes","nodeType":"ElementaryTypeName","src":"85119:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":16286,"nodeType":"ArrayTypeName","src":"85119:7:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"},{"constant":false,"id":16290,"mutability":"mutable","name":"right","nameLocation":"85159:5:15","nodeType":"VariableDeclaration","scope":16295,"src":"85142:22:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":16288,"name":"bytes","nodeType":"ElementaryTypeName","src":"85142:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":16289,"nodeType":"ArrayTypeName","src":"85142:7:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"},{"constant":false,"id":16292,"mutability":"mutable","name":"error","nameLocation":"85182:5:15","nodeType":"VariableDeclaration","scope":16295,"src":"85166:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16291,"name":"string","nodeType":"ElementaryTypeName","src":"85166:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"85118:70:15"},"returnParameters":{"id":16294,"nodeType":"ParameterList","parameters":[],"src":"85202:0:15"},"scope":16930,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16305,"nodeType":"FunctionDefinition","src":"85323:87:15","nodes":[],"documentation":{"id":16296,"nodeType":"StructuredDocumentation","src":"85209:109:15","text":"Asserts that two `uint256` values are not equal and includes error message into revert string on failure."},"functionSelector":"98f9bdbd","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"85332:11:15","parameters":{"id":16303,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16298,"mutability":"mutable","name":"left","nameLocation":"85352:4:15","nodeType":"VariableDeclaration","scope":16305,"src":"85344:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16297,"name":"uint256","nodeType":"ElementaryTypeName","src":"85344:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":16300,"mutability":"mutable","name":"right","nameLocation":"85366:5:15","nodeType":"VariableDeclaration","scope":16305,"src":"85358:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16299,"name":"uint256","nodeType":"ElementaryTypeName","src":"85358:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":16302,"mutability":"mutable","name":"error","nameLocation":"85389:5:15","nodeType":"VariableDeclaration","scope":16305,"src":"85373:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16301,"name":"string","nodeType":"ElementaryTypeName","src":"85373:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"85343:52:15"},"returnParameters":{"id":16304,"nodeType":"ParameterList","parameters":[],"src":"85409:0:15"},"scope":16930,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16313,"nodeType":"FunctionDefinition","src":"85472:62:15","nodes":[],"documentation":{"id":16306,"nodeType":"StructuredDocumentation","src":"85416:51:15","text":"Asserts that two `int256` values are not equal."},"functionSelector":"f4c004e3","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"85481:11:15","parameters":{"id":16311,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16308,"mutability":"mutable","name":"left","nameLocation":"85500:4:15","nodeType":"VariableDeclaration","scope":16313,"src":"85493:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":16307,"name":"int256","nodeType":"ElementaryTypeName","src":"85493:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":16310,"mutability":"mutable","name":"right","nameLocation":"85513:5:15","nodeType":"VariableDeclaration","scope":16313,"src":"85506:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":16309,"name":"int256","nodeType":"ElementaryTypeName","src":"85506:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"85492:27:15"},"returnParameters":{"id":16312,"nodeType":"ParameterList","parameters":[],"src":"85533:0:15"},"scope":16930,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16323,"nodeType":"FunctionDefinition","src":"85653:85:15","nodes":[],"documentation":{"id":16314,"nodeType":"StructuredDocumentation","src":"85540:108:15","text":"Asserts that two `int256` values are not equal and includes error message into revert string on failure."},"functionSelector":"4724c5b9","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"85662:11:15","parameters":{"id":16321,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16316,"mutability":"mutable","name":"left","nameLocation":"85681:4:15","nodeType":"VariableDeclaration","scope":16323,"src":"85674:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":16315,"name":"int256","nodeType":"ElementaryTypeName","src":"85674:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":16318,"mutability":"mutable","name":"right","nameLocation":"85694:5:15","nodeType":"VariableDeclaration","scope":16323,"src":"85687:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":16317,"name":"int256","nodeType":"ElementaryTypeName","src":"85687:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":16320,"mutability":"mutable","name":"error","nameLocation":"85717:5:15","nodeType":"VariableDeclaration","scope":16323,"src":"85701:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16319,"name":"string","nodeType":"ElementaryTypeName","src":"85701:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"85673:50:15"},"returnParameters":{"id":16322,"nodeType":"ParameterList","parameters":[],"src":"85737:0:15"},"scope":16930,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16331,"nodeType":"FunctionDefinition","src":"85801:64:15","nodes":[],"documentation":{"id":16324,"nodeType":"StructuredDocumentation","src":"85744:52:15","text":"Asserts that two `address` values are not equal."},"functionSelector":"b12e1694","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"85810:11:15","parameters":{"id":16329,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16326,"mutability":"mutable","name":"left","nameLocation":"85830:4:15","nodeType":"VariableDeclaration","scope":16331,"src":"85822:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":16325,"name":"address","nodeType":"ElementaryTypeName","src":"85822:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":16328,"mutability":"mutable","name":"right","nameLocation":"85844:5:15","nodeType":"VariableDeclaration","scope":16331,"src":"85836:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":16327,"name":"address","nodeType":"ElementaryTypeName","src":"85836:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"85821:29:15"},"returnParameters":{"id":16330,"nodeType":"ParameterList","parameters":[],"src":"85864:0:15"},"scope":16930,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16341,"nodeType":"FunctionDefinition","src":"85985:87:15","nodes":[],"documentation":{"id":16332,"nodeType":"StructuredDocumentation","src":"85871:109:15","text":"Asserts that two `address` values are not equal and includes error message into revert string on failure."},"functionSelector":"8775a591","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"85994:11:15","parameters":{"id":16339,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16334,"mutability":"mutable","name":"left","nameLocation":"86014:4:15","nodeType":"VariableDeclaration","scope":16341,"src":"86006:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":16333,"name":"address","nodeType":"ElementaryTypeName","src":"86006:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":16336,"mutability":"mutable","name":"right","nameLocation":"86028:5:15","nodeType":"VariableDeclaration","scope":16341,"src":"86020:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":16335,"name":"address","nodeType":"ElementaryTypeName","src":"86020:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":16338,"mutability":"mutable","name":"error","nameLocation":"86051:5:15","nodeType":"VariableDeclaration","scope":16341,"src":"86035:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16337,"name":"string","nodeType":"ElementaryTypeName","src":"86035:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"86005:52:15"},"returnParameters":{"id":16340,"nodeType":"ParameterList","parameters":[],"src":"86071:0:15"},"scope":16930,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16349,"nodeType":"FunctionDefinition","src":"86135:64:15","nodes":[],"documentation":{"id":16342,"nodeType":"StructuredDocumentation","src":"86078:52:15","text":"Asserts that two `bytes32` values are not equal."},"functionSelector":"898e83fc","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"86144:11:15","parameters":{"id":16347,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16344,"mutability":"mutable","name":"left","nameLocation":"86164:4:15","nodeType":"VariableDeclaration","scope":16349,"src":"86156:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":16343,"name":"bytes32","nodeType":"ElementaryTypeName","src":"86156:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":16346,"mutability":"mutable","name":"right","nameLocation":"86178:5:15","nodeType":"VariableDeclaration","scope":16349,"src":"86170:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":16345,"name":"bytes32","nodeType":"ElementaryTypeName","src":"86170:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"86155:29:15"},"returnParameters":{"id":16348,"nodeType":"ParameterList","parameters":[],"src":"86198:0:15"},"scope":16930,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16359,"nodeType":"FunctionDefinition","src":"86319:87:15","nodes":[],"documentation":{"id":16350,"nodeType":"StructuredDocumentation","src":"86205:109:15","text":"Asserts that two `bytes32` values are not equal and includes error message into revert string on failure."},"functionSelector":"b2332f51","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"86328:11:15","parameters":{"id":16357,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16352,"mutability":"mutable","name":"left","nameLocation":"86348:4:15","nodeType":"VariableDeclaration","scope":16359,"src":"86340:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":16351,"name":"bytes32","nodeType":"ElementaryTypeName","src":"86340:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":16354,"mutability":"mutable","name":"right","nameLocation":"86362:5:15","nodeType":"VariableDeclaration","scope":16359,"src":"86354:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":16353,"name":"bytes32","nodeType":"ElementaryTypeName","src":"86354:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":16356,"mutability":"mutable","name":"error","nameLocation":"86385:5:15","nodeType":"VariableDeclaration","scope":16359,"src":"86369:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16355,"name":"string","nodeType":"ElementaryTypeName","src":"86369:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"86339:52:15"},"returnParameters":{"id":16358,"nodeType":"ParameterList","parameters":[],"src":"86405:0:15"},"scope":16930,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16365,"nodeType":"FunctionDefinition","src":"86462:50:15","nodes":[],"documentation":{"id":16360,"nodeType":"StructuredDocumentation","src":"86412:45:15","text":"Asserts that the given condition is true."},"functionSelector":"0c9fd581","implemented":false,"kind":"function","modifiers":[],"name":"assertTrue","nameLocation":"86471:10:15","parameters":{"id":16363,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16362,"mutability":"mutable","name":"condition","nameLocation":"86487:9:15","nodeType":"VariableDeclaration","scope":16365,"src":"86482:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":16361,"name":"bool","nodeType":"ElementaryTypeName","src":"86482:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"86481:16:15"},"returnParameters":{"id":16364,"nodeType":"ParameterList","parameters":[],"src":"86511:0:15"},"scope":16930,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16373,"nodeType":"FunctionDefinition","src":"86625:73:15","nodes":[],"documentation":{"id":16366,"nodeType":"StructuredDocumentation","src":"86518:102:15","text":"Asserts that the given condition is true and includes error message into revert string on failure."},"functionSelector":"a34edc03","implemented":false,"kind":"function","modifiers":[],"name":"assertTrue","nameLocation":"86634:10:15","parameters":{"id":16371,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16368,"mutability":"mutable","name":"condition","nameLocation":"86650:9:15","nodeType":"VariableDeclaration","scope":16373,"src":"86645:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":16367,"name":"bool","nodeType":"ElementaryTypeName","src":"86645:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":16370,"mutability":"mutable","name":"error","nameLocation":"86677:5:15","nodeType":"VariableDeclaration","scope":16373,"src":"86661:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16369,"name":"string","nodeType":"ElementaryTypeName","src":"86661:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"86644:39:15"},"returnParameters":{"id":16372,"nodeType":"ParameterList","parameters":[],"src":"86697:0:15"},"scope":16930,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16379,"nodeType":"FunctionDefinition","src":"86793:46:15","nodes":[],"documentation":{"id":16374,"nodeType":"StructuredDocumentation","src":"86704:84:15","text":"If the condition is false, discard this run's fuzz inputs and generate new ones."},"functionSelector":"4c63e562","implemented":false,"kind":"function","modifiers":[],"name":"assume","nameLocation":"86802:6:15","parameters":{"id":16377,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16376,"mutability":"mutable","name":"condition","nameLocation":"86814:9:15","nodeType":"VariableDeclaration","scope":16379,"src":"86809:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":16375,"name":"bool","nodeType":"ElementaryTypeName","src":"86809:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"86808:16:15"},"returnParameters":{"id":16378,"nodeType":"ParameterList","parameters":[],"src":"86838:0:15"},"scope":16930,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16383,"nodeType":"FunctionDefinition","src":"86929:40:15","nodes":[],"documentation":{"id":16380,"nodeType":"StructuredDocumentation","src":"86845:79:15","text":"Discard this run's fuzz inputs and generate new ones if next call reverted."},"functionSelector":"285b366a","implemented":false,"kind":"function","modifiers":[],"name":"assumeNoRevert","nameLocation":"86938:14:15","parameters":{"id":16381,"nodeType":"ParameterList","parameters":[],"src":"86952:2:15"},"returnParameters":{"id":16382,"nodeType":"ParameterList","parameters":[],"src":"86968:0:15"},"scope":16930,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16390,"nodeType":"FunctionDefinition","src":"87095:80:15","nodes":[],"documentation":{"id":16384,"nodeType":"StructuredDocumentation","src":"86975:115:15","text":"Discard this run's fuzz inputs and generate new ones if next call reverts with the potential revert parameters."},"functionSelector":"d8591eeb","implemented":false,"kind":"function","modifiers":[],"name":"assumeNoRevert","nameLocation":"87104:14:15","parameters":{"id":16388,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16387,"mutability":"mutable","name":"potentialRevert","nameLocation":"87144:15:15","nodeType":"VariableDeclaration","scope":16390,"src":"87119:40:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_PotentialRevert_$13230_calldata_ptr","typeString":"struct VmSafe.PotentialRevert"},"typeName":{"id":16386,"nodeType":"UserDefinedTypeName","pathNode":{"id":16385,"name":"PotentialRevert","nameLocations":["87119:15:15"],"nodeType":"IdentifierPath","referencedDeclaration":13230,"src":"87119:15:15"},"referencedDeclaration":13230,"src":"87119:15:15","typeDescriptions":{"typeIdentifier":"t_struct$_PotentialRevert_$13230_storage_ptr","typeString":"struct VmSafe.PotentialRevert"}},"visibility":"internal"}],"src":"87118:42:15"},"returnParameters":{"id":16389,"nodeType":"ParameterList","parameters":[],"src":"87174:0:15"},"scope":16930,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16398,"nodeType":"FunctionDefinition","src":"87312:83:15","nodes":[],"documentation":{"id":16391,"nodeType":"StructuredDocumentation","src":"87181:126:15","text":"Discard this run's fuzz inputs and generate new ones if next call reverts with the any of the potential revert parameters."},"functionSelector":"8a4592cc","implemented":false,"kind":"function","modifiers":[],"name":"assumeNoRevert","nameLocation":"87321:14:15","parameters":{"id":16396,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16395,"mutability":"mutable","name":"potentialReverts","nameLocation":"87363:16:15","nodeType":"VariableDeclaration","scope":16398,"src":"87336:43:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PotentialRevert_$13230_calldata_ptr_$dyn_calldata_ptr","typeString":"struct VmSafe.PotentialRevert[]"},"typeName":{"baseType":{"id":16393,"nodeType":"UserDefinedTypeName","pathNode":{"id":16392,"name":"PotentialRevert","nameLocations":["87336:15:15"],"nodeType":"IdentifierPath","referencedDeclaration":13230,"src":"87336:15:15"},"referencedDeclaration":13230,"src":"87336:15:15","typeDescriptions":{"typeIdentifier":"t_struct$_PotentialRevert_$13230_storage_ptr","typeString":"struct VmSafe.PotentialRevert"}},"id":16394,"nodeType":"ArrayTypeName","src":"87336:17:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PotentialRevert_$13230_storage_$dyn_storage_ptr","typeString":"struct VmSafe.PotentialRevert[]"}},"visibility":"internal"}],"src":"87335:45:15"},"returnParameters":{"id":16397,"nodeType":"ParameterList","parameters":[],"src":"87394:0:15"},"scope":16930,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16404,"nodeType":"FunctionDefinition","src":"87457:56:15","nodes":[],"documentation":{"id":16399,"nodeType":"StructuredDocumentation","src":"87401:51:15","text":"Writes a breakpoint to jump to in the debugger."},"functionSelector":"f0259e92","implemented":false,"kind":"function","modifiers":[],"name":"breakpoint","nameLocation":"87466:10:15","parameters":{"id":16402,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16401,"mutability":"mutable","name":"char","nameLocation":"87493:4:15","nodeType":"VariableDeclaration","scope":16404,"src":"87477:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16400,"name":"string","nodeType":"ElementaryTypeName","src":"87477:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"87476:22:15"},"returnParameters":{"id":16403,"nodeType":"ParameterList","parameters":[],"src":"87512:0:15"},"scope":16930,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16412,"nodeType":"FunctionDefinition","src":"87587:68:15","nodes":[],"documentation":{"id":16405,"nodeType":"StructuredDocumentation","src":"87519:63:15","text":"Writes a conditional breakpoint to jump to in the debugger."},"functionSelector":"f7d39a8d","implemented":false,"kind":"function","modifiers":[],"name":"breakpoint","nameLocation":"87596:10:15","parameters":{"id":16410,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16407,"mutability":"mutable","name":"char","nameLocation":"87623:4:15","nodeType":"VariableDeclaration","scope":16412,"src":"87607:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16406,"name":"string","nodeType":"ElementaryTypeName","src":"87607:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16409,"mutability":"mutable","name":"value","nameLocation":"87634:5:15","nodeType":"VariableDeclaration","scope":16412,"src":"87629:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":16408,"name":"bool","nodeType":"ElementaryTypeName","src":"87629:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"87606:34:15"},"returnParameters":{"id":16411,"nodeType":"ParameterList","parameters":[],"src":"87654:0:15"},"scope":16930,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16420,"nodeType":"FunctionDefinition","src":"87901:85:15","nodes":[],"documentation":{"id":16413,"nodeType":"StructuredDocumentation","src":"87661:235:15","text":"Returns true if the current Foundry version is greater than or equal to the given version.\n The given version string must be in the format `major.minor.patch`.\n This is equivalent to `foundryVersionCmp(version) >= 0`."},"functionSelector":"6248be1f","implemented":false,"kind":"function","modifiers":[],"name":"foundryVersionAtLeast","nameLocation":"87910:21:15","parameters":{"id":16416,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16415,"mutability":"mutable","name":"version","nameLocation":"87948:7:15","nodeType":"VariableDeclaration","scope":16420,"src":"87932:23:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16414,"name":"string","nodeType":"ElementaryTypeName","src":"87932:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"87931:25:15"},"returnParameters":{"id":16419,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16418,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":16420,"src":"87980:4:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":16417,"name":"bool","nodeType":"ElementaryTypeName","src":"87980:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"87979:6:15"},"scope":16930,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":16428,"nodeType":"FunctionDefinition","src":"88593:83:15","nodes":[],"documentation":{"id":16421,"nodeType":"StructuredDocumentation","src":"87992:596:15","text":"Compares the current Foundry version with the given version string.\n The given version string must be in the format `major.minor.patch`.\n Returns:\n -1 if current Foundry version is less than the given version\n 0 if current Foundry version equals the given version\n 1 if current Foundry version is greater than the given version\n This result can then be used with a comparison operator against `0`.\n For example, to check if the current Foundry version is greater than or equal to `1.0.0`:\n `if (foundryVersionCmp(\"1.0.0\") >= 0) { ... }`"},"functionSelector":"ca7b0a09","implemented":false,"kind":"function","modifiers":[],"name":"foundryVersionCmp","nameLocation":"88602:17:15","parameters":{"id":16424,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16423,"mutability":"mutable","name":"version","nameLocation":"88636:7:15","nodeType":"VariableDeclaration","scope":16428,"src":"88620:23:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16422,"name":"string","nodeType":"ElementaryTypeName","src":"88620:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"88619:25:15"},"returnParameters":{"id":16427,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16426,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":16428,"src":"88668:6:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":16425,"name":"int256","nodeType":"ElementaryTypeName","src":"88668:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"88667:8:15"},"scope":16930,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":16437,"nodeType":"FunctionDefinition","src":"88732:89:15","nodes":[],"documentation":{"id":16429,"nodeType":"StructuredDocumentation","src":"88682:45:15","text":"Returns a Chain struct for specific alias"},"functionSelector":"4cc1c2bb","implemented":false,"kind":"function","modifiers":[],"name":"getChain","nameLocation":"88741:8:15","parameters":{"id":16432,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16431,"mutability":"mutable","name":"chainAlias","nameLocation":"88766:10:15","nodeType":"VariableDeclaration","scope":16437,"src":"88750:26:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16430,"name":"string","nodeType":"ElementaryTypeName","src":"88750:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"88749:28:15"},"returnParameters":{"id":16436,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16435,"mutability":"mutable","name":"chain","nameLocation":"88814:5:15","nodeType":"VariableDeclaration","scope":16437,"src":"88801:18:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Chain_$13124_memory_ptr","typeString":"struct VmSafe.Chain"},"typeName":{"id":16434,"nodeType":"UserDefinedTypeName","pathNode":{"id":16433,"name":"Chain","nameLocations":["88801:5:15"],"nodeType":"IdentifierPath","referencedDeclaration":13124,"src":"88801:5:15"},"referencedDeclaration":13124,"src":"88801:5:15","typeDescriptions":{"typeIdentifier":"t_struct$_Chain_$13124_storage_ptr","typeString":"struct VmSafe.Chain"}},"visibility":"internal"}],"src":"88800:20:15"},"scope":16930,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":16446,"nodeType":"FunctionDefinition","src":"88879:78:15","nodes":[],"documentation":{"id":16438,"nodeType":"StructuredDocumentation","src":"88827:47:15","text":"Returns a Chain struct for specific chainId"},"functionSelector":"b6791ad4","implemented":false,"kind":"function","modifiers":[],"name":"getChain","nameLocation":"88888:8:15","parameters":{"id":16441,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16440,"mutability":"mutable","name":"chainId","nameLocation":"88905:7:15","nodeType":"VariableDeclaration","scope":16446,"src":"88897:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16439,"name":"uint256","nodeType":"ElementaryTypeName","src":"88897:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"88896:17:15"},"returnParameters":{"id":16445,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16444,"mutability":"mutable","name":"chain","nameLocation":"88950:5:15","nodeType":"VariableDeclaration","scope":16446,"src":"88937:18:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Chain_$13124_memory_ptr","typeString":"struct VmSafe.Chain"},"typeName":{"id":16443,"nodeType":"UserDefinedTypeName","pathNode":{"id":16442,"name":"Chain","nameLocations":["88937:5:15"],"nodeType":"IdentifierPath","referencedDeclaration":13124,"src":"88937:5:15"},"referencedDeclaration":13124,"src":"88937:5:15","typeDescriptions":{"typeIdentifier":"t_struct$_Chain_$13124_storage_ptr","typeString":"struct VmSafe.Chain"}},"visibility":"internal"}],"src":"88936:20:15"},"scope":16930,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":16452,"nodeType":"FunctionDefinition","src":"89392:75:15","nodes":[],"documentation":{"id":16447,"nodeType":"StructuredDocumentation","src":"88963:424:15","text":"Returns the Foundry version.\n Format: <cargo_version>-<tag>+<git_sha_short>.<unix_build_timestamp>.<profile>\n Sample output: 0.3.0-nightly+3cb96bde9b.1737036656.debug\n Note: Build timestamps may vary slightly across platforms due to separate CI jobs.\n For reliable version comparisons, use UNIX format (e.g., >= 1700000000)\n to compare timestamps while ignoring minor time differences."},"functionSelector":"ea991bb5","implemented":false,"kind":"function","modifiers":[],"name":"getFoundryVersion","nameLocation":"89401:17:15","parameters":{"id":16448,"nodeType":"ParameterList","parameters":[],"src":"89418:2:15"},"returnParameters":{"id":16451,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16450,"mutability":"mutable","name":"version","nameLocation":"89458:7:15","nodeType":"VariableDeclaration","scope":16452,"src":"89444:21:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":16449,"name":"string","nodeType":"ElementaryTypeName","src":"89444:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"89443:23:15"},"scope":16930,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":16460,"nodeType":"FunctionDefinition","src":"89522:85:15","nodes":[],"documentation":{"id":16453,"nodeType":"StructuredDocumentation","src":"89473:44:15","text":"Returns the RPC url for the given alias."},"functionSelector":"975a6ce9","implemented":false,"kind":"function","modifiers":[],"name":"rpcUrl","nameLocation":"89531:6:15","parameters":{"id":16456,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16455,"mutability":"mutable","name":"rpcAlias","nameLocation":"89554:8:15","nodeType":"VariableDeclaration","scope":16460,"src":"89538:24:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16454,"name":"string","nodeType":"ElementaryTypeName","src":"89538:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"89537:26:15"},"returnParameters":{"id":16459,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16458,"mutability":"mutable","name":"json","nameLocation":"89601:4:15","nodeType":"VariableDeclaration","scope":16460,"src":"89587:18:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":16457,"name":"string","nodeType":"ElementaryTypeName","src":"89587:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"89586:20:15"},"scope":16930,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":16468,"nodeType":"FunctionDefinition","src":"89672:67:15","nodes":[],"documentation":{"id":16461,"nodeType":"StructuredDocumentation","src":"89613:54:15","text":"Returns all rpc urls and their aliases as structs."},"functionSelector":"9d2ad72a","implemented":false,"kind":"function","modifiers":[],"name":"rpcUrlStructs","nameLocation":"89681:13:15","parameters":{"id":16462,"nodeType":"ParameterList","parameters":[],"src":"89694:2:15"},"returnParameters":{"id":16467,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16466,"mutability":"mutable","name":"urls","nameLocation":"89733:4:15","nodeType":"VariableDeclaration","scope":16468,"src":"89720:17:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Rpc_$13041_memory_ptr_$dyn_memory_ptr","typeString":"struct VmSafe.Rpc[]"},"typeName":{"baseType":{"id":16464,"nodeType":"UserDefinedTypeName","pathNode":{"id":16463,"name":"Rpc","nameLocations":["89720:3:15"],"nodeType":"IdentifierPath","referencedDeclaration":13041,"src":"89720:3:15"},"referencedDeclaration":13041,"src":"89720:3:15","typeDescriptions":{"typeIdentifier":"t_struct$_Rpc_$13041_storage_ptr","typeString":"struct VmSafe.Rpc"}},"id":16465,"nodeType":"ArrayTypeName","src":"89720:5:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Rpc_$13041_storage_$dyn_storage_ptr","typeString":"struct VmSafe.Rpc[]"}},"visibility":"internal"}],"src":"89719:19:15"},"scope":16930,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":16477,"nodeType":"FunctionDefinition","src":"89810:67:15","nodes":[],"documentation":{"id":16469,"nodeType":"StructuredDocumentation","src":"89745:60:15","text":"Returns all rpc urls and their aliases `[alias, url][]`."},"functionSelector":"a85a8418","implemented":false,"kind":"function","modifiers":[],"name":"rpcUrls","nameLocation":"89819:7:15","parameters":{"id":16470,"nodeType":"ParameterList","parameters":[],"src":"89826:2:15"},"returnParameters":{"id":16476,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16475,"mutability":"mutable","name":"urls","nameLocation":"89871:4:15","nodeType":"VariableDeclaration","scope":16477,"src":"89852:23:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_array$_t_string_memory_ptr_$2_memory_ptr_$dyn_memory_ptr","typeString":"string[2][]"},"typeName":{"baseType":{"baseType":{"id":16471,"name":"string","nodeType":"ElementaryTypeName","src":"89852:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":16473,"length":{"hexValue":"32","id":16472,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"89859:1:15","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"ArrayTypeName","src":"89852:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$2_storage_ptr","typeString":"string[2]"}},"id":16474,"nodeType":"ArrayTypeName","src":"89852:11:15","typeDescriptions":{"typeIdentifier":"t_array$_t_array$_t_string_storage_$2_storage_$dyn_storage_ptr","typeString":"string[2][]"}},"visibility":"internal"}],"src":"89851:25:15"},"scope":16930,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":16483,"nodeType":"FunctionDefinition","src":"89958:42:15","nodes":[],"documentation":{"id":16478,"nodeType":"StructuredDocumentation","src":"89883:70:15","text":"Suspends execution of the main thread for `duration` milliseconds."},"functionSelector":"fa9d8713","implemented":false,"kind":"function","modifiers":[],"name":"sleep","nameLocation":"89967:5:15","parameters":{"id":16481,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16480,"mutability":"mutable","name":"duration","nameLocation":"89981:8:15","nodeType":"VariableDeclaration","scope":16483,"src":"89973:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16479,"name":"uint256","nodeType":"ElementaryTypeName","src":"89973:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"89972:18:15"},"returnParameters":{"id":16482,"nodeType":"ParameterList","parameters":[],"src":"89999:0:15"},"scope":16930,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16493,"nodeType":"FunctionDefinition","src":"90085:95:15","nodes":[],"documentation":{"id":16484,"nodeType":"StructuredDocumentation","src":"90037:43:15","text":"Checks if `key` exists in a TOML table."},"functionSelector":"600903ad","implemented":false,"kind":"function","modifiers":[],"name":"keyExistsToml","nameLocation":"90094:13:15","parameters":{"id":16489,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16486,"mutability":"mutable","name":"toml","nameLocation":"90124:4:15","nodeType":"VariableDeclaration","scope":16493,"src":"90108:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16485,"name":"string","nodeType":"ElementaryTypeName","src":"90108:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16488,"mutability":"mutable","name":"key","nameLocation":"90146:3:15","nodeType":"VariableDeclaration","scope":16493,"src":"90130:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16487,"name":"string","nodeType":"ElementaryTypeName","src":"90130:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"90107:43:15"},"returnParameters":{"id":16492,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16491,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":16493,"src":"90174:4:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":16490,"name":"bool","nodeType":"ElementaryTypeName","src":"90174:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"90173:6:15"},"scope":16930,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":16503,"nodeType":"FunctionDefinition","src":"90261:101:15","nodes":[],"documentation":{"id":16494,"nodeType":"StructuredDocumentation","src":"90186:70:15","text":"Parses a string of TOML data at `key` and coerces it to `address`."},"functionSelector":"65e7c844","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlAddress","nameLocation":"90270:16:15","parameters":{"id":16499,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16496,"mutability":"mutable","name":"toml","nameLocation":"90303:4:15","nodeType":"VariableDeclaration","scope":16503,"src":"90287:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16495,"name":"string","nodeType":"ElementaryTypeName","src":"90287:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16498,"mutability":"mutable","name":"key","nameLocation":"90325:3:15","nodeType":"VariableDeclaration","scope":16503,"src":"90309:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16497,"name":"string","nodeType":"ElementaryTypeName","src":"90309:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"90286:43:15"},"returnParameters":{"id":16502,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16501,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":16503,"src":"90353:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":16500,"name":"address","nodeType":"ElementaryTypeName","src":"90353:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"90352:9:15"},"scope":16930,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16514,"nodeType":"FunctionDefinition","src":"90445:139:15","nodes":[],"documentation":{"id":16504,"nodeType":"StructuredDocumentation","src":"90368:72:15","text":"Parses a string of TOML data at `key` and coerces it to `address[]`."},"functionSelector":"65c428e7","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlAddressArray","nameLocation":"90454:21:15","parameters":{"id":16509,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16506,"mutability":"mutable","name":"toml","nameLocation":"90492:4:15","nodeType":"VariableDeclaration","scope":16514,"src":"90476:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16505,"name":"string","nodeType":"ElementaryTypeName","src":"90476:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16508,"mutability":"mutable","name":"key","nameLocation":"90514:3:15","nodeType":"VariableDeclaration","scope":16514,"src":"90498:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16507,"name":"string","nodeType":"ElementaryTypeName","src":"90498:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"90475:43:15"},"returnParameters":{"id":16513,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16512,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":16514,"src":"90566:16:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":16510,"name":"address","nodeType":"ElementaryTypeName","src":"90566:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":16511,"nodeType":"ArrayTypeName","src":"90566:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"90565:18:15"},"scope":16930,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16524,"nodeType":"FunctionDefinition","src":"90662:95:15","nodes":[],"documentation":{"id":16515,"nodeType":"StructuredDocumentation","src":"90590:67:15","text":"Parses a string of TOML data at `key` and coerces it to `bool`."},"functionSelector":"d30dced6","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlBool","nameLocation":"90671:13:15","parameters":{"id":16520,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16517,"mutability":"mutable","name":"toml","nameLocation":"90701:4:15","nodeType":"VariableDeclaration","scope":16524,"src":"90685:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16516,"name":"string","nodeType":"ElementaryTypeName","src":"90685:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16519,"mutability":"mutable","name":"key","nameLocation":"90723:3:15","nodeType":"VariableDeclaration","scope":16524,"src":"90707:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16518,"name":"string","nodeType":"ElementaryTypeName","src":"90707:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"90684:43:15"},"returnParameters":{"id":16523,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16522,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":16524,"src":"90751:4:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":16521,"name":"bool","nodeType":"ElementaryTypeName","src":"90751:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"90750:6:15"},"scope":16930,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16535,"nodeType":"FunctionDefinition","src":"90837:109:15","nodes":[],"documentation":{"id":16525,"nodeType":"StructuredDocumentation","src":"90763:69:15","text":"Parses a string of TOML data at `key` and coerces it to `bool[]`."},"functionSelector":"127cfe9a","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlBoolArray","nameLocation":"90846:18:15","parameters":{"id":16530,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16527,"mutability":"mutable","name":"toml","nameLocation":"90881:4:15","nodeType":"VariableDeclaration","scope":16535,"src":"90865:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16526,"name":"string","nodeType":"ElementaryTypeName","src":"90865:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16529,"mutability":"mutable","name":"key","nameLocation":"90903:3:15","nodeType":"VariableDeclaration","scope":16535,"src":"90887:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16528,"name":"string","nodeType":"ElementaryTypeName","src":"90887:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"90864:43:15"},"returnParameters":{"id":16534,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16533,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":16535,"src":"90931:13:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":16531,"name":"bool","nodeType":"ElementaryTypeName","src":"90931:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":16532,"nodeType":"ArrayTypeName","src":"90931:6:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"}],"src":"90930:15:15"},"scope":16930,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16545,"nodeType":"FunctionDefinition","src":"91025:104:15","nodes":[],"documentation":{"id":16536,"nodeType":"StructuredDocumentation","src":"90952:68:15","text":"Parses a string of TOML data at `key` and coerces it to `bytes`."},"functionSelector":"d77bfdb9","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlBytes","nameLocation":"91034:14:15","parameters":{"id":16541,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16538,"mutability":"mutable","name":"toml","nameLocation":"91065:4:15","nodeType":"VariableDeclaration","scope":16545,"src":"91049:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16537,"name":"string","nodeType":"ElementaryTypeName","src":"91049:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16540,"mutability":"mutable","name":"key","nameLocation":"91087:3:15","nodeType":"VariableDeclaration","scope":16545,"src":"91071:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16539,"name":"string","nodeType":"ElementaryTypeName","src":"91071:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"91048:43:15"},"returnParameters":{"id":16544,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16543,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":16545,"src":"91115:12:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":16542,"name":"bytes","nodeType":"ElementaryTypeName","src":"91115:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"91114:14:15"},"scope":16930,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16555,"nodeType":"FunctionDefinition","src":"91210:101:15","nodes":[],"documentation":{"id":16546,"nodeType":"StructuredDocumentation","src":"91135:70:15","text":"Parses a string of TOML data at `key` and coerces it to `bytes32`."},"functionSelector":"8e214810","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlBytes32","nameLocation":"91219:16:15","parameters":{"id":16551,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16548,"mutability":"mutable","name":"toml","nameLocation":"91252:4:15","nodeType":"VariableDeclaration","scope":16555,"src":"91236:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16547,"name":"string","nodeType":"ElementaryTypeName","src":"91236:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16550,"mutability":"mutable","name":"key","nameLocation":"91274:3:15","nodeType":"VariableDeclaration","scope":16555,"src":"91258:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16549,"name":"string","nodeType":"ElementaryTypeName","src":"91258:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"91235:43:15"},"returnParameters":{"id":16554,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16553,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":16555,"src":"91302:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":16552,"name":"bytes32","nodeType":"ElementaryTypeName","src":"91302:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"91301:9:15"},"scope":16930,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16566,"nodeType":"FunctionDefinition","src":"91394:139:15","nodes":[],"documentation":{"id":16556,"nodeType":"StructuredDocumentation","src":"91317:72:15","text":"Parses a string of TOML data at `key` and coerces it to `bytes32[]`."},"functionSelector":"3e716f81","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlBytes32Array","nameLocation":"91403:21:15","parameters":{"id":16561,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16558,"mutability":"mutable","name":"toml","nameLocation":"91441:4:15","nodeType":"VariableDeclaration","scope":16566,"src":"91425:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16557,"name":"string","nodeType":"ElementaryTypeName","src":"91425:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16560,"mutability":"mutable","name":"key","nameLocation":"91463:3:15","nodeType":"VariableDeclaration","scope":16566,"src":"91447:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16559,"name":"string","nodeType":"ElementaryTypeName","src":"91447:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"91424:43:15"},"returnParameters":{"id":16565,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16564,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":16566,"src":"91515:16:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":16562,"name":"bytes32","nodeType":"ElementaryTypeName","src":"91515:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":16563,"nodeType":"ArrayTypeName","src":"91515:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"91514:18:15"},"scope":16930,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16577,"nodeType":"FunctionDefinition","src":"91614:111:15","nodes":[],"documentation":{"id":16567,"nodeType":"StructuredDocumentation","src":"91539:70:15","text":"Parses a string of TOML data at `key` and coerces it to `bytes[]`."},"functionSelector":"b197c247","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlBytesArray","nameLocation":"91623:19:15","parameters":{"id":16572,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16569,"mutability":"mutable","name":"toml","nameLocation":"91659:4:15","nodeType":"VariableDeclaration","scope":16577,"src":"91643:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16568,"name":"string","nodeType":"ElementaryTypeName","src":"91643:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16571,"mutability":"mutable","name":"key","nameLocation":"91681:3:15","nodeType":"VariableDeclaration","scope":16577,"src":"91665:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16570,"name":"string","nodeType":"ElementaryTypeName","src":"91665:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"91642:43:15"},"returnParameters":{"id":16576,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16575,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":16577,"src":"91709:14:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":16573,"name":"bytes","nodeType":"ElementaryTypeName","src":"91709:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":16574,"nodeType":"ArrayTypeName","src":"91709:7:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"91708:16:15"},"scope":16930,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16587,"nodeType":"FunctionDefinition","src":"91805:96:15","nodes":[],"documentation":{"id":16578,"nodeType":"StructuredDocumentation","src":"91731:69:15","text":"Parses a string of TOML data at `key` and coerces it to `int256`."},"functionSelector":"c1350739","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlInt","nameLocation":"91814:12:15","parameters":{"id":16583,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16580,"mutability":"mutable","name":"toml","nameLocation":"91843:4:15","nodeType":"VariableDeclaration","scope":16587,"src":"91827:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16579,"name":"string","nodeType":"ElementaryTypeName","src":"91827:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16582,"mutability":"mutable","name":"key","nameLocation":"91865:3:15","nodeType":"VariableDeclaration","scope":16587,"src":"91849:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16581,"name":"string","nodeType":"ElementaryTypeName","src":"91849:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"91826:43:15"},"returnParameters":{"id":16586,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16585,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":16587,"src":"91893:6:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":16584,"name":"int256","nodeType":"ElementaryTypeName","src":"91893:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"91892:8:15"},"scope":16930,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16598,"nodeType":"FunctionDefinition","src":"91983:110:15","nodes":[],"documentation":{"id":16588,"nodeType":"StructuredDocumentation","src":"91907:71:15","text":"Parses a string of TOML data at `key` and coerces it to `int256[]`."},"functionSelector":"d3522ae6","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlIntArray","nameLocation":"91992:17:15","parameters":{"id":16593,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16590,"mutability":"mutable","name":"toml","nameLocation":"92026:4:15","nodeType":"VariableDeclaration","scope":16598,"src":"92010:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16589,"name":"string","nodeType":"ElementaryTypeName","src":"92010:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16592,"mutability":"mutable","name":"key","nameLocation":"92048:3:15","nodeType":"VariableDeclaration","scope":16598,"src":"92032:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16591,"name":"string","nodeType":"ElementaryTypeName","src":"92032:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"92009:43:15"},"returnParameters":{"id":16597,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16596,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":16598,"src":"92076:15:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_memory_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":16594,"name":"int256","nodeType":"ElementaryTypeName","src":"92076:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":16595,"nodeType":"ArrayTypeName","src":"92076:8:15","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"}],"src":"92075:17:15"},"scope":16930,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16609,"nodeType":"FunctionDefinition","src":"92157:111:15","nodes":[],"documentation":{"id":16599,"nodeType":"StructuredDocumentation","src":"92099:53:15","text":"Returns an array of all the keys in a TOML table."},"functionSelector":"812a44b2","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlKeys","nameLocation":"92166:13:15","parameters":{"id":16604,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16601,"mutability":"mutable","name":"toml","nameLocation":"92196:4:15","nodeType":"VariableDeclaration","scope":16609,"src":"92180:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16600,"name":"string","nodeType":"ElementaryTypeName","src":"92180:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16603,"mutability":"mutable","name":"key","nameLocation":"92218:3:15","nodeType":"VariableDeclaration","scope":16609,"src":"92202:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16602,"name":"string","nodeType":"ElementaryTypeName","src":"92202:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"92179:43:15"},"returnParameters":{"id":16608,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16607,"mutability":"mutable","name":"keys","nameLocation":"92262:4:15","nodeType":"VariableDeclaration","scope":16609,"src":"92246:20:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":16605,"name":"string","nodeType":"ElementaryTypeName","src":"92246:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":16606,"nodeType":"ArrayTypeName","src":"92246:8:15","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"92245:22:15"},"scope":16930,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16619,"nodeType":"FunctionDefinition","src":"92348:106:15","nodes":[],"documentation":{"id":16610,"nodeType":"StructuredDocumentation","src":"92274:69:15","text":"Parses a string of TOML data at `key` and coerces it to `string`."},"functionSelector":"8bb8dd43","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlString","nameLocation":"92357:15:15","parameters":{"id":16615,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16612,"mutability":"mutable","name":"toml","nameLocation":"92389:4:15","nodeType":"VariableDeclaration","scope":16619,"src":"92373:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16611,"name":"string","nodeType":"ElementaryTypeName","src":"92373:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16614,"mutability":"mutable","name":"key","nameLocation":"92411:3:15","nodeType":"VariableDeclaration","scope":16619,"src":"92395:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16613,"name":"string","nodeType":"ElementaryTypeName","src":"92395:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"92372:43:15"},"returnParameters":{"id":16618,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16617,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":16619,"src":"92439:13:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":16616,"name":"string","nodeType":"ElementaryTypeName","src":"92439:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"92438:15:15"},"scope":16930,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16630,"nodeType":"FunctionDefinition","src":"92536:113:15","nodes":[],"documentation":{"id":16620,"nodeType":"StructuredDocumentation","src":"92460:71:15","text":"Parses a string of TOML data at `key` and coerces it to `string[]`."},"functionSelector":"9f629281","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlStringArray","nameLocation":"92545:20:15","parameters":{"id":16625,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16622,"mutability":"mutable","name":"toml","nameLocation":"92582:4:15","nodeType":"VariableDeclaration","scope":16630,"src":"92566:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16621,"name":"string","nodeType":"ElementaryTypeName","src":"92566:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16624,"mutability":"mutable","name":"key","nameLocation":"92604:3:15","nodeType":"VariableDeclaration","scope":16630,"src":"92588:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16623,"name":"string","nodeType":"ElementaryTypeName","src":"92588:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"92565:43:15"},"returnParameters":{"id":16629,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16628,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":16630,"src":"92632:15:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":16626,"name":"string","nodeType":"ElementaryTypeName","src":"92632:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":16627,"nodeType":"ArrayTypeName","src":"92632:8:15","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"92631:17:15"},"scope":16930,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16642,"nodeType":"FunctionDefinition","src":"92766:165:15","nodes":[],"documentation":{"id":16631,"nodeType":"StructuredDocumentation","src":"92655:106:15","text":"Parses a string of TOML data at `key` and coerces it to type array corresponding to `typeDescription`."},"functionSelector":"49be3743","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlTypeArray","nameLocation":"92775:18:15","parameters":{"id":16638,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16633,"mutability":"mutable","name":"toml","nameLocation":"92810:4:15","nodeType":"VariableDeclaration","scope":16642,"src":"92794:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16632,"name":"string","nodeType":"ElementaryTypeName","src":"92794:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16635,"mutability":"mutable","name":"key","nameLocation":"92832:3:15","nodeType":"VariableDeclaration","scope":16642,"src":"92816:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16634,"name":"string","nodeType":"ElementaryTypeName","src":"92816:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16637,"mutability":"mutable","name":"typeDescription","nameLocation":"92853:15:15","nodeType":"VariableDeclaration","scope":16642,"src":"92837:31:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16636,"name":"string","nodeType":"ElementaryTypeName","src":"92837:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"92793:76:15"},"returnParameters":{"id":16641,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16640,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":16642,"src":"92917:12:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":16639,"name":"bytes","nodeType":"ElementaryTypeName","src":"92917:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"92916:14:15"},"scope":16930,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16652,"nodeType":"FunctionDefinition","src":"93033:139:15","nodes":[],"documentation":{"id":16643,"nodeType":"StructuredDocumentation","src":"92937:91:15","text":"Parses a string of TOML data and coerces it to type corresponding to `typeDescription`."},"functionSelector":"47fa5e11","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlType","nameLocation":"93042:13:15","parameters":{"id":16648,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16645,"mutability":"mutable","name":"toml","nameLocation":"93072:4:15","nodeType":"VariableDeclaration","scope":16652,"src":"93056:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16644,"name":"string","nodeType":"ElementaryTypeName","src":"93056:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16647,"mutability":"mutable","name":"typeDescription","nameLocation":"93094:15:15","nodeType":"VariableDeclaration","scope":16652,"src":"93078:31:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16646,"name":"string","nodeType":"ElementaryTypeName","src":"93078:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"93055:55:15"},"returnParameters":{"id":16651,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16650,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":16652,"src":"93158:12:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":16649,"name":"bytes","nodeType":"ElementaryTypeName","src":"93158:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"93157:14:15"},"scope":16930,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16664,"nodeType":"FunctionDefinition","src":"93283:160:15","nodes":[],"documentation":{"id":16653,"nodeType":"StructuredDocumentation","src":"93178:100:15","text":"Parses a string of TOML data at `key` and coerces it to type corresponding to `typeDescription`."},"functionSelector":"f9fa5cdb","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlType","nameLocation":"93292:13:15","parameters":{"id":16660,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16655,"mutability":"mutable","name":"toml","nameLocation":"93322:4:15","nodeType":"VariableDeclaration","scope":16664,"src":"93306:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16654,"name":"string","nodeType":"ElementaryTypeName","src":"93306:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16657,"mutability":"mutable","name":"key","nameLocation":"93344:3:15","nodeType":"VariableDeclaration","scope":16664,"src":"93328:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16656,"name":"string","nodeType":"ElementaryTypeName","src":"93328:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16659,"mutability":"mutable","name":"typeDescription","nameLocation":"93365:15:15","nodeType":"VariableDeclaration","scope":16664,"src":"93349:31:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16658,"name":"string","nodeType":"ElementaryTypeName","src":"93349:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"93305:76:15"},"returnParameters":{"id":16663,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16662,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":16664,"src":"93429:12:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":16661,"name":"bytes","nodeType":"ElementaryTypeName","src":"93429:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"93428:14:15"},"scope":16930,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16674,"nodeType":"FunctionDefinition","src":"93524:98:15","nodes":[],"documentation":{"id":16665,"nodeType":"StructuredDocumentation","src":"93449:70:15","text":"Parses a string of TOML data at `key` and coerces it to `uint256`."},"functionSelector":"cc7b0487","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlUint","nameLocation":"93533:13:15","parameters":{"id":16670,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16667,"mutability":"mutable","name":"toml","nameLocation":"93563:4:15","nodeType":"VariableDeclaration","scope":16674,"src":"93547:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16666,"name":"string","nodeType":"ElementaryTypeName","src":"93547:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16669,"mutability":"mutable","name":"key","nameLocation":"93585:3:15","nodeType":"VariableDeclaration","scope":16674,"src":"93569:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16668,"name":"string","nodeType":"ElementaryTypeName","src":"93569:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"93546:43:15"},"returnParameters":{"id":16673,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16672,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":16674,"src":"93613:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16671,"name":"uint256","nodeType":"ElementaryTypeName","src":"93613:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"93612:9:15"},"scope":16930,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16685,"nodeType":"FunctionDefinition","src":"93705:112:15","nodes":[],"documentation":{"id":16675,"nodeType":"StructuredDocumentation","src":"93628:72:15","text":"Parses a string of TOML data at `key` and coerces it to `uint256[]`."},"functionSelector":"b5df27c8","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlUintArray","nameLocation":"93714:18:15","parameters":{"id":16680,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16677,"mutability":"mutable","name":"toml","nameLocation":"93749:4:15","nodeType":"VariableDeclaration","scope":16685,"src":"93733:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16676,"name":"string","nodeType":"ElementaryTypeName","src":"93733:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16679,"mutability":"mutable","name":"key","nameLocation":"93771:3:15","nodeType":"VariableDeclaration","scope":16685,"src":"93755:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16678,"name":"string","nodeType":"ElementaryTypeName","src":"93755:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"93732:43:15"},"returnParameters":{"id":16684,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16683,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":16685,"src":"93799:16:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":16681,"name":"uint256","nodeType":"ElementaryTypeName","src":"93799:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":16682,"nodeType":"ArrayTypeName","src":"93799:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"93798:18:15"},"scope":16930,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16693,"nodeType":"FunctionDefinition","src":"93857:93:15","nodes":[],"documentation":{"id":16686,"nodeType":"StructuredDocumentation","src":"93823:29:15","text":"ABI-encodes a TOML table."},"functionSelector":"592151f0","implemented":false,"kind":"function","modifiers":[],"name":"parseToml","nameLocation":"93866:9:15","parameters":{"id":16689,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16688,"mutability":"mutable","name":"toml","nameLocation":"93892:4:15","nodeType":"VariableDeclaration","scope":16693,"src":"93876:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16687,"name":"string","nodeType":"ElementaryTypeName","src":"93876:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"93875:22:15"},"returnParameters":{"id":16692,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16691,"mutability":"mutable","name":"abiEncodedData","nameLocation":"93934:14:15","nodeType":"VariableDeclaration","scope":16693,"src":"93921:27:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":16690,"name":"bytes","nodeType":"ElementaryTypeName","src":"93921:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"93920:29:15"},"scope":16930,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16703,"nodeType":"FunctionDefinition","src":"93999:114:15","nodes":[],"documentation":{"id":16694,"nodeType":"StructuredDocumentation","src":"93956:38:15","text":"ABI-encodes a TOML table at `key`."},"functionSelector":"37736e08","implemented":false,"kind":"function","modifiers":[],"name":"parseToml","nameLocation":"94008:9:15","parameters":{"id":16699,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16696,"mutability":"mutable","name":"toml","nameLocation":"94034:4:15","nodeType":"VariableDeclaration","scope":16703,"src":"94018:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16695,"name":"string","nodeType":"ElementaryTypeName","src":"94018:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16698,"mutability":"mutable","name":"key","nameLocation":"94056:3:15","nodeType":"VariableDeclaration","scope":16703,"src":"94040:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16697,"name":"string","nodeType":"ElementaryTypeName","src":"94040:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"94017:43:15"},"returnParameters":{"id":16702,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16701,"mutability":"mutable","name":"abiEncodedData","nameLocation":"94097:14:15","nodeType":"VariableDeclaration","scope":16703,"src":"94084:27:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":16700,"name":"bytes","nodeType":"ElementaryTypeName","src":"94084:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"94083:29:15"},"scope":16930,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16711,"nodeType":"FunctionDefinition","src":"94206:72:15","nodes":[],"documentation":{"id":16704,"nodeType":"StructuredDocumentation","src":"94119:82:15","text":"Takes serialized JSON, converts to TOML and write a serialized TOML to a file."},"functionSelector":"c0865ba7","implemented":false,"kind":"function","modifiers":[],"name":"writeToml","nameLocation":"94215:9:15","parameters":{"id":16709,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16706,"mutability":"mutable","name":"json","nameLocation":"94241:4:15","nodeType":"VariableDeclaration","scope":16711,"src":"94225:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16705,"name":"string","nodeType":"ElementaryTypeName","src":"94225:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16708,"mutability":"mutable","name":"path","nameLocation":"94263:4:15","nodeType":"VariableDeclaration","scope":16711,"src":"94247:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16707,"name":"string","nodeType":"ElementaryTypeName","src":"94247:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"94224:44:15"},"returnParameters":{"id":16710,"nodeType":"ParameterList","parameters":[],"src":"94277:0:15"},"scope":16930,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16721,"nodeType":"FunctionDefinition","src":"94547:98:15","nodes":[],"documentation":{"id":16712,"nodeType":"StructuredDocumentation","src":"94284:258:15","text":"Takes serialized JSON, converts to TOML and write a serialized TOML table to an **existing** TOML file, replacing a value with key = <value_key.>\n This is useful to replace a specific value of a TOML file, without having to parse the entire thing."},"functionSelector":"51ac6a33","implemented":false,"kind":"function","modifiers":[],"name":"writeToml","nameLocation":"94556:9:15","parameters":{"id":16719,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16714,"mutability":"mutable","name":"json","nameLocation":"94582:4:15","nodeType":"VariableDeclaration","scope":16721,"src":"94566:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16713,"name":"string","nodeType":"ElementaryTypeName","src":"94566:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16716,"mutability":"mutable","name":"path","nameLocation":"94604:4:15","nodeType":"VariableDeclaration","scope":16721,"src":"94588:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16715,"name":"string","nodeType":"ElementaryTypeName","src":"94588:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16718,"mutability":"mutable","name":"valueKey","nameLocation":"94626:8:15","nodeType":"VariableDeclaration","scope":16721,"src":"94610:24:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16717,"name":"string","nodeType":"ElementaryTypeName","src":"94610:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"94565:70:15"},"returnParameters":{"id":16720,"nodeType":"ParameterList","parameters":[],"src":"94644:0:15"},"scope":16930,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16733,"nodeType":"FunctionDefinition","src":"94784:141:15","nodes":[],"documentation":{"id":16722,"nodeType":"StructuredDocumentation","src":"94687:92:15","text":"Compute the address of a contract created with CREATE2 using the given CREATE2 deployer."},"functionSelector":"d323826a","implemented":false,"kind":"function","modifiers":[],"name":"computeCreate2Address","nameLocation":"94793:21:15","parameters":{"id":16729,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16724,"mutability":"mutable","name":"salt","nameLocation":"94823:4:15","nodeType":"VariableDeclaration","scope":16733,"src":"94815:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":16723,"name":"bytes32","nodeType":"ElementaryTypeName","src":"94815:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":16726,"mutability":"mutable","name":"initCodeHash","nameLocation":"94837:12:15","nodeType":"VariableDeclaration","scope":16733,"src":"94829:20:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":16725,"name":"bytes32","nodeType":"ElementaryTypeName","src":"94829:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":16728,"mutability":"mutable","name":"deployer","nameLocation":"94859:8:15","nodeType":"VariableDeclaration","scope":16733,"src":"94851:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":16727,"name":"address","nodeType":"ElementaryTypeName","src":"94851:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"94814:54:15"},"returnParameters":{"id":16732,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16731,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":16733,"src":"94916:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":16730,"name":"address","nodeType":"ElementaryTypeName","src":"94916:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"94915:9:15"},"scope":16930,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16743,"nodeType":"FunctionDefinition","src":"95030:99:15","nodes":[],"documentation":{"id":16734,"nodeType":"StructuredDocumentation","src":"94931:94:15","text":"Compute the address of a contract created with CREATE2 using the default CREATE2 deployer."},"functionSelector":"890c283b","implemented":false,"kind":"function","modifiers":[],"name":"computeCreate2Address","nameLocation":"95039:21:15","parameters":{"id":16739,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16736,"mutability":"mutable","name":"salt","nameLocation":"95069:4:15","nodeType":"VariableDeclaration","scope":16743,"src":"95061:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":16735,"name":"bytes32","nodeType":"ElementaryTypeName","src":"95061:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":16738,"mutability":"mutable","name":"initCodeHash","nameLocation":"95083:12:15","nodeType":"VariableDeclaration","scope":16743,"src":"95075:20:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":16737,"name":"bytes32","nodeType":"ElementaryTypeName","src":"95075:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"95060:36:15"},"returnParameters":{"id":16742,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16741,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":16743,"src":"95120:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":16740,"name":"address","nodeType":"ElementaryTypeName","src":"95120:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"95119:9:15"},"scope":16930,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16753,"nodeType":"FunctionDefinition","src":"95234:95:15","nodes":[],"documentation":{"id":16744,"nodeType":"StructuredDocumentation","src":"95135:94:15","text":"Compute the address a contract will be deployed at for a given deployer address and nonce."},"functionSelector":"74637a7a","implemented":false,"kind":"function","modifiers":[],"name":"computeCreateAddress","nameLocation":"95243:20:15","parameters":{"id":16749,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16746,"mutability":"mutable","name":"deployer","nameLocation":"95272:8:15","nodeType":"VariableDeclaration","scope":16753,"src":"95264:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":16745,"name":"address","nodeType":"ElementaryTypeName","src":"95264:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":16748,"mutability":"mutable","name":"nonce","nameLocation":"95290:5:15","nodeType":"VariableDeclaration","scope":16753,"src":"95282:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16747,"name":"uint256","nodeType":"ElementaryTypeName","src":"95282:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"95263:33:15"},"returnParameters":{"id":16752,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16751,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":16753,"src":"95320:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":16750,"name":"address","nodeType":"ElementaryTypeName","src":"95320:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"95319:9:15"},"scope":16930,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16761,"nodeType":"FunctionDefinition","src":"95422:56:15","nodes":[],"documentation":{"id":16754,"nodeType":"StructuredDocumentation","src":"95335:82:15","text":"Utility cheatcode to copy storage of `from` contract to another `to` contract."},"functionSelector":"203dac0d","implemented":false,"kind":"function","modifiers":[],"name":"copyStorage","nameLocation":"95431:11:15","parameters":{"id":16759,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16756,"mutability":"mutable","name":"from","nameLocation":"95451:4:15","nodeType":"VariableDeclaration","scope":16761,"src":"95443:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":16755,"name":"address","nodeType":"ElementaryTypeName","src":"95443:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":16758,"mutability":"mutable","name":"to","nameLocation":"95465:2:15","nodeType":"VariableDeclaration","scope":16761,"src":"95457:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":16757,"name":"address","nodeType":"ElementaryTypeName","src":"95457:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"95442:26:15"},"returnParameters":{"id":16760,"nodeType":"ParameterList","parameters":[],"src":"95477:0:15"},"scope":16930,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16769,"nodeType":"FunctionDefinition","src":"95534:75:15","nodes":[],"documentation":{"id":16762,"nodeType":"StructuredDocumentation","src":"95484:45:15","text":"Returns ENS namehash for provided string."},"functionSelector":"8c374c65","implemented":false,"kind":"function","modifiers":[],"name":"ensNamehash","nameLocation":"95543:11:15","parameters":{"id":16765,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16764,"mutability":"mutable","name":"name","nameLocation":"95571:4:15","nodeType":"VariableDeclaration","scope":16769,"src":"95555:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16763,"name":"string","nodeType":"ElementaryTypeName","src":"95555:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"95554:22:15"},"returnParameters":{"id":16768,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16767,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":16769,"src":"95600:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":16766,"name":"bytes32","nodeType":"ElementaryTypeName","src":"95600:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"95599:9:15"},"scope":16930,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16777,"nodeType":"FunctionDefinition","src":"95665:86:15","nodes":[],"documentation":{"id":16770,"nodeType":"StructuredDocumentation","src":"95615:45:15","text":"Gets the label for the specified address."},"functionSelector":"28a249b0","implemented":false,"kind":"function","modifiers":[],"name":"getLabel","nameLocation":"95674:8:15","parameters":{"id":16773,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16772,"mutability":"mutable","name":"account","nameLocation":"95691:7:15","nodeType":"VariableDeclaration","scope":16777,"src":"95683:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":16771,"name":"address","nodeType":"ElementaryTypeName","src":"95683:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"95682:17:15"},"returnParameters":{"id":16776,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16775,"mutability":"mutable","name":"currentLabel","nameLocation":"95737:12:15","nodeType":"VariableDeclaration","scope":16777,"src":"95723:26:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":16774,"name":"string","nodeType":"ElementaryTypeName","src":"95723:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"95722:28:15"},"scope":16930,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":16785,"nodeType":"FunctionDefinition","src":"95799:67:15","nodes":[],"documentation":{"id":16778,"nodeType":"StructuredDocumentation","src":"95757:37:15","text":"Labels an address in call traces."},"functionSelector":"c657c718","implemented":false,"kind":"function","modifiers":[],"name":"label","nameLocation":"95808:5:15","parameters":{"id":16783,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16780,"mutability":"mutable","name":"account","nameLocation":"95822:7:15","nodeType":"VariableDeclaration","scope":16785,"src":"95814:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":16779,"name":"address","nodeType":"ElementaryTypeName","src":"95814:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":16782,"mutability":"mutable","name":"newLabel","nameLocation":"95847:8:15","nodeType":"VariableDeclaration","scope":16785,"src":"95831:24:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16781,"name":"string","nodeType":"ElementaryTypeName","src":"95831:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"95813:43:15"},"returnParameters":{"id":16784,"nodeType":"ParameterList","parameters":[],"src":"95865:0:15"},"scope":16930,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16789,"nodeType":"FunctionDefinition","src":"96021:38:15","nodes":[],"documentation":{"id":16786,"nodeType":"StructuredDocumentation","src":"95872:144:15","text":"Pauses collection of call traces. Useful in cases when you want to skip tracing of\n complex calls which are not useful for debugging."},"functionSelector":"c94d1f90","implemented":false,"kind":"function","modifiers":[],"name":"pauseTracing","nameLocation":"96030:12:15","parameters":{"id":16787,"nodeType":"ParameterList","parameters":[],"src":"96042:2:15"},"returnParameters":{"id":16788,"nodeType":"ParameterList","parameters":[],"src":"96058:0:15"},"scope":16930,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":16795,"nodeType":"FunctionDefinition","src":"96101:52:15","nodes":[],"documentation":{"id":16790,"nodeType":"StructuredDocumentation","src":"96065:31:15","text":"Returns a random `address`."},"functionSelector":"d5bee9f5","implemented":false,"kind":"function","modifiers":[],"name":"randomAddress","nameLocation":"96110:13:15","parameters":{"id":16791,"nodeType":"ParameterList","parameters":[],"src":"96123:2:15"},"returnParameters":{"id":16794,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16793,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":16795,"src":"96144:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":16792,"name":"address","nodeType":"ElementaryTypeName","src":"96144:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"96143:9:15"},"scope":16930,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16801,"nodeType":"FunctionDefinition","src":"96192:51:15","nodes":[],"documentation":{"id":16796,"nodeType":"StructuredDocumentation","src":"96159:28:15","text":"Returns a random `bool`."},"functionSelector":"cdc126bd","implemented":false,"kind":"function","modifiers":[],"name":"randomBool","nameLocation":"96201:10:15","parameters":{"id":16797,"nodeType":"ParameterList","parameters":[],"src":"96211:2:15"},"returnParameters":{"id":16800,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16799,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":16801,"src":"96237:4:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":16798,"name":"bool","nodeType":"ElementaryTypeName","src":"96237:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"96236:6:15"},"scope":16930,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":16809,"nodeType":"FunctionDefinition","src":"96312:71:15","nodes":[],"documentation":{"id":16802,"nodeType":"StructuredDocumentation","src":"96249:58:15","text":"Returns a random byte array value of the given length."},"functionSelector":"6c5d32a9","implemented":false,"kind":"function","modifiers":[],"name":"randomBytes","nameLocation":"96321:11:15","parameters":{"id":16805,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16804,"mutability":"mutable","name":"len","nameLocation":"96341:3:15","nodeType":"VariableDeclaration","scope":16809,"src":"96333:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16803,"name":"uint256","nodeType":"ElementaryTypeName","src":"96333:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"96332:13:15"},"returnParameters":{"id":16808,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16807,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":16809,"src":"96369:12:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":16806,"name":"bytes","nodeType":"ElementaryTypeName","src":"96369:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"96368:14:15"},"scope":16930,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":16815,"nodeType":"FunctionDefinition","src":"96449:55:15","nodes":[],"documentation":{"id":16810,"nodeType":"StructuredDocumentation","src":"96389:55:15","text":"Returns a random fixed-size byte array of length 4."},"functionSelector":"9b7cd579","implemented":false,"kind":"function","modifiers":[],"name":"randomBytes4","nameLocation":"96458:12:15","parameters":{"id":16811,"nodeType":"ParameterList","parameters":[],"src":"96470:2:15"},"returnParameters":{"id":16814,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16813,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":16815,"src":"96496:6:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":16812,"name":"bytes4","nodeType":"ElementaryTypeName","src":"96496:6:15","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"96495:8:15"},"scope":16930,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":16821,"nodeType":"FunctionDefinition","src":"96570:55:15","nodes":[],"documentation":{"id":16816,"nodeType":"StructuredDocumentation","src":"96510:55:15","text":"Returns a random fixed-size byte array of length 8."},"functionSelector":"0497b0a5","implemented":false,"kind":"function","modifiers":[],"name":"randomBytes8","nameLocation":"96579:12:15","parameters":{"id":16817,"nodeType":"ParameterList","parameters":[],"src":"96591:2:15"},"returnParameters":{"id":16820,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16819,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":16821,"src":"96617:6:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes8","typeString":"bytes8"},"typeName":{"id":16818,"name":"bytes8","nodeType":"ElementaryTypeName","src":"96617:6:15","typeDescriptions":{"typeIdentifier":"t_bytes8","typeString":"bytes8"}},"visibility":"internal"}],"src":"96616:8:15"},"scope":16930,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":16827,"nodeType":"FunctionDefinition","src":"96672:52:15","nodes":[],"documentation":{"id":16822,"nodeType":"StructuredDocumentation","src":"96631:36:15","text":"Returns a random `int256` value."},"functionSelector":"111f1202","implemented":false,"kind":"function","modifiers":[],"name":"randomInt","nameLocation":"96681:9:15","parameters":{"id":16823,"nodeType":"ParameterList","parameters":[],"src":"96690:2:15"},"returnParameters":{"id":16826,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16825,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":16827,"src":"96716:6:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":16824,"name":"int256","nodeType":"ElementaryTypeName","src":"96716:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"96715:8:15"},"scope":16930,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":16835,"nodeType":"FunctionDefinition","src":"96785:64:15","nodes":[],"documentation":{"id":16828,"nodeType":"StructuredDocumentation","src":"96730:50:15","text":"Returns a random `int256` value of given bits."},"functionSelector":"12845966","implemented":false,"kind":"function","modifiers":[],"name":"randomInt","nameLocation":"96794:9:15","parameters":{"id":16831,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16830,"mutability":"mutable","name":"bits","nameLocation":"96812:4:15","nodeType":"VariableDeclaration","scope":16835,"src":"96804:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16829,"name":"uint256","nodeType":"ElementaryTypeName","src":"96804:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"96803:14:15"},"returnParameters":{"id":16834,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16833,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":16835,"src":"96841:6:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":16832,"name":"int256","nodeType":"ElementaryTypeName","src":"96841:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"96840:8:15"},"scope":16930,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":16841,"nodeType":"FunctionDefinition","src":"96895:49:15","nodes":[],"documentation":{"id":16836,"nodeType":"StructuredDocumentation","src":"96855:35:15","text":"Returns a random uint256 value."},"functionSelector":"25124730","implemented":false,"kind":"function","modifiers":[],"name":"randomUint","nameLocation":"96904:10:15","parameters":{"id":16837,"nodeType":"ParameterList","parameters":[],"src":"96914:2:15"},"returnParameters":{"id":16840,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16839,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":16841,"src":"96935:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16838,"name":"uint256","nodeType":"ElementaryTypeName","src":"96935:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"96934:9:15"},"scope":16930,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16851,"nodeType":"FunctionDefinition","src":"97028:73:15","nodes":[],"documentation":{"id":16842,"nodeType":"StructuredDocumentation","src":"96950:73:15","text":"Returns random uint256 value between the provided range (=min..=max)."},"functionSelector":"d61b051b","implemented":false,"kind":"function","modifiers":[],"name":"randomUint","nameLocation":"97037:10:15","parameters":{"id":16847,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16844,"mutability":"mutable","name":"min","nameLocation":"97056:3:15","nodeType":"VariableDeclaration","scope":16851,"src":"97048:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16843,"name":"uint256","nodeType":"ElementaryTypeName","src":"97048:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":16846,"mutability":"mutable","name":"max","nameLocation":"97069:3:15","nodeType":"VariableDeclaration","scope":16851,"src":"97061:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16845,"name":"uint256","nodeType":"ElementaryTypeName","src":"97061:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"97047:26:15"},"returnParameters":{"id":16850,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16849,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":16851,"src":"97092:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16848,"name":"uint256","nodeType":"ElementaryTypeName","src":"97092:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"97091:9:15"},"scope":16930,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16859,"nodeType":"FunctionDefinition","src":"97163:66:15","nodes":[],"documentation":{"id":16852,"nodeType":"StructuredDocumentation","src":"97107:51:15","text":"Returns a random `uint256` value of given bits."},"functionSelector":"cf81e69c","implemented":false,"kind":"function","modifiers":[],"name":"randomUint","nameLocation":"97172:10:15","parameters":{"id":16855,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16854,"mutability":"mutable","name":"bits","nameLocation":"97191:4:15","nodeType":"VariableDeclaration","scope":16859,"src":"97183:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16853,"name":"uint256","nodeType":"ElementaryTypeName","src":"97183:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"97182:14:15"},"returnParameters":{"id":16858,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16857,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":16859,"src":"97220:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16856,"name":"uint256","nodeType":"ElementaryTypeName","src":"97220:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"97219:9:15"},"scope":16930,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":16863,"nodeType":"FunctionDefinition","src":"97279:39:15","nodes":[],"documentation":{"id":16860,"nodeType":"StructuredDocumentation","src":"97235:39:15","text":"Unpauses collection of call traces."},"functionSelector":"72a09ccb","implemented":false,"kind":"function","modifiers":[],"name":"resumeTracing","nameLocation":"97288:13:15","parameters":{"id":16861,"nodeType":"ParameterList","parameters":[],"src":"97301:2:15"},"returnParameters":{"id":16862,"nodeType":"ParameterList","parameters":[],"src":"97317:0:15"},"scope":16930,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":16869,"nodeType":"FunctionDefinition","src":"97401:54:15","nodes":[],"documentation":{"id":16864,"nodeType":"StructuredDocumentation","src":"97324:72:15","text":"Utility cheatcode to set arbitrary storage for given target address."},"functionSelector":"e1631837","implemented":false,"kind":"function","modifiers":[],"name":"setArbitraryStorage","nameLocation":"97410:19:15","parameters":{"id":16867,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16866,"mutability":"mutable","name":"target","nameLocation":"97438:6:15","nodeType":"VariableDeclaration","scope":16869,"src":"97430:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":16865,"name":"address","nodeType":"ElementaryTypeName","src":"97430:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"97429:16:15"},"returnParameters":{"id":16868,"nodeType":"ParameterList","parameters":[],"src":"97454:0:15"},"scope":16930,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16877,"nodeType":"FunctionDefinition","src":"97608:70:15","nodes":[],"documentation":{"id":16870,"nodeType":"StructuredDocumentation","src":"97461:142:15","text":"Utility cheatcode to set arbitrary storage for given target address and overwrite\n any storage slots that have been previously set."},"functionSelector":"d3ec2a0b","implemented":false,"kind":"function","modifiers":[],"name":"setArbitraryStorage","nameLocation":"97617:19:15","parameters":{"id":16875,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16872,"mutability":"mutable","name":"target","nameLocation":"97645:6:15","nodeType":"VariableDeclaration","scope":16877,"src":"97637:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":16871,"name":"address","nodeType":"ElementaryTypeName","src":"97637:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":16874,"mutability":"mutable","name":"overwrite","nameLocation":"97658:9:15","nodeType":"VariableDeclaration","scope":16877,"src":"97653:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":16873,"name":"bool","nodeType":"ElementaryTypeName","src":"97653:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"97636:32:15"},"returnParameters":{"id":16876,"nodeType":"ParameterList","parameters":[],"src":"97677:0:15"},"scope":16930,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16887,"nodeType":"FunctionDefinition","src":"97720:79:15","nodes":[],"documentation":{"id":16878,"nodeType":"StructuredDocumentation","src":"97684:31:15","text":"Randomly shuffles an array."},"functionSelector":"54f1469c","implemented":false,"kind":"function","modifiers":[],"name":"shuffle","nameLocation":"97729:7:15","parameters":{"id":16882,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16881,"mutability":"mutable","name":"array","nameLocation":"97756:5:15","nodeType":"VariableDeclaration","scope":16887,"src":"97737:24:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":16879,"name":"uint256","nodeType":"ElementaryTypeName","src":"97737:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":16880,"nodeType":"ArrayTypeName","src":"97737:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"97736:26:15"},"returnParameters":{"id":16886,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16885,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":16887,"src":"97781:16:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":16883,"name":"uint256","nodeType":"ElementaryTypeName","src":"97781:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":16884,"nodeType":"ArrayTypeName","src":"97781:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"97780:18:15"},"scope":16930,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16897,"nodeType":"FunctionDefinition","src":"97848:76:15","nodes":[],"documentation":{"id":16888,"nodeType":"StructuredDocumentation","src":"97805:38:15","text":"Sorts an array in ascending order."},"functionSelector":"9ec8b026","implemented":false,"kind":"function","modifiers":[],"name":"sort","nameLocation":"97857:4:15","parameters":{"id":16892,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16891,"mutability":"mutable","name":"array","nameLocation":"97881:5:15","nodeType":"VariableDeclaration","scope":16897,"src":"97862:24:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":16889,"name":"uint256","nodeType":"ElementaryTypeName","src":"97862:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":16890,"nodeType":"ArrayTypeName","src":"97862:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"97861:26:15"},"returnParameters":{"id":16896,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16895,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":16897,"src":"97906:16:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":16893,"name":"uint256","nodeType":"ElementaryTypeName","src":"97906:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":16894,"nodeType":"ArrayTypeName","src":"97906:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"97905:18:15"},"scope":16930,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16905,"nodeType":"FunctionDefinition","src":"97985:80:15","nodes":[],"documentation":{"id":16898,"nodeType":"StructuredDocumentation","src":"97930:50:15","text":"Encodes a `bytes` value to a base64url string."},"functionSelector":"c8bd0e4a","implemented":false,"kind":"function","modifiers":[],"name":"toBase64URL","nameLocation":"97994:11:15","parameters":{"id":16901,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16900,"mutability":"mutable","name":"data","nameLocation":"98021:4:15","nodeType":"VariableDeclaration","scope":16905,"src":"98006:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":16899,"name":"bytes","nodeType":"ElementaryTypeName","src":"98006:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"98005:21:15"},"returnParameters":{"id":16904,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16903,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":16905,"src":"98050:13:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":16902,"name":"string","nodeType":"ElementaryTypeName","src":"98050:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"98049:15:15"},"scope":16930,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16913,"nodeType":"FunctionDefinition","src":"98127:81:15","nodes":[],"documentation":{"id":16906,"nodeType":"StructuredDocumentation","src":"98071:51:15","text":"Encodes a `string` value to a base64url string."},"functionSelector":"ae3165b3","implemented":false,"kind":"function","modifiers":[],"name":"toBase64URL","nameLocation":"98136:11:15","parameters":{"id":16909,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16908,"mutability":"mutable","name":"data","nameLocation":"98164:4:15","nodeType":"VariableDeclaration","scope":16913,"src":"98148:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16907,"name":"string","nodeType":"ElementaryTypeName","src":"98148:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"98147:22:15"},"returnParameters":{"id":16912,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16911,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":16913,"src":"98193:13:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":16910,"name":"string","nodeType":"ElementaryTypeName","src":"98193:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"98192:15:15"},"scope":16930,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16921,"nodeType":"FunctionDefinition","src":"98266:77:15","nodes":[],"documentation":{"id":16914,"nodeType":"StructuredDocumentation","src":"98214:47:15","text":"Encodes a `bytes` value to a base64 string."},"functionSelector":"a5cbfe65","implemented":false,"kind":"function","modifiers":[],"name":"toBase64","nameLocation":"98275:8:15","parameters":{"id":16917,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16916,"mutability":"mutable","name":"data","nameLocation":"98299:4:15","nodeType":"VariableDeclaration","scope":16921,"src":"98284:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":16915,"name":"bytes","nodeType":"ElementaryTypeName","src":"98284:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"98283:21:15"},"returnParameters":{"id":16920,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16919,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":16921,"src":"98328:13:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":16918,"name":"string","nodeType":"ElementaryTypeName","src":"98328:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"98327:15:15"},"scope":16930,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16929,"nodeType":"FunctionDefinition","src":"98402:78:15","nodes":[],"documentation":{"id":16922,"nodeType":"StructuredDocumentation","src":"98349:48:15","text":"Encodes a `string` value to a base64 string."},"functionSelector":"3f8be2c8","implemented":false,"kind":"function","modifiers":[],"name":"toBase64","nameLocation":"98411:8:15","parameters":{"id":16925,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16924,"mutability":"mutable","name":"data","nameLocation":"98436:4:15","nodeType":"VariableDeclaration","scope":16929,"src":"98420:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16923,"name":"string","nodeType":"ElementaryTypeName","src":"98420:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"98419:22:15"},"returnParameters":{"id":16928,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16927,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":16929,"src":"98465:13:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":16926,"name":"string","nodeType":"ElementaryTypeName","src":"98465:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"98464:15:15"},"scope":16930,"stateMutability":"pure","virtual":false,"visibility":"external"}],"abstract":false,"baseContracts":[],"canonicalName":"VmSafe","contractDependencies":[],"contractKind":"interface","documentation":{"id":12990,"nodeType":"StructuredDocumentation","src":"184:225:15","text":"The `VmSafe` interface does not allow manipulation of the EVM state or other actions that may\n result in Script simulations differing from on-chain execution. It is recommended to only use\n these cheats in scripts."},"fullyImplemented":false,"linearizedBaseContracts":[16930],"name":"VmSafe","nameLocation":"419:6:15","scope":18002,"usedErrors":[],"usedEvents":[]},{"id":18001,"nodeType":"ContractDefinition","src":"98655:26587:15","nodes":[{"id":16941,"nodeType":"FunctionDefinition","src":"98804:63:15","nodes":[],"documentation":{"id":16934,"nodeType":"StructuredDocumentation","src":"98714:85:15","text":"Utility cheatcode to set an EIP-2930 access list for all subsequent transactions."},"functionSelector":"743e4cb7","implemented":false,"kind":"function","modifiers":[],"name":"accessList","nameLocation":"98813:10:15","parameters":{"id":16939,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16938,"mutability":"mutable","name":"access","nameLocation":"98850:6:15","nodeType":"VariableDeclaration","scope":16941,"src":"98824:32:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AccessListItem_$13237_calldata_ptr_$dyn_calldata_ptr","typeString":"struct VmSafe.AccessListItem[]"},"typeName":{"baseType":{"id":16936,"nodeType":"UserDefinedTypeName","pathNode":{"id":16935,"name":"AccessListItem","nameLocations":["98824:14:15"],"nodeType":"IdentifierPath","referencedDeclaration":13237,"src":"98824:14:15"},"referencedDeclaration":13237,"src":"98824:14:15","typeDescriptions":{"typeIdentifier":"t_struct$_AccessListItem_$13237_storage_ptr","typeString":"struct VmSafe.AccessListItem"}},"id":16937,"nodeType":"ArrayTypeName","src":"98824:16:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AccessListItem_$13237_storage_$dyn_storage_ptr","typeString":"struct VmSafe.AccessListItem[]"}},"visibility":"internal"}],"src":"98823:34:15"},"returnParameters":{"id":16940,"nodeType":"ParameterList","parameters":[],"src":"98866:0:15"},"scope":18001,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16947,"nodeType":"FunctionDefinition","src":"98974:61:15","nodes":[],"documentation":{"id":16942,"nodeType":"StructuredDocumentation","src":"98873:96:15","text":"Returns the identifier of the currently active fork. Reverts if no fork is currently active."},"functionSelector":"2f103f22","implemented":false,"kind":"function","modifiers":[],"name":"activeFork","nameLocation":"98983:10:15","parameters":{"id":16943,"nodeType":"ParameterList","parameters":[],"src":"98993:2:15"},"returnParameters":{"id":16946,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16945,"mutability":"mutable","name":"forkId","nameLocation":"99027:6:15","nodeType":"VariableDeclaration","scope":16947,"src":"99019:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16944,"name":"uint256","nodeType":"ElementaryTypeName","src":"99019:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"99018:16:15"},"scope":18001,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":16953,"nodeType":"FunctionDefinition","src":"99119:51:15","nodes":[],"documentation":{"id":16948,"nodeType":"StructuredDocumentation","src":"99041:73:15","text":"In forking mode, explicitly grant the given address cheatcode access."},"functionSelector":"ea060291","implemented":false,"kind":"function","modifiers":[],"name":"allowCheatcodes","nameLocation":"99128:15:15","parameters":{"id":16951,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16950,"mutability":"mutable","name":"account","nameLocation":"99152:7:15","nodeType":"VariableDeclaration","scope":16953,"src":"99144:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":16949,"name":"address","nodeType":"ElementaryTypeName","src":"99144:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"99143:17:15"},"returnParameters":{"id":16952,"nodeType":"ParameterList","parameters":[],"src":"99169:0:15"},"scope":18001,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16959,"nodeType":"FunctionDefinition","src":"99209:54:15","nodes":[],"documentation":{"id":16954,"nodeType":"StructuredDocumentation","src":"99176:28:15","text":"Sets `block.blobbasefee`"},"functionSelector":"6d315d7e","implemented":false,"kind":"function","modifiers":[],"name":"blobBaseFee","nameLocation":"99218:11:15","parameters":{"id":16957,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16956,"mutability":"mutable","name":"newBlobBaseFee","nameLocation":"99238:14:15","nodeType":"VariableDeclaration","scope":16959,"src":"99230:22:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16955,"name":"uint256","nodeType":"ElementaryTypeName","src":"99230:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"99229:24:15"},"returnParameters":{"id":16958,"nodeType":"ParameterList","parameters":[],"src":"99262:0:15"},"scope":18001,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16966,"nodeType":"FunctionDefinition","src":"99430:56:15","nodes":[],"documentation":{"id":16960,"nodeType":"StructuredDocumentation","src":"99269:156:15","text":"Sets the blobhashes in the transaction.\n Not available on EVM versions before Cancun.\n If used on unsupported EVM versions it will revert."},"functionSelector":"129de7eb","implemented":false,"kind":"function","modifiers":[],"name":"blobhashes","nameLocation":"99439:10:15","parameters":{"id":16964,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16963,"mutability":"mutable","name":"hashes","nameLocation":"99469:6:15","nodeType":"VariableDeclaration","scope":16966,"src":"99450:25:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":16961,"name":"bytes32","nodeType":"ElementaryTypeName","src":"99450:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":16962,"nodeType":"ArrayTypeName","src":"99450:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"99449:27:15"},"returnParameters":{"id":16965,"nodeType":"ParameterList","parameters":[],"src":"99485:0:15"},"scope":18001,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16972,"nodeType":"FunctionDefinition","src":"99522:46:15","nodes":[],"documentation":{"id":16967,"nodeType":"StructuredDocumentation","src":"99492:25:15","text":"Sets `block.chainid`."},"functionSelector":"4049ddd2","implemented":false,"kind":"function","modifiers":[],"name":"chainId","nameLocation":"99531:7:15","parameters":{"id":16970,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16969,"mutability":"mutable","name":"newChainId","nameLocation":"99547:10:15","nodeType":"VariableDeclaration","scope":16972,"src":"99539:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16968,"name":"uint256","nodeType":"ElementaryTypeName","src":"99539:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"99538:20:15"},"returnParameters":{"id":16971,"nodeType":"ParameterList","parameters":[],"src":"99567:0:15"},"scope":18001,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16976,"nodeType":"FunctionDefinition","src":"99607:37:15","nodes":[],"documentation":{"id":16973,"nodeType":"StructuredDocumentation","src":"99574:28:15","text":"Clears all mocked calls."},"functionSelector":"3fdf4e15","implemented":false,"kind":"function","modifiers":[],"name":"clearMockedCalls","nameLocation":"99616:16:15","parameters":{"id":16974,"nodeType":"ParameterList","parameters":[],"src":"99632:2:15"},"returnParameters":{"id":16975,"nodeType":"ParameterList","parameters":[],"src":"99643:0:15"},"scope":18001,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16984,"nodeType":"FunctionDefinition","src":"99766:63:15","nodes":[],"documentation":{"id":16977,"nodeType":"StructuredDocumentation","src":"99650:111:15","text":"Clones a source account code, state, balance and nonce to a target account and updates in-memory EVM state."},"functionSelector":"533d61c9","implemented":false,"kind":"function","modifiers":[],"name":"cloneAccount","nameLocation":"99775:12:15","parameters":{"id":16982,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16979,"mutability":"mutable","name":"source","nameLocation":"99796:6:15","nodeType":"VariableDeclaration","scope":16984,"src":"99788:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":16978,"name":"address","nodeType":"ElementaryTypeName","src":"99788:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":16981,"mutability":"mutable","name":"target","nameLocation":"99812:6:15","nodeType":"VariableDeclaration","scope":16984,"src":"99804:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":16980,"name":"address","nodeType":"ElementaryTypeName","src":"99804:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"99787:32:15"},"returnParameters":{"id":16983,"nodeType":"ParameterList","parameters":[],"src":"99828:0:15"},"scope":18001,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16990,"nodeType":"FunctionDefinition","src":"99866:48:15","nodes":[],"documentation":{"id":16985,"nodeType":"StructuredDocumentation","src":"99835:26:15","text":"Sets `block.coinbase`."},"functionSelector":"ff483c54","implemented":false,"kind":"function","modifiers":[],"name":"coinbase","nameLocation":"99875:8:15","parameters":{"id":16988,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16987,"mutability":"mutable","name":"newCoinbase","nameLocation":"99892:11:15","nodeType":"VariableDeclaration","scope":16990,"src":"99884:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":16986,"name":"address","nodeType":"ElementaryTypeName","src":"99884:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"99883:21:15"},"returnParameters":{"id":16989,"nodeType":"ParameterList","parameters":[],"src":"99913:0:15"},"scope":18001,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16996,"nodeType":"FunctionDefinition","src":"99991:39:15","nodes":[],"documentation":{"id":16991,"nodeType":"StructuredDocumentation","src":"99920:66:15","text":"Marks the slots of an account and the account address as cold."},"functionSelector":"40ff9f21","implemented":false,"kind":"function","modifiers":[],"name":"cool","nameLocation":"100000:4:15","parameters":{"id":16994,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16993,"mutability":"mutable","name":"target","nameLocation":"100013:6:15","nodeType":"VariableDeclaration","scope":16996,"src":"100005:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":16992,"name":"address","nodeType":"ElementaryTypeName","src":"100005:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"100004:16:15"},"returnParameters":{"id":16995,"nodeType":"ParameterList","parameters":[],"src":"100029:0:15"},"scope":18001,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17004,"nodeType":"FunctionDefinition","src":"100127:57:15","nodes":[],"documentation":{"id":16997,"nodeType":"StructuredDocumentation","src":"100036:86:15","text":"Utility cheatcode to mark specific storage slot as cold, simulating no prior read."},"functionSelector":"8c78e654","implemented":false,"kind":"function","modifiers":[],"name":"coolSlot","nameLocation":"100136:8:15","parameters":{"id":17002,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16999,"mutability":"mutable","name":"target","nameLocation":"100153:6:15","nodeType":"VariableDeclaration","scope":17004,"src":"100145:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":16998,"name":"address","nodeType":"ElementaryTypeName","src":"100145:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":17001,"mutability":"mutable","name":"slot","nameLocation":"100169:4:15","nodeType":"VariableDeclaration","scope":17004,"src":"100161:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":17000,"name":"bytes32","nodeType":"ElementaryTypeName","src":"100161:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"100144:30:15"},"returnParameters":{"id":17003,"nodeType":"ParameterList","parameters":[],"src":"100183:0:15"},"scope":18001,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17012,"nodeType":"FunctionDefinition","src":"100304:82:15","nodes":[],"documentation":{"id":17005,"nodeType":"StructuredDocumentation","src":"100190:109:15","text":"Creates a new fork with the given endpoint and the _latest_ block and returns the identifier of the fork."},"functionSelector":"31ba3498","implemented":false,"kind":"function","modifiers":[],"name":"createFork","nameLocation":"100313:10:15","parameters":{"id":17008,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17007,"mutability":"mutable","name":"urlOrAlias","nameLocation":"100340:10:15","nodeType":"VariableDeclaration","scope":17012,"src":"100324:26:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17006,"name":"string","nodeType":"ElementaryTypeName","src":"100324:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"100323:28:15"},"returnParameters":{"id":17011,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17010,"mutability":"mutable","name":"forkId","nameLocation":"100378:6:15","nodeType":"VariableDeclaration","scope":17012,"src":"100370:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17009,"name":"uint256","nodeType":"ElementaryTypeName","src":"100370:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"100369:16:15"},"scope":18001,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17022,"nodeType":"FunctionDefinition","src":"100493:103:15","nodes":[],"documentation":{"id":17013,"nodeType":"StructuredDocumentation","src":"100392:96:15","text":"Creates a new fork with the given endpoint and block and returns the identifier of the fork."},"functionSelector":"6ba3ba2b","implemented":false,"kind":"function","modifiers":[],"name":"createFork","nameLocation":"100502:10:15","parameters":{"id":17018,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17015,"mutability":"mutable","name":"urlOrAlias","nameLocation":"100529:10:15","nodeType":"VariableDeclaration","scope":17022,"src":"100513:26:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17014,"name":"string","nodeType":"ElementaryTypeName","src":"100513:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":17017,"mutability":"mutable","name":"blockNumber","nameLocation":"100549:11:15","nodeType":"VariableDeclaration","scope":17022,"src":"100541:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17016,"name":"uint256","nodeType":"ElementaryTypeName","src":"100541:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"100512:49:15"},"returnParameters":{"id":17021,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17020,"mutability":"mutable","name":"forkId","nameLocation":"100588:6:15","nodeType":"VariableDeclaration","scope":17022,"src":"100580:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17019,"name":"uint256","nodeType":"ElementaryTypeName","src":"100580:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"100579:16:15"},"scope":18001,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17032,"nodeType":"FunctionDefinition","src":"100821:98:15","nodes":[],"documentation":{"id":17023,"nodeType":"StructuredDocumentation","src":"100602:214:15","text":"Creates a new fork with the given endpoint and at the block the given transaction was mined in,\n replays all transaction mined in the block before the transaction, and returns the identifier of the fork."},"functionSelector":"7ca29682","implemented":false,"kind":"function","modifiers":[],"name":"createFork","nameLocation":"100830:10:15","parameters":{"id":17028,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17025,"mutability":"mutable","name":"urlOrAlias","nameLocation":"100857:10:15","nodeType":"VariableDeclaration","scope":17032,"src":"100841:26:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17024,"name":"string","nodeType":"ElementaryTypeName","src":"100841:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":17027,"mutability":"mutable","name":"txHash","nameLocation":"100877:6:15","nodeType":"VariableDeclaration","scope":17032,"src":"100869:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":17026,"name":"bytes32","nodeType":"ElementaryTypeName","src":"100869:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"100840:44:15"},"returnParameters":{"id":17031,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17030,"mutability":"mutable","name":"forkId","nameLocation":"100911:6:15","nodeType":"VariableDeclaration","scope":17032,"src":"100903:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17029,"name":"uint256","nodeType":"ElementaryTypeName","src":"100903:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"100902:16:15"},"scope":18001,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17040,"nodeType":"FunctionDefinition","src":"101054:88:15","nodes":[],"documentation":{"id":17033,"nodeType":"StructuredDocumentation","src":"100925:124:15","text":"Creates and also selects a new fork with the given endpoint and the latest block and returns the identifier of the fork."},"functionSelector":"98680034","implemented":false,"kind":"function","modifiers":[],"name":"createSelectFork","nameLocation":"101063:16:15","parameters":{"id":17036,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17035,"mutability":"mutable","name":"urlOrAlias","nameLocation":"101096:10:15","nodeType":"VariableDeclaration","scope":17040,"src":"101080:26:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17034,"name":"string","nodeType":"ElementaryTypeName","src":"101080:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"101079:28:15"},"returnParameters":{"id":17039,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17038,"mutability":"mutable","name":"forkId","nameLocation":"101134:6:15","nodeType":"VariableDeclaration","scope":17040,"src":"101126:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17037,"name":"uint256","nodeType":"ElementaryTypeName","src":"101126:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"101125:16:15"},"scope":18001,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17050,"nodeType":"FunctionDefinition","src":"101266:109:15","nodes":[],"documentation":{"id":17041,"nodeType":"StructuredDocumentation","src":"101148:113:15","text":"Creates and also selects a new fork with the given endpoint and block and returns the identifier of the fork."},"functionSelector":"71ee464d","implemented":false,"kind":"function","modifiers":[],"name":"createSelectFork","nameLocation":"101275:16:15","parameters":{"id":17046,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17043,"mutability":"mutable","name":"urlOrAlias","nameLocation":"101308:10:15","nodeType":"VariableDeclaration","scope":17050,"src":"101292:26:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17042,"name":"string","nodeType":"ElementaryTypeName","src":"101292:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":17045,"mutability":"mutable","name":"blockNumber","nameLocation":"101328:11:15","nodeType":"VariableDeclaration","scope":17050,"src":"101320:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17044,"name":"uint256","nodeType":"ElementaryTypeName","src":"101320:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"101291:49:15"},"returnParameters":{"id":17049,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17048,"mutability":"mutable","name":"forkId","nameLocation":"101367:6:15","nodeType":"VariableDeclaration","scope":17050,"src":"101359:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17047,"name":"uint256","nodeType":"ElementaryTypeName","src":"101359:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"101358:16:15"},"scope":18001,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17060,"nodeType":"FunctionDefinition","src":"101611:104:15","nodes":[],"documentation":{"id":17051,"nodeType":"StructuredDocumentation","src":"101381:225:15","text":"Creates and also selects new fork with the given endpoint and at the block the given transaction was mined in,\n replays all transaction mined in the block before the transaction, returns the identifier of the fork."},"functionSelector":"84d52b7a","implemented":false,"kind":"function","modifiers":[],"name":"createSelectFork","nameLocation":"101620:16:15","parameters":{"id":17056,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17053,"mutability":"mutable","name":"urlOrAlias","nameLocation":"101653:10:15","nodeType":"VariableDeclaration","scope":17060,"src":"101637:26:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17052,"name":"string","nodeType":"ElementaryTypeName","src":"101637:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":17055,"mutability":"mutable","name":"txHash","nameLocation":"101673:6:15","nodeType":"VariableDeclaration","scope":17060,"src":"101665:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":17054,"name":"bytes32","nodeType":"ElementaryTypeName","src":"101665:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"101636:44:15"},"returnParameters":{"id":17059,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17058,"mutability":"mutable","name":"forkId","nameLocation":"101707:6:15","nodeType":"VariableDeclaration","scope":17060,"src":"101699:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17057,"name":"uint256","nodeType":"ElementaryTypeName","src":"101699:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"101698:16:15"},"scope":18001,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17068,"nodeType":"FunctionDefinition","src":"101755:60:15","nodes":[],"documentation":{"id":17061,"nodeType":"StructuredDocumentation","src":"101721:29:15","text":"Sets an address' balance."},"functionSelector":"c88a5e6d","implemented":false,"kind":"function","modifiers":[],"name":"deal","nameLocation":"101764:4:15","parameters":{"id":17066,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17063,"mutability":"mutable","name":"account","nameLocation":"101777:7:15","nodeType":"VariableDeclaration","scope":17068,"src":"101769:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":17062,"name":"address","nodeType":"ElementaryTypeName","src":"101769:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":17065,"mutability":"mutable","name":"newBalance","nameLocation":"101794:10:15","nodeType":"VariableDeclaration","scope":17068,"src":"101786:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17064,"name":"uint256","nodeType":"ElementaryTypeName","src":"101786:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"101768:37:15"},"returnParameters":{"id":17067,"nodeType":"ParameterList","parameters":[],"src":"101814:0:15"},"scope":18001,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17076,"nodeType":"FunctionDefinition","src":"102053:81:15","nodes":[],"documentation":{"id":17069,"nodeType":"StructuredDocumentation","src":"101821:227:15","text":"Removes the snapshot with the given ID created by `snapshot`.\n Takes the snapshot ID to delete.\n Returns `true` if the snapshot was successfully deleted.\n Returns `false` if the snapshot does not exist."},"functionSelector":"08d6b37a","implemented":false,"kind":"function","modifiers":[],"name":"deleteStateSnapshot","nameLocation":"102062:19:15","parameters":{"id":17072,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17071,"mutability":"mutable","name":"snapshotId","nameLocation":"102090:10:15","nodeType":"VariableDeclaration","scope":17076,"src":"102082:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17070,"name":"uint256","nodeType":"ElementaryTypeName","src":"102082:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"102081:20:15"},"returnParameters":{"id":17075,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17074,"mutability":"mutable","name":"success","nameLocation":"102125:7:15","nodeType":"VariableDeclaration","scope":17076,"src":"102120:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":17073,"name":"bool","nodeType":"ElementaryTypeName","src":"102120:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"102119:14:15"},"scope":18001,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17080,"nodeType":"FunctionDefinition","src":"102206:41:15","nodes":[],"documentation":{"id":17077,"nodeType":"StructuredDocumentation","src":"102140:61:15","text":"Removes _all_ snapshots previously created by `snapshot`."},"functionSelector":"e0933c74","implemented":false,"kind":"function","modifiers":[],"name":"deleteStateSnapshots","nameLocation":"102215:20:15","parameters":{"id":17078,"nodeType":"ParameterList","parameters":[],"src":"102235:2:15"},"returnParameters":{"id":17079,"nodeType":"ParameterList","parameters":[],"src":"102246:0:15"},"scope":18001,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17086,"nodeType":"FunctionDefinition","src":"102423:52:15","nodes":[],"documentation":{"id":17081,"nodeType":"StructuredDocumentation","src":"102253:165:15","text":"Sets `block.difficulty`.\n Not available on EVM versions from Paris onwards. Use `prevrandao` instead.\n Reverts if used on unsupported EVM versions."},"functionSelector":"46cc92d9","implemented":false,"kind":"function","modifiers":[],"name":"difficulty","nameLocation":"102432:10:15","parameters":{"id":17084,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17083,"mutability":"mutable","name":"newDifficulty","nameLocation":"102451:13:15","nodeType":"VariableDeclaration","scope":17086,"src":"102443:21:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17082,"name":"uint256","nodeType":"ElementaryTypeName","src":"102443:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"102442:23:15"},"returnParameters":{"id":17085,"nodeType":"ParameterList","parameters":[],"src":"102474:0:15"},"scope":18001,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17092,"nodeType":"FunctionDefinition","src":"102534:61:15","nodes":[],"documentation":{"id":17087,"nodeType":"StructuredDocumentation","src":"102481:48:15","text":"Dump a genesis JSON file's `allocs` to disk."},"functionSelector":"709ecd3f","implemented":false,"kind":"function","modifiers":[],"name":"dumpState","nameLocation":"102543:9:15","parameters":{"id":17090,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17089,"mutability":"mutable","name":"pathToStateJson","nameLocation":"102569:15:15","nodeType":"VariableDeclaration","scope":17092,"src":"102553:31:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17088,"name":"string","nodeType":"ElementaryTypeName","src":"102553:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"102552:33:15"},"returnParameters":{"id":17091,"nodeType":"ParameterList","parameters":[],"src":"102594:0:15"},"scope":18001,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17100,"nodeType":"FunctionDefinition","src":"102632:74:15","nodes":[],"documentation":{"id":17093,"nodeType":"StructuredDocumentation","src":"102601:26:15","text":"Sets an address' code."},"functionSelector":"b4d6c782","implemented":false,"kind":"function","modifiers":[],"name":"etch","nameLocation":"102641:4:15","parameters":{"id":17098,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17095,"mutability":"mutable","name":"target","nameLocation":"102654:6:15","nodeType":"VariableDeclaration","scope":17100,"src":"102646:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":17094,"name":"address","nodeType":"ElementaryTypeName","src":"102646:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":17097,"mutability":"mutable","name":"newRuntimeBytecode","nameLocation":"102677:18:15","nodeType":"VariableDeclaration","scope":17100,"src":"102662:33:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":17096,"name":"bytes","nodeType":"ElementaryTypeName","src":"102662:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"102645:51:15"},"returnParameters":{"id":17099,"nodeType":"ParameterList","parameters":[],"src":"102705:0:15"},"scope":18001,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17106,"nodeType":"FunctionDefinition","src":"102742:42:15","nodes":[],"documentation":{"id":17101,"nodeType":"StructuredDocumentation","src":"102712:25:15","text":"Sets `block.basefee`."},"functionSelector":"39b37ab0","implemented":false,"kind":"function","modifiers":[],"name":"fee","nameLocation":"102751:3:15","parameters":{"id":17104,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17103,"mutability":"mutable","name":"newBasefee","nameLocation":"102763:10:15","nodeType":"VariableDeclaration","scope":17106,"src":"102755:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17102,"name":"uint256","nodeType":"ElementaryTypeName","src":"102755:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"102754:20:15"},"returnParameters":{"id":17105,"nodeType":"ParameterList","parameters":[],"src":"102783:0:15"},"scope":18001,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17113,"nodeType":"FunctionDefinition","src":"102962:73:15","nodes":[],"documentation":{"id":17107,"nodeType":"StructuredDocumentation","src":"102790:167:15","text":"Gets the blockhashes from the current transaction.\n Not available on EVM versions before Cancun.\n If used on unsupported EVM versions it will revert."},"functionSelector":"f56ff18b","implemented":false,"kind":"function","modifiers":[],"name":"getBlobhashes","nameLocation":"102971:13:15","parameters":{"id":17108,"nodeType":"ParameterList","parameters":[],"src":"102984:2:15"},"returnParameters":{"id":17112,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17111,"mutability":"mutable","name":"hashes","nameLocation":"103027:6:15","nodeType":"VariableDeclaration","scope":17113,"src":"103010:23:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":17109,"name":"bytes32","nodeType":"ElementaryTypeName","src":"103010:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":17110,"nodeType":"ArrayTypeName","src":"103010:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"103009:25:15"},"scope":18001,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":17121,"nodeType":"FunctionDefinition","src":"103102:79:15","nodes":[],"documentation":{"id":17114,"nodeType":"StructuredDocumentation","src":"103041:56:15","text":"Returns true if the account is marked as persistent."},"functionSelector":"d92d8efd","implemented":false,"kind":"function","modifiers":[],"name":"isPersistent","nameLocation":"103111:12:15","parameters":{"id":17117,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17116,"mutability":"mutable","name":"account","nameLocation":"103132:7:15","nodeType":"VariableDeclaration","scope":17121,"src":"103124:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":17115,"name":"address","nodeType":"ElementaryTypeName","src":"103124:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"103123:17:15"},"returnParameters":{"id":17120,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17119,"mutability":"mutable","name":"persistent","nameLocation":"103169:10:15","nodeType":"VariableDeclaration","scope":17121,"src":"103164:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":17118,"name":"bool","nodeType":"ElementaryTypeName","src":"103164:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"103163:17:15"},"scope":18001,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":17127,"nodeType":"FunctionDefinition","src":"103261:63:15","nodes":[],"documentation":{"id":17122,"nodeType":"StructuredDocumentation","src":"103187:69:15","text":"Load a genesis JSON file's `allocs` into the in-memory EVM state."},"functionSelector":"b3a056d7","implemented":false,"kind":"function","modifiers":[],"name":"loadAllocs","nameLocation":"103270:10:15","parameters":{"id":17125,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17124,"mutability":"mutable","name":"pathToAllocsJson","nameLocation":"103297:16:15","nodeType":"VariableDeclaration","scope":17127,"src":"103281:32:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17123,"name":"string","nodeType":"ElementaryTypeName","src":"103281:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"103280:34:15"},"returnParameters":{"id":17126,"nodeType":"ParameterList","parameters":[],"src":"103323:0:15"},"scope":18001,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17133,"nodeType":"FunctionDefinition","src":"103527:50:15","nodes":[],"documentation":{"id":17128,"nodeType":"StructuredDocumentation","src":"103330:192:15","text":"Marks that the account(s) should use persistent storage across fork swaps in a multifork setup\n Meaning, changes made to the state of this account will be kept when switching forks."},"functionSelector":"57e22dde","implemented":false,"kind":"function","modifiers":[],"name":"makePersistent","nameLocation":"103536:14:15","parameters":{"id":17131,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17130,"mutability":"mutable","name":"account","nameLocation":"103559:7:15","nodeType":"VariableDeclaration","scope":17133,"src":"103551:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":17129,"name":"address","nodeType":"ElementaryTypeName","src":"103551:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"103550:17:15"},"returnParameters":{"id":17132,"nodeType":"ParameterList","parameters":[],"src":"103576:0:15"},"scope":18001,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17141,"nodeType":"FunctionDefinition","src":"103622:69:15","nodes":[],"documentation":{"id":17134,"nodeType":"StructuredDocumentation","src":"103583:34:15","text":"See `makePersistent(address)`."},"functionSelector":"4074e0a8","implemented":false,"kind":"function","modifiers":[],"name":"makePersistent","nameLocation":"103631:14:15","parameters":{"id":17139,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17136,"mutability":"mutable","name":"account0","nameLocation":"103654:8:15","nodeType":"VariableDeclaration","scope":17141,"src":"103646:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":17135,"name":"address","nodeType":"ElementaryTypeName","src":"103646:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":17138,"mutability":"mutable","name":"account1","nameLocation":"103672:8:15","nodeType":"VariableDeclaration","scope":17141,"src":"103664:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":17137,"name":"address","nodeType":"ElementaryTypeName","src":"103664:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"103645:36:15"},"returnParameters":{"id":17140,"nodeType":"ParameterList","parameters":[],"src":"103690:0:15"},"scope":18001,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17151,"nodeType":"FunctionDefinition","src":"103736:87:15","nodes":[],"documentation":{"id":17142,"nodeType":"StructuredDocumentation","src":"103697:34:15","text":"See `makePersistent(address)`."},"functionSelector":"efb77a75","implemented":false,"kind":"function","modifiers":[],"name":"makePersistent","nameLocation":"103745:14:15","parameters":{"id":17149,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17144,"mutability":"mutable","name":"account0","nameLocation":"103768:8:15","nodeType":"VariableDeclaration","scope":17151,"src":"103760:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":17143,"name":"address","nodeType":"ElementaryTypeName","src":"103760:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":17146,"mutability":"mutable","name":"account1","nameLocation":"103786:8:15","nodeType":"VariableDeclaration","scope":17151,"src":"103778:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":17145,"name":"address","nodeType":"ElementaryTypeName","src":"103778:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":17148,"mutability":"mutable","name":"account2","nameLocation":"103804:8:15","nodeType":"VariableDeclaration","scope":17151,"src":"103796:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":17147,"name":"address","nodeType":"ElementaryTypeName","src":"103796:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"103759:54:15"},"returnParameters":{"id":17150,"nodeType":"ParameterList","parameters":[],"src":"103822:0:15"},"scope":18001,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17158,"nodeType":"FunctionDefinition","src":"103868:62:15","nodes":[],"documentation":{"id":17152,"nodeType":"StructuredDocumentation","src":"103829:34:15","text":"See `makePersistent(address)`."},"functionSelector":"1d9e269e","implemented":false,"kind":"function","modifiers":[],"name":"makePersistent","nameLocation":"103877:14:15","parameters":{"id":17156,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17155,"mutability":"mutable","name":"accounts","nameLocation":"103911:8:15","nodeType":"VariableDeclaration","scope":17158,"src":"103892:27:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":17153,"name":"address","nodeType":"ElementaryTypeName","src":"103892:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":17154,"nodeType":"ArrayTypeName","src":"103892:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"103891:29:15"},"returnParameters":{"id":17157,"nodeType":"ParameterList","parameters":[],"src":"103929:0:15"},"scope":18001,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17168,"nodeType":"FunctionDefinition","src":"104001:97:15","nodes":[],"documentation":{"id":17159,"nodeType":"StructuredDocumentation","src":"103936:60:15","text":"Reverts a call to an address with specified revert data."},"functionSelector":"dbaad147","implemented":false,"kind":"function","modifiers":[],"name":"mockCallRevert","nameLocation":"104010:14:15","parameters":{"id":17166,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17161,"mutability":"mutable","name":"callee","nameLocation":"104033:6:15","nodeType":"VariableDeclaration","scope":17168,"src":"104025:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":17160,"name":"address","nodeType":"ElementaryTypeName","src":"104025:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":17163,"mutability":"mutable","name":"data","nameLocation":"104056:4:15","nodeType":"VariableDeclaration","scope":17168,"src":"104041:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":17162,"name":"bytes","nodeType":"ElementaryTypeName","src":"104041:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":17165,"mutability":"mutable","name":"revertData","nameLocation":"104077:10:15","nodeType":"VariableDeclaration","scope":17168,"src":"104062:25:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":17164,"name":"bytes","nodeType":"ElementaryTypeName","src":"104062:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"104024:64:15"},"returnParameters":{"id":17167,"nodeType":"ParameterList","parameters":[],"src":"104097:0:15"},"scope":18001,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17180,"nodeType":"FunctionDefinition","src":"104198:123:15","nodes":[],"documentation":{"id":17169,"nodeType":"StructuredDocumentation","src":"104104:89:15","text":"Reverts a call to an address with a specific `msg.value`, with specified revert data."},"functionSelector":"d23cd037","implemented":false,"kind":"function","modifiers":[],"name":"mockCallRevert","nameLocation":"104207:14:15","parameters":{"id":17178,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17171,"mutability":"mutable","name":"callee","nameLocation":"104230:6:15","nodeType":"VariableDeclaration","scope":17180,"src":"104222:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":17170,"name":"address","nodeType":"ElementaryTypeName","src":"104222:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":17173,"mutability":"mutable","name":"msgValue","nameLocation":"104246:8:15","nodeType":"VariableDeclaration","scope":17180,"src":"104238:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17172,"name":"uint256","nodeType":"ElementaryTypeName","src":"104238:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":17175,"mutability":"mutable","name":"data","nameLocation":"104271:4:15","nodeType":"VariableDeclaration","scope":17180,"src":"104256:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":17174,"name":"bytes","nodeType":"ElementaryTypeName","src":"104256:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":17177,"mutability":"mutable","name":"revertData","nameLocation":"104292:10:15","nodeType":"VariableDeclaration","scope":17180,"src":"104277:25:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":17176,"name":"bytes","nodeType":"ElementaryTypeName","src":"104277:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"104221:82:15"},"returnParameters":{"id":17179,"nodeType":"ParameterList","parameters":[],"src":"104320:0:15"},"scope":18001,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17190,"nodeType":"FunctionDefinition","src":"104534:89:15","nodes":[],"documentation":{"id":17181,"nodeType":"StructuredDocumentation","src":"104327:202:15","text":"Reverts a call to an address with specified revert data.\n Overload to pass the function selector directly `token.approve.selector` instead of `abi.encodeWithSelector(token.approve.selector)`."},"functionSelector":"2dfba5df","implemented":false,"kind":"function","modifiers":[],"name":"mockCallRevert","nameLocation":"104543:14:15","parameters":{"id":17188,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17183,"mutability":"mutable","name":"callee","nameLocation":"104566:6:15","nodeType":"VariableDeclaration","scope":17190,"src":"104558:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":17182,"name":"address","nodeType":"ElementaryTypeName","src":"104558:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":17185,"mutability":"mutable","name":"data","nameLocation":"104581:4:15","nodeType":"VariableDeclaration","scope":17190,"src":"104574:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":17184,"name":"bytes4","nodeType":"ElementaryTypeName","src":"104574:6:15","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"},{"constant":false,"id":17187,"mutability":"mutable","name":"revertData","nameLocation":"104602:10:15","nodeType":"VariableDeclaration","scope":17190,"src":"104587:25:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":17186,"name":"bytes","nodeType":"ElementaryTypeName","src":"104587:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"104557:56:15"},"returnParameters":{"id":17189,"nodeType":"ParameterList","parameters":[],"src":"104622:0:15"},"scope":18001,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17202,"nodeType":"FunctionDefinition","src":"104865:107:15","nodes":[],"documentation":{"id":17191,"nodeType":"StructuredDocumentation","src":"104629:231:15","text":"Reverts a call to an address with a specific `msg.value`, with specified revert data.\n Overload to pass the function selector directly `token.approve.selector` instead of `abi.encodeWithSelector(token.approve.selector)`."},"functionSelector":"596c8f04","implemented":false,"kind":"function","modifiers":[],"name":"mockCallRevert","nameLocation":"104874:14:15","parameters":{"id":17200,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17193,"mutability":"mutable","name":"callee","nameLocation":"104897:6:15","nodeType":"VariableDeclaration","scope":17202,"src":"104889:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":17192,"name":"address","nodeType":"ElementaryTypeName","src":"104889:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":17195,"mutability":"mutable","name":"msgValue","nameLocation":"104913:8:15","nodeType":"VariableDeclaration","scope":17202,"src":"104905:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17194,"name":"uint256","nodeType":"ElementaryTypeName","src":"104905:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":17197,"mutability":"mutable","name":"data","nameLocation":"104930:4:15","nodeType":"VariableDeclaration","scope":17202,"src":"104923:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":17196,"name":"bytes4","nodeType":"ElementaryTypeName","src":"104923:6:15","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"},{"constant":false,"id":17199,"mutability":"mutable","name":"revertData","nameLocation":"104951:10:15","nodeType":"VariableDeclaration","scope":17202,"src":"104936:25:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":17198,"name":"bytes","nodeType":"ElementaryTypeName","src":"104936:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"104888:74:15"},"returnParameters":{"id":17201,"nodeType":"ParameterList","parameters":[],"src":"104971:0:15"},"scope":18001,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17212,"nodeType":"FunctionDefinition","src":"105232:91:15","nodes":[],"documentation":{"id":17203,"nodeType":"StructuredDocumentation","src":"104978:249:15","text":"Mocks a call to an address, returning specified data.\n Calldata can either be strict or a partial match, e.g. if you only\n pass a Solidity selector to the expected calldata, then the entire Solidity\n function will be mocked."},"functionSelector":"b96213e4","implemented":false,"kind":"function","modifiers":[],"name":"mockCall","nameLocation":"105241:8:15","parameters":{"id":17210,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17205,"mutability":"mutable","name":"callee","nameLocation":"105258:6:15","nodeType":"VariableDeclaration","scope":17212,"src":"105250:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":17204,"name":"address","nodeType":"ElementaryTypeName","src":"105250:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":17207,"mutability":"mutable","name":"data","nameLocation":"105281:4:15","nodeType":"VariableDeclaration","scope":17212,"src":"105266:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":17206,"name":"bytes","nodeType":"ElementaryTypeName","src":"105266:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":17209,"mutability":"mutable","name":"returnData","nameLocation":"105302:10:15","nodeType":"VariableDeclaration","scope":17212,"src":"105287:25:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":17208,"name":"bytes","nodeType":"ElementaryTypeName","src":"105287:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"105249:64:15"},"returnParameters":{"id":17211,"nodeType":"ParameterList","parameters":[],"src":"105322:0:15"},"scope":18001,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17224,"nodeType":"FunctionDefinition","src":"105498:109:15","nodes":[],"documentation":{"id":17213,"nodeType":"StructuredDocumentation","src":"105329:164:15","text":"Mocks a call to an address with a specific `msg.value`, returning specified data.\n Calldata match takes precedence over `msg.value` in case of ambiguity."},"functionSelector":"81409b91","implemented":false,"kind":"function","modifiers":[],"name":"mockCall","nameLocation":"105507:8:15","parameters":{"id":17222,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17215,"mutability":"mutable","name":"callee","nameLocation":"105524:6:15","nodeType":"VariableDeclaration","scope":17224,"src":"105516:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":17214,"name":"address","nodeType":"ElementaryTypeName","src":"105516:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":17217,"mutability":"mutable","name":"msgValue","nameLocation":"105540:8:15","nodeType":"VariableDeclaration","scope":17224,"src":"105532:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17216,"name":"uint256","nodeType":"ElementaryTypeName","src":"105532:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":17219,"mutability":"mutable","name":"data","nameLocation":"105565:4:15","nodeType":"VariableDeclaration","scope":17224,"src":"105550:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":17218,"name":"bytes","nodeType":"ElementaryTypeName","src":"105550:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":17221,"mutability":"mutable","name":"returnData","nameLocation":"105586:10:15","nodeType":"VariableDeclaration","scope":17224,"src":"105571:25:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":17220,"name":"bytes","nodeType":"ElementaryTypeName","src":"105571:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"105515:82:15"},"returnParameters":{"id":17223,"nodeType":"ParameterList","parameters":[],"src":"105606:0:15"},"scope":18001,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17234,"nodeType":"FunctionDefinition","src":"106009:83:15","nodes":[],"documentation":{"id":17225,"nodeType":"StructuredDocumentation","src":"105613:391:15","text":"Mocks a call to an address, returning specified data.\n Calldata can either be strict or a partial match, e.g. if you only\n pass a Solidity selector to the expected calldata, then the entire Solidity\n function will be mocked.\n Overload to pass the function selector directly `token.approve.selector` instead of `abi.encodeWithSelector(token.approve.selector)`."},"functionSelector":"08e0c537","implemented":false,"kind":"function","modifiers":[],"name":"mockCall","nameLocation":"106018:8:15","parameters":{"id":17232,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17227,"mutability":"mutable","name":"callee","nameLocation":"106035:6:15","nodeType":"VariableDeclaration","scope":17234,"src":"106027:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":17226,"name":"address","nodeType":"ElementaryTypeName","src":"106027:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":17229,"mutability":"mutable","name":"data","nameLocation":"106050:4:15","nodeType":"VariableDeclaration","scope":17234,"src":"106043:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":17228,"name":"bytes4","nodeType":"ElementaryTypeName","src":"106043:6:15","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"},{"constant":false,"id":17231,"mutability":"mutable","name":"returnData","nameLocation":"106071:10:15","nodeType":"VariableDeclaration","scope":17234,"src":"106056:25:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":17230,"name":"bytes","nodeType":"ElementaryTypeName","src":"106056:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"106026:56:15"},"returnParameters":{"id":17233,"nodeType":"ParameterList","parameters":[],"src":"106091:0:15"},"scope":18001,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17246,"nodeType":"FunctionDefinition","src":"106409:101:15","nodes":[],"documentation":{"id":17235,"nodeType":"StructuredDocumentation","src":"106098:306:15","text":"Mocks a call to an address with a specific `msg.value`, returning specified data.\n Calldata match takes precedence over `msg.value` in case of ambiguity.\n Overload to pass the function selector directly `token.approve.selector` instead of `abi.encodeWithSelector(token.approve.selector)`."},"functionSelector":"e7b36a3d","implemented":false,"kind":"function","modifiers":[],"name":"mockCall","nameLocation":"106418:8:15","parameters":{"id":17244,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17237,"mutability":"mutable","name":"callee","nameLocation":"106435:6:15","nodeType":"VariableDeclaration","scope":17246,"src":"106427:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":17236,"name":"address","nodeType":"ElementaryTypeName","src":"106427:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":17239,"mutability":"mutable","name":"msgValue","nameLocation":"106451:8:15","nodeType":"VariableDeclaration","scope":17246,"src":"106443:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17238,"name":"uint256","nodeType":"ElementaryTypeName","src":"106443:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":17241,"mutability":"mutable","name":"data","nameLocation":"106468:4:15","nodeType":"VariableDeclaration","scope":17246,"src":"106461:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":17240,"name":"bytes4","nodeType":"ElementaryTypeName","src":"106461:6:15","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"},{"constant":false,"id":17243,"mutability":"mutable","name":"returnData","nameLocation":"106489:10:15","nodeType":"VariableDeclaration","scope":17246,"src":"106474:25:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":17242,"name":"bytes","nodeType":"ElementaryTypeName","src":"106474:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"106426:74:15"},"returnParameters":{"id":17245,"nodeType":"ParameterList","parameters":[],"src":"106509:0:15"},"scope":18001,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17257,"nodeType":"FunctionDefinition","src":"106600:94:15","nodes":[],"documentation":{"id":17247,"nodeType":"StructuredDocumentation","src":"106516:79:15","text":"Mocks multiple calls to an address, returning specified data for each call."},"functionSelector":"5c5c3de9","implemented":false,"kind":"function","modifiers":[],"name":"mockCalls","nameLocation":"106609:9:15","parameters":{"id":17255,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17249,"mutability":"mutable","name":"callee","nameLocation":"106627:6:15","nodeType":"VariableDeclaration","scope":17257,"src":"106619:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":17248,"name":"address","nodeType":"ElementaryTypeName","src":"106619:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":17251,"mutability":"mutable","name":"data","nameLocation":"106650:4:15","nodeType":"VariableDeclaration","scope":17257,"src":"106635:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":17250,"name":"bytes","nodeType":"ElementaryTypeName","src":"106635:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":17254,"mutability":"mutable","name":"returnData","nameLocation":"106673:10:15","nodeType":"VariableDeclaration","scope":17257,"src":"106656:27:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":17252,"name":"bytes","nodeType":"ElementaryTypeName","src":"106656:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":17253,"nodeType":"ArrayTypeName","src":"106656:7:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"106618:66:15"},"returnParameters":{"id":17256,"nodeType":"ParameterList","parameters":[],"src":"106693:0:15"},"scope":18001,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17270,"nodeType":"FunctionDefinition","src":"106812:112:15","nodes":[],"documentation":{"id":17258,"nodeType":"StructuredDocumentation","src":"106700:107:15","text":"Mocks multiple calls to an address with a specific `msg.value`, returning specified data for each call."},"functionSelector":"08bcbae1","implemented":false,"kind":"function","modifiers":[],"name":"mockCalls","nameLocation":"106821:9:15","parameters":{"id":17268,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17260,"mutability":"mutable","name":"callee","nameLocation":"106839:6:15","nodeType":"VariableDeclaration","scope":17270,"src":"106831:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":17259,"name":"address","nodeType":"ElementaryTypeName","src":"106831:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":17262,"mutability":"mutable","name":"msgValue","nameLocation":"106855:8:15","nodeType":"VariableDeclaration","scope":17270,"src":"106847:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17261,"name":"uint256","nodeType":"ElementaryTypeName","src":"106847:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":17264,"mutability":"mutable","name":"data","nameLocation":"106880:4:15","nodeType":"VariableDeclaration","scope":17270,"src":"106865:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":17263,"name":"bytes","nodeType":"ElementaryTypeName","src":"106865:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":17267,"mutability":"mutable","name":"returnData","nameLocation":"106903:10:15","nodeType":"VariableDeclaration","scope":17270,"src":"106886:27:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":17265,"name":"bytes","nodeType":"ElementaryTypeName","src":"106886:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":17266,"nodeType":"ArrayTypeName","src":"106886:7:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"106830:84:15"},"returnParameters":{"id":17269,"nodeType":"ParameterList","parameters":[],"src":"106923:0:15"},"scope":18001,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17280,"nodeType":"FunctionDefinition","src":"107430:84:15","nodes":[],"documentation":{"id":17271,"nodeType":"StructuredDocumentation","src":"106930:495:15","text":"Whenever a call is made to `callee` with calldata `data`, this cheatcode instead calls\n `target` with the same calldata. This functionality is similar to a delegate call made to\n `target` contract from `callee`.\n Can be used to substitute a call to a function with another implementation that captures\n the primary logic of the original function but is easier to reason about.\n If calldata is not a strict match then partial match by selector is attempted."},"functionSelector":"adf84d21","implemented":false,"kind":"function","modifiers":[],"name":"mockFunction","nameLocation":"107439:12:15","parameters":{"id":17278,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17273,"mutability":"mutable","name":"callee","nameLocation":"107460:6:15","nodeType":"VariableDeclaration","scope":17280,"src":"107452:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":17272,"name":"address","nodeType":"ElementaryTypeName","src":"107452:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":17275,"mutability":"mutable","name":"target","nameLocation":"107476:6:15","nodeType":"VariableDeclaration","scope":17280,"src":"107468:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":17274,"name":"address","nodeType":"ElementaryTypeName","src":"107468:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":17277,"mutability":"mutable","name":"data","nameLocation":"107499:4:15","nodeType":"VariableDeclaration","scope":17280,"src":"107484:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":17276,"name":"bytes","nodeType":"ElementaryTypeName","src":"107484:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"107451:53:15"},"returnParameters":{"id":17279,"nodeType":"ParameterList","parameters":[],"src":"107513:0:15"},"scope":18001,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17284,"nodeType":"FunctionDefinition","src":"107612:33:15","nodes":[],"documentation":{"id":17281,"nodeType":"StructuredDocumentation","src":"107520:87:15","text":"Utility cheatcode to remove any EIP-2930 access list set by `accessList` cheatcode."},"functionSelector":"238ad778","implemented":false,"kind":"function","modifiers":[],"name":"noAccessList","nameLocation":"107621:12:15","parameters":{"id":17282,"nodeType":"ParameterList","parameters":[],"src":"107633:2:15"},"returnParameters":{"id":17283,"nodeType":"ParameterList","parameters":[],"src":"107644:0:15"},"scope":18001,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17290,"nodeType":"FunctionDefinition","src":"107720:43:15","nodes":[],"documentation":{"id":17285,"nodeType":"StructuredDocumentation","src":"107651:64:15","text":"Sets the *next* call's `msg.sender` to be the input address."},"functionSelector":"ca669fa7","implemented":false,"kind":"function","modifiers":[],"name":"prank","nameLocation":"107729:5:15","parameters":{"id":17288,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17287,"mutability":"mutable","name":"msgSender","nameLocation":"107743:9:15","nodeType":"VariableDeclaration","scope":17290,"src":"107735:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":17286,"name":"address","nodeType":"ElementaryTypeName","src":"107735:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"107734:19:15"},"returnParameters":{"id":17289,"nodeType":"ParameterList","parameters":[],"src":"107762:0:15"},"scope":18001,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17298,"nodeType":"FunctionDefinition","src":"107882:61:15","nodes":[],"documentation":{"id":17291,"nodeType":"StructuredDocumentation","src":"107769:108:15","text":"Sets the *next* call's `msg.sender` to be the input address, and the `tx.origin` to be the second input."},"functionSelector":"47e50cce","implemented":false,"kind":"function","modifiers":[],"name":"prank","nameLocation":"107891:5:15","parameters":{"id":17296,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17293,"mutability":"mutable","name":"msgSender","nameLocation":"107905:9:15","nodeType":"VariableDeclaration","scope":17298,"src":"107897:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":17292,"name":"address","nodeType":"ElementaryTypeName","src":"107897:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":17295,"mutability":"mutable","name":"txOrigin","nameLocation":"107924:8:15","nodeType":"VariableDeclaration","scope":17298,"src":"107916:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":17294,"name":"address","nodeType":"ElementaryTypeName","src":"107916:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"107896:37:15"},"returnParameters":{"id":17297,"nodeType":"ParameterList","parameters":[],"src":"107942:0:15"},"scope":18001,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17306,"nodeType":"FunctionDefinition","src":"108027:62:15","nodes":[],"documentation":{"id":17299,"nodeType":"StructuredDocumentation","src":"107949:73:15","text":"Sets the *next* delegate call's `msg.sender` to be the input address."},"functionSelector":"a7f8bf5c","implemented":false,"kind":"function","modifiers":[],"name":"prank","nameLocation":"108036:5:15","parameters":{"id":17304,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17301,"mutability":"mutable","name":"msgSender","nameLocation":"108050:9:15","nodeType":"VariableDeclaration","scope":17306,"src":"108042:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":17300,"name":"address","nodeType":"ElementaryTypeName","src":"108042:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":17303,"mutability":"mutable","name":"delegateCall","nameLocation":"108066:12:15","nodeType":"VariableDeclaration","scope":17306,"src":"108061:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":17302,"name":"bool","nodeType":"ElementaryTypeName","src":"108061:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"108041:38:15"},"returnParameters":{"id":17305,"nodeType":"ParameterList","parameters":[],"src":"108088:0:15"},"scope":18001,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17316,"nodeType":"FunctionDefinition","src":"108217:80:15","nodes":[],"documentation":{"id":17307,"nodeType":"StructuredDocumentation","src":"108095:117:15","text":"Sets the *next* delegate call's `msg.sender` to be the input address, and the `tx.origin` to be the second input."},"functionSelector":"7d73d042","implemented":false,"kind":"function","modifiers":[],"name":"prank","nameLocation":"108226:5:15","parameters":{"id":17314,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17309,"mutability":"mutable","name":"msgSender","nameLocation":"108240:9:15","nodeType":"VariableDeclaration","scope":17316,"src":"108232:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":17308,"name":"address","nodeType":"ElementaryTypeName","src":"108232:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":17311,"mutability":"mutable","name":"txOrigin","nameLocation":"108259:8:15","nodeType":"VariableDeclaration","scope":17316,"src":"108251:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":17310,"name":"address","nodeType":"ElementaryTypeName","src":"108251:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":17313,"mutability":"mutable","name":"delegateCall","nameLocation":"108274:12:15","nodeType":"VariableDeclaration","scope":17316,"src":"108269:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":17312,"name":"bool","nodeType":"ElementaryTypeName","src":"108269:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"108231:56:15"},"returnParameters":{"id":17315,"nodeType":"ParameterList","parameters":[],"src":"108296:0:15"},"scope":18001,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17322,"nodeType":"FunctionDefinition","src":"108474:52:15","nodes":[],"documentation":{"id":17317,"nodeType":"StructuredDocumentation","src":"108303:166:15","text":"Sets `block.prevrandao`.\n Not available on EVM versions before Paris. Use `difficulty` instead.\n If used on unsupported EVM versions it will revert."},"functionSelector":"3b925549","implemented":false,"kind":"function","modifiers":[],"name":"prevrandao","nameLocation":"108483:10:15","parameters":{"id":17320,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17319,"mutability":"mutable","name":"newPrevrandao","nameLocation":"108502:13:15","nodeType":"VariableDeclaration","scope":17322,"src":"108494:21:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":17318,"name":"bytes32","nodeType":"ElementaryTypeName","src":"108494:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"108493:23:15"},"returnParameters":{"id":17321,"nodeType":"ParameterList","parameters":[],"src":"108525:0:15"},"scope":18001,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17328,"nodeType":"FunctionDefinition","src":"108703:52:15","nodes":[],"documentation":{"id":17323,"nodeType":"StructuredDocumentation","src":"108532:166:15","text":"Sets `block.prevrandao`.\n Not available on EVM versions before Paris. Use `difficulty` instead.\n If used on unsupported EVM versions it will revert."},"functionSelector":"9cb1c0d4","implemented":false,"kind":"function","modifiers":[],"name":"prevrandao","nameLocation":"108712:10:15","parameters":{"id":17326,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17325,"mutability":"mutable","name":"newPrevrandao","nameLocation":"108731:13:15","nodeType":"VariableDeclaration","scope":17328,"src":"108723:21:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17324,"name":"uint256","nodeType":"ElementaryTypeName","src":"108723:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"108722:23:15"},"returnParameters":{"id":17327,"nodeType":"ParameterList","parameters":[],"src":"108754:0:15"},"scope":18001,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17339,"nodeType":"FunctionDefinition","src":"108883:101:15","nodes":[],"documentation":{"id":17329,"nodeType":"StructuredDocumentation","src":"108761:117:15","text":"Reads the current `msg.sender` and `tx.origin` from state and reports if there is any active caller modification."},"functionSelector":"4ad0bac9","implemented":false,"kind":"function","modifiers":[],"name":"readCallers","nameLocation":"108892:11:15","parameters":{"id":17330,"nodeType":"ParameterList","parameters":[],"src":"108903:2:15"},"returnParameters":{"id":17338,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17333,"mutability":"mutable","name":"callerMode","nameLocation":"108935:10:15","nodeType":"VariableDeclaration","scope":17339,"src":"108924:21:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_CallerMode_$12997","typeString":"enum VmSafe.CallerMode"},"typeName":{"id":17332,"nodeType":"UserDefinedTypeName","pathNode":{"id":17331,"name":"CallerMode","nameLocations":["108924:10:15"],"nodeType":"IdentifierPath","referencedDeclaration":12997,"src":"108924:10:15"},"referencedDeclaration":12997,"src":"108924:10:15","typeDescriptions":{"typeIdentifier":"t_enum$_CallerMode_$12997","typeString":"enum VmSafe.CallerMode"}},"visibility":"internal"},{"constant":false,"id":17335,"mutability":"mutable","name":"msgSender","nameLocation":"108955:9:15","nodeType":"VariableDeclaration","scope":17339,"src":"108947:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":17334,"name":"address","nodeType":"ElementaryTypeName","src":"108947:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":17337,"mutability":"mutable","name":"txOrigin","nameLocation":"108974:8:15","nodeType":"VariableDeclaration","scope":17339,"src":"108966:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":17336,"name":"address","nodeType":"ElementaryTypeName","src":"108966:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"108923:60:15"},"scope":18001,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17345,"nodeType":"FunctionDefinition","src":"109072:46:15","nodes":[],"documentation":{"id":17340,"nodeType":"StructuredDocumentation","src":"108990:77:15","text":"Resets the nonce of an account to 0 for EOAs and 1 for contract accounts."},"functionSelector":"1c72346d","implemented":false,"kind":"function","modifiers":[],"name":"resetNonce","nameLocation":"109081:10:15","parameters":{"id":17343,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17342,"mutability":"mutable","name":"account","nameLocation":"109100:7:15","nodeType":"VariableDeclaration","scope":17345,"src":"109092:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":17341,"name":"address","nodeType":"ElementaryTypeName","src":"109092:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"109091:17:15"},"returnParameters":{"id":17344,"nodeType":"ParameterList","parameters":[],"src":"109117:0:15"},"scope":18001,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17353,"nodeType":"FunctionDefinition","src":"109466:75:15","nodes":[],"documentation":{"id":17346,"nodeType":"StructuredDocumentation","src":"109124:337:15","text":"Revert the state of the EVM to a previous snapshot\n Takes the snapshot ID to revert to.\n Returns `true` if the snapshot was successfully reverted.\n Returns `false` if the snapshot does not exist.\n **Note:** This does not automatically delete the snapshot. To delete the snapshot use `deleteStateSnapshot`."},"functionSelector":"c2527405","implemented":false,"kind":"function","modifiers":[],"name":"revertToState","nameLocation":"109475:13:15","parameters":{"id":17349,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17348,"mutability":"mutable","name":"snapshotId","nameLocation":"109497:10:15","nodeType":"VariableDeclaration","scope":17353,"src":"109489:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17347,"name":"uint256","nodeType":"ElementaryTypeName","src":"109489:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"109488:20:15"},"returnParameters":{"id":17352,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17351,"mutability":"mutable","name":"success","nameLocation":"109532:7:15","nodeType":"VariableDeclaration","scope":17353,"src":"109527:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":17350,"name":"bool","nodeType":"ElementaryTypeName","src":"109527:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"109526:14:15"},"scope":18001,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17361,"nodeType":"FunctionDefinition","src":"109824:84:15","nodes":[],"documentation":{"id":17354,"nodeType":"StructuredDocumentation","src":"109547:272:15","text":"Revert the state of the EVM to a previous snapshot and automatically deletes the snapshots\n Takes the snapshot ID to revert to.\n Returns `true` if the snapshot was successfully reverted and deleted.\n Returns `false` if the snapshot does not exist."},"functionSelector":"3a1985dc","implemented":false,"kind":"function","modifiers":[],"name":"revertToStateAndDelete","nameLocation":"109833:22:15","parameters":{"id":17357,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17356,"mutability":"mutable","name":"snapshotId","nameLocation":"109864:10:15","nodeType":"VariableDeclaration","scope":17361,"src":"109856:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17355,"name":"uint256","nodeType":"ElementaryTypeName","src":"109856:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"109855:20:15"},"returnParameters":{"id":17360,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17359,"mutability":"mutable","name":"success","nameLocation":"109899:7:15","nodeType":"VariableDeclaration","scope":17361,"src":"109894:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":17358,"name":"bool","nodeType":"ElementaryTypeName","src":"109894:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"109893:14:15"},"scope":18001,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17367,"nodeType":"FunctionDefinition","src":"110005:52:15","nodes":[],"documentation":{"id":17362,"nodeType":"StructuredDocumentation","src":"109914:86:15","text":"Revokes persistent status from the address, previously added via `makePersistent`."},"functionSelector":"997a0222","implemented":false,"kind":"function","modifiers":[],"name":"revokePersistent","nameLocation":"110014:16:15","parameters":{"id":17365,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17364,"mutability":"mutable","name":"account","nameLocation":"110039:7:15","nodeType":"VariableDeclaration","scope":17367,"src":"110031:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":17363,"name":"address","nodeType":"ElementaryTypeName","src":"110031:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"110030:17:15"},"returnParameters":{"id":17366,"nodeType":"ParameterList","parameters":[],"src":"110056:0:15"},"scope":18001,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17374,"nodeType":"FunctionDefinition","src":"110104:64:15","nodes":[],"documentation":{"id":17368,"nodeType":"StructuredDocumentation","src":"110063:36:15","text":"See `revokePersistent(address)`."},"functionSelector":"3ce969e6","implemented":false,"kind":"function","modifiers":[],"name":"revokePersistent","nameLocation":"110113:16:15","parameters":{"id":17372,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17371,"mutability":"mutable","name":"accounts","nameLocation":"110149:8:15","nodeType":"VariableDeclaration","scope":17374,"src":"110130:27:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":17369,"name":"address","nodeType":"ElementaryTypeName","src":"110130:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":17370,"nodeType":"ArrayTypeName","src":"110130:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"110129:29:15"},"returnParameters":{"id":17373,"nodeType":"ParameterList","parameters":[],"src":"110167:0:15"},"scope":18001,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17380,"nodeType":"FunctionDefinition","src":"110203:42:15","nodes":[],"documentation":{"id":17375,"nodeType":"StructuredDocumentation","src":"110174:24:15","text":"Sets `block.height`."},"functionSelector":"1f7b4f30","implemented":false,"kind":"function","modifiers":[],"name":"roll","nameLocation":"110212:4:15","parameters":{"id":17378,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17377,"mutability":"mutable","name":"newHeight","nameLocation":"110225:9:15","nodeType":"VariableDeclaration","scope":17380,"src":"110217:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17376,"name":"uint256","nodeType":"ElementaryTypeName","src":"110217:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"110216:19:15"},"returnParameters":{"id":17379,"nodeType":"ParameterList","parameters":[],"src":"110244:0:15"},"scope":18001,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17386,"nodeType":"FunctionDefinition","src":"110384:48:15","nodes":[],"documentation":{"id":17381,"nodeType":"StructuredDocumentation","src":"110251:128:15","text":"Updates the currently active fork to given block number\n This is similar to `roll` but for the currently active fork."},"functionSelector":"d9bbf3a1","implemented":false,"kind":"function","modifiers":[],"name":"rollFork","nameLocation":"110393:8:15","parameters":{"id":17384,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17383,"mutability":"mutable","name":"blockNumber","nameLocation":"110410:11:15","nodeType":"VariableDeclaration","scope":17386,"src":"110402:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17382,"name":"uint256","nodeType":"ElementaryTypeName","src":"110402:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"110401:21:15"},"returnParameters":{"id":17385,"nodeType":"ParameterList","parameters":[],"src":"110431:0:15"},"scope":18001,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17392,"nodeType":"FunctionDefinition","src":"110647:43:15","nodes":[],"documentation":{"id":17387,"nodeType":"StructuredDocumentation","src":"110438:204:15","text":"Updates the currently active fork to given transaction. This will `rollFork` with the number\n of the block the transaction was mined in and replays all transaction mined before it in the block."},"functionSelector":"0f29772b","implemented":false,"kind":"function","modifiers":[],"name":"rollFork","nameLocation":"110656:8:15","parameters":{"id":17390,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17389,"mutability":"mutable","name":"txHash","nameLocation":"110673:6:15","nodeType":"VariableDeclaration","scope":17392,"src":"110665:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":17388,"name":"bytes32","nodeType":"ElementaryTypeName","src":"110665:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"110664:16:15"},"returnParameters":{"id":17391,"nodeType":"ParameterList","parameters":[],"src":"110689:0:15"},"scope":18001,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17400,"nodeType":"FunctionDefinition","src":"110750:64:15","nodes":[],"documentation":{"id":17393,"nodeType":"StructuredDocumentation","src":"110696:49:15","text":"Updates the given fork to given block number."},"functionSelector":"d74c83a4","implemented":false,"kind":"function","modifiers":[],"name":"rollFork","nameLocation":"110759:8:15","parameters":{"id":17398,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17395,"mutability":"mutable","name":"forkId","nameLocation":"110776:6:15","nodeType":"VariableDeclaration","scope":17400,"src":"110768:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17394,"name":"uint256","nodeType":"ElementaryTypeName","src":"110768:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":17397,"mutability":"mutable","name":"blockNumber","nameLocation":"110792:11:15","nodeType":"VariableDeclaration","scope":17400,"src":"110784:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17396,"name":"uint256","nodeType":"ElementaryTypeName","src":"110784:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"110767:37:15"},"returnParameters":{"id":17399,"nodeType":"ParameterList","parameters":[],"src":"110813:0:15"},"scope":18001,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17408,"nodeType":"FunctionDefinition","src":"110950:59:15","nodes":[],"documentation":{"id":17401,"nodeType":"StructuredDocumentation","src":"110820:125:15","text":"Updates the given fork to block number of the given transaction and replays all transaction mined before it in the block."},"functionSelector":"f2830f7b","implemented":false,"kind":"function","modifiers":[],"name":"rollFork","nameLocation":"110959:8:15","parameters":{"id":17406,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17403,"mutability":"mutable","name":"forkId","nameLocation":"110976:6:15","nodeType":"VariableDeclaration","scope":17408,"src":"110968:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17402,"name":"uint256","nodeType":"ElementaryTypeName","src":"110968:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":17405,"mutability":"mutable","name":"txHash","nameLocation":"110992:6:15","nodeType":"VariableDeclaration","scope":17408,"src":"110984:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":17404,"name":"bytes32","nodeType":"ElementaryTypeName","src":"110984:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"110967:32:15"},"returnParameters":{"id":17407,"nodeType":"ParameterList","parameters":[],"src":"111008:0:15"},"scope":18001,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17414,"nodeType":"FunctionDefinition","src":"111122:45:15","nodes":[],"documentation":{"id":17409,"nodeType":"StructuredDocumentation","src":"111015:102:15","text":"Takes a fork identifier created by `createFork` and sets the corresponding forked state as active."},"functionSelector":"9ebf6827","implemented":false,"kind":"function","modifiers":[],"name":"selectFork","nameLocation":"111131:10:15","parameters":{"id":17412,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17411,"mutability":"mutable","name":"forkId","nameLocation":"111150:6:15","nodeType":"VariableDeclaration","scope":17414,"src":"111142:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17410,"name":"uint256","nodeType":"ElementaryTypeName","src":"111142:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"111141:16:15"},"returnParameters":{"id":17413,"nodeType":"ParameterList","parameters":[],"src":"111166:0:15"},"scope":18001,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17422,"nodeType":"FunctionDefinition","src":"111317:71:15","nodes":[],"documentation":{"id":17415,"nodeType":"StructuredDocumentation","src":"111173:139:15","text":"Set blockhash for the current block.\n It only sets the blockhash for blocks where `block.number - 256 <= number < block.number`."},"functionSelector":"5314b54a","implemented":false,"kind":"function","modifiers":[],"name":"setBlockhash","nameLocation":"111326:12:15","parameters":{"id":17420,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17417,"mutability":"mutable","name":"blockNumber","nameLocation":"111347:11:15","nodeType":"VariableDeclaration","scope":17422,"src":"111339:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17416,"name":"uint256","nodeType":"ElementaryTypeName","src":"111339:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":17419,"mutability":"mutable","name":"blockHash","nameLocation":"111368:9:15","nodeType":"VariableDeclaration","scope":17422,"src":"111360:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":17418,"name":"bytes32","nodeType":"ElementaryTypeName","src":"111360:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"111338:40:15"},"returnParameters":{"id":17421,"nodeType":"ParameterList","parameters":[],"src":"111387:0:15"},"scope":18001,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17430,"nodeType":"FunctionDefinition","src":"111486:61:15","nodes":[],"documentation":{"id":17423,"nodeType":"StructuredDocumentation","src":"111394:87:15","text":"Sets the nonce of an account. Must be higher than the current nonce of the account."},"functionSelector":"f8e18b57","implemented":false,"kind":"function","modifiers":[],"name":"setNonce","nameLocation":"111495:8:15","parameters":{"id":17428,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17425,"mutability":"mutable","name":"account","nameLocation":"111512:7:15","nodeType":"VariableDeclaration","scope":17430,"src":"111504:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":17424,"name":"address","nodeType":"ElementaryTypeName","src":"111504:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":17427,"mutability":"mutable","name":"newNonce","nameLocation":"111528:8:15","nodeType":"VariableDeclaration","scope":17430,"src":"111521:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":17426,"name":"uint64","nodeType":"ElementaryTypeName","src":"111521:6:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"111503:34:15"},"returnParameters":{"id":17429,"nodeType":"ParameterList","parameters":[],"src":"111546:0:15"},"scope":18001,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17438,"nodeType":"FunctionDefinition","src":"111613:67:15","nodes":[],"documentation":{"id":17431,"nodeType":"StructuredDocumentation","src":"111553:55:15","text":"Sets the nonce of an account to an arbitrary value."},"functionSelector":"9b67b21c","implemented":false,"kind":"function","modifiers":[],"name":"setNonceUnsafe","nameLocation":"111622:14:15","parameters":{"id":17436,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17433,"mutability":"mutable","name":"account","nameLocation":"111645:7:15","nodeType":"VariableDeclaration","scope":17438,"src":"111637:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":17432,"name":"address","nodeType":"ElementaryTypeName","src":"111637:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":17435,"mutability":"mutable","name":"newNonce","nameLocation":"111661:8:15","nodeType":"VariableDeclaration","scope":17438,"src":"111654:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":17434,"name":"uint64","nodeType":"ElementaryTypeName","src":"111654:6:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"111636:34:15"},"returnParameters":{"id":17437,"nodeType":"ParameterList","parameters":[],"src":"111679:0:15"},"scope":18001,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17446,"nodeType":"FunctionDefinition","src":"111779:86:15","nodes":[],"documentation":{"id":17439,"nodeType":"StructuredDocumentation","src":"111686:88:15","text":"Snapshot capture the gas usage of the last call by name from the callee perspective."},"functionSelector":"dd9fca12","implemented":false,"kind":"function","modifiers":[],"name":"snapshotGasLastCall","nameLocation":"111788:19:15","parameters":{"id":17442,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17441,"mutability":"mutable","name":"name","nameLocation":"111824:4:15","nodeType":"VariableDeclaration","scope":17446,"src":"111808:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17440,"name":"string","nodeType":"ElementaryTypeName","src":"111808:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"111807:22:15"},"returnParameters":{"id":17445,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17444,"mutability":"mutable","name":"gasUsed","nameLocation":"111856:7:15","nodeType":"VariableDeclaration","scope":17446,"src":"111848:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17443,"name":"uint256","nodeType":"ElementaryTypeName","src":"111848:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"111847:17:15"},"scope":18001,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17456,"nodeType":"FunctionDefinition","src":"111975:109:15","nodes":[],"documentation":{"id":17447,"nodeType":"StructuredDocumentation","src":"111871:99:15","text":"Snapshot capture the gas usage of the last call by name in a group from the callee perspective."},"functionSelector":"200c6772","implemented":false,"kind":"function","modifiers":[],"name":"snapshotGasLastCall","nameLocation":"111984:19:15","parameters":{"id":17452,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17449,"mutability":"mutable","name":"group","nameLocation":"112020:5:15","nodeType":"VariableDeclaration","scope":17456,"src":"112004:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17448,"name":"string","nodeType":"ElementaryTypeName","src":"112004:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":17451,"mutability":"mutable","name":"name","nameLocation":"112043:4:15","nodeType":"VariableDeclaration","scope":17456,"src":"112027:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17450,"name":"string","nodeType":"ElementaryTypeName","src":"112027:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"112003:45:15"},"returnParameters":{"id":17455,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17454,"mutability":"mutable","name":"gasUsed","nameLocation":"112075:7:15","nodeType":"VariableDeclaration","scope":17456,"src":"112067:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17453,"name":"uint256","nodeType":"ElementaryTypeName","src":"112067:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"112066:17:15"},"scope":18001,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17462,"nodeType":"FunctionDefinition","src":"112244:63:15","nodes":[],"documentation":{"id":17457,"nodeType":"StructuredDocumentation","src":"112090:149:15","text":"Snapshot the current state of the evm.\n Returns the ID of the snapshot that was created.\n To revert a snapshot use `revertToState`."},"functionSelector":"9cd23835","implemented":false,"kind":"function","modifiers":[],"name":"snapshotState","nameLocation":"112253:13:15","parameters":{"id":17458,"nodeType":"ParameterList","parameters":[],"src":"112266:2:15"},"returnParameters":{"id":17461,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17460,"mutability":"mutable","name":"snapshotId","nameLocation":"112295:10:15","nodeType":"VariableDeclaration","scope":17462,"src":"112287:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17459,"name":"uint256","nodeType":"ElementaryTypeName","src":"112287:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"112286:20:15"},"scope":18001,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17470,"nodeType":"FunctionDefinition","src":"112434:69:15","nodes":[],"documentation":{"id":17463,"nodeType":"StructuredDocumentation","src":"112313:116:15","text":"Snapshot capture an arbitrary numerical value by name.\n The group name is derived from the contract name."},"functionSelector":"51db805a","implemented":false,"kind":"function","modifiers":[],"name":"snapshotValue","nameLocation":"112443:13:15","parameters":{"id":17468,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17465,"mutability":"mutable","name":"name","nameLocation":"112473:4:15","nodeType":"VariableDeclaration","scope":17470,"src":"112457:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17464,"name":"string","nodeType":"ElementaryTypeName","src":"112457:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":17467,"mutability":"mutable","name":"value","nameLocation":"112487:5:15","nodeType":"VariableDeclaration","scope":17470,"src":"112479:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17466,"name":"uint256","nodeType":"ElementaryTypeName","src":"112479:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"112456:37:15"},"returnParameters":{"id":17469,"nodeType":"ParameterList","parameters":[],"src":"112502:0:15"},"scope":18001,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17480,"nodeType":"FunctionDefinition","src":"112583:92:15","nodes":[],"documentation":{"id":17471,"nodeType":"StructuredDocumentation","src":"112509:69:15","text":"Snapshot capture an arbitrary numerical value by name in a group."},"functionSelector":"6d2b27d8","implemented":false,"kind":"function","modifiers":[],"name":"snapshotValue","nameLocation":"112592:13:15","parameters":{"id":17478,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17473,"mutability":"mutable","name":"group","nameLocation":"112622:5:15","nodeType":"VariableDeclaration","scope":17480,"src":"112606:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17472,"name":"string","nodeType":"ElementaryTypeName","src":"112606:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":17475,"mutability":"mutable","name":"name","nameLocation":"112645:4:15","nodeType":"VariableDeclaration","scope":17480,"src":"112629:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17474,"name":"string","nodeType":"ElementaryTypeName","src":"112629:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":17477,"mutability":"mutable","name":"value","nameLocation":"112659:5:15","nodeType":"VariableDeclaration","scope":17480,"src":"112651:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17476,"name":"uint256","nodeType":"ElementaryTypeName","src":"112651:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"112605:60:15"},"returnParameters":{"id":17479,"nodeType":"ParameterList","parameters":[],"src":"112674:0:15"},"scope":18001,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17486,"nodeType":"FunctionDefinition","src":"112782:48:15","nodes":[],"documentation":{"id":17481,"nodeType":"StructuredDocumentation","src":"112681:96:15","text":"Sets all subsequent calls' `msg.sender` to be the input address until `stopPrank` is called."},"functionSelector":"06447d56","implemented":false,"kind":"function","modifiers":[],"name":"startPrank","nameLocation":"112791:10:15","parameters":{"id":17484,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17483,"mutability":"mutable","name":"msgSender","nameLocation":"112810:9:15","nodeType":"VariableDeclaration","scope":17486,"src":"112802:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":17482,"name":"address","nodeType":"ElementaryTypeName","src":"112802:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"112801:19:15"},"returnParameters":{"id":17485,"nodeType":"ParameterList","parameters":[],"src":"112829:0:15"},"scope":18001,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17494,"nodeType":"FunctionDefinition","src":"112981:66:15","nodes":[],"documentation":{"id":17487,"nodeType":"StructuredDocumentation","src":"112836:140:15","text":"Sets all subsequent calls' `msg.sender` to be the input address until `stopPrank` is called, and the `tx.origin` to be the second input."},"functionSelector":"45b56078","implemented":false,"kind":"function","modifiers":[],"name":"startPrank","nameLocation":"112990:10:15","parameters":{"id":17492,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17489,"mutability":"mutable","name":"msgSender","nameLocation":"113009:9:15","nodeType":"VariableDeclaration","scope":17494,"src":"113001:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":17488,"name":"address","nodeType":"ElementaryTypeName","src":"113001:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":17491,"mutability":"mutable","name":"txOrigin","nameLocation":"113028:8:15","nodeType":"VariableDeclaration","scope":17494,"src":"113020:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":17490,"name":"address","nodeType":"ElementaryTypeName","src":"113020:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"113000:37:15"},"returnParameters":{"id":17493,"nodeType":"ParameterList","parameters":[],"src":"113046:0:15"},"scope":18001,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17502,"nodeType":"FunctionDefinition","src":"113163:67:15","nodes":[],"documentation":{"id":17495,"nodeType":"StructuredDocumentation","src":"113053:105:15","text":"Sets all subsequent delegate calls' `msg.sender` to be the input address until `stopPrank` is called."},"functionSelector":"1cc0b435","implemented":false,"kind":"function","modifiers":[],"name":"startPrank","nameLocation":"113172:10:15","parameters":{"id":17500,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17497,"mutability":"mutable","name":"msgSender","nameLocation":"113191:9:15","nodeType":"VariableDeclaration","scope":17502,"src":"113183:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":17496,"name":"address","nodeType":"ElementaryTypeName","src":"113183:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":17499,"mutability":"mutable","name":"delegateCall","nameLocation":"113207:12:15","nodeType":"VariableDeclaration","scope":17502,"src":"113202:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":17498,"name":"bool","nodeType":"ElementaryTypeName","src":"113202:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"113182:38:15"},"returnParameters":{"id":17501,"nodeType":"ParameterList","parameters":[],"src":"113229:0:15"},"scope":18001,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17512,"nodeType":"FunctionDefinition","src":"113390:85:15","nodes":[],"documentation":{"id":17503,"nodeType":"StructuredDocumentation","src":"113236:149:15","text":"Sets all subsequent delegate calls' `msg.sender` to be the input address until `stopPrank` is called, and the `tx.origin` to be the second input."},"functionSelector":"4eb859b5","implemented":false,"kind":"function","modifiers":[],"name":"startPrank","nameLocation":"113399:10:15","parameters":{"id":17510,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17505,"mutability":"mutable","name":"msgSender","nameLocation":"113418:9:15","nodeType":"VariableDeclaration","scope":17512,"src":"113410:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":17504,"name":"address","nodeType":"ElementaryTypeName","src":"113410:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":17507,"mutability":"mutable","name":"txOrigin","nameLocation":"113437:8:15","nodeType":"VariableDeclaration","scope":17512,"src":"113429:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":17506,"name":"address","nodeType":"ElementaryTypeName","src":"113429:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":17509,"mutability":"mutable","name":"delegateCall","nameLocation":"113452:12:15","nodeType":"VariableDeclaration","scope":17512,"src":"113447:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":17508,"name":"bool","nodeType":"ElementaryTypeName","src":"113447:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"113409:56:15"},"returnParameters":{"id":17511,"nodeType":"ParameterList","parameters":[],"src":"113474:0:15"},"scope":18001,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17518,"nodeType":"FunctionDefinition","src":"113606:57:15","nodes":[],"documentation":{"id":17513,"nodeType":"StructuredDocumentation","src":"113481:120:15","text":"Start a snapshot capture of the current gas usage by name.\n The group name is derived from the contract name."},"functionSelector":"3cad9d7b","implemented":false,"kind":"function","modifiers":[],"name":"startSnapshotGas","nameLocation":"113615:16:15","parameters":{"id":17516,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17515,"mutability":"mutable","name":"name","nameLocation":"113648:4:15","nodeType":"VariableDeclaration","scope":17518,"src":"113632:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17514,"name":"string","nodeType":"ElementaryTypeName","src":"113632:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"113631:22:15"},"returnParameters":{"id":17517,"nodeType":"ParameterList","parameters":[],"src":"113662:0:15"},"scope":18001,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17526,"nodeType":"FunctionDefinition","src":"113747:80:15","nodes":[],"documentation":{"id":17519,"nodeType":"StructuredDocumentation","src":"113669:73:15","text":"Start a snapshot capture of the current gas usage by name in a group."},"functionSelector":"6cd0cc53","implemented":false,"kind":"function","modifiers":[],"name":"startSnapshotGas","nameLocation":"113756:16:15","parameters":{"id":17524,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17521,"mutability":"mutable","name":"group","nameLocation":"113789:5:15","nodeType":"VariableDeclaration","scope":17526,"src":"113773:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17520,"name":"string","nodeType":"ElementaryTypeName","src":"113773:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":17523,"mutability":"mutable","name":"name","nameLocation":"113812:4:15","nodeType":"VariableDeclaration","scope":17526,"src":"113796:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17522,"name":"string","nodeType":"ElementaryTypeName","src":"113796:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"113772:45:15"},"returnParameters":{"id":17525,"nodeType":"ParameterList","parameters":[],"src":"113826:0:15"},"scope":18001,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17530,"nodeType":"FunctionDefinition","src":"113902:30:15","nodes":[],"documentation":{"id":17527,"nodeType":"StructuredDocumentation","src":"113833:64:15","text":"Resets subsequent calls' `msg.sender` to be `address(this)`."},"functionSelector":"90c5013b","implemented":false,"kind":"function","modifiers":[],"name":"stopPrank","nameLocation":"113911:9:15","parameters":{"id":17528,"nodeType":"ParameterList","parameters":[],"src":"113920:2:15"},"returnParameters":{"id":17529,"nodeType":"ParameterList","parameters":[],"src":"113931:0:15"},"scope":18001,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17536,"nodeType":"FunctionDefinition","src":"114056:62:15","nodes":[],"documentation":{"id":17531,"nodeType":"StructuredDocumentation","src":"113938:113:15","text":"Stop the snapshot capture of the current gas by latest snapshot name, capturing the gas used since the start."},"functionSelector":"f6402eda","implemented":false,"kind":"function","modifiers":[],"name":"stopSnapshotGas","nameLocation":"114065:15:15","parameters":{"id":17532,"nodeType":"ParameterList","parameters":[],"src":"114080:2:15"},"returnParameters":{"id":17535,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17534,"mutability":"mutable","name":"gasUsed","nameLocation":"114109:7:15","nodeType":"VariableDeclaration","scope":17536,"src":"114101:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17533,"name":"uint256","nodeType":"ElementaryTypeName","src":"114101:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"114100:17:15"},"scope":18001,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17544,"nodeType":"FunctionDefinition","src":"114290:82:15","nodes":[],"documentation":{"id":17537,"nodeType":"StructuredDocumentation","src":"114124:161:15","text":"Stop the snapshot capture of the current gas usage by name, capturing the gas used since the start.\n The group name is derived from the contract name."},"functionSelector":"773b2805","implemented":false,"kind":"function","modifiers":[],"name":"stopSnapshotGas","nameLocation":"114299:15:15","parameters":{"id":17540,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17539,"mutability":"mutable","name":"name","nameLocation":"114331:4:15","nodeType":"VariableDeclaration","scope":17544,"src":"114315:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17538,"name":"string","nodeType":"ElementaryTypeName","src":"114315:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"114314:22:15"},"returnParameters":{"id":17543,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17542,"mutability":"mutable","name":"gasUsed","nameLocation":"114363:7:15","nodeType":"VariableDeclaration","scope":17544,"src":"114355:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17541,"name":"uint256","nodeType":"ElementaryTypeName","src":"114355:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"114354:17:15"},"scope":18001,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17554,"nodeType":"FunctionDefinition","src":"114497:105:15","nodes":[],"documentation":{"id":17545,"nodeType":"StructuredDocumentation","src":"114378:114:15","text":"Stop the snapshot capture of the current gas usage by name in a group, capturing the gas used since the start."},"functionSelector":"0c9db707","implemented":false,"kind":"function","modifiers":[],"name":"stopSnapshotGas","nameLocation":"114506:15:15","parameters":{"id":17550,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17547,"mutability":"mutable","name":"group","nameLocation":"114538:5:15","nodeType":"VariableDeclaration","scope":17554,"src":"114522:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17546,"name":"string","nodeType":"ElementaryTypeName","src":"114522:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":17549,"mutability":"mutable","name":"name","nameLocation":"114561:4:15","nodeType":"VariableDeclaration","scope":17554,"src":"114545:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17548,"name":"string","nodeType":"ElementaryTypeName","src":"114545:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"114521:45:15"},"returnParameters":{"id":17553,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17552,"mutability":"mutable","name":"gasUsed","nameLocation":"114593:7:15","nodeType":"VariableDeclaration","scope":17554,"src":"114585:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17551,"name":"uint256","nodeType":"ElementaryTypeName","src":"114585:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"114584:17:15"},"scope":18001,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17564,"nodeType":"FunctionDefinition","src":"114660:69:15","nodes":[],"documentation":{"id":17555,"nodeType":"StructuredDocumentation","src":"114608:47:15","text":"Stores a value to an address' storage slot."},"functionSelector":"70ca10bb","implemented":false,"kind":"function","modifiers":[],"name":"store","nameLocation":"114669:5:15","parameters":{"id":17562,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17557,"mutability":"mutable","name":"target","nameLocation":"114683:6:15","nodeType":"VariableDeclaration","scope":17564,"src":"114675:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":17556,"name":"address","nodeType":"ElementaryTypeName","src":"114675:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":17559,"mutability":"mutable","name":"slot","nameLocation":"114699:4:15","nodeType":"VariableDeclaration","scope":17564,"src":"114691:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":17558,"name":"bytes32","nodeType":"ElementaryTypeName","src":"114691:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":17561,"mutability":"mutable","name":"value","nameLocation":"114713:5:15","nodeType":"VariableDeclaration","scope":17564,"src":"114705:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":17560,"name":"bytes32","nodeType":"ElementaryTypeName","src":"114705:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"114674:45:15"},"returnParameters":{"id":17563,"nodeType":"ParameterList","parameters":[],"src":"114728:0:15"},"scope":18001,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17570,"nodeType":"FunctionDefinition","src":"114832:43:15","nodes":[],"documentation":{"id":17565,"nodeType":"StructuredDocumentation","src":"114735:92:15","text":"Fetches the given transaction from the active fork and executes it on the current state."},"functionSelector":"be646da1","implemented":false,"kind":"function","modifiers":[],"name":"transact","nameLocation":"114841:8:15","parameters":{"id":17568,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17567,"mutability":"mutable","name":"txHash","nameLocation":"114858:6:15","nodeType":"VariableDeclaration","scope":17570,"src":"114850:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":17566,"name":"bytes32","nodeType":"ElementaryTypeName","src":"114850:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"114849:16:15"},"returnParameters":{"id":17569,"nodeType":"ParameterList","parameters":[],"src":"114874:0:15"},"scope":18001,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17578,"nodeType":"FunctionDefinition","src":"114977:59:15","nodes":[],"documentation":{"id":17571,"nodeType":"StructuredDocumentation","src":"114881:91:15","text":"Fetches the given transaction from the given fork and executes it on the current state."},"functionSelector":"4d8abc4b","implemented":false,"kind":"function","modifiers":[],"name":"transact","nameLocation":"114986:8:15","parameters":{"id":17576,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17573,"mutability":"mutable","name":"forkId","nameLocation":"115003:6:15","nodeType":"VariableDeclaration","scope":17578,"src":"114995:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17572,"name":"uint256","nodeType":"ElementaryTypeName","src":"114995:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":17575,"mutability":"mutable","name":"txHash","nameLocation":"115019:6:15","nodeType":"VariableDeclaration","scope":17578,"src":"115011:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":17574,"name":"bytes32","nodeType":"ElementaryTypeName","src":"115011:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"114994:32:15"},"returnParameters":{"id":17577,"nodeType":"ParameterList","parameters":[],"src":"115035:0:15"},"scope":18001,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17584,"nodeType":"FunctionDefinition","src":"115070:50:15","nodes":[],"documentation":{"id":17579,"nodeType":"StructuredDocumentation","src":"115042:23:15","text":"Sets `tx.gasprice`."},"functionSelector":"48f50c0f","implemented":false,"kind":"function","modifiers":[],"name":"txGasPrice","nameLocation":"115079:10:15","parameters":{"id":17582,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17581,"mutability":"mutable","name":"newGasPrice","nameLocation":"115098:11:15","nodeType":"VariableDeclaration","scope":17584,"src":"115090:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17580,"name":"uint256","nodeType":"ElementaryTypeName","src":"115090:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"115089:21:15"},"returnParameters":{"id":17583,"nodeType":"ParameterList","parameters":[],"src":"115119:0:15"},"scope":18001,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17592,"nodeType":"FunctionDefinition","src":"115216:57:15","nodes":[],"documentation":{"id":17585,"nodeType":"StructuredDocumentation","src":"115126:85:15","text":"Utility cheatcode to mark specific storage slot as warm, simulating a prior read."},"functionSelector":"b23184cf","implemented":false,"kind":"function","modifiers":[],"name":"warmSlot","nameLocation":"115225:8:15","parameters":{"id":17590,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17587,"mutability":"mutable","name":"target","nameLocation":"115242:6:15","nodeType":"VariableDeclaration","scope":17592,"src":"115234:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":17586,"name":"address","nodeType":"ElementaryTypeName","src":"115234:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":17589,"mutability":"mutable","name":"slot","nameLocation":"115258:4:15","nodeType":"VariableDeclaration","scope":17592,"src":"115250:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":17588,"name":"bytes32","nodeType":"ElementaryTypeName","src":"115250:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"115233:30:15"},"returnParameters":{"id":17591,"nodeType":"ParameterList","parameters":[],"src":"115272:0:15"},"scope":18001,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17598,"nodeType":"FunctionDefinition","src":"115311:45:15","nodes":[],"documentation":{"id":17593,"nodeType":"StructuredDocumentation","src":"115279:27:15","text":"Sets `block.timestamp`."},"functionSelector":"e5d6bf02","implemented":false,"kind":"function","modifiers":[],"name":"warp","nameLocation":"115320:4:15","parameters":{"id":17596,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17595,"mutability":"mutable","name":"newTimestamp","nameLocation":"115333:12:15","nodeType":"VariableDeclaration","scope":17598,"src":"115325:20:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17594,"name":"uint256","nodeType":"ElementaryTypeName","src":"115325:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"115324:22:15"},"returnParameters":{"id":17597,"nodeType":"ParameterList","parameters":[],"src":"115355:0:15"},"scope":18001,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17606,"nodeType":"FunctionDefinition","src":"115481:76:15","nodes":[],"documentation":{"id":17599,"nodeType":"StructuredDocumentation","src":"115362:114:15","text":"`deleteSnapshot` is being deprecated in favor of `deleteStateSnapshot`. It will be removed in future versions."},"functionSelector":"a6368557","implemented":false,"kind":"function","modifiers":[],"name":"deleteSnapshot","nameLocation":"115490:14:15","parameters":{"id":17602,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17601,"mutability":"mutable","name":"snapshotId","nameLocation":"115513:10:15","nodeType":"VariableDeclaration","scope":17606,"src":"115505:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17600,"name":"uint256","nodeType":"ElementaryTypeName","src":"115505:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"115504:20:15"},"returnParameters":{"id":17605,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17604,"mutability":"mutable","name":"success","nameLocation":"115548:7:15","nodeType":"VariableDeclaration","scope":17606,"src":"115543:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":17603,"name":"bool","nodeType":"ElementaryTypeName","src":"115543:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"115542:14:15"},"scope":18001,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17610,"nodeType":"FunctionDefinition","src":"115684:36:15","nodes":[],"documentation":{"id":17607,"nodeType":"StructuredDocumentation","src":"115563:116:15","text":"`deleteSnapshots` is being deprecated in favor of `deleteStateSnapshots`. It will be removed in future versions."},"functionSelector":"421ae469","implemented":false,"kind":"function","modifiers":[],"name":"deleteSnapshots","nameLocation":"115693:15:15","parameters":{"id":17608,"nodeType":"ParameterList","parameters":[],"src":"115708:2:15"},"returnParameters":{"id":17609,"nodeType":"ParameterList","parameters":[],"src":"115719:0:15"},"scope":18001,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17618,"nodeType":"FunctionDefinition","src":"115851:79:15","nodes":[],"documentation":{"id":17611,"nodeType":"StructuredDocumentation","src":"115726:120:15","text":"`revertToAndDelete` is being deprecated in favor of `revertToStateAndDelete`. It will be removed in future versions."},"functionSelector":"03e0aca9","implemented":false,"kind":"function","modifiers":[],"name":"revertToAndDelete","nameLocation":"115860:17:15","parameters":{"id":17614,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17613,"mutability":"mutable","name":"snapshotId","nameLocation":"115886:10:15","nodeType":"VariableDeclaration","scope":17618,"src":"115878:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17612,"name":"uint256","nodeType":"ElementaryTypeName","src":"115878:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"115877:20:15"},"returnParameters":{"id":17617,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17616,"mutability":"mutable","name":"success","nameLocation":"115921:7:15","nodeType":"VariableDeclaration","scope":17618,"src":"115916:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":17615,"name":"bool","nodeType":"ElementaryTypeName","src":"115916:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"115915:14:15"},"scope":18001,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17626,"nodeType":"FunctionDefinition","src":"116043:70:15","nodes":[],"documentation":{"id":17619,"nodeType":"StructuredDocumentation","src":"115936:102:15","text":"`revertTo` is being deprecated in favor of `revertToState`. It will be removed in future versions."},"functionSelector":"44d7f0a4","implemented":false,"kind":"function","modifiers":[],"name":"revertTo","nameLocation":"116052:8:15","parameters":{"id":17622,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17621,"mutability":"mutable","name":"snapshotId","nameLocation":"116069:10:15","nodeType":"VariableDeclaration","scope":17626,"src":"116061:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17620,"name":"uint256","nodeType":"ElementaryTypeName","src":"116061:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"116060:20:15"},"returnParameters":{"id":17625,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17624,"mutability":"mutable","name":"success","nameLocation":"116104:7:15","nodeType":"VariableDeclaration","scope":17626,"src":"116099:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":17623,"name":"bool","nodeType":"ElementaryTypeName","src":"116099:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"116098:14:15"},"scope":18001,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17632,"nodeType":"FunctionDefinition","src":"116226:58:15","nodes":[],"documentation":{"id":17627,"nodeType":"StructuredDocumentation","src":"116119:102:15","text":"`snapshot` is being deprecated in favor of `snapshotState`. It will be removed in future versions."},"functionSelector":"9711715a","implemented":false,"kind":"function","modifiers":[],"name":"snapshot","nameLocation":"116235:8:15","parameters":{"id":17628,"nodeType":"ParameterList","parameters":[],"src":"116243:2:15"},"returnParameters":{"id":17631,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17630,"mutability":"mutable","name":"snapshotId","nameLocation":"116272:10:15","nodeType":"VariableDeclaration","scope":17632,"src":"116264:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17629,"name":"uint256","nodeType":"ElementaryTypeName","src":"116264:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"116263:20:15"},"scope":18001,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17644,"nodeType":"FunctionDefinition","src":"116436:105:15","nodes":[],"documentation":{"id":17633,"nodeType":"StructuredDocumentation","src":"116324:107:15","text":"Expect a call to an address with the specified `msg.value` and calldata, and a *minimum* amount of gas."},"functionSelector":"08e4e116","implemented":false,"kind":"function","modifiers":[],"name":"expectCallMinGas","nameLocation":"116445:16:15","parameters":{"id":17642,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17635,"mutability":"mutable","name":"callee","nameLocation":"116470:6:15","nodeType":"VariableDeclaration","scope":17644,"src":"116462:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":17634,"name":"address","nodeType":"ElementaryTypeName","src":"116462:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":17637,"mutability":"mutable","name":"msgValue","nameLocation":"116486:8:15","nodeType":"VariableDeclaration","scope":17644,"src":"116478:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17636,"name":"uint256","nodeType":"ElementaryTypeName","src":"116478:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":17639,"mutability":"mutable","name":"minGas","nameLocation":"116503:6:15","nodeType":"VariableDeclaration","scope":17644,"src":"116496:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":17638,"name":"uint64","nodeType":"ElementaryTypeName","src":"116496:6:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":17641,"mutability":"mutable","name":"data","nameLocation":"116526:4:15","nodeType":"VariableDeclaration","scope":17644,"src":"116511:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":17640,"name":"bytes","nodeType":"ElementaryTypeName","src":"116511:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"116461:70:15"},"returnParameters":{"id":17643,"nodeType":"ParameterList","parameters":[],"src":"116540:0:15"},"scope":18001,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17658,"nodeType":"FunctionDefinition","src":"116674:127:15","nodes":[],"documentation":{"id":17645,"nodeType":"StructuredDocumentation","src":"116547:122:15","text":"Expect given number of calls to an address with the specified `msg.value` and calldata, and a *minimum* amount of gas."},"functionSelector":"e13a1834","implemented":false,"kind":"function","modifiers":[],"name":"expectCallMinGas","nameLocation":"116683:16:15","parameters":{"id":17656,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17647,"mutability":"mutable","name":"callee","nameLocation":"116708:6:15","nodeType":"VariableDeclaration","scope":17658,"src":"116700:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":17646,"name":"address","nodeType":"ElementaryTypeName","src":"116700:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":17649,"mutability":"mutable","name":"msgValue","nameLocation":"116724:8:15","nodeType":"VariableDeclaration","scope":17658,"src":"116716:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17648,"name":"uint256","nodeType":"ElementaryTypeName","src":"116716:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":17651,"mutability":"mutable","name":"minGas","nameLocation":"116741:6:15","nodeType":"VariableDeclaration","scope":17658,"src":"116734:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":17650,"name":"uint64","nodeType":"ElementaryTypeName","src":"116734:6:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":17653,"mutability":"mutable","name":"data","nameLocation":"116764:4:15","nodeType":"VariableDeclaration","scope":17658,"src":"116749:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":17652,"name":"bytes","nodeType":"ElementaryTypeName","src":"116749:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":17655,"mutability":"mutable","name":"count","nameLocation":"116777:5:15","nodeType":"VariableDeclaration","scope":17658,"src":"116770:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":17654,"name":"uint64","nodeType":"ElementaryTypeName","src":"116770:6:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"116699:84:15"},"returnParameters":{"id":17657,"nodeType":"ParameterList","parameters":[],"src":"116800:0:15"},"scope":18001,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17666,"nodeType":"FunctionDefinition","src":"116933:66:15","nodes":[],"documentation":{"id":17659,"nodeType":"StructuredDocumentation","src":"116807:121:15","text":"Expects a call to an address with the specified calldata.\n Calldata can either be a strict or a partial match."},"functionSelector":"bd6af434","implemented":false,"kind":"function","modifiers":[],"name":"expectCall","nameLocation":"116942:10:15","parameters":{"id":17664,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17661,"mutability":"mutable","name":"callee","nameLocation":"116961:6:15","nodeType":"VariableDeclaration","scope":17666,"src":"116953:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":17660,"name":"address","nodeType":"ElementaryTypeName","src":"116953:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":17663,"mutability":"mutable","name":"data","nameLocation":"116984:4:15","nodeType":"VariableDeclaration","scope":17666,"src":"116969:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":17662,"name":"bytes","nodeType":"ElementaryTypeName","src":"116969:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"116952:37:15"},"returnParameters":{"id":17665,"nodeType":"ParameterList","parameters":[],"src":"116998:0:15"},"scope":18001,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17676,"nodeType":"FunctionDefinition","src":"117086:80:15","nodes":[],"documentation":{"id":17667,"nodeType":"StructuredDocumentation","src":"117005:76:15","text":"Expects given number of calls to an address with the specified calldata."},"functionSelector":"c1adbbff","implemented":false,"kind":"function","modifiers":[],"name":"expectCall","nameLocation":"117095:10:15","parameters":{"id":17674,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17669,"mutability":"mutable","name":"callee","nameLocation":"117114:6:15","nodeType":"VariableDeclaration","scope":17676,"src":"117106:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":17668,"name":"address","nodeType":"ElementaryTypeName","src":"117106:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":17671,"mutability":"mutable","name":"data","nameLocation":"117137:4:15","nodeType":"VariableDeclaration","scope":17676,"src":"117122:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":17670,"name":"bytes","nodeType":"ElementaryTypeName","src":"117122:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":17673,"mutability":"mutable","name":"count","nameLocation":"117150:5:15","nodeType":"VariableDeclaration","scope":17676,"src":"117143:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":17672,"name":"uint64","nodeType":"ElementaryTypeName","src":"117143:6:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"117105:51:15"},"returnParameters":{"id":17675,"nodeType":"ParameterList","parameters":[],"src":"117165:0:15"},"scope":18001,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17686,"nodeType":"FunctionDefinition","src":"117254:84:15","nodes":[],"documentation":{"id":17677,"nodeType":"StructuredDocumentation","src":"117172:77:15","text":"Expects a call to an address with the specified `msg.value` and calldata."},"functionSelector":"f30c7ba3","implemented":false,"kind":"function","modifiers":[],"name":"expectCall","nameLocation":"117263:10:15","parameters":{"id":17684,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17679,"mutability":"mutable","name":"callee","nameLocation":"117282:6:15","nodeType":"VariableDeclaration","scope":17686,"src":"117274:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":17678,"name":"address","nodeType":"ElementaryTypeName","src":"117274:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":17681,"mutability":"mutable","name":"msgValue","nameLocation":"117298:8:15","nodeType":"VariableDeclaration","scope":17686,"src":"117290:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17680,"name":"uint256","nodeType":"ElementaryTypeName","src":"117290:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":17683,"mutability":"mutable","name":"data","nameLocation":"117323:4:15","nodeType":"VariableDeclaration","scope":17686,"src":"117308:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":17682,"name":"bytes","nodeType":"ElementaryTypeName","src":"117308:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"117273:55:15"},"returnParameters":{"id":17685,"nodeType":"ParameterList","parameters":[],"src":"117337:0:15"},"scope":18001,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17698,"nodeType":"FunctionDefinition","src":"117441:98:15","nodes":[],"documentation":{"id":17687,"nodeType":"StructuredDocumentation","src":"117344:92:15","text":"Expects given number of calls to an address with the specified `msg.value` and calldata."},"functionSelector":"a2b1a1ae","implemented":false,"kind":"function","modifiers":[],"name":"expectCall","nameLocation":"117450:10:15","parameters":{"id":17696,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17689,"mutability":"mutable","name":"callee","nameLocation":"117469:6:15","nodeType":"VariableDeclaration","scope":17698,"src":"117461:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":17688,"name":"address","nodeType":"ElementaryTypeName","src":"117461:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":17691,"mutability":"mutable","name":"msgValue","nameLocation":"117485:8:15","nodeType":"VariableDeclaration","scope":17698,"src":"117477:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17690,"name":"uint256","nodeType":"ElementaryTypeName","src":"117477:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":17693,"mutability":"mutable","name":"data","nameLocation":"117510:4:15","nodeType":"VariableDeclaration","scope":17698,"src":"117495:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":17692,"name":"bytes","nodeType":"ElementaryTypeName","src":"117495:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":17695,"mutability":"mutable","name":"count","nameLocation":"117523:5:15","nodeType":"VariableDeclaration","scope":17698,"src":"117516:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":17694,"name":"uint64","nodeType":"ElementaryTypeName","src":"117516:6:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"117460:69:15"},"returnParameters":{"id":17697,"nodeType":"ParameterList","parameters":[],"src":"117538:0:15"},"scope":18001,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17710,"nodeType":"FunctionDefinition","src":"117632:96:15","nodes":[],"documentation":{"id":17699,"nodeType":"StructuredDocumentation","src":"117545:82:15","text":"Expect a call to an address with the specified `msg.value`, gas, and calldata."},"functionSelector":"23361207","implemented":false,"kind":"function","modifiers":[],"name":"expectCall","nameLocation":"117641:10:15","parameters":{"id":17708,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17701,"mutability":"mutable","name":"callee","nameLocation":"117660:6:15","nodeType":"VariableDeclaration","scope":17710,"src":"117652:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":17700,"name":"address","nodeType":"ElementaryTypeName","src":"117652:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":17703,"mutability":"mutable","name":"msgValue","nameLocation":"117676:8:15","nodeType":"VariableDeclaration","scope":17710,"src":"117668:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17702,"name":"uint256","nodeType":"ElementaryTypeName","src":"117668:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":17705,"mutability":"mutable","name":"gas","nameLocation":"117693:3:15","nodeType":"VariableDeclaration","scope":17710,"src":"117686:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":17704,"name":"uint64","nodeType":"ElementaryTypeName","src":"117686:6:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":17707,"mutability":"mutable","name":"data","nameLocation":"117713:4:15","nodeType":"VariableDeclaration","scope":17710,"src":"117698:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":17706,"name":"bytes","nodeType":"ElementaryTypeName","src":"117698:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"117651:67:15"},"returnParameters":{"id":17709,"nodeType":"ParameterList","parameters":[],"src":"117727:0:15"},"scope":18001,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17724,"nodeType":"FunctionDefinition","src":"117837:110:15","nodes":[],"documentation":{"id":17711,"nodeType":"StructuredDocumentation","src":"117734:98:15","text":"Expects given number of calls to an address with the specified `msg.value`, gas, and calldata."},"functionSelector":"65b7b7cc","implemented":false,"kind":"function","modifiers":[],"name":"expectCall","nameLocation":"117846:10:15","parameters":{"id":17722,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17713,"mutability":"mutable","name":"callee","nameLocation":"117865:6:15","nodeType":"VariableDeclaration","scope":17724,"src":"117857:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":17712,"name":"address","nodeType":"ElementaryTypeName","src":"117857:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":17715,"mutability":"mutable","name":"msgValue","nameLocation":"117881:8:15","nodeType":"VariableDeclaration","scope":17724,"src":"117873:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17714,"name":"uint256","nodeType":"ElementaryTypeName","src":"117873:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":17717,"mutability":"mutable","name":"gas","nameLocation":"117898:3:15","nodeType":"VariableDeclaration","scope":17724,"src":"117891:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":17716,"name":"uint64","nodeType":"ElementaryTypeName","src":"117891:6:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":17719,"mutability":"mutable","name":"data","nameLocation":"117918:4:15","nodeType":"VariableDeclaration","scope":17724,"src":"117903:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":17718,"name":"bytes","nodeType":"ElementaryTypeName","src":"117903:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":17721,"mutability":"mutable","name":"count","nameLocation":"117931:5:15","nodeType":"VariableDeclaration","scope":17724,"src":"117924:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":17720,"name":"uint64","nodeType":"ElementaryTypeName","src":"117924:6:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"117856:81:15"},"returnParameters":{"id":17723,"nodeType":"ParameterList","parameters":[],"src":"117946:0:15"},"scope":18001,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17732,"nodeType":"FunctionDefinition","src":"118059:74:15","nodes":[],"documentation":{"id":17725,"nodeType":"StructuredDocumentation","src":"117953:101:15","text":"Expects the deployment of the specified bytecode by the specified address using the CREATE opcode"},"functionSelector":"73cdce36","implemented":false,"kind":"function","modifiers":[],"name":"expectCreate","nameLocation":"118068:12:15","parameters":{"id":17730,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17727,"mutability":"mutable","name":"bytecode","nameLocation":"118096:8:15","nodeType":"VariableDeclaration","scope":17732,"src":"118081:23:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":17726,"name":"bytes","nodeType":"ElementaryTypeName","src":"118081:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":17729,"mutability":"mutable","name":"deployer","nameLocation":"118114:8:15","nodeType":"VariableDeclaration","scope":17732,"src":"118106:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":17728,"name":"address","nodeType":"ElementaryTypeName","src":"118106:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"118080:43:15"},"returnParameters":{"id":17731,"nodeType":"ParameterList","parameters":[],"src":"118132:0:15"},"scope":18001,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17740,"nodeType":"FunctionDefinition","src":"118246:75:15","nodes":[],"documentation":{"id":17733,"nodeType":"StructuredDocumentation","src":"118139:102:15","text":"Expects the deployment of the specified bytecode by the specified address using the CREATE2 opcode"},"functionSelector":"ea54a472","implemented":false,"kind":"function","modifiers":[],"name":"expectCreate2","nameLocation":"118255:13:15","parameters":{"id":17738,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17735,"mutability":"mutable","name":"bytecode","nameLocation":"118284:8:15","nodeType":"VariableDeclaration","scope":17740,"src":"118269:23:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":17734,"name":"bytes","nodeType":"ElementaryTypeName","src":"118269:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":17737,"mutability":"mutable","name":"deployer","nameLocation":"118302:8:15","nodeType":"VariableDeclaration","scope":17740,"src":"118294:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":17736,"name":"address","nodeType":"ElementaryTypeName","src":"118294:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"118268:43:15"},"returnParameters":{"id":17739,"nodeType":"ParameterList","parameters":[],"src":"118320:0:15"},"scope":18001,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17754,"nodeType":"FunctionDefinition","src":"118680:134:15","nodes":[],"documentation":{"id":17741,"nodeType":"StructuredDocumentation","src":"118327:348:15","text":"Prepare an expected anonymous log with (bool checkTopic1, bool checkTopic2, bool checkTopic3, bool checkData.).\n Call this function, then emit an anonymous event, then call a function. Internally after the call, we check if\n logs were emitted in the expected order with the expected topics and data (as specified by the booleans)."},"functionSelector":"c948db5e","implemented":false,"kind":"function","modifiers":[],"name":"expectEmitAnonymous","nameLocation":"118689:19:15","parameters":{"id":17752,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17743,"mutability":"mutable","name":"checkTopic0","nameLocation":"118714:11:15","nodeType":"VariableDeclaration","scope":17754,"src":"118709:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":17742,"name":"bool","nodeType":"ElementaryTypeName","src":"118709:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":17745,"mutability":"mutable","name":"checkTopic1","nameLocation":"118732:11:15","nodeType":"VariableDeclaration","scope":17754,"src":"118727:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":17744,"name":"bool","nodeType":"ElementaryTypeName","src":"118727:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":17747,"mutability":"mutable","name":"checkTopic2","nameLocation":"118750:11:15","nodeType":"VariableDeclaration","scope":17754,"src":"118745:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":17746,"name":"bool","nodeType":"ElementaryTypeName","src":"118745:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":17749,"mutability":"mutable","name":"checkTopic3","nameLocation":"118768:11:15","nodeType":"VariableDeclaration","scope":17754,"src":"118763:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":17748,"name":"bool","nodeType":"ElementaryTypeName","src":"118763:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":17751,"mutability":"mutable","name":"checkData","nameLocation":"118786:9:15","nodeType":"VariableDeclaration","scope":17754,"src":"118781:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":17750,"name":"bool","nodeType":"ElementaryTypeName","src":"118781:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"118708:88:15"},"returnParameters":{"id":17753,"nodeType":"ParameterList","parameters":[],"src":"118813:0:15"},"scope":18001,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17770,"nodeType":"FunctionDefinition","src":"118917:197:15","nodes":[],"documentation":{"id":17755,"nodeType":"StructuredDocumentation","src":"118820:92:15","text":"Same as the previous method, but also checks supplied address against emitting contract."},"functionSelector":"71c95899","implemented":false,"kind":"function","modifiers":[],"name":"expectEmitAnonymous","nameLocation":"118926:19:15","parameters":{"id":17768,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17757,"mutability":"mutable","name":"checkTopic0","nameLocation":"118960:11:15","nodeType":"VariableDeclaration","scope":17770,"src":"118955:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":17756,"name":"bool","nodeType":"ElementaryTypeName","src":"118955:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":17759,"mutability":"mutable","name":"checkTopic1","nameLocation":"118986:11:15","nodeType":"VariableDeclaration","scope":17770,"src":"118981:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":17758,"name":"bool","nodeType":"ElementaryTypeName","src":"118981:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":17761,"mutability":"mutable","name":"checkTopic2","nameLocation":"119012:11:15","nodeType":"VariableDeclaration","scope":17770,"src":"119007:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":17760,"name":"bool","nodeType":"ElementaryTypeName","src":"119007:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":17763,"mutability":"mutable","name":"checkTopic3","nameLocation":"119038:11:15","nodeType":"VariableDeclaration","scope":17770,"src":"119033:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":17762,"name":"bool","nodeType":"ElementaryTypeName","src":"119033:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":17765,"mutability":"mutable","name":"checkData","nameLocation":"119064:9:15","nodeType":"VariableDeclaration","scope":17770,"src":"119059:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":17764,"name":"bool","nodeType":"ElementaryTypeName","src":"119059:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":17767,"mutability":"mutable","name":"emitter","nameLocation":"119091:7:15","nodeType":"VariableDeclaration","scope":17770,"src":"119083:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":17766,"name":"address","nodeType":"ElementaryTypeName","src":"119083:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"118945:159:15"},"returnParameters":{"id":17769,"nodeType":"ParameterList","parameters":[],"src":"119113:0:15"},"scope":18001,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17774,"nodeType":"FunctionDefinition","src":"119404:40:15","nodes":[],"documentation":{"id":17771,"nodeType":"StructuredDocumentation","src":"119120:279:15","text":"Prepare an expected anonymous log with all topic and data checks enabled.\n Call this function, then emit an anonymous event, then call a function. Internally after the call, we check if\n logs were emitted in the expected order with the expected topics and data."},"functionSelector":"2e5f270c","implemented":false,"kind":"function","modifiers":[],"name":"expectEmitAnonymous","nameLocation":"119413:19:15","parameters":{"id":17772,"nodeType":"ParameterList","parameters":[],"src":"119432:2:15"},"returnParameters":{"id":17773,"nodeType":"ParameterList","parameters":[],"src":"119443:0:15"},"scope":18001,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17780,"nodeType":"FunctionDefinition","src":"119547:55:15","nodes":[],"documentation":{"id":17775,"nodeType":"StructuredDocumentation","src":"119450:92:15","text":"Same as the previous method, but also checks supplied address against emitting contract."},"functionSelector":"6fc68705","implemented":false,"kind":"function","modifiers":[],"name":"expectEmitAnonymous","nameLocation":"119556:19:15","parameters":{"id":17778,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17777,"mutability":"mutable","name":"emitter","nameLocation":"119584:7:15","nodeType":"VariableDeclaration","scope":17780,"src":"119576:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":17776,"name":"address","nodeType":"ElementaryTypeName","src":"119576:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"119575:17:15"},"returnParameters":{"id":17779,"nodeType":"ParameterList","parameters":[],"src":"119601:0:15"},"scope":18001,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17792,"nodeType":"FunctionDefinition","src":"119941:99:15","nodes":[],"documentation":{"id":17781,"nodeType":"StructuredDocumentation","src":"119608:328:15","text":"Prepare an expected log with (bool checkTopic1, bool checkTopic2, bool checkTopic3, bool checkData.).\n Call this function, then emit an event, then call a function. Internally after the call, we check if\n logs were emitted in the expected order with the expected topics and data (as specified by the booleans)."},"functionSelector":"491cc7c2","implemented":false,"kind":"function","modifiers":[],"name":"expectEmit","nameLocation":"119950:10:15","parameters":{"id":17790,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17783,"mutability":"mutable","name":"checkTopic1","nameLocation":"119966:11:15","nodeType":"VariableDeclaration","scope":17792,"src":"119961:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":17782,"name":"bool","nodeType":"ElementaryTypeName","src":"119961:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":17785,"mutability":"mutable","name":"checkTopic2","nameLocation":"119984:11:15","nodeType":"VariableDeclaration","scope":17792,"src":"119979:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":17784,"name":"bool","nodeType":"ElementaryTypeName","src":"119979:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":17787,"mutability":"mutable","name":"checkTopic3","nameLocation":"120002:11:15","nodeType":"VariableDeclaration","scope":17792,"src":"119997:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":17786,"name":"bool","nodeType":"ElementaryTypeName","src":"119997:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":17789,"mutability":"mutable","name":"checkData","nameLocation":"120020:9:15","nodeType":"VariableDeclaration","scope":17792,"src":"120015:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":17788,"name":"bool","nodeType":"ElementaryTypeName","src":"120015:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"119960:70:15"},"returnParameters":{"id":17791,"nodeType":"ParameterList","parameters":[],"src":"120039:0:15"},"scope":18001,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17806,"nodeType":"FunctionDefinition","src":"120143:124:15","nodes":[],"documentation":{"id":17793,"nodeType":"StructuredDocumentation","src":"120046:92:15","text":"Same as the previous method, but also checks supplied address against emitting contract."},"functionSelector":"81bad6f3","implemented":false,"kind":"function","modifiers":[],"name":"expectEmit","nameLocation":"120152:10:15","parameters":{"id":17804,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17795,"mutability":"mutable","name":"checkTopic1","nameLocation":"120168:11:15","nodeType":"VariableDeclaration","scope":17806,"src":"120163:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":17794,"name":"bool","nodeType":"ElementaryTypeName","src":"120163:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":17797,"mutability":"mutable","name":"checkTopic2","nameLocation":"120186:11:15","nodeType":"VariableDeclaration","scope":17806,"src":"120181:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":17796,"name":"bool","nodeType":"ElementaryTypeName","src":"120181:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":17799,"mutability":"mutable","name":"checkTopic3","nameLocation":"120204:11:15","nodeType":"VariableDeclaration","scope":17806,"src":"120199:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":17798,"name":"bool","nodeType":"ElementaryTypeName","src":"120199:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":17801,"mutability":"mutable","name":"checkData","nameLocation":"120222:9:15","nodeType":"VariableDeclaration","scope":17806,"src":"120217:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":17800,"name":"bool","nodeType":"ElementaryTypeName","src":"120217:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":17803,"mutability":"mutable","name":"emitter","nameLocation":"120241:7:15","nodeType":"VariableDeclaration","scope":17806,"src":"120233:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":17802,"name":"address","nodeType":"ElementaryTypeName","src":"120233:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"120162:87:15"},"returnParameters":{"id":17805,"nodeType":"ParameterList","parameters":[],"src":"120266:0:15"},"scope":18001,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17810,"nodeType":"FunctionDefinition","src":"120537:31:15","nodes":[],"documentation":{"id":17807,"nodeType":"StructuredDocumentation","src":"120273:259:15","text":"Prepare an expected log with all topic and data checks enabled.\n Call this function, then emit an event, then call a function. Internally after the call, we check if\n logs were emitted in the expected order with the expected topics and data."},"functionSelector":"440ed10d","implemented":false,"kind":"function","modifiers":[],"name":"expectEmit","nameLocation":"120546:10:15","parameters":{"id":17808,"nodeType":"ParameterList","parameters":[],"src":"120556:2:15"},"returnParameters":{"id":17809,"nodeType":"ParameterList","parameters":[],"src":"120567:0:15"},"scope":18001,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17816,"nodeType":"FunctionDefinition","src":"120671:46:15","nodes":[],"documentation":{"id":17811,"nodeType":"StructuredDocumentation","src":"120574:92:15","text":"Same as the previous method, but also checks supplied address against emitting contract."},"functionSelector":"86b9620d","implemented":false,"kind":"function","modifiers":[],"name":"expectEmit","nameLocation":"120680:10:15","parameters":{"id":17814,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17813,"mutability":"mutable","name":"emitter","nameLocation":"120699:7:15","nodeType":"VariableDeclaration","scope":17816,"src":"120691:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":17812,"name":"address","nodeType":"ElementaryTypeName","src":"120691:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"120690:17:15"},"returnParameters":{"id":17815,"nodeType":"ParameterList","parameters":[],"src":"120716:0:15"},"scope":18001,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17830,"nodeType":"FunctionDefinition","src":"120787:113:15","nodes":[],"documentation":{"id":17817,"nodeType":"StructuredDocumentation","src":"120723:59:15","text":"Expect a given number of logs with the provided topics."},"functionSelector":"5e1d1c33","implemented":false,"kind":"function","modifiers":[],"name":"expectEmit","nameLocation":"120796:10:15","parameters":{"id":17828,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17819,"mutability":"mutable","name":"checkTopic1","nameLocation":"120812:11:15","nodeType":"VariableDeclaration","scope":17830,"src":"120807:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":17818,"name":"bool","nodeType":"ElementaryTypeName","src":"120807:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":17821,"mutability":"mutable","name":"checkTopic2","nameLocation":"120830:11:15","nodeType":"VariableDeclaration","scope":17830,"src":"120825:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":17820,"name":"bool","nodeType":"ElementaryTypeName","src":"120825:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":17823,"mutability":"mutable","name":"checkTopic3","nameLocation":"120848:11:15","nodeType":"VariableDeclaration","scope":17830,"src":"120843:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":17822,"name":"bool","nodeType":"ElementaryTypeName","src":"120843:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":17825,"mutability":"mutable","name":"checkData","nameLocation":"120866:9:15","nodeType":"VariableDeclaration","scope":17830,"src":"120861:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":17824,"name":"bool","nodeType":"ElementaryTypeName","src":"120861:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":17827,"mutability":"mutable","name":"count","nameLocation":"120884:5:15","nodeType":"VariableDeclaration","scope":17830,"src":"120877:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":17826,"name":"uint64","nodeType":"ElementaryTypeName","src":"120877:6:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"120806:84:15"},"returnParameters":{"id":17829,"nodeType":"ParameterList","parameters":[],"src":"120899:0:15"},"scope":18001,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17846,"nodeType":"FunctionDefinition","src":"120994:184:15","nodes":[],"documentation":{"id":17831,"nodeType":"StructuredDocumentation","src":"120906:83:15","text":"Expect a given number of logs from a specific emitter with the provided topics."},"functionSelector":"c339d02c","implemented":false,"kind":"function","modifiers":[],"name":"expectEmit","nameLocation":"121003:10:15","parameters":{"id":17844,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17833,"mutability":"mutable","name":"checkTopic1","nameLocation":"121028:11:15","nodeType":"VariableDeclaration","scope":17846,"src":"121023:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":17832,"name":"bool","nodeType":"ElementaryTypeName","src":"121023:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":17835,"mutability":"mutable","name":"checkTopic2","nameLocation":"121054:11:15","nodeType":"VariableDeclaration","scope":17846,"src":"121049:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":17834,"name":"bool","nodeType":"ElementaryTypeName","src":"121049:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":17837,"mutability":"mutable","name":"checkTopic3","nameLocation":"121080:11:15","nodeType":"VariableDeclaration","scope":17846,"src":"121075:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":17836,"name":"bool","nodeType":"ElementaryTypeName","src":"121075:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":17839,"mutability":"mutable","name":"checkData","nameLocation":"121106:9:15","nodeType":"VariableDeclaration","scope":17846,"src":"121101:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":17838,"name":"bool","nodeType":"ElementaryTypeName","src":"121101:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":17841,"mutability":"mutable","name":"emitter","nameLocation":"121133:7:15","nodeType":"VariableDeclaration","scope":17846,"src":"121125:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":17840,"name":"address","nodeType":"ElementaryTypeName","src":"121125:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":17843,"mutability":"mutable","name":"count","nameLocation":"121157:5:15","nodeType":"VariableDeclaration","scope":17846,"src":"121150:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":17842,"name":"uint64","nodeType":"ElementaryTypeName","src":"121150:6:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"121013:155:15"},"returnParameters":{"id":17845,"nodeType":"ParameterList","parameters":[],"src":"121177:0:15"},"scope":18001,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17852,"nodeType":"FunctionDefinition","src":"121262:43:15","nodes":[],"documentation":{"id":17847,"nodeType":"StructuredDocumentation","src":"121184:73:15","text":"Expect a given number of logs with all topic and data checks enabled."},"functionSelector":"4c74a335","implemented":false,"kind":"function","modifiers":[],"name":"expectEmit","nameLocation":"121271:10:15","parameters":{"id":17850,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17849,"mutability":"mutable","name":"count","nameLocation":"121289:5:15","nodeType":"VariableDeclaration","scope":17852,"src":"121282:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":17848,"name":"uint64","nodeType":"ElementaryTypeName","src":"121282:6:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"121281:14:15"},"returnParameters":{"id":17851,"nodeType":"ParameterList","parameters":[],"src":"121304:0:15"},"scope":18001,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17860,"nodeType":"FunctionDefinition","src":"121413:60:15","nodes":[],"documentation":{"id":17853,"nodeType":"StructuredDocumentation","src":"121311:97:15","text":"Expect a given number of logs from a specific emitter with all topic and data checks enabled."},"functionSelector":"b43aece3","implemented":false,"kind":"function","modifiers":[],"name":"expectEmit","nameLocation":"121422:10:15","parameters":{"id":17858,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17855,"mutability":"mutable","name":"emitter","nameLocation":"121441:7:15","nodeType":"VariableDeclaration","scope":17860,"src":"121433:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":17854,"name":"address","nodeType":"ElementaryTypeName","src":"121433:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":17857,"mutability":"mutable","name":"count","nameLocation":"121457:5:15","nodeType":"VariableDeclaration","scope":17860,"src":"121450:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":17856,"name":"uint64","nodeType":"ElementaryTypeName","src":"121450:6:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"121432:31:15"},"returnParameters":{"id":17859,"nodeType":"ParameterList","parameters":[],"src":"121472:0:15"},"scope":18001,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17866,"nodeType":"FunctionDefinition","src":"121551:57:15","nodes":[],"documentation":{"id":17861,"nodeType":"StructuredDocumentation","src":"121479:67:15","text":"Expects an error on next call that starts with the revert data."},"functionSelector":"11fb5b9c","implemented":false,"kind":"function","modifiers":[],"name":"expectPartialRevert","nameLocation":"121560:19:15","parameters":{"id":17864,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17863,"mutability":"mutable","name":"revertData","nameLocation":"121587:10:15","nodeType":"VariableDeclaration","scope":17866,"src":"121580:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":17862,"name":"bytes4","nodeType":"ElementaryTypeName","src":"121580:6:15","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"121579:19:15"},"returnParameters":{"id":17865,"nodeType":"ParameterList","parameters":[],"src":"121607:0:15"},"scope":18001,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17874,"nodeType":"FunctionDefinition","src":"121707:75:15","nodes":[],"documentation":{"id":17867,"nodeType":"StructuredDocumentation","src":"121614:88:15","text":"Expects an error on next call to reverter address, that starts with the revert data."},"functionSelector":"51aa008a","implemented":false,"kind":"function","modifiers":[],"name":"expectPartialRevert","nameLocation":"121716:19:15","parameters":{"id":17872,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17869,"mutability":"mutable","name":"revertData","nameLocation":"121743:10:15","nodeType":"VariableDeclaration","scope":17874,"src":"121736:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":17868,"name":"bytes4","nodeType":"ElementaryTypeName","src":"121736:6:15","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"},{"constant":false,"id":17871,"mutability":"mutable","name":"reverter","nameLocation":"121763:8:15","nodeType":"VariableDeclaration","scope":17874,"src":"121755:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":17870,"name":"address","nodeType":"ElementaryTypeName","src":"121755:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"121735:37:15"},"returnParameters":{"id":17873,"nodeType":"ParameterList","parameters":[],"src":"121781:0:15"},"scope":18001,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17878,"nodeType":"FunctionDefinition","src":"121848:33:15","nodes":[],"documentation":{"id":17875,"nodeType":"StructuredDocumentation","src":"121788:55:15","text":"Expects an error on next call with any revert data."},"functionSelector":"f4844814","implemented":false,"kind":"function","modifiers":[],"name":"expectRevert","nameLocation":"121857:12:15","parameters":{"id":17876,"nodeType":"ParameterList","parameters":[],"src":"121869:2:15"},"returnParameters":{"id":17877,"nodeType":"ParameterList","parameters":[],"src":"121880:0:15"},"scope":18001,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17884,"nodeType":"FunctionDefinition","src":"121963:50:15","nodes":[],"documentation":{"id":17879,"nodeType":"StructuredDocumentation","src":"121887:71:15","text":"Expects an error on next call that exactly matches the revert data."},"functionSelector":"c31eb0e0","implemented":false,"kind":"function","modifiers":[],"name":"expectRevert","nameLocation":"121972:12:15","parameters":{"id":17882,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17881,"mutability":"mutable","name":"revertData","nameLocation":"121992:10:15","nodeType":"VariableDeclaration","scope":17884,"src":"121985:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":17880,"name":"bytes4","nodeType":"ElementaryTypeName","src":"121985:6:15","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"121984:19:15"},"returnParameters":{"id":17883,"nodeType":"ParameterList","parameters":[],"src":"122012:0:15"},"scope":18001,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17894,"nodeType":"FunctionDefinition","src":"122141:82:15","nodes":[],"documentation":{"id":17885,"nodeType":"StructuredDocumentation","src":"122019:117:15","text":"Expects a `count` number of reverts from the upcoming calls from the reverter address that match the revert data."},"functionSelector":"b0762d73","implemented":false,"kind":"function","modifiers":[],"name":"expectRevert","nameLocation":"122150:12:15","parameters":{"id":17892,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17887,"mutability":"mutable","name":"revertData","nameLocation":"122170:10:15","nodeType":"VariableDeclaration","scope":17894,"src":"122163:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":17886,"name":"bytes4","nodeType":"ElementaryTypeName","src":"122163:6:15","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"},{"constant":false,"id":17889,"mutability":"mutable","name":"reverter","nameLocation":"122190:8:15","nodeType":"VariableDeclaration","scope":17894,"src":"122182:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":17888,"name":"address","nodeType":"ElementaryTypeName","src":"122182:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":17891,"mutability":"mutable","name":"count","nameLocation":"122207:5:15","nodeType":"VariableDeclaration","scope":17894,"src":"122200:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":17890,"name":"uint64","nodeType":"ElementaryTypeName","src":"122200:6:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"122162:51:15"},"returnParameters":{"id":17893,"nodeType":"ParameterList","parameters":[],"src":"122222:0:15"},"scope":18001,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17904,"nodeType":"FunctionDefinition","src":"122359:90:15","nodes":[],"documentation":{"id":17895,"nodeType":"StructuredDocumentation","src":"122229:125:15","text":"Expects a `count` number of reverts from the upcoming calls from the reverter address that exactly match the revert data."},"functionSelector":"d345fb1f","implemented":false,"kind":"function","modifiers":[],"name":"expectRevert","nameLocation":"122368:12:15","parameters":{"id":17902,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17897,"mutability":"mutable","name":"revertData","nameLocation":"122396:10:15","nodeType":"VariableDeclaration","scope":17904,"src":"122381:25:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":17896,"name":"bytes","nodeType":"ElementaryTypeName","src":"122381:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":17899,"mutability":"mutable","name":"reverter","nameLocation":"122416:8:15","nodeType":"VariableDeclaration","scope":17904,"src":"122408:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":17898,"name":"address","nodeType":"ElementaryTypeName","src":"122408:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":17901,"mutability":"mutable","name":"count","nameLocation":"122433:5:15","nodeType":"VariableDeclaration","scope":17904,"src":"122426:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":17900,"name":"uint64","nodeType":"ElementaryTypeName","src":"122426:6:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"122380:59:15"},"returnParameters":{"id":17903,"nodeType":"ParameterList","parameters":[],"src":"122448:0:15"},"scope":18001,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17910,"nodeType":"FunctionDefinition","src":"122531:58:15","nodes":[],"documentation":{"id":17905,"nodeType":"StructuredDocumentation","src":"122455:71:15","text":"Expects an error on next call that exactly matches the revert data."},"functionSelector":"f28dceb3","implemented":false,"kind":"function","modifiers":[],"name":"expectRevert","nameLocation":"122540:12:15","parameters":{"id":17908,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17907,"mutability":"mutable","name":"revertData","nameLocation":"122568:10:15","nodeType":"VariableDeclaration","scope":17910,"src":"122553:25:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":17906,"name":"bytes","nodeType":"ElementaryTypeName","src":"122553:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"122552:27:15"},"returnParameters":{"id":17909,"nodeType":"ParameterList","parameters":[],"src":"122588:0:15"},"scope":18001,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17916,"nodeType":"FunctionDefinition","src":"122675:49:15","nodes":[],"documentation":{"id":17911,"nodeType":"StructuredDocumentation","src":"122595:75:15","text":"Expects an error with any revert data on next call to reverter address."},"functionSelector":"d814f38a","implemented":false,"kind":"function","modifiers":[],"name":"expectRevert","nameLocation":"122684:12:15","parameters":{"id":17914,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17913,"mutability":"mutable","name":"reverter","nameLocation":"122705:8:15","nodeType":"VariableDeclaration","scope":17916,"src":"122697:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":17912,"name":"address","nodeType":"ElementaryTypeName","src":"122697:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"122696:18:15"},"returnParameters":{"id":17915,"nodeType":"ParameterList","parameters":[],"src":"122723:0:15"},"scope":18001,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17924,"nodeType":"FunctionDefinition","src":"122813:68:15","nodes":[],"documentation":{"id":17917,"nodeType":"StructuredDocumentation","src":"122730:78:15","text":"Expects an error from reverter address on next call, with any revert data."},"functionSelector":"260bc5de","implemented":false,"kind":"function","modifiers":[],"name":"expectRevert","nameLocation":"122822:12:15","parameters":{"id":17922,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17919,"mutability":"mutable","name":"revertData","nameLocation":"122842:10:15","nodeType":"VariableDeclaration","scope":17924,"src":"122835:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":17918,"name":"bytes4","nodeType":"ElementaryTypeName","src":"122835:6:15","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"},{"constant":false,"id":17921,"mutability":"mutable","name":"reverter","nameLocation":"122862:8:15","nodeType":"VariableDeclaration","scope":17924,"src":"122854:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":17920,"name":"address","nodeType":"ElementaryTypeName","src":"122854:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"122834:37:15"},"returnParameters":{"id":17923,"nodeType":"ParameterList","parameters":[],"src":"122880:0:15"},"scope":18001,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17932,"nodeType":"FunctionDefinition","src":"122986:76:15","nodes":[],"documentation":{"id":17925,"nodeType":"StructuredDocumentation","src":"122887:94:15","text":"Expects an error from reverter address on next call, that exactly matches the revert data."},"functionSelector":"61ebcf12","implemented":false,"kind":"function","modifiers":[],"name":"expectRevert","nameLocation":"122995:12:15","parameters":{"id":17930,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17927,"mutability":"mutable","name":"revertData","nameLocation":"123023:10:15","nodeType":"VariableDeclaration","scope":17932,"src":"123008:25:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":17926,"name":"bytes","nodeType":"ElementaryTypeName","src":"123008:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":17929,"mutability":"mutable","name":"reverter","nameLocation":"123043:8:15","nodeType":"VariableDeclaration","scope":17932,"src":"123035:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":17928,"name":"address","nodeType":"ElementaryTypeName","src":"123035:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"123007:45:15"},"returnParameters":{"id":17931,"nodeType":"ParameterList","parameters":[],"src":"123061:0:15"},"scope":18001,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17938,"nodeType":"FunctionDefinition","src":"123170:45:15","nodes":[],"documentation":{"id":17933,"nodeType":"StructuredDocumentation","src":"123068:97:15","text":"Expects a `count` number of reverts from the upcoming calls with any revert data or reverter."},"functionSelector":"4ee38244","implemented":false,"kind":"function","modifiers":[],"name":"expectRevert","nameLocation":"123179:12:15","parameters":{"id":17936,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17935,"mutability":"mutable","name":"count","nameLocation":"123199:5:15","nodeType":"VariableDeclaration","scope":17938,"src":"123192:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":17934,"name":"uint64","nodeType":"ElementaryTypeName","src":"123192:6:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"123191:14:15"},"returnParameters":{"id":17937,"nodeType":"ParameterList","parameters":[],"src":"123214:0:15"},"scope":18001,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17946,"nodeType":"FunctionDefinition","src":"123317:64:15","nodes":[],"documentation":{"id":17939,"nodeType":"StructuredDocumentation","src":"123221:91:15","text":"Expects a `count` number of reverts from the upcoming calls that match the revert data."},"functionSelector":"e45ca72d","implemented":false,"kind":"function","modifiers":[],"name":"expectRevert","nameLocation":"123326:12:15","parameters":{"id":17944,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17941,"mutability":"mutable","name":"revertData","nameLocation":"123346:10:15","nodeType":"VariableDeclaration","scope":17946,"src":"123339:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":17940,"name":"bytes4","nodeType":"ElementaryTypeName","src":"123339:6:15","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"},{"constant":false,"id":17943,"mutability":"mutable","name":"count","nameLocation":"123365:5:15","nodeType":"VariableDeclaration","scope":17946,"src":"123358:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":17942,"name":"uint64","nodeType":"ElementaryTypeName","src":"123358:6:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"123338:33:15"},"returnParameters":{"id":17945,"nodeType":"ParameterList","parameters":[],"src":"123380:0:15"},"scope":18001,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17954,"nodeType":"FunctionDefinition","src":"123491:72:15","nodes":[],"documentation":{"id":17947,"nodeType":"StructuredDocumentation","src":"123387:99:15","text":"Expects a `count` number of reverts from the upcoming calls that exactly match the revert data."},"functionSelector":"4994c273","implemented":false,"kind":"function","modifiers":[],"name":"expectRevert","nameLocation":"123500:12:15","parameters":{"id":17952,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17949,"mutability":"mutable","name":"revertData","nameLocation":"123528:10:15","nodeType":"VariableDeclaration","scope":17954,"src":"123513:25:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":17948,"name":"bytes","nodeType":"ElementaryTypeName","src":"123513:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":17951,"mutability":"mutable","name":"count","nameLocation":"123547:5:15","nodeType":"VariableDeclaration","scope":17954,"src":"123540:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":17950,"name":"uint64","nodeType":"ElementaryTypeName","src":"123540:6:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"123512:41:15"},"returnParameters":{"id":17953,"nodeType":"ParameterList","parameters":[],"src":"123562:0:15"},"scope":18001,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17962,"nodeType":"FunctionDefinition","src":"123664:63:15","nodes":[],"documentation":{"id":17955,"nodeType":"StructuredDocumentation","src":"123569:90:15","text":"Expects a `count` number of reverts from the upcoming calls from the reverter address."},"functionSelector":"1ff5f952","implemented":false,"kind":"function","modifiers":[],"name":"expectRevert","nameLocation":"123673:12:15","parameters":{"id":17960,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17957,"mutability":"mutable","name":"reverter","nameLocation":"123694:8:15","nodeType":"VariableDeclaration","scope":17962,"src":"123686:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":17956,"name":"address","nodeType":"ElementaryTypeName","src":"123686:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":17959,"mutability":"mutable","name":"count","nameLocation":"123711:5:15","nodeType":"VariableDeclaration","scope":17962,"src":"123704:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":17958,"name":"uint64","nodeType":"ElementaryTypeName","src":"123704:6:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"123685:32:15"},"returnParameters":{"id":17961,"nodeType":"ParameterList","parameters":[],"src":"123726:0:15"},"scope":18001,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17970,"nodeType":"FunctionDefinition","src":"123956:59:15","nodes":[],"documentation":{"id":17963,"nodeType":"StructuredDocumentation","src":"123733:218:15","text":"Only allows memory writes to offsets [0x00, 0x60) ∪ [min, max) in the current subcontext. If any other\n memory is written to, the test will fail. Can be called multiple times to add more ranges to the set."},"functionSelector":"6d016688","implemented":false,"kind":"function","modifiers":[],"name":"expectSafeMemory","nameLocation":"123965:16:15","parameters":{"id":17968,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17965,"mutability":"mutable","name":"min","nameLocation":"123989:3:15","nodeType":"VariableDeclaration","scope":17970,"src":"123982:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":17964,"name":"uint64","nodeType":"ElementaryTypeName","src":"123982:6:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":17967,"mutability":"mutable","name":"max","nameLocation":"124001:3:15","nodeType":"VariableDeclaration","scope":17970,"src":"123994:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":17966,"name":"uint64","nodeType":"ElementaryTypeName","src":"123994:6:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"123981:24:15"},"returnParameters":{"id":17969,"nodeType":"ParameterList","parameters":[],"src":"124014:0:15"},"scope":18001,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17978,"nodeType":"FunctionDefinition","src":"124257:63:15","nodes":[],"documentation":{"id":17971,"nodeType":"StructuredDocumentation","src":"124021:231:15","text":"Only allows memory writes to offsets [0x00, 0x60) ∪ [min, max) in the next created subcontext.\n If any other memory is written to, the test will fail. Can be called multiple times to add more ranges\n to the set."},"functionSelector":"05838bf4","implemented":false,"kind":"function","modifiers":[],"name":"expectSafeMemoryCall","nameLocation":"124266:20:15","parameters":{"id":17976,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17973,"mutability":"mutable","name":"min","nameLocation":"124294:3:15","nodeType":"VariableDeclaration","scope":17978,"src":"124287:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":17972,"name":"uint64","nodeType":"ElementaryTypeName","src":"124287:6:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":17975,"mutability":"mutable","name":"max","nameLocation":"124306:3:15","nodeType":"VariableDeclaration","scope":17978,"src":"124299:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":17974,"name":"uint64","nodeType":"ElementaryTypeName","src":"124299:6:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"124286:24:15"},"returnParameters":{"id":17977,"nodeType":"ParameterList","parameters":[],"src":"124319:0:15"},"scope":18001,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17984,"nodeType":"FunctionDefinition","src":"124402:38:15","nodes":[],"documentation":{"id":17979,"nodeType":"StructuredDocumentation","src":"124326:71:15","text":"Marks a test as skipped. Must be called at the top level of a test."},"functionSelector":"dd82d13e","implemented":false,"kind":"function","modifiers":[],"name":"skip","nameLocation":"124411:4:15","parameters":{"id":17982,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17981,"mutability":"mutable","name":"skipTest","nameLocation":"124421:8:15","nodeType":"VariableDeclaration","scope":17984,"src":"124416:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":17980,"name":"bool","nodeType":"ElementaryTypeName","src":"124416:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"124415:15:15"},"returnParameters":{"id":17983,"nodeType":"ParameterList","parameters":[],"src":"124439:0:15"},"scope":18001,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17992,"nodeType":"FunctionDefinition","src":"124536:62:15","nodes":[],"documentation":{"id":17985,"nodeType":"StructuredDocumentation","src":"124446:85:15","text":"Marks a test as skipped with a reason. Must be called at the top level of a test."},"functionSelector":"c42a80a7","implemented":false,"kind":"function","modifiers":[],"name":"skip","nameLocation":"124545:4:15","parameters":{"id":17990,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17987,"mutability":"mutable","name":"skipTest","nameLocation":"124555:8:15","nodeType":"VariableDeclaration","scope":17992,"src":"124550:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":17986,"name":"bool","nodeType":"ElementaryTypeName","src":"124550:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":17989,"mutability":"mutable","name":"reason","nameLocation":"124581:6:15","nodeType":"VariableDeclaration","scope":17992,"src":"124565:22:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17988,"name":"string","nodeType":"ElementaryTypeName","src":"124565:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"124549:39:15"},"returnParameters":{"id":17991,"nodeType":"ParameterList","parameters":[],"src":"124597:0:15"},"scope":18001,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17996,"nodeType":"FunctionDefinition","src":"124673:41:15","nodes":[],"documentation":{"id":17993,"nodeType":"StructuredDocumentation","src":"124604:64:15","text":"Stops all safe memory expectation in the current subcontext."},"functionSelector":"0956441b","implemented":false,"kind":"function","modifiers":[],"name":"stopExpectSafeMemory","nameLocation":"124682:20:15","parameters":{"id":17994,"nodeType":"ParameterList","parameters":[],"src":"124702:2:15"},"returnParameters":{"id":17995,"nodeType":"ParameterList","parameters":[],"src":"124713:0:15"},"scope":18001,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":18000,"nodeType":"FunctionDefinition","src":"125202:38:15","nodes":[],"documentation":{"id":17997,"nodeType":"StructuredDocumentation","src":"124756:441:15","text":"Causes the next contract creation (via new) to fail and return its initcode in the returndata buffer.\n This allows type-safe access to the initcode payload that would be used for contract creation.\n Example usage:\n vm.interceptInitcode();\n bytes memory initcode;\n try new MyContract(param1, param2) { assert(false); }\n catch (bytes memory interceptedInitcode) { initcode = interceptedInitcode; }"},"functionSelector":"838653c7","implemented":false,"kind":"function","modifiers":[],"name":"interceptInitcode","nameLocation":"125211:17:15","parameters":{"id":17998,"nodeType":"ParameterList","parameters":[],"src":"125228:2:15"},"returnParameters":{"id":17999,"nodeType":"ParameterList","parameters":[],"src":"125239:0:15"},"scope":18001,"stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"abstract":false,"baseContracts":[{"baseName":{"id":16932,"name":"VmSafe","nameLocations":["98671:6:15"],"nodeType":"IdentifierPath","referencedDeclaration":16930,"src":"98671:6:15"},"id":16933,"nodeType":"InheritanceSpecifier","src":"98671:6:15"}],"canonicalName":"Vm","contractDependencies":[],"contractKind":"interface","documentation":{"id":16931,"nodeType":"StructuredDocumentation","src":"98484:171:15","text":"The `Vm` interface does allow manipulation of the EVM state. These are all intended to be used\n in tests, but it is not recommended to use these cheats in scripts."},"fullyImplemented":false,"linearizedBaseContracts":[18001,16930],"name":"Vm","nameLocation":"98665:2:15","scope":18002,"usedErrors":[],"usedEvents":[]}],"license":"MIT OR Apache-2.0"},"id":15}