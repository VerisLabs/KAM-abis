{"abi":[{"type":"function","name":"registry","inputs":[],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"rescueAssets","inputs":[{"name":"asset_","type":"address","internalType":"address"},{"name":"to_","type":"address","internalType":"address"},{"name":"amount_","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"payable"},{"type":"function","name":"setPaused","inputs":[{"name":"paused_","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"event","name":"Paused","inputs":[{"name":"paused_","type":"bool","indexed":false,"internalType":"bool"}],"anonymous":false},{"type":"event","name":"RescuedAssets","inputs":[{"name":"asset_","type":"address","indexed":true,"internalType":"address"},{"name":"to_","type":"address","indexed":true,"internalType":"address"},{"name":"amount_","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"RescuedETH","inputs":[{"name":"to_","type":"address","indexed":true,"internalType":"address"},{"name":"amount_","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"error","name":"Reentrancy","inputs":[]}],"bytecode":{"object":"0x60808060405234601557610876908161001a8239f35b5f80fdfe60806040526004361015610011575f80fd5b5f3560e01c806316c38b3c146104e15780637b1039991461048b5763d01b5de41461003a575f80fd5b60607ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126104875760043573ffffffffffffffffffffffffffffffffffffffff811690818103610487576024359173ffffffffffffffffffffffffffffffffffffffff83169283810361048757604435916024602073ffffffffffffffffffffffffffffffffffffffff6100ce6107fa565b16604051928380927f24d7806c0000000000000000000000000000000000000000000000000000000082523360048301525afa801561047c57610121915f9161045d575b5061011b6106b2565b906106ed565b60409361016585516101338782610671565b600281527f4b3500000000000000000000000000000000000000000000000000000000000060208201528715156106ed565b816102ad5750505f8080848194811515806102a3575b6101879061011b6107a7565b5af1903d15610276573d9267ffffffffffffffff84116102495761024260209385857fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f7f63b8c8e180bc85c19daef23e2bb787fb49672d3a9ecde24409c18ccb1accb5d199011601906101fe85519283610671565b81525f863d92013e5b8251906102148483610671565b600282527f4b37000000000000000000000000000000000000000000000000000000000000868301526106ed565b51908152a2005b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b7f63b8c8e180bc85c19daef23e2bb787fb49672d3a9ecde24409c18ccb1accb5d192610242602093610207565b504782111561017b565b9093916024602073ffffffffffffffffffffffffffffffffffffffff6102d16107fa565b168551928380927fc87fa42a0000000000000000000000000000000000000000000000000000000082528a60048301525afa9081156104535790610354915f91610424575b508451906103248683610671565b600282527f4b380000000000000000000000000000000000000000000000000000000000006020830152156106ed565b831515806103ec575b6103699061011b6107a7565b601452826034526fa9059cbb0000000000000000000000005f5260205f6044601082855af1908160015f511416156103ce575b50507f552c8f8dc30f2786e14004d98595afcc1c0ea1f552b86e86f64a2da74761eaab916020915f60345251908152a3005b3b153d1710156103df575f8061039c565b6390b8ec185f526004601cfd5b50306014526f70a082310000000000000000000000005f5261036960208060246010865afa601f3d111660205102851115905061035d565b610446915060203d60201161044c575b61043e8183610671565b8101906107e2565b5f610316565b503d610434565b84513d5f823e3d90fd5b610476915060203d60201161044c5761043e8183610671565b5f610112565b6040513d5f823e3d90fd5b5f80fd5b34610487575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261048757602073ffffffffffffffffffffffffffffffffffffffff6104d86107fa565b16604051908152f35b346104875760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126104875760043580151580910361048757602490602073ffffffffffffffffffffffffffffffffffffffff61053f6107fa565b16604051938480927f2500f2b60000000000000000000000000000000000000000000000000000000082523360048301525afa90811561047c576105b06020927f0e2fb031ee032dc02d8011dc50b816eb450cf856abd8261680dac74f72165bd2945f91610654575061011b6106b2565b7fe91688684975c4d7d54a65dd96da5d4dcbb54b8971c046d5351d3c111e43a800546105e96105dd61076c565b60ff8360a01c166106ed565b7fffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffffff75ff0000000000000000000000000000000000000000008360a81b169116177fe91688684975c4d7d54a65dd96da5d4dcbb54b8971c046d5351d3c111e43a80055604051908152a1005b61066b9150843d861161044c5761043e8183610671565b85610112565b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff82111761024957604052565b604051906106c1604083610671565b600282527f4b340000000000000000000000000000000000000000000000000000000000006020830152565b156106f55750565b60446020917fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f6040519485937f08c379a00000000000000000000000000000000000000000000000000000000085528160048601528051918291826024880152018686015e5f85828601015201168101030190fd5b6040519061077b604083610671565b600282527f4b330000000000000000000000000000000000000000000000000000000000006020830152565b604051906107b6604083610671565b600282527f4b360000000000000000000000000000000000000000000000000000000000006020830152565b90816020910312610487575180151581036104875790565b73ffffffffffffffffffffffffffffffffffffffff7fe91688684975c4d7d54a65dd96da5d4dcbb54b8971c046d5351d3c111e43a8005461083c6105dd61076c565b169056fea264697066735822122097dbac49be1803afa633df3adc4197d65f9a658f857c796249bb48512070c93864736f6c634300081e0033","sourceMap":"2133:19609:37:-:0;;;;;;;;;;;;;;;;;","linkReferences":{}},"deployedBytecode":{"object":"0x60806040526004361015610011575f80fd5b5f3560e01c806316c38b3c146104e15780637b1039991461048b5763d01b5de41461003a575f80fd5b60607ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126104875760043573ffffffffffffffffffffffffffffffffffffffff811690818103610487576024359173ffffffffffffffffffffffffffffffffffffffff83169283810361048757604435916024602073ffffffffffffffffffffffffffffffffffffffff6100ce6107fa565b16604051928380927f24d7806c0000000000000000000000000000000000000000000000000000000082523360048301525afa801561047c57610121915f9161045d575b5061011b6106b2565b906106ed565b60409361016585516101338782610671565b600281527f4b3500000000000000000000000000000000000000000000000000000000000060208201528715156106ed565b816102ad5750505f8080848194811515806102a3575b6101879061011b6107a7565b5af1903d15610276573d9267ffffffffffffffff84116102495761024260209385857fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f7f63b8c8e180bc85c19daef23e2bb787fb49672d3a9ecde24409c18ccb1accb5d199011601906101fe85519283610671565b81525f863d92013e5b8251906102148483610671565b600282527f4b37000000000000000000000000000000000000000000000000000000000000868301526106ed565b51908152a2005b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b7f63b8c8e180bc85c19daef23e2bb787fb49672d3a9ecde24409c18ccb1accb5d192610242602093610207565b504782111561017b565b9093916024602073ffffffffffffffffffffffffffffffffffffffff6102d16107fa565b168551928380927fc87fa42a0000000000000000000000000000000000000000000000000000000082528a60048301525afa9081156104535790610354915f91610424575b508451906103248683610671565b600282527f4b380000000000000000000000000000000000000000000000000000000000006020830152156106ed565b831515806103ec575b6103699061011b6107a7565b601452826034526fa9059cbb0000000000000000000000005f5260205f6044601082855af1908160015f511416156103ce575b50507f552c8f8dc30f2786e14004d98595afcc1c0ea1f552b86e86f64a2da74761eaab916020915f60345251908152a3005b3b153d1710156103df575f8061039c565b6390b8ec185f526004601cfd5b50306014526f70a082310000000000000000000000005f5261036960208060246010865afa601f3d111660205102851115905061035d565b610446915060203d60201161044c575b61043e8183610671565b8101906107e2565b5f610316565b503d610434565b84513d5f823e3d90fd5b610476915060203d60201161044c5761043e8183610671565b5f610112565b6040513d5f823e3d90fd5b5f80fd5b34610487575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261048757602073ffffffffffffffffffffffffffffffffffffffff6104d86107fa565b16604051908152f35b346104875760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126104875760043580151580910361048757602490602073ffffffffffffffffffffffffffffffffffffffff61053f6107fa565b16604051938480927f2500f2b60000000000000000000000000000000000000000000000000000000082523360048301525afa90811561047c576105b06020927f0e2fb031ee032dc02d8011dc50b816eb450cf856abd8261680dac74f72165bd2945f91610654575061011b6106b2565b7fe91688684975c4d7d54a65dd96da5d4dcbb54b8971c046d5351d3c111e43a800546105e96105dd61076c565b60ff8360a01c166106ed565b7fffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffffff75ff0000000000000000000000000000000000000000008360a81b169116177fe91688684975c4d7d54a65dd96da5d4dcbb54b8971c046d5351d3c111e43a80055604051908152a1005b61066b9150843d861161044c5761043e8183610671565b85610112565b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff82111761024957604052565b604051906106c1604083610671565b600282527f4b340000000000000000000000000000000000000000000000000000000000006020830152565b156106f55750565b60446020917fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f6040519485937f08c379a00000000000000000000000000000000000000000000000000000000085528160048601528051918291826024880152018686015e5f85828601015201168101030190fd5b6040519061077b604083610671565b600282527f4b330000000000000000000000000000000000000000000000000000000000006020830152565b604051906107b6604083610671565b600282527f4b360000000000000000000000000000000000000000000000000000000000006020830152565b90816020910312610487575180151581036104875790565b73ffffffffffffffffffffffffffffffffffffffff7fe91688684975c4d7d54a65dd96da5d4dcbb54b8971c046d5351d3c111e43a8005461083c6105dd61076c565b169056fea264697066735822122097dbac49be1803afa633df3adc4197d65f9a658f857c796249bb48512070c93864736f6c634300081e0033","sourceMap":"2133:19609:37:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17697:11;2133:19609;;;17697:11;;:::i;:::-;2133:19609;;;17697:25;;;;2133:19609;17697:25;;12408:10;2133:19609;17697:25;;2133:19609;17697:25;;;;;;12391:47;17697:25;2133:19609;17697:25;;;2133:19609;;;;:::i;:::-;12391:47;;:::i;:::-;2133:19609;;12448:46;2133:19609;;;;;;:::i;:::-;;;;;;;;;12456:17;;;12448:46;:::i;:::-;12509:20;2133:19609;;12579:11;;2133:19609;12579:11;;;;;;;;:47;;;12505:624;12571:75;3562:4:39;;;:::i;12571:75:37:-;12679:30;;;3474:4:39;;;;;2133:19609:37;;;;;;12723:39;2133:19609;;;;;;12782:24;2133:19609;;;;;;;;;;;:::i;:::-;;;;3474:4:39;;;;;;2133:19609:37;;;;;;;:::i;:::-;;;;3474:4:39;;;;;12723:39:37;:::i;:::-;2133:19609;3474:4:39;;;12782:24:37;2133:19609;;;;;;;;;;;3474:4:39;12782:24:37;3474:4:39;12723:39:37;2133:19609;3474:4:39;;;12579:47:37;-1:-1:-1;12605:21:37;12594:32;;;12579:47;;12505:624;21707:11;;;2133:19609;;;21707:11;;:::i;:::-;2133:19609;;;21707:26;;;;2133:19609;21707:26;;;2133:19609;21707:26;;2133:19609;21707:26;;;;;;;;12872:45;21707:26;2133:19609;21707:26;;;12505:624;2133:19609;;;;;;;;:::i;:::-;;;;3432:4:39;2133:19609:37;3432:4:39;;;12880:17:37;12872:45;:::i;:::-;12939:11;;;:57;;;12505:624;12931:85;3562:4:39;;;:::i;12931:85:37:-;13320:758:84;;;;;;2133:19609:37;13320:758:84;2133:19609:37;;;13320:758:84;;;;;;;2133:19609:37;;13320:758:84;;;;;;12505:624:37;13320:758:84;;13083:35:37;13320:758:84;2133:19609:37;13320:758:84;2133:19609:37;13320:758:84;;2133:19609:37;3474:4:39;;;13083:35:37;2133:19609;13320:758:84;;;;;;;;;;;;;;;2133:19609:37;13320:758:84;2133:19609:37;13320:758:84;;12939:57:37;12990:4;;19016:590:84;;;2133:19609:37;19016:590:84;12931:85:37;2133:19609;19016:590:84;2133:19609:37;19016:590:84;;;;;;;;2133:19609:37;19016:590:84;;12954:42:37;;;12939:57;;;;21707:26;;;;2133:19609;21707:26;2133:19609;21707:26;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;2133:19609;;;;;;;;;17697:25;;;;2133:19609;17697:25;2133:19609;17697:25;;;;;;;:::i;:::-;;;;;2133:19609;;;;;;;;;;;;;;;;;;;;;;;;;;13550:11;;:::i;:::-;2133:19609;;;;;;;;;;;;;;;;;;;;;;;;;;;;18296:34;:11;2133:19609;;18296:11;;:::i;:::-;2133:19609;;;18296:34;;;;2133:19609;18296:34;;10789:10;2133:19609;18296:34;;2133:19609;18296:34;;;;;;;10763:56;2133:19609;18296:34;10969:15;18296:34;2133:19609;18296:34;;;2133:19609;;;:::i;10763:56::-;7927:65;3389:4:39;10881:45:37;3389:4:39;;:::i;:::-;;;;;;10881:45:37;:::i;:::-;3348:4:39;;;;;;;;;7927:65:37;3348:4:39;2133:19609:37;;3348:4:39;;;10969:15:37;2133:19609;18296:34;;;;;;;;;;;;;;:::i;:::-;;;;2133:19609;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;:::i;:::-;;;;;;;;;:::o;3389:4:39:-;;;;;:::o;:::-;;;2133:19609:37;;;;;3389:4:39;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3389:4:39;;;;;;2133:19609:37;;3389:4:39;;;;;;;2133:19609:37;;;;;;;:::i;:::-;3389:4:39;2133:19609:37;;3389:4:39;;;;;:::o;3562:::-;2133:19609:37;;;;;;;:::i;:::-;3562:4:39;2133:19609:37;;3562:4:39;;;;;:::o;2133:19609:37:-;;;;;;;;;;;;;;;;;;:::o;13747:207::-;2133:19609;7927:65;3389:4:39;13864:45:37;3389:4:39;;:::i;13864:45:37:-;2133:19609;13747:207;:::o","linkReferences":{}},"methodIdentifiers":{"registry()":"7b103999","rescueAssets(address,address,uint256)":"d01b5de4","setPaused(bool)":"16c38b3c"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"Reentrancy\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"paused_\",\"type\":\"bool\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"asset_\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to_\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount_\",\"type\":\"uint256\"}],\"name\":\"RescuedAssets\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to_\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount_\",\"type\":\"uint256\"}],\"name\":\"RescuedETH\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"registry\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to_\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount_\",\"type\":\"uint256\"}],\"name\":\"rescueAssets\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"paused_\",\"type\":\"bool\"}],\"name\":\"setPaused\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This abstract contract serves as the architectural foundation for the entire KAM protocol, establishing critical patterns and utilities that ensure consistency across all protocol components. Key responsibilities include: (1) Registry integration through a singleton pattern that enables dynamic protocol configuration and contract discovery, (2) Role-based access control validation that enforces protocol governance permissions, (3) Emergency pause functionality for protocol-wide risk mitigation during critical events, (4) Asset rescue mechanisms to recover stuck funds while protecting protocol assets, (5) Vault and asset validation to ensure only registered components interact, (6) Batch processing coordination through ID management and receiver tracking. The contract employs ERC-7201 namespaced storage to prevent storage collisions during upgrades and enable safe inheritance patterns. All inheriting contracts (kMinter, kAssetRouter, etc.) leverage these utilities to maintain protocol integrity, reduce code duplication, and ensure consistent security checks across the ecosystem. The registry serves as the single source of truth for protocol configuration, making the system highly modular and upgradeable.\",\"errors\":{\"Reentrancy()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"events\":{\"Paused(bool)\":{\"details\":\"This event signals a critical protocol state change that affects all inheriting contracts. When paused=true, protocol operations are halted to prevent potential exploits or manage emergencies. Only emergency admins can trigger this, providing rapid response capability during security incidents.\",\"params\":{\"paused_\":\"The new pause state (true = operations halted, false = normal operation)\"}},\"RescuedAssets(address,address,uint256)\":{\"details\":\"This rescue mechanism is restricted to non-protocol assets only - registered assets (USDC, WBTC, etc.) cannot be rescued to protect user funds and maintain protocol integrity. Typically used to recover accidentally sent tokens or airdrops. Only admin role can execute rescues as a security measure.\",\"params\":{\"amount_\":\"The quantity of tokens rescued (must not exceed contract balance)\",\"asset_\":\"The ERC20 token address being rescued (must not be a registered protocol asset)\",\"to_\":\"The recipient address receiving the rescued tokens (cannot be zero address)\"}},\"RescuedETH(address,uint256)\":{\"details\":\"ETH rescue is separate from ERC20 rescue due to different transfer mechanisms. This prevents ETH from being permanently locked if sent to the contract accidentally. Uses low-level call for ETH transfer with proper success checking. Only admin role authorized for security.\",\"params\":{\"amount_\":\"The quantity of ETH rescued in wei (must not exceed contract balance)\",\"to_\":\"The recipient address receiving the rescued ETH (cannot be zero address)\"}}},\"kind\":\"dev\",\"methods\":{\"registry()\":{\"details\":\"Reverts if contract not initialized\",\"returns\":{\"_0\":\"The kRegistry contract address\"}},\"rescueAssets(address,address,uint256)\":{\"details\":\"This function implements a critical safety mechanism for recovering tokens or ETH that become stuck in the contract through user error or airdrops. The rescue process: (1) Validates admin authorization to prevent unauthorized fund extraction, (2) Ensures recipient address is valid to prevent burning funds, (3) For ETH rescue (asset_=address(0)): validates balance sufficiency and uses low-level call for transfer, (4) For ERC20 rescue: critically checks the token is NOT a registered protocol asset (USDC, WBTC, etc.) to protect user deposits and protocol integrity, then validates balance and uses SafeTransferLib for secure transfer. The distinction between ETH and ERC20 handling accounts for their different transfer mechanisms. Protocol assets are explicitly blocked from rescue to prevent admin abuse and maintain user trust.\",\"params\":{\"amount_\":\"The quantity to rescue (must not exceed available balance)\",\"asset_\":\"The asset to rescue (use address(0) for native ETH, otherwise ERC20 token address)\",\"to_\":\"The recipient address that will receive the rescued assets (cannot be zero address)\"}},\"setPaused(bool)\":{\"details\":\"This function provides critical risk management capability by allowing emergency admins to halt contract operations during security incidents or market anomalies. The pause mechanism: (1) Affects all state-changing operations in inheriting contracts that check _isPaused(), (2) Does not affect view/pure functions ensuring protocol state remains readable, (3) Enables rapid response to potential exploits by halting operations protocol-wide, (4) Requires emergency admin role ensuring only authorized governance can trigger pauses. Inheriting contracts should check _isPaused() modifier in critical functions to respect the pause state. The external visibility with role check prevents unauthorized pause manipulation.\",\"params\":{\"paused_\":\"The desired pause state (true = halt operations, false = resume normal operation)\"}}},\"stateVariables\":{\"KBASE_STORAGE_LOCATION\":{\"details\":\"ERC-7201 storage location calculated as: keccak256(abi.encode(uint256(keccak256(\\\"kam.storage.kBase\\\")) - 1)) & ~bytes32(uint256(0xff)) This specific slot is chosen to avoid any possible collision with standard storage layouts while maintaining deterministic addressing. The calculation ensures the storage location is unique to this namespace and won't conflict with other inherited contracts or future upgrades. The 0xff mask ensures proper alignment.\"},\"K_ASSET_ROUTER\":{\"details\":\"This hash is used to retrieve the kAssetRouter address from the registry's contract mapping. kAssetRouter coordinates all asset movements and settlements, making it a critical dependency for vaults and other protocol components. The hash-based lookup enables dynamic upgrades.\"},\"K_MINTER\":{\"details\":\"This hash is used to retrieve the kMinter address from the registry's contract mapping. kMinter handles institutional minting/redemption flows, so many contracts need to identify it for access control and routing decisions. The hash ensures consistent lookups across the protocol.\"}},\"title\":\"kBase\",\"version\":1},\"userdoc\":{\"events\":{\"Paused(bool)\":{\"notice\":\"Emitted when the emergency pause state is toggled for protocol-wide risk mitigation\"},\"RescuedAssets(address,address,uint256)\":{\"notice\":\"Emitted when ERC20 tokens are rescued from the contract to prevent permanent loss\"},\"RescuedETH(address,uint256)\":{\"notice\":\"Emitted when native ETH is rescued from the contract to recover stuck funds\"}},\"kind\":\"user\",\"methods\":{\"registry()\":{\"notice\":\"Returns the registry contract address\"},\"rescueAssets(address,address,uint256)\":{\"notice\":\"Rescues accidentally sent assets (ETH or ERC20 tokens) preventing permanent loss of funds\"},\"setPaused(bool)\":{\"notice\":\"Toggles the emergency pause state affecting all protocol operations in this contract\"}},\"notice\":\"Foundation contract providing essential shared functionality and registry integration for all KAM protocol contracts\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/base/kBase.sol\":\"kBase\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[\":forge-std-1.9.7/=dependencies/forge-std-1.9.7/src/\",\":forge-std/=dependencies/forge-std-1.9.7/src/\",\":kam/src/=src/\",\":kam/test/=test/\",\":openzeppelin/=src/vendor/openzeppelin/\",\":solady/=src/vendor/solady/\",\":uniswap/=src/vendor/uniswap/\"],\"viaIR\":true},\"sources\":{\"src/base/kBase.sol\":{\"keccak256\":\"0x67b1fb762557bb854ade03cfca72921aaca47616f5fb8237192ee879b65b451c\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://627f2e6e5a28a8faf3e089923e75af83971b5fdbb40cc5da380a6e246130910a\",\"dweb:/ipfs/QmWVnEM1edirKqd5rAp9ZMbEcTRz51xS5Ky145JSyprYcj\"]},\"src/errors/Errors.sol\":{\"keccak256\":\"0xdcceeb9ea600c0117ebf9af4b64542e2d359b64499ec2617d6fb19aa64ab4405\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://136e7c2983fa320cc86649e02ac22d4d780da5186b1d425d10019fe9677034aa\",\"dweb:/ipfs/QmXtJS6oLzB6sEtjUNWrDCdkyFbVqRLLKenABoDP6jSC4J\"]},\"src/interfaces/IRegistry.sol\":{\"keccak256\":\"0xdd44ca8cd9a9eb3d77e16cf45be3cfec038c0dc006e336e256d6b10a4b02a2ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b792d8d18b68f2c09cda6d775e3088115494e7173410a6d2be32da92aff1b582\",\"dweb:/ipfs/QmfY789VP8gECbRM7BZCpeMH63oHuxCczQ5tW5wStYxHYA\"]},\"src/interfaces/IVault.sol\":{\"keccak256\":\"0x92198758abccb112805b592f2f4024731d92b6a02c93fc7f9e28bc9ee6ee3290\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://82c99cb665ce971c4f83050867a6ed0f79117adbb999cef70a9f6b5c099b604e\",\"dweb:/ipfs/QmRsMEPE5UZKQgrjsWcGjFQFipgxXdmnmP9raRqHbBiWWX\"]},\"src/interfaces/IVaultBatch.sol\":{\"keccak256\":\"0x0a44fd2302ad59ec16ad67be0afcb63aaf96d105469512acd7161304cc1c85f2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f330dd9284c50c75dea5b132a549fac4f3baf107cdaa4a21374af8435cbf45c9\",\"dweb:/ipfs/QmRBbusrsoEM7VYjtEKXphnzE6RFkFoLhU2iNRwTDZuXTp\"]},\"src/interfaces/IVaultClaim.sol\":{\"keccak256\":\"0xbc8653ba55535db7f9f97636eefbaac39aee5940358b8dbf374c6dd49029cf90\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3fe53e06a6eeb51f74856ef36061939830f4bd36cac7cea57797d251aa8958b0\",\"dweb:/ipfs/Qmbsd3B9CFBdGhdtMnycY85CKFx9mfqQN2ML6quGZiP8Zk\"]},\"src/interfaces/IVaultFees.sol\":{\"keccak256\":\"0xbfebf7c01dbd77a63faa22c8e021bc4e94145183819cf473f4612bc54e4f4b62\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3324d221494afeb37042dcb27b769a8ce0efc9c444768f6cef3e32cfdc3c77ad\",\"dweb:/ipfs/QmcYkbpi88q9oWBB7cmhfyXb6BonVskBVuTveGFaYZ6Nj8\"]},\"src/interfaces/IVersioned.sol\":{\"keccak256\":\"0x23e7a218ecbf42e18656d069ee25302c74c5027d1dcfa4e1b9c54501d76a72f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2e2643eaf8cc8f8bc04dd90c6cbf5c1429de314dc85e93c254b1deae782af6eb\",\"dweb:/ipfs/Qmb4s6G5PNFLy6iANEqHvanKZ3Tu1ahfW5V9ppWCxKTiDD\"]},\"src/interfaces/IkStakingVault.sol\":{\"keccak256\":\"0x49cc9d533e84e0c79ebc4b2c9a7c98ef237e80b7c8c5e9b2316086f4a39f08ac\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6fceb775fcad58c3e632d021bc619cc5ca820dd908e148adcf0016724991c58\",\"dweb:/ipfs/QmcSJPz3MpQfobNrXKg1FL8PMucUHtuWvcDCdbYwiUuH8i\"]},\"src/interfaces/modules/IVaultReader.sol\":{\"keccak256\":\"0xa687ce1a536cb890fea7462f4ac2ecc012d3531987539d00fc3240c19ffacca6\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://b5099978a9e2b5ec2791cc2dc669055da7405918034b2feda4c49c0851f43e32\",\"dweb:/ipfs/QmYkzk43kRSZzxDf2phdAWFguyb32MKFyfaGMhAbEQhDiz\"]},\"src/kStakingVault/types/BaseVaultTypes.sol\":{\"keccak256\":\"0xa6dfda9ab80c6bca9613c989fb5863c81062f8378dc22c0433ca3464ba26d4b1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41dd89e20036e001eb0388e89c94e1e6c71df8f9b6155a236e0886f788e7f3ca\",\"dweb:/ipfs/QmRkAwRBoB9yHLAdvNAy5geVu5tXDWzFKfmf5eDDECrf4T\"]},\"src/vendor/solady/utils/OptimizedReentrancyGuardTransient.sol\":{\"keccak256\":\"0x6d344a1effc6dd422ff702099726855049731500329905b9eb5e2d07e6561f3e\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://642463c4fee06bc59026888aba9b7948886009b50465becaa6a010318f0615bd\",\"dweb:/ipfs/QmcMBCjLmK8X7XTRr4CTvi1CRyeqqryGEPmfeko5UFb4Z4\"]},\"src/vendor/solady/utils/SafeTransferLib.sol\":{\"keccak256\":\"0x5064408494b8a99ea5fc272191115daf7b2b58fdd1598bf1e50b2651757b3d55\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://86449d6802a5749f0e6e0b4b89f935421982bd4fdb2b4171af90cc5eba34eb81\",\"dweb:/ipfs/QmbFzHnVm8eNRYJ8czGwbjFrHhL3Mk8QVbHgQu67LiRqYD\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.30+commit.73712a01"},"language":"Solidity","output":{"abi":[{"inputs":[],"type":"error","name":"Reentrancy"},{"inputs":[{"internalType":"bool","name":"paused_","type":"bool","indexed":false}],"type":"event","name":"Paused","anonymous":false},{"inputs":[{"internalType":"address","name":"asset_","type":"address","indexed":true},{"internalType":"address","name":"to_","type":"address","indexed":true},{"internalType":"uint256","name":"amount_","type":"uint256","indexed":false}],"type":"event","name":"RescuedAssets","anonymous":false},{"inputs":[{"internalType":"address","name":"to_","type":"address","indexed":true},{"internalType":"uint256","name":"amount_","type":"uint256","indexed":false}],"type":"event","name":"RescuedETH","anonymous":false},{"inputs":[],"stateMutability":"view","type":"function","name":"registry","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[{"internalType":"address","name":"asset_","type":"address"},{"internalType":"address","name":"to_","type":"address"},{"internalType":"uint256","name":"amount_","type":"uint256"}],"stateMutability":"payable","type":"function","name":"rescueAssets"},{"inputs":[{"internalType":"bool","name":"paused_","type":"bool"}],"stateMutability":"nonpayable","type":"function","name":"setPaused"}],"devdoc":{"kind":"dev","methods":{"registry()":{"details":"Reverts if contract not initialized","returns":{"_0":"The kRegistry contract address"}},"rescueAssets(address,address,uint256)":{"details":"This function implements a critical safety mechanism for recovering tokens or ETH that become stuck in the contract through user error or airdrops. The rescue process: (1) Validates admin authorization to prevent unauthorized fund extraction, (2) Ensures recipient address is valid to prevent burning funds, (3) For ETH rescue (asset_=address(0)): validates balance sufficiency and uses low-level call for transfer, (4) For ERC20 rescue: critically checks the token is NOT a registered protocol asset (USDC, WBTC, etc.) to protect user deposits and protocol integrity, then validates balance and uses SafeTransferLib for secure transfer. The distinction between ETH and ERC20 handling accounts for their different transfer mechanisms. Protocol assets are explicitly blocked from rescue to prevent admin abuse and maintain user trust.","params":{"amount_":"The quantity to rescue (must not exceed available balance)","asset_":"The asset to rescue (use address(0) for native ETH, otherwise ERC20 token address)","to_":"The recipient address that will receive the rescued assets (cannot be zero address)"}},"setPaused(bool)":{"details":"This function provides critical risk management capability by allowing emergency admins to halt contract operations during security incidents or market anomalies. The pause mechanism: (1) Affects all state-changing operations in inheriting contracts that check _isPaused(), (2) Does not affect view/pure functions ensuring protocol state remains readable, (3) Enables rapid response to potential exploits by halting operations protocol-wide, (4) Requires emergency admin role ensuring only authorized governance can trigger pauses. Inheriting contracts should check _isPaused() modifier in critical functions to respect the pause state. The external visibility with role check prevents unauthorized pause manipulation.","params":{"paused_":"The desired pause state (true = halt operations, false = resume normal operation)"}}},"version":1},"userdoc":{"kind":"user","methods":{"registry()":{"notice":"Returns the registry contract address"},"rescueAssets(address,address,uint256)":{"notice":"Rescues accidentally sent assets (ETH or ERC20 tokens) preventing permanent loss of funds"},"setPaused(bool)":{"notice":"Toggles the emergency pause state affecting all protocol operations in this contract"}},"version":1}},"settings":{"remappings":["forge-std-1.9.7/=dependencies/forge-std-1.9.7/src/","forge-std/=dependencies/forge-std-1.9.7/src/","kam/src/=src/","kam/test/=test/","openzeppelin/=src/vendor/openzeppelin/","solady/=src/vendor/solady/","uniswap/=src/vendor/uniswap/"],"optimizer":{"enabled":true,"runs":10000},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"src/base/kBase.sol":"kBase"},"evmVersion":"prague","libraries":{},"viaIR":true},"sources":{"src/base/kBase.sol":{"keccak256":"0x67b1fb762557bb854ade03cfca72921aaca47616f5fb8237192ee879b65b451c","urls":["bzz-raw://627f2e6e5a28a8faf3e089923e75af83971b5fdbb40cc5da380a6e246130910a","dweb:/ipfs/QmWVnEM1edirKqd5rAp9ZMbEcTRz51xS5Ky145JSyprYcj"],"license":"UNLICENSED"},"src/errors/Errors.sol":{"keccak256":"0xdcceeb9ea600c0117ebf9af4b64542e2d359b64499ec2617d6fb19aa64ab4405","urls":["bzz-raw://136e7c2983fa320cc86649e02ac22d4d780da5186b1d425d10019fe9677034aa","dweb:/ipfs/QmXtJS6oLzB6sEtjUNWrDCdkyFbVqRLLKenABoDP6jSC4J"],"license":"MIT"},"src/interfaces/IRegistry.sol":{"keccak256":"0xdd44ca8cd9a9eb3d77e16cf45be3cfec038c0dc006e336e256d6b10a4b02a2ba","urls":["bzz-raw://b792d8d18b68f2c09cda6d775e3088115494e7173410a6d2be32da92aff1b582","dweb:/ipfs/QmfY789VP8gECbRM7BZCpeMH63oHuxCczQ5tW5wStYxHYA"],"license":"MIT"},"src/interfaces/IVault.sol":{"keccak256":"0x92198758abccb112805b592f2f4024731d92b6a02c93fc7f9e28bc9ee6ee3290","urls":["bzz-raw://82c99cb665ce971c4f83050867a6ed0f79117adbb999cef70a9f6b5c099b604e","dweb:/ipfs/QmRsMEPE5UZKQgrjsWcGjFQFipgxXdmnmP9raRqHbBiWWX"],"license":"MIT"},"src/interfaces/IVaultBatch.sol":{"keccak256":"0x0a44fd2302ad59ec16ad67be0afcb63aaf96d105469512acd7161304cc1c85f2","urls":["bzz-raw://f330dd9284c50c75dea5b132a549fac4f3baf107cdaa4a21374af8435cbf45c9","dweb:/ipfs/QmRBbusrsoEM7VYjtEKXphnzE6RFkFoLhU2iNRwTDZuXTp"],"license":"MIT"},"src/interfaces/IVaultClaim.sol":{"keccak256":"0xbc8653ba55535db7f9f97636eefbaac39aee5940358b8dbf374c6dd49029cf90","urls":["bzz-raw://3fe53e06a6eeb51f74856ef36061939830f4bd36cac7cea57797d251aa8958b0","dweb:/ipfs/Qmbsd3B9CFBdGhdtMnycY85CKFx9mfqQN2ML6quGZiP8Zk"],"license":"MIT"},"src/interfaces/IVaultFees.sol":{"keccak256":"0xbfebf7c01dbd77a63faa22c8e021bc4e94145183819cf473f4612bc54e4f4b62","urls":["bzz-raw://3324d221494afeb37042dcb27b769a8ce0efc9c444768f6cef3e32cfdc3c77ad","dweb:/ipfs/QmcYkbpi88q9oWBB7cmhfyXb6BonVskBVuTveGFaYZ6Nj8"],"license":"MIT"},"src/interfaces/IVersioned.sol":{"keccak256":"0x23e7a218ecbf42e18656d069ee25302c74c5027d1dcfa4e1b9c54501d76a72f5","urls":["bzz-raw://2e2643eaf8cc8f8bc04dd90c6cbf5c1429de314dc85e93c254b1deae782af6eb","dweb:/ipfs/Qmb4s6G5PNFLy6iANEqHvanKZ3Tu1ahfW5V9ppWCxKTiDD"],"license":"MIT"},"src/interfaces/IkStakingVault.sol":{"keccak256":"0x49cc9d533e84e0c79ebc4b2c9a7c98ef237e80b7c8c5e9b2316086f4a39f08ac","urls":["bzz-raw://c6fceb775fcad58c3e632d021bc619cc5ca820dd908e148adcf0016724991c58","dweb:/ipfs/QmcSJPz3MpQfobNrXKg1FL8PMucUHtuWvcDCdbYwiUuH8i"],"license":"MIT"},"src/interfaces/modules/IVaultReader.sol":{"keccak256":"0xa687ce1a536cb890fea7462f4ac2ecc012d3531987539d00fc3240c19ffacca6","urls":["bzz-raw://b5099978a9e2b5ec2791cc2dc669055da7405918034b2feda4c49c0851f43e32","dweb:/ipfs/QmYkzk43kRSZzxDf2phdAWFguyb32MKFyfaGMhAbEQhDiz"],"license":"UNLICENSED"},"src/kStakingVault/types/BaseVaultTypes.sol":{"keccak256":"0xa6dfda9ab80c6bca9613c989fb5863c81062f8378dc22c0433ca3464ba26d4b1","urls":["bzz-raw://41dd89e20036e001eb0388e89c94e1e6c71df8f9b6155a236e0886f788e7f3ca","dweb:/ipfs/QmRkAwRBoB9yHLAdvNAy5geVu5tXDWzFKfmf5eDDECrf4T"],"license":"MIT"},"src/vendor/solady/utils/OptimizedReentrancyGuardTransient.sol":{"keccak256":"0x6d344a1effc6dd422ff702099726855049731500329905b9eb5e2d07e6561f3e","urls":["bzz-raw://642463c4fee06bc59026888aba9b7948886009b50465becaa6a010318f0615bd","dweb:/ipfs/QmcMBCjLmK8X7XTRr4CTvi1CRyeqqryGEPmfeko5UFb4Z4"],"license":"UNLICENSED"},"src/vendor/solady/utils/SafeTransferLib.sol":{"keccak256":"0x5064408494b8a99ea5fc272191115daf7b2b58fdd1598bf1e50b2651757b3d55","urls":["bzz-raw://86449d6802a5749f0e6e0b4b89f935421982bd4fdb2b4171af90cc5eba34eb81","dweb:/ipfs/QmbFzHnVm8eNRYJ8czGwbjFrHhL3Mk8QVbHgQu67LiRqYD"],"license":"MIT"}},"version":1},"storageLayout":{"storage":[],"types":{}},"ast":{"absolutePath":"src/base/kBase.sol","id":48491,"exportedSymbols":{"IRegistry":[50185],"IkStakingVault":[51333],"KBASE_ALREADY_INITIALIZED":[48951],"KBASE_ASSET_NOT_SUPPORTED":[48978],"KBASE_CONTRACT_NOT_FOUND":[48975],"KBASE_INVALID_REGISTRY":[48954],"KBASE_INVALID_VAULT":[48981],"KBASE_NOT_INITIALIZED":[48957],"KBASE_TRANSFER_FAILED":[48969],"KBASE_WRONG_ASSET":[48972],"KBASE_WRONG_ROLE":[48960],"KBASE_ZERO_ADDRESS":[48963],"KBASE_ZERO_AMOUNT":[48966],"OptimizedReentrancyGuardTransient":[65573],"SafeTransferLib":[66043],"kBase":[48490]},"nodeType":"SourceUnit","src":"39:21704:37","nodes":[{"id":47835,"nodeType":"PragmaDirective","src":"39:23:37","nodes":[],"literals":["solidity","0.8",".30"]},{"id":47837,"nodeType":"ImportDirective","src":"64:103:37","nodes":[],"absolutePath":"src/vendor/solady/utils/OptimizedReentrancyGuardTransient.sol","file":"solady/utils/OptimizedReentrancyGuardTransient.sol","nameLocation":"-1:-1:-1","scope":48491,"sourceUnit":65574,"symbolAliases":[{"foreign":{"id":47836,"name":"OptimizedReentrancyGuardTransient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":65573,"src":"73:33:37","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"id":47839,"nodeType":"ImportDirective","src":"168:67:37","nodes":[],"absolutePath":"src/vendor/solady/utils/SafeTransferLib.sol","file":"solady/utils/SafeTransferLib.sol","nameLocation":"-1:-1:-1","scope":48491,"sourceUnit":66044,"symbolAliases":[{"foreign":{"id":47838,"name":"SafeTransferLib","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":66043,"src":"177:15:37","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"id":47851,"nodeType":"ImportDirective","src":"237:334:37","nodes":[],"absolutePath":"src/errors/Errors.sol","file":"kam/src/errors/Errors.sol","nameLocation":"-1:-1:-1","scope":48491,"sourceUnit":49243,"symbolAliases":[{"foreign":{"id":47840,"name":"KBASE_ALREADY_INITIALIZED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":48951,"src":"250:25:37","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":47841,"name":"KBASE_ASSET_NOT_SUPPORTED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":48978,"src":"281:25:37","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":47842,"name":"KBASE_CONTRACT_NOT_FOUND","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":48975,"src":"312:24:37","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":47843,"name":"KBASE_INVALID_REGISTRY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":48954,"src":"342:22:37","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":47844,"name":"KBASE_INVALID_VAULT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":48981,"src":"370:19:37","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":47845,"name":"KBASE_NOT_INITIALIZED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":48957,"src":"395:21:37","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":47846,"name":"KBASE_TRANSFER_FAILED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":48969,"src":"422:21:37","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":47847,"name":"KBASE_WRONG_ASSET","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":48972,"src":"449:17:37","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":47848,"name":"KBASE_WRONG_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":48960,"src":"472:16:37","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":47849,"name":"KBASE_ZERO_ADDRESS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":48963,"src":"494:18:37","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":47850,"name":"KBASE_ZERO_AMOUNT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":48966,"src":"518:17:37","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"id":47853,"nodeType":"ImportDirective","src":"572:61:37","nodes":[],"absolutePath":"src/interfaces/IRegistry.sol","file":"kam/src/interfaces/IRegistry.sol","nameLocation":"-1:-1:-1","scope":48491,"sourceUnit":50186,"symbolAliases":[{"foreign":{"id":47852,"name":"IRegistry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":50185,"src":"581:9:37","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"id":47855,"nodeType":"ImportDirective","src":"634:71:37","nodes":[],"absolutePath":"src/interfaces/IkStakingVault.sol","file":"kam/src/interfaces/IkStakingVault.sol","nameLocation":"-1:-1:-1","scope":48491,"sourceUnit":51334,"symbolAliases":[{"foreign":{"id":47854,"name":"IkStakingVault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":51333,"src":"643:14:37","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"id":48490,"nodeType":"ContractDefinition","src":"2133:19609:37","nodes":[{"id":47861,"nodeType":"UsingForDirective","src":"2191:34:37","nodes":[],"global":false,"libraryName":{"id":47859,"name":"SafeTransferLib","nameLocations":["2197:15:37"],"nodeType":"IdentifierPath","referencedDeclaration":66043,"src":"2197:15:37"},"typeName":{"id":47860,"name":"address","nodeType":"ElementaryTypeName","src":"2217:7:37","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},{"id":47866,"nodeType":"EventDefinition","src":"2929:27:37","nodes":[],"anonymous":false,"documentation":{"id":47862,"nodeType":"StructuredDocumentation","src":"2408:516:37","text":"@notice Emitted when the emergency pause state is toggled for protocol-wide risk mitigation\n @dev This event signals a critical protocol state change that affects all inheriting contracts.\n When paused=true, protocol operations are halted to prevent potential exploits or manage emergencies.\n Only emergency admins can trigger this, providing rapid response capability during security incidents.\n @param paused_ The new pause state (true = operations halted, false = normal operation)"},"eventSelector":"0e2fb031ee032dc02d8011dc50b816eb450cf856abd8261680dac74f72165bd2","name":"Paused","nameLocation":"2935:6:37","parameters":{"id":47865,"nodeType":"ParameterList","parameters":[{"constant":false,"id":47864,"indexed":false,"mutability":"mutable","name":"paused_","nameLocation":"2947:7:37","nodeType":"VariableDeclaration","scope":47866,"src":"2942:12:37","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":47863,"name":"bool","nodeType":"ElementaryTypeName","src":"2942:4:37","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2941:14:37"}},{"id":47875,"nodeType":"EventDefinition","src":"3674:82:37","nodes":[],"anonymous":false,"documentation":{"id":47867,"nodeType":"StructuredDocumentation","src":"2962:707:37","text":"@notice Emitted when ERC20 tokens are rescued from the contract to prevent permanent loss\n @dev This rescue mechanism is restricted to non-protocol assets only - registered assets (USDC, WBTC, etc.)\n cannot be rescued to protect user funds and maintain protocol integrity. Typically used to recover\n accidentally sent tokens or airdrops. Only admin role can execute rescues as a security measure.\n @param asset_ The ERC20 token address being rescued (must not be a registered protocol asset)\n @param to_ The recipient address receiving the rescued tokens (cannot be zero address)\n @param amount_ The quantity of tokens rescued (must not exceed contract balance)"},"eventSelector":"552c8f8dc30f2786e14004d98595afcc1c0ea1f552b86e86f64a2da74761eaab","name":"RescuedAssets","nameLocation":"3680:13:37","parameters":{"id":47874,"nodeType":"ParameterList","parameters":[{"constant":false,"id":47869,"indexed":true,"mutability":"mutable","name":"asset_","nameLocation":"3710:6:37","nodeType":"VariableDeclaration","scope":47875,"src":"3694:22:37","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":47868,"name":"address","nodeType":"ElementaryTypeName","src":"3694:7:37","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":47871,"indexed":true,"mutability":"mutable","name":"to_","nameLocation":"3734:3:37","nodeType":"VariableDeclaration","scope":47875,"src":"3718:19:37","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":47870,"name":"address","nodeType":"ElementaryTypeName","src":"3718:7:37","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":47873,"indexed":false,"mutability":"mutable","name":"amount_","nameLocation":"3747:7:37","nodeType":"VariableDeclaration","scope":47875,"src":"3739:15:37","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":47872,"name":"uint256","nodeType":"ElementaryTypeName","src":"3739:7:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3693:62:37"}},{"id":47882,"nodeType":"EventDefinition","src":"4341:55:37","nodes":[],"anonymous":false,"documentation":{"id":47876,"nodeType":"StructuredDocumentation","src":"3762:574:37","text":"@notice Emitted when native ETH is rescued from the contract to recover stuck funds\n @dev ETH rescue is separate from ERC20 rescue due to different transfer mechanisms. This prevents\n ETH from being permanently locked if sent to the contract accidentally. Uses low-level call for\n ETH transfer with proper success checking. Only admin role authorized for security.\n @param to_ The recipient address receiving the rescued ETH (cannot be zero address)\n @param amount_ The quantity of ETH rescued in wei (must not exceed contract balance)"},"eventSelector":"63b8c8e180bc85c19daef23e2bb787fb49672d3a9ecde24409c18ccb1accb5d1","name":"RescuedETH","nameLocation":"4347:10:37","parameters":{"id":47881,"nodeType":"ParameterList","parameters":[{"constant":false,"id":47878,"indexed":true,"mutability":"mutable","name":"to_","nameLocation":"4374:3:37","nodeType":"VariableDeclaration","scope":47882,"src":"4358:19:37","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":47877,"name":"address","nodeType":"ElementaryTypeName","src":"4358:7:37","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":47880,"indexed":false,"mutability":"mutable","name":"amount_","nameLocation":"4387:7:37","nodeType":"VariableDeclaration","scope":47882,"src":"4379:15:37","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":47879,"name":"uint256","nodeType":"ElementaryTypeName","src":"4379:7:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4357:38:37"}},{"id":47888,"nodeType":"VariableDeclaration","src":"4963:58:37","nodes":[],"constant":true,"documentation":{"id":47883,"nodeType":"StructuredDocumentation","src":"4582:376:37","text":"@notice Registry lookup key for the kMinter singleton contract\n @dev This hash is used to retrieve the kMinter address from the registry's contract mapping.\n kMinter handles institutional minting/redemption flows, so many contracts need to identify it\n for access control and routing decisions. The hash ensures consistent lookups across the protocol."},"mutability":"constant","name":"K_MINTER","nameLocation":"4989:8:37","scope":48490,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":47884,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4963:7:37","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"4b5f4d494e544552","id":47886,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5010:10:37","typeDescriptions":{"typeIdentifier":"t_stringliteral_06d15878a0883034bd095c66a4b2987dfae5eb662cf9ef4aaa5ce27b533782bc","typeString":"literal_string \"K_MINTER\""},"value":"K_MINTER"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_06d15878a0883034bd095c66a4b2987dfae5eb662cf9ef4aaa5ce27b533782bc","typeString":"literal_string \"K_MINTER\""}],"id":47885,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"5000:9:37","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":47887,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5000:21:37","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"id":47894,"nodeType":"VariableDeclaration","src":"5410:70:37","nodes":[],"constant":true,"documentation":{"id":47889,"nodeType":"StructuredDocumentation","src":"5028:377:37","text":"@notice Registry lookup key for the kAssetRouter singleton contract\n @dev This hash is used to retrieve the kAssetRouter address from the registry's contract mapping.\n kAssetRouter coordinates all asset movements and settlements, making it a critical dependency\n for vaults and other protocol components. The hash-based lookup enables dynamic upgrades."},"mutability":"constant","name":"K_ASSET_ROUTER","nameLocation":"5436:14:37","scope":48490,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":47890,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5410:7:37","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"4b5f41535345545f524f55544552","id":47892,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5463:16:37","typeDescriptions":{"typeIdentifier":"t_stringliteral_f3bbf2dd6779e6fe2f6fb7cc20baa5140e39dd5b31ab45dfa7d512610b601f0d","typeString":"literal_string \"K_ASSET_ROUTER\""},"value":"K_ASSET_ROUTER"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_f3bbf2dd6779e6fe2f6fb7cc20baa5140e39dd5b31ab45dfa7d512610b601f0d","typeString":"literal_string \"K_ASSET_ROUTER\""}],"id":47891,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"5453:9:37","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":47893,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5453:27:37","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"id":47905,"nodeType":"StructDefinition","src":"6142:399:37","nodes":[],"canonicalName":"kBase.kBaseStorage","documentation":{"id":47895,"nodeType":"StructuredDocumentation","src":"5666:471:37","text":"@custom:storage-location erc7201:kam.storage.kBase\n @dev Storage struct following ERC-7201 namespaced storage pattern to prevent collisions during upgrades.\n This pattern ensures that storage layout remains consistent across proxy upgrades and prevents\n accidental overwriting when contracts inherit from multiple base contracts. The namespace\n \"kam.storage.kBase\" uniquely identifies this storage area within the contract's storage space."},"members":[{"constant":false,"id":47898,"mutability":"mutable","name":"registry","nameLocation":"6280:8:37","nodeType":"VariableDeclaration","scope":47905,"src":"6272:16:37","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":47897,"name":"address","nodeType":"ElementaryTypeName","src":"6272:7:37","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":47901,"mutability":"mutable","name":"initialized","nameLocation":"6405:11:37","nodeType":"VariableDeclaration","scope":47905,"src":"6400:16:37","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":47900,"name":"bool","nodeType":"ElementaryTypeName","src":"6400:4:37","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":47904,"mutability":"mutable","name":"paused","nameLocation":"6528:6:37","nodeType":"VariableDeclaration","scope":47905,"src":"6523:11:37","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":47903,"name":"bool","nodeType":"ElementaryTypeName","src":"6523:4:37","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"kBaseStorage","nameLocation":"6149:12:37","scope":48490,"visibility":"public"},{"id":47909,"nodeType":"VariableDeclaration","src":"7044:116:37","nodes":[],"constant":true,"documentation":{"id":47906,"nodeType":"StructuredDocumentation","src":"6547:492:37","text":"@dev ERC-7201 storage location calculated as: keccak256(abi.encode(uint256(keccak256(\"kam.storage.kBase\")) - 1))\n & ~bytes32(uint256(0xff))\n This specific slot is chosen to avoid any possible collision with standard storage layouts while maintaining\n deterministic addressing. The calculation ensures the storage location is unique to this namespace and won't\n conflict with other inherited contracts or future upgrades. The 0xff mask ensures proper alignment."},"mutability":"constant","name":"KBASE_STORAGE_LOCATION","nameLocation":"7069:22:37","scope":48490,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":47907,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7044:7:37","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307865393136383836383439373563346437643534613635646439366461356434646362623534623839373163303436643533353164336331313165343361383030","id":47908,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7094:66:37","typeDescriptions":{"typeIdentifier":"t_rational_105428705804400054461346730124995074832894172607779027479920736056824897447936_by_1","typeString":"int_const 1054...(70 digits omitted)...7936"},"value":"0xe91688684975c4d7d54a65dd96da5d4dcbb54b8971c046d5351d3c111e43a800"},"visibility":"private"},{"id":47918,"nodeType":"FunctionDefinition","src":"7843:155:37","nodes":[],"body":{"id":47917,"nodeType":"Block","src":"7917:81:37","nodes":[],"statements":[{"AST":{"nativeSrc":"7936:56:37","nodeType":"YulBlock","src":"7936:56:37","statements":[{"nativeSrc":"7950:32:37","nodeType":"YulAssignment","src":"7950:32:37","value":{"name":"KBASE_STORAGE_LOCATION","nativeSrc":"7960:22:37","nodeType":"YulIdentifier","src":"7960:22:37"},"variableNames":[{"name":"$.slot","nativeSrc":"7950:6:37","nodeType":"YulIdentifier","src":"7950:6:37"}]}]},"evmVersion":"prague","externalReferences":[{"declaration":47914,"isOffset":false,"isSlot":true,"src":"7950:6:37","suffix":"slot","valueSize":1},{"declaration":47909,"isOffset":false,"isSlot":false,"src":"7960:22:37","valueSize":1}],"id":47916,"nodeType":"InlineAssembly","src":"7927:65:37"}]},"documentation":{"id":47910,"nodeType":"StructuredDocumentation","src":"7352:486:37","text":"@dev Returns the kBase storage pointer using ERC-7201 namespaced storage pattern\n @return $ Storage pointer to the kBaseStorage struct at the designated storage location\n This function uses inline assembly to directly set the storage pointer to our namespaced location,\n ensuring efficient access to storage variables while maintaining upgrade safety. The pure modifier\n is used because we're only returning a storage pointer, not reading storage values."},"implemented":true,"kind":"function","modifiers":[],"name":"_getBaseStorage","nameLocation":"7852:15:37","parameters":{"id":47911,"nodeType":"ParameterList","parameters":[],"src":"7867:2:37"},"returnParameters":{"id":47915,"nodeType":"ParameterList","parameters":[{"constant":false,"id":47914,"mutability":"mutable","name":"$","nameLocation":"7914:1:37","nodeType":"VariableDeclaration","scope":47918,"src":"7893:22:37","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_kBaseStorage_$47905_storage_ptr","typeString":"struct kBase.kBaseStorage"},"typeName":{"id":47913,"nodeType":"UserDefinedTypeName","pathNode":{"id":47912,"name":"kBaseStorage","nameLocations":["7893:12:37"],"nodeType":"IdentifierPath","referencedDeclaration":47905,"src":"7893:12:37"},"referencedDeclaration":47905,"src":"7893:12:37","typeDescriptions":{"typeIdentifier":"t_struct$_kBaseStorage_$47905_storage_ptr","typeString":"struct kBase.kBaseStorage"}},"visibility":"internal"}],"src":"7892:24:37"},"scope":48490,"stateMutability":"pure","virtual":false,"visibility":"internal"},{"id":47966,"nodeType":"FunctionDefinition","src":"9212:325:37","nodes":[],"body":{"id":47965,"nodeType":"Block","src":"9262:275:37","nodes":[],"statements":[{"assignments":[47926],"declarations":[{"constant":false,"id":47926,"mutability":"mutable","name":"$","nameLocation":"9293:1:37","nodeType":"VariableDeclaration","scope":47965,"src":"9272:22:37","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_kBaseStorage_$47905_storage_ptr","typeString":"struct kBase.kBaseStorage"},"typeName":{"id":47925,"nodeType":"UserDefinedTypeName","pathNode":{"id":47924,"name":"kBaseStorage","nameLocations":["9272:12:37"],"nodeType":"IdentifierPath","referencedDeclaration":47905,"src":"9272:12:37"},"referencedDeclaration":47905,"src":"9272:12:37","typeDescriptions":{"typeIdentifier":"t_struct$_kBaseStorage_$47905_storage_ptr","typeString":"struct kBase.kBaseStorage"}},"visibility":"internal"}],"id":47929,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":47927,"name":"_getBaseStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":47918,"src":"9297:15:37","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_kBaseStorage_$47905_storage_ptr_$","typeString":"function () pure returns (struct kBase.kBaseStorage storage pointer)"}},"id":47928,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9297:17:37","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_kBaseStorage_$47905_storage_ptr","typeString":"struct kBase.kBaseStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"9272:42:37"},{"expression":{"arguments":[{"id":47933,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"9333:14:37","subExpression":{"expression":{"id":47931,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":47926,"src":"9334:1:37","typeDescriptions":{"typeIdentifier":"t_struct$_kBaseStorage_$47905_storage_ptr","typeString":"struct kBase.kBaseStorage storage pointer"}},"id":47932,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9336:11:37","memberName":"initialized","nodeType":"MemberAccess","referencedDeclaration":47901,"src":"9334:13:37","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":47934,"name":"KBASE_ALREADY_INITIALIZED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":48951,"src":"9349:25:37","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":47930,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"9325:7:37","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":47935,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9325:50:37","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":47936,"nodeType":"ExpressionStatement","src":"9325:50:37"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":47943,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":47938,"name":"registry_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":47921,"src":"9393:9:37","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":47941,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9414:1:37","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":47940,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9406:7:37","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":47939,"name":"address","nodeType":"ElementaryTypeName","src":"9406:7:37","typeDescriptions":{}}},"id":47942,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9406:10:37","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9393:23:37","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":47944,"name":"KBASE_INVALID_REGISTRY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":48954,"src":"9418:22:37","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":47937,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"9385:7:37","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":47945,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9385:56:37","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":47946,"nodeType":"ExpressionStatement","src":"9385:56:37"},{"expression":{"id":47951,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":47947,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":47926,"src":"9452:1:37","typeDescriptions":{"typeIdentifier":"t_struct$_kBaseStorage_$47905_storage_ptr","typeString":"struct kBase.kBaseStorage storage pointer"}},"id":47949,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"9454:8:37","memberName":"registry","nodeType":"MemberAccess","referencedDeclaration":47898,"src":"9452:10:37","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":47950,"name":"registry_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":47921,"src":"9465:9:37","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9452:22:37","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":47952,"nodeType":"ExpressionStatement","src":"9452:22:37"},{"expression":{"id":47957,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":47953,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":47926,"src":"9484:1:37","typeDescriptions":{"typeIdentifier":"t_struct$_kBaseStorage_$47905_storage_ptr","typeString":"struct kBase.kBaseStorage storage pointer"}},"id":47955,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"9486:6:37","memberName":"paused","nodeType":"MemberAccess","referencedDeclaration":47904,"src":"9484:8:37","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":47956,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"9495:5:37","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"9484:16:37","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":47958,"nodeType":"ExpressionStatement","src":"9484:16:37"},{"expression":{"id":47963,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":47959,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":47926,"src":"9510:1:37","typeDescriptions":{"typeIdentifier":"t_struct$_kBaseStorage_$47905_storage_ptr","typeString":"struct kBase.kBaseStorage storage pointer"}},"id":47961,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"9512:11:37","memberName":"initialized","nodeType":"MemberAccess","referencedDeclaration":47901,"src":"9510:13:37","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":47962,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"9526:4:37","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"9510:20:37","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":47964,"nodeType":"ExpressionStatement","src":"9510:20:37"}]},"documentation":{"id":47919,"nodeType":"StructuredDocumentation","src":"8186:1021:37","text":"@notice Initializes the base contract with registry integration and default operational state\n @dev This internal initialization function establishes the foundational connection between any inheriting\n contract and the protocol's registry system. The initialization process: (1) Validates that initialization\n hasn't occurred to prevent reinitialization attacks in proxy patterns, (2) Ensures registry address is valid\n since the registry is critical for all protocol operations, (3) Sets the contract to unpaused state enabling\n normal operations, (4) Marks initialization complete to prevent future calls. This function MUST be called\n by all inheriting contracts during their initialization phase to establish proper protocol integration.\n The internal visibility ensures only inheriting contracts can initialize, preventing external manipulation.\n @param registry_ The kRegistry contract address that serves as the protocol's configuration and discovery hub"},"implemented":true,"kind":"function","modifiers":[],"name":"__kBase_init","nameLocation":"9221:12:37","parameters":{"id":47922,"nodeType":"ParameterList","parameters":[{"constant":false,"id":47921,"mutability":"mutable","name":"registry_","nameLocation":"9242:9:37","nodeType":"VariableDeclaration","scope":47966,"src":"9234:17:37","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":47920,"name":"address","nodeType":"ElementaryTypeName","src":"9234:7:37","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"9233:19:37"},"returnParameters":{"id":47923,"nodeType":"ParameterList","parameters":[],"src":"9262:0:37"},"scope":48490,"stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"id":48003,"nodeType":"FunctionDefinition","src":"10711:280:37","nodes":[],"body":{"id":48002,"nodeType":"Block","src":"10753:238:37","nodes":[],"statements":[{"expression":{"arguments":[{"arguments":[{"expression":{"id":47974,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"10789:3:37","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":47975,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10793:6:37","memberName":"sender","nodeType":"MemberAccess","src":"10789:10:37","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":47973,"name":"_isEmergencyAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":48362,"src":"10771:17:37","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":47976,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10771:29:37","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":47977,"name":"KBASE_WRONG_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":48960,"src":"10802:16:37","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":47972,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"10763:7:37","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":47978,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10763:56:37","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":47979,"nodeType":"ExpressionStatement","src":"10763:56:37"},{"assignments":[47982],"declarations":[{"constant":false,"id":47982,"mutability":"mutable","name":"$","nameLocation":"10850:1:37","nodeType":"VariableDeclaration","scope":48002,"src":"10829:22:37","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_kBaseStorage_$47905_storage_ptr","typeString":"struct kBase.kBaseStorage"},"typeName":{"id":47981,"nodeType":"UserDefinedTypeName","pathNode":{"id":47980,"name":"kBaseStorage","nameLocations":["10829:12:37"],"nodeType":"IdentifierPath","referencedDeclaration":47905,"src":"10829:12:37"},"referencedDeclaration":47905,"src":"10829:12:37","typeDescriptions":{"typeIdentifier":"t_struct$_kBaseStorage_$47905_storage_ptr","typeString":"struct kBase.kBaseStorage"}},"visibility":"internal"}],"id":47985,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":47983,"name":"_getBaseStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":47918,"src":"10854:15:37","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_kBaseStorage_$47905_storage_ptr_$","typeString":"function () pure returns (struct kBase.kBaseStorage storage pointer)"}},"id":47984,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10854:17:37","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_kBaseStorage_$47905_storage_ptr","typeString":"struct kBase.kBaseStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"10829:42:37"},{"expression":{"arguments":[{"expression":{"id":47987,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":47982,"src":"10889:1:37","typeDescriptions":{"typeIdentifier":"t_struct$_kBaseStorage_$47905_storage_ptr","typeString":"struct kBase.kBaseStorage storage pointer"}},"id":47988,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10891:11:37","memberName":"initialized","nodeType":"MemberAccess","referencedDeclaration":47901,"src":"10889:13:37","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":47989,"name":"KBASE_NOT_INITIALIZED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":48957,"src":"10904:21:37","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":47986,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"10881:7:37","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":47990,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10881:45:37","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":47991,"nodeType":"ExpressionStatement","src":"10881:45:37"},{"expression":{"id":47996,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":47992,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":47982,"src":"10936:1:37","typeDescriptions":{"typeIdentifier":"t_struct$_kBaseStorage_$47905_storage_ptr","typeString":"struct kBase.kBaseStorage storage pointer"}},"id":47994,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"10938:6:37","memberName":"paused","nodeType":"MemberAccess","referencedDeclaration":47904,"src":"10936:8:37","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":47995,"name":"paused_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":47969,"src":"10947:7:37","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10936:18:37","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":47997,"nodeType":"ExpressionStatement","src":"10936:18:37"},{"eventCall":{"arguments":[{"id":47999,"name":"paused_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":47969,"src":"10976:7:37","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":47998,"name":"Paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":47866,"src":"10969:6:37","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bool_$returns$__$","typeString":"function (bool)"}},"id":48000,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10969:15:37","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":48001,"nodeType":"EmitStatement","src":"10964:20:37"}]},"documentation":{"id":47967,"nodeType":"StructuredDocumentation","src":"9725:981:37","text":"@notice Toggles the emergency pause state affecting all protocol operations in this contract\n @dev This function provides critical risk management capability by allowing emergency admins to halt\n contract operations during security incidents or market anomalies. The pause mechanism: (1) Affects all\n state-changing operations in inheriting contracts that check _isPaused(), (2) Does not affect view/pure\n functions ensuring protocol state remains readable, (3) Enables rapid response to potential exploits by\n halting operations protocol-wide, (4) Requires emergency admin role ensuring only authorized governance\n can trigger pauses. Inheriting contracts should check _isPaused() modifier in critical functions to\n respect the pause state. The external visibility with role check prevents unauthorized pause manipulation.\n @param paused_ The desired pause state (true = halt operations, false = resume normal operation)"},"functionSelector":"16c38b3c","implemented":true,"kind":"function","modifiers":[],"name":"setPaused","nameLocation":"10720:9:37","parameters":{"id":47970,"nodeType":"ParameterList","parameters":[{"constant":false,"id":47969,"mutability":"mutable","name":"paused_","nameLocation":"10735:7:37","nodeType":"VariableDeclaration","scope":48003,"src":"10730:12:37","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":47968,"name":"bool","nodeType":"ElementaryTypeName","src":"10730:4:37","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"10729:14:37"},"returnParameters":{"id":47971,"nodeType":"ParameterList","parameters":[],"src":"10753:0:37"},"scope":48490,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":48113,"nodeType":"FunctionDefinition","src":"12296:839:37","nodes":[],"body":{"id":48112,"nodeType":"Block","src":"12381:754:37","nodes":[],"statements":[{"expression":{"arguments":[{"arguments":[{"expression":{"id":48015,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"12408:3:37","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":48016,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12412:6:37","memberName":"sender","nodeType":"MemberAccess","src":"12408:10:37","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":48014,"name":"_isAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":48347,"src":"12399:8:37","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":48017,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12399:20:37","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":48018,"name":"KBASE_WRONG_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":48960,"src":"12421:16:37","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":48013,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"12391:7:37","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":48019,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12391:47:37","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":48020,"nodeType":"ExpressionStatement","src":"12391:47:37"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":48027,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":48022,"name":"to_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":48008,"src":"12456:3:37","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":48025,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12471:1:37","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":48024,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12463:7:37","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":48023,"name":"address","nodeType":"ElementaryTypeName","src":"12463:7:37","typeDescriptions":{}}},"id":48026,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12463:10:37","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12456:17:37","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":48028,"name":"KBASE_ZERO_ADDRESS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":48963,"src":"12475:18:37","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":48021,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"12448:7:37","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":48029,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12448:46:37","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":48030,"nodeType":"ExpressionStatement","src":"12448:46:37"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":48036,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":48031,"name":"asset_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":48006,"src":"12509:6:37","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":48034,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12527:1:37","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":48033,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12519:7:37","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":48032,"name":"address","nodeType":"ElementaryTypeName","src":"12519:7:37","typeDescriptions":{}}},"id":48035,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12519:10:37","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12509:20:37","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":48110,"nodeType":"Block","src":"12823:306:37","statements":[{"expression":{"arguments":[{"id":48076,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"12880:17:37","subExpression":{"arguments":[{"id":48074,"name":"asset_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":48006,"src":"12890:6:37","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":48073,"name":"_isAsset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":48489,"src":"12881:8:37","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":48075,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12881:16:37","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":48077,"name":"KBASE_WRONG_ASSET","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":48972,"src":"12899:17:37","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":48072,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"12872:7:37","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":48078,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12872:45:37","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":48079,"nodeType":"ExpressionStatement","src":"12872:45:37"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":48093,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":48083,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":48081,"name":"amount_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":48010,"src":"12939:7:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":48082,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12949:1:37","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12939:11:37","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":48092,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":48084,"name":"amount_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":48010,"src":"12954:7:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"arguments":[{"arguments":[{"id":48089,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"12990:4:37","typeDescriptions":{"typeIdentifier":"t_contract$_kBase_$48490","typeString":"contract kBase"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_kBase_$48490","typeString":"contract kBase"}],"id":48088,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12982:7:37","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":48087,"name":"address","nodeType":"ElementaryTypeName","src":"12982:7:37","typeDescriptions":{}}},"id":48090,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12982:13:37","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":48085,"name":"asset_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":48006,"src":"12965:6:37","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":48086,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12972:9:37","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":65890,"src":"12965:16:37","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$attached_to$_t_address_$","typeString":"function (address,address) view returns (uint256)"}},"id":48091,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12965:31:37","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12954:42:37","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12939:57:37","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":48094,"name":"KBASE_ZERO_AMOUNT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":48966,"src":"12998:17:37","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":48080,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"12931:7:37","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":48095,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12931:85:37","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":48096,"nodeType":"ExpressionStatement","src":"12931:85:37"},{"expression":{"arguments":[{"id":48100,"name":"to_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":48008,"src":"13051:3:37","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":48101,"name":"amount_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":48010,"src":"13056:7:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":48097,"name":"asset_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":48006,"src":"13031:6:37","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":48099,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13038:12:37","memberName":"safeTransfer","nodeType":"MemberAccess","referencedDeclaration":65842,"src":"13031:19:37","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_address_$","typeString":"function (address,address,uint256)"}},"id":48102,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13031:33:37","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":48103,"nodeType":"ExpressionStatement","src":"13031:33:37"},{"eventCall":{"arguments":[{"id":48105,"name":"asset_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":48006,"src":"13097:6:37","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":48106,"name":"to_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":48008,"src":"13105:3:37","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":48107,"name":"amount_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":48010,"src":"13110:7:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":48104,"name":"RescuedAssets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":47875,"src":"13083:13:37","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":48108,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13083:35:37","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":48109,"nodeType":"EmitStatement","src":"13078:40:37"}]},"id":48111,"nodeType":"IfStatement","src":"12505:624:37","trueBody":{"id":48071,"nodeType":"Block","src":"12531:286:37","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":48048,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":48040,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":48038,"name":"amount_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":48010,"src":"12579:7:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":48039,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12589:1:37","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12579:11:37","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":48047,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":48041,"name":"amount_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":48010,"src":"12594:7:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":48044,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"12613:4:37","typeDescriptions":{"typeIdentifier":"t_contract$_kBase_$48490","typeString":"contract kBase"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_kBase_$48490","typeString":"contract kBase"}],"id":48043,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12605:7:37","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":48042,"name":"address","nodeType":"ElementaryTypeName","src":"12605:7:37","typeDescriptions":{}}},"id":48045,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12605:13:37","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":48046,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12619:7:37","memberName":"balance","nodeType":"MemberAccess","src":"12605:21:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12594:32:37","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12579:47:37","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":48049,"name":"KBASE_ZERO_AMOUNT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":48966,"src":"12628:17:37","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":48037,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"12571:7:37","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":48050,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12571:75:37","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":48051,"nodeType":"ExpressionStatement","src":"12571:75:37"},{"assignments":[48053,null],"declarations":[{"constant":false,"id":48053,"mutability":"mutable","name":"success","nameLocation":"12667:7:37","nodeType":"VariableDeclaration","scope":48071,"src":"12662:12:37","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":48052,"name":"bool","nodeType":"ElementaryTypeName","src":"12662:4:37","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":48060,"initialValue":{"arguments":[{"hexValue":"","id":48058,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12706:2:37","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":48054,"name":"to_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":48008,"src":"12679:3:37","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":48055,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12683:4:37","memberName":"call","nodeType":"MemberAccess","src":"12679:8:37","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":48057,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":48056,"name":"amount_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":48010,"src":"12696:7:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"12679:26:37","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":48059,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12679:30:37","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"12661:48:37"},{"expression":{"arguments":[{"id":48062,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":48053,"src":"12731:7:37","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":48063,"name":"KBASE_TRANSFER_FAILED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":48969,"src":"12740:21:37","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":48061,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"12723:7:37","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":48064,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12723:39:37","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":48065,"nodeType":"ExpressionStatement","src":"12723:39:37"},{"eventCall":{"arguments":[{"id":48067,"name":"to_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":48008,"src":"12793:3:37","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":48068,"name":"amount_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":48010,"src":"12798:7:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":48066,"name":"RescuedETH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":47882,"src":"12782:10:37","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":48069,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12782:24:37","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":48070,"nodeType":"EmitStatement","src":"12777:29:37"}]}}]},"documentation":{"id":48004,"nodeType":"StructuredDocumentation","src":"10997:1294:37","text":"@notice Rescues accidentally sent assets (ETH or ERC20 tokens) preventing permanent loss of funds\n @dev This function implements a critical safety mechanism for recovering tokens or ETH that become stuck\n in the contract through user error or airdrops. The rescue process: (1) Validates admin authorization to\n prevent unauthorized fund extraction, (2) Ensures recipient address is valid to prevent burning funds,\n (3) For ETH rescue (asset_=address(0)): validates balance sufficiency and uses low-level call for transfer,\n (4) For ERC20 rescue: critically checks the token is NOT a registered protocol asset (USDC, WBTC, etc.) to\n protect user deposits and protocol integrity, then validates balance and uses SafeTransferLib for secure\n transfer. The distinction between ETH and ERC20 handling accounts for their different transfer mechanisms.\n Protocol assets are explicitly blocked from rescue to prevent admin abuse and maintain user trust.\n @param asset_ The asset to rescue (use address(0) for native ETH, otherwise ERC20 token address)\n @param to_ The recipient address that will receive the rescued assets (cannot be zero address)\n @param amount_ The quantity to rescue (must not exceed available balance)"},"functionSelector":"d01b5de4","implemented":true,"kind":"function","modifiers":[],"name":"rescueAssets","nameLocation":"12305:12:37","parameters":{"id":48011,"nodeType":"ParameterList","parameters":[{"constant":false,"id":48006,"mutability":"mutable","name":"asset_","nameLocation":"12326:6:37","nodeType":"VariableDeclaration","scope":48113,"src":"12318:14:37","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":48005,"name":"address","nodeType":"ElementaryTypeName","src":"12318:7:37","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":48008,"mutability":"mutable","name":"to_","nameLocation":"12342:3:37","nodeType":"VariableDeclaration","scope":48113,"src":"12334:11:37","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":48007,"name":"address","nodeType":"ElementaryTypeName","src":"12334:7:37","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":48010,"mutability":"mutable","name":"amount_","nameLocation":"12355:7:37","nodeType":"VariableDeclaration","scope":48113,"src":"12347:15:37","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":48009,"name":"uint256","nodeType":"ElementaryTypeName","src":"12347:7:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12317:46:37"},"returnParameters":{"id":48012,"nodeType":"ParameterList","parameters":[],"src":"12381:0:37"},"scope":48490,"stateMutability":"payable","virtual":false,"visibility":"external"},{"id":48126,"nodeType":"FunctionDefinition","src":"13473:96:37","nodes":[],"body":{"id":48125,"nodeType":"Block","src":"13525:44:37","nodes":[],"statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":48121,"name":"_registry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":48151,"src":"13550:9:37","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_contract$_IRegistry_$50185_$","typeString":"function () view returns (contract IRegistry)"}},"id":48122,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13550:11:37","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IRegistry_$50185","typeString":"contract IRegistry"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IRegistry_$50185","typeString":"contract IRegistry"}],"id":48120,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13542:7:37","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":48119,"name":"address","nodeType":"ElementaryTypeName","src":"13542:7:37","typeDescriptions":{}}},"id":48123,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13542:20:37","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":48118,"id":48124,"nodeType":"Return","src":"13535:27:37"}]},"documentation":{"id":48114,"nodeType":"StructuredDocumentation","src":"13323:145:37","text":"@notice Returns the registry contract address\n @return The kRegistry contract address\n @dev Reverts if contract not initialized"},"functionSelector":"7b103999","implemented":true,"kind":"function","modifiers":[],"name":"registry","nameLocation":"13482:8:37","parameters":{"id":48115,"nodeType":"ParameterList","parameters":[],"src":"13490:2:37"},"returnParameters":{"id":48118,"nodeType":"ParameterList","parameters":[{"constant":false,"id":48117,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":48126,"src":"13516:7:37","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":48116,"name":"address","nodeType":"ElementaryTypeName","src":"13516:7:37","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"13515:9:37"},"scope":48490,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":48151,"nodeType":"FunctionDefinition","src":"13747:207:37","nodes":[],"body":{"id":48150,"nodeType":"Block","src":"13802:152:37","nodes":[],"statements":[{"assignments":[48135],"declarations":[{"constant":false,"id":48135,"mutability":"mutable","name":"$","nameLocation":"13833:1:37","nodeType":"VariableDeclaration","scope":48150,"src":"13812:22:37","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_kBaseStorage_$47905_storage_ptr","typeString":"struct kBase.kBaseStorage"},"typeName":{"id":48134,"nodeType":"UserDefinedTypeName","pathNode":{"id":48133,"name":"kBaseStorage","nameLocations":["13812:12:37"],"nodeType":"IdentifierPath","referencedDeclaration":47905,"src":"13812:12:37"},"referencedDeclaration":47905,"src":"13812:12:37","typeDescriptions":{"typeIdentifier":"t_struct$_kBaseStorage_$47905_storage_ptr","typeString":"struct kBase.kBaseStorage"}},"visibility":"internal"}],"id":48138,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":48136,"name":"_getBaseStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":47918,"src":"13837:15:37","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_kBaseStorage_$47905_storage_ptr_$","typeString":"function () pure returns (struct kBase.kBaseStorage storage pointer)"}},"id":48137,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13837:17:37","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_kBaseStorage_$47905_storage_ptr","typeString":"struct kBase.kBaseStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"13812:42:37"},{"expression":{"arguments":[{"expression":{"id":48140,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":48135,"src":"13872:1:37","typeDescriptions":{"typeIdentifier":"t_struct$_kBaseStorage_$47905_storage_ptr","typeString":"struct kBase.kBaseStorage storage pointer"}},"id":48141,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13874:11:37","memberName":"initialized","nodeType":"MemberAccess","referencedDeclaration":47901,"src":"13872:13:37","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":48142,"name":"KBASE_NOT_INITIALIZED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":48957,"src":"13887:21:37","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":48139,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"13864:7:37","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":48143,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13864:45:37","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":48144,"nodeType":"ExpressionStatement","src":"13864:45:37"},{"expression":{"arguments":[{"expression":{"id":48146,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":48135,"src":"13936:1:37","typeDescriptions":{"typeIdentifier":"t_struct$_kBaseStorage_$47905_storage_ptr","typeString":"struct kBase.kBaseStorage storage pointer"}},"id":48147,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13938:8:37","memberName":"registry","nodeType":"MemberAccess","referencedDeclaration":47898,"src":"13936:10:37","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":48145,"name":"IRegistry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":50185,"src":"13926:9:37","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IRegistry_$50185_$","typeString":"type(contract IRegistry)"}},"id":48148,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13926:21:37","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IRegistry_$50185","typeString":"contract IRegistry"}},"functionReturnParameters":48132,"id":48149,"nodeType":"Return","src":"13919:28:37"}]},"documentation":{"id":48127,"nodeType":"StructuredDocumentation","src":"13575:167:37","text":"@notice Returns the registry contract interface\n @return IRegistry interface for registry interaction\n @dev Internal helper for typed registry access"},"implemented":true,"kind":"function","modifiers":[],"name":"_registry","nameLocation":"13756:9:37","parameters":{"id":48128,"nodeType":"ParameterList","parameters":[],"src":"13765:2:37"},"returnParameters":{"id":48132,"nodeType":"ParameterList","parameters":[{"constant":false,"id":48131,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":48151,"src":"13791:9:37","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IRegistry_$50185","typeString":"contract IRegistry"},"typeName":{"id":48130,"nodeType":"UserDefinedTypeName","pathNode":{"id":48129,"name":"IRegistry","nameLocations":["13791:9:37"],"nodeType":"IdentifierPath","referencedDeclaration":50185,"src":"13791:9:37"},"referencedDeclaration":50185,"src":"13791:9:37","typeDescriptions":{"typeIdentifier":"t_contract$_IRegistry_$50185","typeString":"contract IRegistry"}},"visibility":"internal"}],"src":"13790:11:37"},"scope":48490,"stateMutability":"view","virtual":false,"visibility":"internal"},{"id":48166,"nodeType":"FunctionDefinition","src":"14323:134:37","nodes":[],"body":{"id":48165,"nodeType":"Block","src":"14399:58:37","nodes":[],"statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":48160,"name":"vault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":48154,"src":"14431:5:37","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":48159,"name":"IkStakingVault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":51333,"src":"14416:14:37","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IkStakingVault_$51333_$","typeString":"type(contract IkStakingVault)"}},"id":48161,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14416:21:37","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IkStakingVault_$51333","typeString":"contract IkStakingVault"}},"id":48162,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14438:10:37","memberName":"getBatchId","nodeType":"MemberAccess","referencedDeclaration":52053,"src":"14416:32:37","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_bytes32_$","typeString":"function () view external returns (bytes32)"}},"id":48163,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14416:34:37","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":48158,"id":48164,"nodeType":"Return","src":"14409:41:37"}]},"documentation":{"id":48152,"nodeType":"StructuredDocumentation","src":"14134:184:37","text":"@notice Gets the current batch ID for a given vault\n @param vault The vault address\n @return batchId The current batch ID\n @dev Reverts if vault not registered"},"implemented":true,"kind":"function","modifiers":[],"name":"_getBatchId","nameLocation":"14332:11:37","parameters":{"id":48155,"nodeType":"ParameterList","parameters":[{"constant":false,"id":48154,"mutability":"mutable","name":"vault","nameLocation":"14352:5:37","nodeType":"VariableDeclaration","scope":48166,"src":"14344:13:37","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":48153,"name":"address","nodeType":"ElementaryTypeName","src":"14344:7:37","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14343:15:37"},"returnParameters":{"id":48158,"nodeType":"ParameterList","parameters":[{"constant":false,"id":48157,"mutability":"mutable","name":"batchId","nameLocation":"14390:7:37","nodeType":"VariableDeclaration","scope":48166,"src":"14382:15:37","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":48156,"name":"bytes32","nodeType":"ElementaryTypeName","src":"14382:7:37","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"14381:17:37"},"scope":48490,"stateMutability":"view","virtual":false,"visibility":"internal"},{"id":48196,"nodeType":"FunctionDefinition","src":"14742:255:37","nodes":[],"body":{"id":48195,"nodeType":"Block","src":"14849:148:37","nodes":[],"statements":[{"expression":{"id":48183,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":48176,"name":"batchReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":48174,"src":"14859:13:37","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":48181,"name":"batchId_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":48171,"src":"14915:8:37","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"arguments":[{"id":48178,"name":"vault_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":48169,"src":"14890:6:37","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":48177,"name":"IkStakingVault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":51333,"src":"14875:14:37","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IkStakingVault_$51333_$","typeString":"type(contract IkStakingVault)"}},"id":48179,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14875:22:37","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IkStakingVault_$51333","typeString":"contract IkStakingVault"}},"id":48180,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14898:16:37","memberName":"getBatchReceiver","nodeType":"MemberAccess","referencedDeclaration":52015,"src":"14875:39:37","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32) view external returns (address)"}},"id":48182,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14875:49:37","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"14859:65:37","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":48184,"nodeType":"ExpressionStatement","src":"14859:65:37"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":48191,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":48186,"name":"batchReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":48174,"src":"14942:13:37","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":48189,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14967:1:37","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":48188,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14959:7:37","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":48187,"name":"address","nodeType":"ElementaryTypeName","src":"14959:7:37","typeDescriptions":{}}},"id":48190,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14959:10:37","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"14942:27:37","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":48192,"name":"KBASE_ZERO_ADDRESS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":48963,"src":"14971:18:37","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":48185,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"14934:7:37","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":48193,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14934:56:37","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":48194,"nodeType":"ExpressionStatement","src":"14934:56:37"}]},"documentation":{"id":48167,"nodeType":"StructuredDocumentation","src":"14463:274:37","text":"@notice Gets the current batch receiver for a given batchId\n @param vault_ The vault address\n @param batchId_ The batch ID\n @return batchReceiver The address of the batchReceiver where tokens will be sent\n @dev Reverts if vault not registered"},"implemented":true,"kind":"function","modifiers":[],"name":"_getBatchReceiver","nameLocation":"14751:17:37","parameters":{"id":48172,"nodeType":"ParameterList","parameters":[{"constant":false,"id":48169,"mutability":"mutable","name":"vault_","nameLocation":"14777:6:37","nodeType":"VariableDeclaration","scope":48196,"src":"14769:14:37","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":48168,"name":"address","nodeType":"ElementaryTypeName","src":"14769:7:37","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":48171,"mutability":"mutable","name":"batchId_","nameLocation":"14793:8:37","nodeType":"VariableDeclaration","scope":48196,"src":"14785:16:37","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":48170,"name":"bytes32","nodeType":"ElementaryTypeName","src":"14785:7:37","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"14768:34:37"},"returnParameters":{"id":48175,"nodeType":"ParameterList","parameters":[{"constant":false,"id":48174,"mutability":"mutable","name":"batchReceiver","nameLocation":"14834:13:37","nodeType":"VariableDeclaration","scope":48196,"src":"14826:21:37","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":48173,"name":"address","nodeType":"ElementaryTypeName","src":"14826:7:37","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14825:23:37"},"scope":48490,"stateMutability":"view","virtual":false,"visibility":"internal"},{"id":48221,"nodeType":"FunctionDefinition","src":"15167:190:37","nodes":[],"body":{"id":48220,"nodeType":"Block","src":"15229:128:37","nodes":[],"statements":[{"expression":{"id":48208,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":48202,"name":"minter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":48200,"src":"15239:6:37","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":48206,"name":"K_MINTER","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":47888,"src":"15276:8:37","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":48203,"name":"_registry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":48151,"src":"15248:9:37","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_contract$_IRegistry_$50185_$","typeString":"function () view returns (contract IRegistry)"}},"id":48204,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15248:11:37","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IRegistry_$50185","typeString":"contract IRegistry"}},"id":48205,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15260:15:37","memberName":"getContractById","nodeType":"MemberAccess","referencedDeclaration":49708,"src":"15248:27:37","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32) view external returns (address)"}},"id":48207,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15248:37:37","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"15239:46:37","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":48209,"nodeType":"ExpressionStatement","src":"15239:46:37"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":48216,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":48211,"name":"minter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":48200,"src":"15303:6:37","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":48214,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15321:1:37","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":48213,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15313:7:37","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":48212,"name":"address","nodeType":"ElementaryTypeName","src":"15313:7:37","typeDescriptions":{}}},"id":48215,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15313:10:37","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"15303:20:37","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":48217,"name":"KBASE_CONTRACT_NOT_FOUND","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":48975,"src":"15325:24:37","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":48210,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"15295:7:37","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":48218,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15295:55:37","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":48219,"nodeType":"ExpressionStatement","src":"15295:55:37"}]},"documentation":{"id":48197,"nodeType":"StructuredDocumentation","src":"15003:159:37","text":"@notice Gets the kMinter singleton contract address\n @return minter The kMinter contract address\n @dev Reverts if kMinter not set in registry"},"implemented":true,"kind":"function","modifiers":[],"name":"_getKMinter","nameLocation":"15176:11:37","parameters":{"id":48198,"nodeType":"ParameterList","parameters":[],"src":"15187:2:37"},"returnParameters":{"id":48201,"nodeType":"ParameterList","parameters":[{"constant":false,"id":48200,"mutability":"mutable","name":"minter","nameLocation":"15221:6:37","nodeType":"VariableDeclaration","scope":48221,"src":"15213:14:37","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":48199,"name":"address","nodeType":"ElementaryTypeName","src":"15213:7:37","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"15212:16:37"},"scope":48490,"stateMutability":"view","virtual":false,"visibility":"internal"},{"id":48246,"nodeType":"FunctionDefinition","src":"15542:201:37","nodes":[],"body":{"id":48245,"nodeType":"Block","src":"15609:134:37","nodes":[],"statements":[{"expression":{"id":48233,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":48227,"name":"router","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":48225,"src":"15619:6:37","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":48231,"name":"K_ASSET_ROUTER","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":47894,"src":"15656:14:37","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":48228,"name":"_registry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":48151,"src":"15628:9:37","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_contract$_IRegistry_$50185_$","typeString":"function () view returns (contract IRegistry)"}},"id":48229,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15628:11:37","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IRegistry_$50185","typeString":"contract IRegistry"}},"id":48230,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15640:15:37","memberName":"getContractById","nodeType":"MemberAccess","referencedDeclaration":49708,"src":"15628:27:37","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32) view external returns (address)"}},"id":48232,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15628:43:37","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"15619:52:37","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":48234,"nodeType":"ExpressionStatement","src":"15619:52:37"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":48241,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":48236,"name":"router","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":48225,"src":"15689:6:37","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":48239,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15707:1:37","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":48238,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15699:7:37","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":48237,"name":"address","nodeType":"ElementaryTypeName","src":"15699:7:37","typeDescriptions":{}}},"id":48240,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15699:10:37","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"15689:20:37","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":48242,"name":"KBASE_CONTRACT_NOT_FOUND","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":48975,"src":"15711:24:37","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":48235,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"15681:7:37","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":48243,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15681:55:37","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":48244,"nodeType":"ExpressionStatement","src":"15681:55:37"}]},"documentation":{"id":48222,"nodeType":"StructuredDocumentation","src":"15363:174:37","text":"@notice Gets the kAssetRouter singleton contract address\n @return router The kAssetRouter contract address\n @dev Reverts if kAssetRouter not set in registry"},"implemented":true,"kind":"function","modifiers":[],"name":"_getKAssetRouter","nameLocation":"15551:16:37","parameters":{"id":48223,"nodeType":"ParameterList","parameters":[],"src":"15567:2:37"},"returnParameters":{"id":48226,"nodeType":"ParameterList","parameters":[{"constant":false,"id":48225,"mutability":"mutable","name":"router","nameLocation":"15601:6:37","nodeType":"VariableDeclaration","scope":48246,"src":"15593:14:37","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":48224,"name":"address","nodeType":"ElementaryTypeName","src":"15593:7:37","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"15592:16:37"},"scope":48490,"stateMutability":"view","virtual":false,"visibility":"internal"},{"id":48273,"nodeType":"FunctionDefinition","src":"15957:206:37","nodes":[],"body":{"id":48272,"nodeType":"Block","src":"16039:124:37","nodes":[],"statements":[{"expression":{"id":48260,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":48254,"name":"kToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":48252,"src":"16049:6:37","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":48258,"name":"asset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":48249,"src":"16084:5:37","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":48255,"name":"_registry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":48151,"src":"16058:9:37","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_contract$_IRegistry_$50185_$","typeString":"function () view returns (contract IRegistry)"}},"id":48256,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16058:11:37","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IRegistry_$50185","typeString":"contract IRegistry"}},"id":48257,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16070:13:37","memberName":"assetToKToken","nodeType":"MemberAccess","referencedDeclaration":49861,"src":"16058:25:37","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_address_$","typeString":"function (address) view external returns (address)"}},"id":48259,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16058:32:37","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"16049:41:37","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":48261,"nodeType":"ExpressionStatement","src":"16049:41:37"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":48268,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":48263,"name":"kToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":48252,"src":"16108:6:37","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":48266,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16126:1:37","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":48265,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16118:7:37","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":48264,"name":"address","nodeType":"ElementaryTypeName","src":"16118:7:37","typeDescriptions":{}}},"id":48267,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16118:10:37","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"16108:20:37","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":48269,"name":"KBASE_ASSET_NOT_SUPPORTED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":48978,"src":"16130:25:37","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":48262,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"16100:7:37","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":48270,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16100:56:37","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":48271,"nodeType":"ExpressionStatement","src":"16100:56:37"}]},"documentation":{"id":48247,"nodeType":"StructuredDocumentation","src":"15749:203:37","text":"@notice Gets the kToken address for a given asset\n @param asset The underlying asset address\n @return kToken The corresponding kToken address\n @dev Reverts if asset not supported"},"implemented":true,"kind":"function","modifiers":[],"name":"_getKTokenForAsset","nameLocation":"15966:18:37","parameters":{"id":48250,"nodeType":"ParameterList","parameters":[{"constant":false,"id":48249,"mutability":"mutable","name":"asset","nameLocation":"15993:5:37","nodeType":"VariableDeclaration","scope":48273,"src":"15985:13:37","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":48248,"name":"address","nodeType":"ElementaryTypeName","src":"15985:7:37","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"15984:15:37"},"returnParameters":{"id":48253,"nodeType":"ParameterList","parameters":[{"constant":false,"id":48252,"mutability":"mutable","name":"kToken","nameLocation":"16031:6:37","nodeType":"VariableDeclaration","scope":48273,"src":"16023:14:37","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":48251,"name":"address","nodeType":"ElementaryTypeName","src":"16023:7:37","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"16022:16:37"},"scope":48490,"stateMutability":"view","virtual":false,"visibility":"internal"},{"id":48299,"nodeType":"FunctionDefinition","src":"16365:204:37","nodes":[],"body":{"id":48298,"nodeType":"Block","src":"16453:116:37","nodes":[],"statements":[{"expression":{"id":48288,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":48282,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":48280,"src":"16463:6:37","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":48286,"name":"vault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":48276,"src":"16499:5:37","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":48283,"name":"_registry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":48151,"src":"16472:9:37","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_contract$_IRegistry_$50185_$","typeString":"function () view returns (contract IRegistry)"}},"id":48284,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16472:11:37","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IRegistry_$50185","typeString":"contract IRegistry"}},"id":48285,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16484:14:37","memberName":"getVaultAssets","nodeType":"MemberAccess","referencedDeclaration":49853,"src":"16472:26:37","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_array$_t_address_$dyn_memory_ptr_$","typeString":"function (address) view external returns (address[] memory)"}},"id":48287,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16472:33:37","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"src":"16463:42:37","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":48289,"nodeType":"ExpressionStatement","src":"16463:42:37"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":48294,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":48291,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":48280,"src":"16523:6:37","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":48292,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16530:6:37","memberName":"length","nodeType":"MemberAccess","src":"16523:13:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":48293,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16539:1:37","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"16523:17:37","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":48295,"name":"KBASE_INVALID_VAULT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":48981,"src":"16542:19:37","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":48290,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"16515:7:37","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":48296,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16515:47:37","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":48297,"nodeType":"ExpressionStatement","src":"16515:47:37"}]},"documentation":{"id":48274,"nodeType":"StructuredDocumentation","src":"16169:191:37","text":"@notice Gets the asset managed by a vault\n @param vault The vault address\n @return assets The asset address managed by the vault\n @dev Reverts if vault not registered"},"implemented":true,"kind":"function","modifiers":[],"name":"_getVaultAssets","nameLocation":"16374:15:37","parameters":{"id":48277,"nodeType":"ParameterList","parameters":[{"constant":false,"id":48276,"mutability":"mutable","name":"vault","nameLocation":"16398:5:37","nodeType":"VariableDeclaration","scope":48299,"src":"16390:13:37","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":48275,"name":"address","nodeType":"ElementaryTypeName","src":"16390:7:37","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"16389:15:37"},"returnParameters":{"id":48281,"nodeType":"ParameterList","parameters":[{"constant":false,"id":48280,"mutability":"mutable","name":"assets","nameLocation":"16445:6:37","nodeType":"VariableDeclaration","scope":48299,"src":"16428:23:37","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":48278,"name":"address","nodeType":"ElementaryTypeName","src":"16428:7:37","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":48279,"nodeType":"ArrayTypeName","src":"16428:9:37","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"16427:25:37"},"scope":48490,"stateMutability":"view","virtual":false,"visibility":"internal"},{"id":48332,"nodeType":"FunctionDefinition","src":"16775:237:37","nodes":[],"body":{"id":48331,"nodeType":"Block","src":"16856:156:37","nodes":[],"statements":[{"expression":{"id":48319,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":48307,"name":"vault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":48305,"src":"16866:5:37","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":48311,"name":"asset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":48302,"src":"16909:5:37","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"expression":{"expression":{"id":48314,"name":"IRegistry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":50185,"src":"16922:9:37","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IRegistry_$50185_$","typeString":"type(contract IRegistry)"}},"id":48315,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16932:9:37","memberName":"VaultType","nodeType":"MemberAccess","referencedDeclaration":50184,"src":"16922:19:37","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_VaultType_$50184_$","typeString":"type(enum IRegistry.VaultType)"}},"id":48316,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16942:2:37","memberName":"DN","nodeType":"MemberAccess","referencedDeclaration":49930,"src":"16922:22:37","typeDescriptions":{"typeIdentifier":"t_enum$_VaultType_$50184","typeString":"enum IRegistry.VaultType"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_VaultType_$50184","typeString":"enum IRegistry.VaultType"}],"id":48313,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16916:5:37","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":48312,"name":"uint8","nodeType":"ElementaryTypeName","src":"16916:5:37","typeDescriptions":{}}},"id":48317,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16916:29:37","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":48308,"name":"_registry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":48151,"src":"16874:9:37","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_contract$_IRegistry_$50185_$","typeString":"function () view returns (contract IRegistry)"}},"id":48309,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16874:11:37","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IRegistry_$50185","typeString":"contract IRegistry"}},"id":48310,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16886:22:37","memberName":"getVaultByAssetAndType","nodeType":"MemberAccess","referencedDeclaration":49742,"src":"16874:34:37","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_uint8_$returns$_t_address_$","typeString":"function (address,uint8) view external returns (address)"}},"id":48318,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16874:72:37","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"16866:80:37","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":48320,"nodeType":"ExpressionStatement","src":"16866:80:37"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":48327,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":48322,"name":"vault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":48305,"src":"16964:5:37","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":48325,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16981:1:37","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":48324,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16973:7:37","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":48323,"name":"address","nodeType":"ElementaryTypeName","src":"16973:7:37","typeDescriptions":{}}},"id":48326,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16973:10:37","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"16964:19:37","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":48328,"name":"KBASE_INVALID_VAULT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":48981,"src":"16985:19:37","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":48321,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"16956:7:37","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":48329,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16956:49:37","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":48330,"nodeType":"ExpressionStatement","src":"16956:49:37"}]},"documentation":{"id":48300,"nodeType":"StructuredDocumentation","src":"16575:195:37","text":"@notice Gets the DN vault address for a given asset\n @param asset The asset address\n @return vault The corresponding DN vault address\n @dev Reverts if asset not supported"},"implemented":true,"kind":"function","modifiers":[],"name":"_getDNVaultByAsset","nameLocation":"16784:18:37","parameters":{"id":48303,"nodeType":"ParameterList","parameters":[{"constant":false,"id":48302,"mutability":"mutable","name":"asset","nameLocation":"16811:5:37","nodeType":"VariableDeclaration","scope":48332,"src":"16803:13:37","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":48301,"name":"address","nodeType":"ElementaryTypeName","src":"16803:7:37","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"16802:15:37"},"returnParameters":{"id":48306,"nodeType":"ParameterList","parameters":[{"constant":false,"id":48305,"mutability":"mutable","name":"vault","nameLocation":"16849:5:37","nodeType":"VariableDeclaration","scope":48332,"src":"16841:13:37","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":48304,"name":"address","nodeType":"ElementaryTypeName","src":"16841:7:37","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"16840:15:37"},"scope":48490,"stateMutability":"view","virtual":false,"visibility":"internal"},{"id":48347,"nodeType":"FunctionDefinition","src":"17619:110:37","nodes":[],"body":{"id":48346,"nodeType":"Block","src":"17680:49:37","nodes":[],"statements":[{"expression":{"arguments":[{"id":48343,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":48335,"src":"17717:4:37","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":48340,"name":"_registry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":48151,"src":"17697:9:37","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_contract$_IRegistry_$50185_$","typeString":"function () view returns (contract IRegistry)"}},"id":48341,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17697:11:37","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IRegistry_$50185","typeString":"contract IRegistry"}},"id":48342,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17709:7:37","memberName":"isAdmin","nodeType":"MemberAccess","referencedDeclaration":49758,"src":"17697:19:37","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view external returns (bool)"}},"id":48344,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17697:25:37","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":48339,"id":48345,"nodeType":"Return","src":"17690:32:37"}]},"documentation":{"id":48333,"nodeType":"StructuredDocumentation","src":"17197:417:37","text":"@notice Checks if an address has admin role in the protocol governance\n @dev Admins can execute critical functions like asset rescue and protocol configuration changes.\n This validation is used throughout inheriting contracts to enforce permission boundaries.\n @param user The address to check for admin privileges\n @return Whether the address is registered as an admin in the registry"},"implemented":true,"kind":"function","modifiers":[],"name":"_isAdmin","nameLocation":"17628:8:37","parameters":{"id":48336,"nodeType":"ParameterList","parameters":[{"constant":false,"id":48335,"mutability":"mutable","name":"user","nameLocation":"17645:4:37","nodeType":"VariableDeclaration","scope":48347,"src":"17637:12:37","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":48334,"name":"address","nodeType":"ElementaryTypeName","src":"17637:7:37","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"17636:14:37"},"returnParameters":{"id":48339,"nodeType":"ParameterList","parameters":[{"constant":false,"id":48338,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":48347,"src":"17674:4:37","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":48337,"name":"bool","nodeType":"ElementaryTypeName","src":"17674:4:37","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"17673:6:37"},"scope":48490,"stateMutability":"view","virtual":false,"visibility":"internal"},{"id":48362,"nodeType":"FunctionDefinition","src":"18209:128:37","nodes":[],"body":{"id":48361,"nodeType":"Block","src":"18279:58:37","nodes":[],"statements":[{"expression":{"arguments":[{"id":48358,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":48350,"src":"18325:4:37","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":48355,"name":"_registry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":48151,"src":"18296:9:37","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_contract$_IRegistry_$50185_$","typeString":"function () view returns (contract IRegistry)"}},"id":48356,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18296:11:37","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IRegistry_$50185","typeString":"contract IRegistry"}},"id":48357,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"18308:16:37","memberName":"isEmergencyAdmin","nodeType":"MemberAccess","referencedDeclaration":49766,"src":"18296:28:37","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view external returns (bool)"}},"id":48359,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18296:34:37","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":48354,"id":48360,"nodeType":"Return","src":"18289:41:37"}]},"documentation":{"id":48348,"nodeType":"StructuredDocumentation","src":"17735:469:37","text":"@notice Checks if an address has emergency admin role for critical protocol interventions\n @dev Emergency admins can pause/unpause contracts during security incidents or market anomalies.\n This elevated role enables rapid response to threats while limiting scope to emergency functions only.\n @param user The address to check for emergency admin privileges\n @return Whether the address is registered as an emergency admin in the registry"},"implemented":true,"kind":"function","modifiers":[],"name":"_isEmergencyAdmin","nameLocation":"18218:17:37","parameters":{"id":48351,"nodeType":"ParameterList","parameters":[{"constant":false,"id":48350,"mutability":"mutable","name":"user","nameLocation":"18244:4:37","nodeType":"VariableDeclaration","scope":48362,"src":"18236:12:37","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":48349,"name":"address","nodeType":"ElementaryTypeName","src":"18236:7:37","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"18235:14:37"},"returnParameters":{"id":48354,"nodeType":"ParameterList","parameters":[{"constant":false,"id":48353,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":48362,"src":"18273:4:37","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":48352,"name":"bool","nodeType":"ElementaryTypeName","src":"18273:4:37","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"18272:6:37"},"scope":48490,"stateMutability":"view","virtual":false,"visibility":"internal"},{"id":48377,"nodeType":"FunctionDefinition","src":"18786:116:37","nodes":[],"body":{"id":48376,"nodeType":"Block","src":"18850:52:37","nodes":[],"statements":[{"expression":{"arguments":[{"id":48373,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":48365,"src":"18890:4:37","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":48370,"name":"_registry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":48151,"src":"18867:9:37","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_contract$_IRegistry_$50185_$","typeString":"function () view returns (contract IRegistry)"}},"id":48371,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18867:11:37","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IRegistry_$50185","typeString":"contract IRegistry"}},"id":48372,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"18879:10:37","memberName":"isGuardian","nodeType":"MemberAccess","referencedDeclaration":49774,"src":"18867:22:37","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view external returns (bool)"}},"id":48374,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18867:28:37","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":48369,"id":48375,"nodeType":"Return","src":"18860:35:37"}]},"documentation":{"id":48363,"nodeType":"StructuredDocumentation","src":"18343:438:37","text":"@notice Checks if an address has guardian role for protocol monitoring and verification\n @dev Guardians verify settlement proposals and can cancel incorrect settlements during cooldown periods.\n This role provides an additional security layer for yield distribution accuracy.\n @param user The address to check for guardian privileges\n @return Whether the address is registered as a guardian in the registry"},"implemented":true,"kind":"function","modifiers":[],"name":"_isGuardian","nameLocation":"18795:11:37","parameters":{"id":48366,"nodeType":"ParameterList","parameters":[{"constant":false,"id":48365,"mutability":"mutable","name":"user","nameLocation":"18815:4:37","nodeType":"VariableDeclaration","scope":48377,"src":"18807:12:37","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":48364,"name":"address","nodeType":"ElementaryTypeName","src":"18807:7:37","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"18806:14:37"},"returnParameters":{"id":48369,"nodeType":"ParameterList","parameters":[{"constant":false,"id":48368,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":48377,"src":"18844:4:37","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":48367,"name":"bool","nodeType":"ElementaryTypeName","src":"18844:4:37","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"18843:6:37"},"scope":48490,"stateMutability":"view","virtual":false,"visibility":"internal"},{"id":48392,"nodeType":"FunctionDefinition","src":"19347:114:37","nodes":[],"body":{"id":48391,"nodeType":"Block","src":"19410:51:37","nodes":[],"statements":[{"expression":{"arguments":[{"id":48388,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":48380,"src":"19449:4:37","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":48385,"name":"_registry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":48151,"src":"19427:9:37","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_contract$_IRegistry_$50185_$","typeString":"function () view returns (contract IRegistry)"}},"id":48386,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19427:11:37","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IRegistry_$50185","typeString":"contract IRegistry"}},"id":48387,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19439:9:37","memberName":"isRelayer","nodeType":"MemberAccess","referencedDeclaration":49782,"src":"19427:21:37","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view external returns (bool)"}},"id":48389,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19427:27:37","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":48384,"id":48390,"nodeType":"Return","src":"19420:34:37"}]},"documentation":{"id":48378,"nodeType":"StructuredDocumentation","src":"18908:434:37","text":"@notice Checks if an address has relayer role for automated protocol operations\n @dev Relayers execute batched operations and trigger settlements on behalf of users to optimize gas costs.\n This role enables automation while maintaining security through limited permissions.\n @param user The address to check for relayer privileges\n @return Whether the address is registered as a relayer in the registry"},"implemented":true,"kind":"function","modifiers":[],"name":"_isRelayer","nameLocation":"19356:10:37","parameters":{"id":48381,"nodeType":"ParameterList","parameters":[{"constant":false,"id":48380,"mutability":"mutable","name":"user","nameLocation":"19375:4:37","nodeType":"VariableDeclaration","scope":48392,"src":"19367:12:37","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":48379,"name":"address","nodeType":"ElementaryTypeName","src":"19367:7:37","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"19366:14:37"},"returnParameters":{"id":48384,"nodeType":"ParameterList","parameters":[{"constant":false,"id":48383,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":48392,"src":"19404:4:37","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":48382,"name":"bool","nodeType":"ElementaryTypeName","src":"19404:4:37","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"19403:6:37"},"scope":48490,"stateMutability":"view","virtual":false,"visibility":"internal"},{"id":48407,"nodeType":"FunctionDefinition","src":"19916:122:37","nodes":[],"body":{"id":48406,"nodeType":"Block","src":"19983:55:37","nodes":[],"statements":[{"expression":{"arguments":[{"id":48403,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":48395,"src":"20026:4:37","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":48400,"name":"_registry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":48151,"src":"20000:9:37","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_contract$_IRegistry_$50185_$","typeString":"function () view returns (contract IRegistry)"}},"id":48401,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20000:11:37","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IRegistry_$50185","typeString":"contract IRegistry"}},"id":48402,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"20012:13:37","memberName":"isInstitution","nodeType":"MemberAccess","referencedDeclaration":49790,"src":"20000:25:37","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view external returns (bool)"}},"id":48404,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20000:31:37","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":48399,"id":48405,"nodeType":"Return","src":"19993:38:37"}]},"documentation":{"id":48393,"nodeType":"StructuredDocumentation","src":"19467:444:37","text":"@notice Checks if an address is registered as an institutional user\n @dev Institutions have special privileges in kMinter for large-scale minting and redemption operations.\n This distinction enables optimized flows for high-volume users while maintaining retail accessibility.\n @param user The address to check for institutional status\n @return Whether the address is registered as an institution in the registry"},"implemented":true,"kind":"function","modifiers":[],"name":"_isInstitution","nameLocation":"19925:14:37","parameters":{"id":48396,"nodeType":"ParameterList","parameters":[{"constant":false,"id":48395,"mutability":"mutable","name":"user","nameLocation":"19948:4:37","nodeType":"VariableDeclaration","scope":48407,"src":"19940:12:37","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":48394,"name":"address","nodeType":"ElementaryTypeName","src":"19940:7:37","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"19939:14:37"},"returnParameters":{"id":48399,"nodeType":"ParameterList","parameters":[{"constant":false,"id":48398,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":48407,"src":"19977:4:37","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":48397,"name":"bool","nodeType":"ElementaryTypeName","src":"19977:4:37","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"19976:6:37"},"scope":48490,"stateMutability":"view","virtual":false,"visibility":"internal"},{"id":48429,"nodeType":"FunctionDefinition","src":"20383:189:37","nodes":[],"body":{"id":48428,"nodeType":"Block","src":"20433:139:37","nodes":[],"statements":[{"assignments":[48415],"declarations":[{"constant":false,"id":48415,"mutability":"mutable","name":"$","nameLocation":"20464:1:37","nodeType":"VariableDeclaration","scope":48428,"src":"20443:22:37","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_kBaseStorage_$47905_storage_ptr","typeString":"struct kBase.kBaseStorage"},"typeName":{"id":48414,"nodeType":"UserDefinedTypeName","pathNode":{"id":48413,"name":"kBaseStorage","nameLocations":["20443:12:37"],"nodeType":"IdentifierPath","referencedDeclaration":47905,"src":"20443:12:37"},"referencedDeclaration":47905,"src":"20443:12:37","typeDescriptions":{"typeIdentifier":"t_struct$_kBaseStorage_$47905_storage_ptr","typeString":"struct kBase.kBaseStorage"}},"visibility":"internal"}],"id":48418,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":48416,"name":"_getBaseStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":47918,"src":"20468:15:37","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_kBaseStorage_$47905_storage_ptr_$","typeString":"function () pure returns (struct kBase.kBaseStorage storage pointer)"}},"id":48417,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20468:17:37","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_kBaseStorage_$47905_storage_ptr","typeString":"struct kBase.kBaseStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"20443:42:37"},{"expression":{"arguments":[{"expression":{"id":48420,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":48415,"src":"20503:1:37","typeDescriptions":{"typeIdentifier":"t_struct$_kBaseStorage_$47905_storage_ptr","typeString":"struct kBase.kBaseStorage storage pointer"}},"id":48421,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"20505:11:37","memberName":"initialized","nodeType":"MemberAccess","referencedDeclaration":47901,"src":"20503:13:37","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":48422,"name":"KBASE_NOT_INITIALIZED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":48957,"src":"20518:21:37","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":48419,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"20495:7:37","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":48423,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20495:45:37","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":48424,"nodeType":"ExpressionStatement","src":"20495:45:37"},{"expression":{"expression":{"id":48425,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":48415,"src":"20557:1:37","typeDescriptions":{"typeIdentifier":"t_struct$_kBaseStorage_$47905_storage_ptr","typeString":"struct kBase.kBaseStorage storage pointer"}},"id":48426,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"20559:6:37","memberName":"paused","nodeType":"MemberAccess","referencedDeclaration":47904,"src":"20557:8:37","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":48412,"id":48427,"nodeType":"Return","src":"20550:15:37"}]},"documentation":{"id":48408,"nodeType":"StructuredDocumentation","src":"20044:334:37","text":"@notice Checks if the contract is currently in emergency pause state\n @dev Used by inheriting contracts to halt operations during emergencies. When paused, state-changing\n functions should revert while view functions remain accessible for protocol monitoring.\n @return Whether the contract is currently paused"},"implemented":true,"kind":"function","modifiers":[],"name":"_isPaused","nameLocation":"20392:9:37","parameters":{"id":48409,"nodeType":"ParameterList","parameters":[],"src":"20401:2:37"},"returnParameters":{"id":48412,"nodeType":"ParameterList","parameters":[{"constant":false,"id":48411,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":48429,"src":"20427:4:37","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":48410,"name":"bool","nodeType":"ElementaryTypeName","src":"20427:4:37","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"20426:6:37"},"scope":48490,"stateMutability":"view","virtual":false,"visibility":"internal"},{"id":48459,"nodeType":"FunctionDefinition","src":"20973:227:37","nodes":[],"body":{"id":48458,"nodeType":"Block","src":"21037:163:37","nodes":[],"statements":[{"assignments":[48438],"declarations":[{"constant":false,"id":48438,"mutability":"mutable","name":"isTrue","nameLocation":"21052:6:37","nodeType":"VariableDeclaration","scope":48458,"src":"21047:11:37","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":48437,"name":"bool","nodeType":"ElementaryTypeName","src":"21047:4:37","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":48439,"nodeType":"VariableDeclarationStatement","src":"21047:11:37"},{"assignments":[48441],"declarations":[{"constant":false,"id":48441,"mutability":"mutable","name":"_kminter","nameLocation":"21076:8:37","nodeType":"VariableDeclaration","scope":48458,"src":"21068:16:37","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":48440,"name":"address","nodeType":"ElementaryTypeName","src":"21068:7:37","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":48447,"initialValue":{"arguments":[{"id":48445,"name":"K_MINTER","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":47888,"src":"21115:8:37","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":48442,"name":"_registry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":48151,"src":"21087:9:37","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_contract$_IRegistry_$50185_$","typeString":"function () view returns (contract IRegistry)"}},"id":48443,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21087:11:37","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IRegistry_$50185","typeString":"contract IRegistry"}},"id":48444,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"21099:15:37","memberName":"getContractById","nodeType":"MemberAccess","referencedDeclaration":49708,"src":"21087:27:37","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32) view external returns (address)"}},"id":48446,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21087:37:37","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"21068:56:37"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":48450,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":48448,"name":"_kminter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":48441,"src":"21138:8:37","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":48449,"name":"vault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":48432,"src":"21150:5:37","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"21138:17:37","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":48455,"nodeType":"IfStatement","src":"21134:36:37","trueBody":{"expression":{"id":48453,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":48451,"name":"isTrue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":48438,"src":"21157:6:37","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":48452,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"21166:4:37","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"21157:13:37","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":48454,"nodeType":"ExpressionStatement","src":"21157:13:37"}},{"expression":{"id":48456,"name":"isTrue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":48438,"src":"21187:6:37","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":48436,"id":48457,"nodeType":"Return","src":"21180:13:37"}]},"documentation":{"id":48430,"nodeType":"StructuredDocumentation","src":"20578:390:37","text":"@notice Checks if an address is the kMinter contract\n @dev Validates if the caller is the protocol's kMinter singleton for access control in vault operations.\n Used to ensure only kMinter can trigger institutional deposit and redemption flows.\n @param vault The address to check against kMinter\n @return Whether the address is the registered kMinter contract"},"implemented":true,"kind":"function","modifiers":[],"name":"_isKMinter","nameLocation":"20982:10:37","parameters":{"id":48433,"nodeType":"ParameterList","parameters":[{"constant":false,"id":48432,"mutability":"mutable","name":"vault","nameLocation":"21001:5:37","nodeType":"VariableDeclaration","scope":48459,"src":"20993:13:37","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":48431,"name":"address","nodeType":"ElementaryTypeName","src":"20993:7:37","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"20992:15:37"},"returnParameters":{"id":48436,"nodeType":"ParameterList","parameters":[{"constant":false,"id":48435,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":48459,"src":"21031:4:37","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":48434,"name":"bool","nodeType":"ElementaryTypeName","src":"21031:4:37","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"21030:6:37"},"scope":48490,"stateMutability":"view","virtual":false,"visibility":"internal"},{"id":48474,"nodeType":"FunctionDefinition","src":"21365:112:37","nodes":[],"body":{"id":48473,"nodeType":"Block","src":"21427:50:37","nodes":[],"statements":[{"expression":{"arguments":[{"id":48470,"name":"vault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":48462,"src":"21464:5:37","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":48467,"name":"_registry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":48151,"src":"21444:9:37","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_contract$_IRegistry_$50185_$","typeString":"function () view returns (contract IRegistry)"}},"id":48468,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21444:11:37","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IRegistry_$50185","typeString":"contract IRegistry"}},"id":48469,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"21456:7:37","memberName":"isVault","nodeType":"MemberAccess","referencedDeclaration":49822,"src":"21444:19:37","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view external returns (bool)"}},"id":48471,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21444:26:37","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":48466,"id":48472,"nodeType":"Return","src":"21437:33:37"}]},"documentation":{"id":48460,"nodeType":"StructuredDocumentation","src":"21206:154:37","text":"@notice Checks if an address is a registered vault\n @param vault The address to check\n @return Whether the address is a registered vault"},"implemented":true,"kind":"function","modifiers":[],"name":"_isVault","nameLocation":"21374:8:37","parameters":{"id":48463,"nodeType":"ParameterList","parameters":[{"constant":false,"id":48462,"mutability":"mutable","name":"vault","nameLocation":"21391:5:37","nodeType":"VariableDeclaration","scope":48474,"src":"21383:13:37","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":48461,"name":"address","nodeType":"ElementaryTypeName","src":"21383:7:37","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"21382:15:37"},"returnParameters":{"id":48466,"nodeType":"ParameterList","parameters":[{"constant":false,"id":48465,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":48474,"src":"21421:4:37","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":48464,"name":"bool","nodeType":"ElementaryTypeName","src":"21421:4:37","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"21420:6:37"},"scope":48490,"stateMutability":"view","virtual":false,"visibility":"internal"},{"id":48489,"nodeType":"FunctionDefinition","src":"21628:112:37","nodes":[],"body":{"id":48488,"nodeType":"Block","src":"21690:50:37","nodes":[],"statements":[{"expression":{"arguments":[{"id":48485,"name":"asset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":48477,"src":"21727:5:37","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":48482,"name":"_registry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":48151,"src":"21707:9:37","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_contract$_IRegistry_$50185_$","typeString":"function () view returns (contract IRegistry)"}},"id":48483,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21707:11:37","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IRegistry_$50185","typeString":"contract IRegistry"}},"id":48484,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"21719:7:37","memberName":"isAsset","nodeType":"MemberAccess","referencedDeclaration":49814,"src":"21707:19:37","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view external returns (bool)"}},"id":48486,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21707:26:37","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":48481,"id":48487,"nodeType":"Return","src":"21700:33:37"}]},"documentation":{"id":48475,"nodeType":"StructuredDocumentation","src":"21483:140:37","text":"@notice Checks if an asset is registered\n @param asset The asset address to check\n @return Whether the asset is registered"},"implemented":true,"kind":"function","modifiers":[],"name":"_isAsset","nameLocation":"21637:8:37","parameters":{"id":48478,"nodeType":"ParameterList","parameters":[{"constant":false,"id":48477,"mutability":"mutable","name":"asset","nameLocation":"21654:5:37","nodeType":"VariableDeclaration","scope":48489,"src":"21646:13:37","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":48476,"name":"address","nodeType":"ElementaryTypeName","src":"21646:7:37","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"21645:15:37"},"returnParameters":{"id":48481,"nodeType":"ParameterList","parameters":[{"constant":false,"id":48480,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":48489,"src":"21684:4:37","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":48479,"name":"bool","nodeType":"ElementaryTypeName","src":"21684:4:37","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"21683:6:37"},"scope":48490,"stateMutability":"view","virtual":false,"visibility":"internal"}],"abstract":false,"baseContracts":[{"baseName":{"id":47857,"name":"OptimizedReentrancyGuardTransient","nameLocations":["2151:33:37"],"nodeType":"IdentifierPath","referencedDeclaration":65573,"src":"2151:33:37"},"id":47858,"nodeType":"InheritanceSpecifier","src":"2151:33:37"}],"canonicalName":"kBase","contractDependencies":[],"contractKind":"contract","documentation":{"id":47856,"nodeType":"StructuredDocumentation","src":"707:1426:37","text":"@title kBase\n @notice Foundation contract providing essential shared functionality and registry integration for all KAM protocol\n contracts\n @dev This abstract contract serves as the architectural foundation for the entire KAM protocol, establishing\n critical patterns and utilities that ensure consistency across all protocol components. Key responsibilities\n include: (1) Registry integration through a singleton pattern that enables dynamic protocol configuration and\n contract discovery, (2) Role-based access control validation that enforces protocol governance permissions,\n (3) Emergency pause functionality for protocol-wide risk mitigation during critical events, (4) Asset rescue\n mechanisms to recover stuck funds while protecting protocol assets, (5) Vault and asset validation to ensure\n only registered components interact, (6) Batch processing coordination through ID management and receiver tracking.\n The contract employs ERC-7201 namespaced storage to prevent storage collisions during upgrades and enable safe\n inheritance patterns. All inheriting contracts (kMinter, kAssetRouter, etc.) leverage these utilities to maintain\n protocol integrity, reduce code duplication, and ensure consistent security checks across the ecosystem. The\n registry serves as the single source of truth for protocol configuration, making the system highly modular and\n upgradeable."},"fullyImplemented":true,"linearizedBaseContracts":[48490,65573],"name":"kBase","nameLocation":"2142:5:37","scope":48491,"usedErrors":[65550],"usedEvents":[47866,47875,47882]}],"license":"UNLICENSED"},"id":37}