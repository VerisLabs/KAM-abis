{"abi":[{"type":"function","name":"burn","inputs":[{"name":"requestId","type":"bytes32","internalType":"bytes32"}],"outputs":[],"stateMutability":"payable"},{"type":"function","name":"cancelRequest","inputs":[{"name":"requestId","type":"bytes32","internalType":"bytes32"}],"outputs":[],"stateMutability":"payable"},{"type":"function","name":"closeBatch","inputs":[{"name":"_batchId","type":"bytes32","internalType":"bytes32"},{"name":"_create","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"contractName","inputs":[],"outputs":[{"name":"","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"contractVersion","inputs":[],"outputs":[{"name":"","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"createBatchReceiver","inputs":[{"name":"_batchId","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"nonpayable"},{"type":"function","name":"createNewBatch","inputs":[{"name":"asset_","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"bytes32","internalType":"bytes32"}],"stateMutability":"nonpayable"},{"type":"function","name":"getBatchId","inputs":[{"name":"asset_","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"bytes32","internalType":"bytes32"}],"stateMutability":"view"},{"type":"function","name":"getBatchInfo","inputs":[{"name":"batchId_","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"","type":"tuple","internalType":"struct IkMinter.BatchInfo","components":[{"name":"asset","type":"address","internalType":"address"},{"name":"batchReceiver","type":"address","internalType":"address"},{"name":"mintedInBatch","type":"uint128","internalType":"uint128"},{"name":"burnedInBatch","type":"uint128","internalType":"uint128"},{"name":"isClosed","type":"bool","internalType":"bool"},{"name":"isSettled","type":"bool","internalType":"bool"},{"name":"batchId","type":"bytes32","internalType":"bytes32"}]}],"stateMutability":"view"},{"type":"function","name":"getBatchReceiver","inputs":[{"name":"batchId_","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"getBurnRequest","inputs":[{"name":"requestId","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"","type":"tuple","internalType":"struct IkMinter.BurnRequest","components":[{"name":"user","type":"address","internalType":"address"},{"name":"amount","type":"uint256","internalType":"uint256"},{"name":"asset","type":"address","internalType":"address"},{"name":"requestTimestamp","type":"uint64","internalType":"uint64"},{"name":"status","type":"uint8","internalType":"enum IkMinter.RequestStatus"},{"name":"batchId","type":"bytes32","internalType":"bytes32"},{"name":"recipient","type":"address","internalType":"address"}]}],"stateMutability":"view"},{"type":"function","name":"getCurrentBatchNumber","inputs":[{"name":"asset_","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"getRequestCounter","inputs":[],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"getTotalLockedAssets","inputs":[{"name":"asset","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"getUserRequests","inputs":[{"name":"user","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"bytes32[]","internalType":"bytes32[]"}],"stateMutability":"view"},{"type":"function","name":"hasActiveBatch","inputs":[{"name":"asset_","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"isPaused","inputs":[],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"mint","inputs":[{"name":"asset","type":"address","internalType":"address"},{"name":"to","type":"address","internalType":"address"},{"name":"amount","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"payable"},{"type":"function","name":"requestBurn","inputs":[{"name":"asset","type":"address","internalType":"address"},{"name":"to","type":"address","internalType":"address"},{"name":"amount","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"requestId","type":"bytes32","internalType":"bytes32"}],"stateMutability":"payable"},{"type":"function","name":"rescueReceiverAssets","inputs":[{"name":"batchReceiver","type":"address","internalType":"address"},{"name":"asset","type":"address","internalType":"address"},{"name":"to","type":"address","internalType":"address"},{"name":"amount","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"settleBatch","inputs":[{"name":"_batchId","type":"bytes32","internalType":"bytes32"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"event","name":"BatchClosed","inputs":[{"name":"batchId","type":"bytes32","indexed":true,"internalType":"bytes32"}],"anonymous":false},{"type":"event","name":"BatchCreated","inputs":[{"name":"asset","type":"address","indexed":true,"internalType":"address"},{"name":"batchId","type":"bytes32","indexed":true,"internalType":"bytes32"},{"name":"batchNumber","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"BatchReceiverCreated","inputs":[{"name":"receiver","type":"address","indexed":true,"internalType":"address"},{"name":"batchId","type":"bytes32","indexed":true,"internalType":"bytes32"}],"anonymous":false},{"type":"event","name":"BatchSettled","inputs":[{"name":"batchId","type":"bytes32","indexed":true,"internalType":"bytes32"}],"anonymous":false},{"type":"event","name":"BurnRequestCreated","inputs":[{"name":"requestId","type":"bytes32","indexed":true,"internalType":"bytes32"},{"name":"user","type":"address","indexed":true,"internalType":"address"},{"name":"kToken","type":"address","indexed":true,"internalType":"address"},{"name":"amount","type":"uint256","indexed":false,"internalType":"uint256"},{"name":"recipient","type":"address","indexed":false,"internalType":"address"},{"name":"batchId","type":"bytes32","indexed":false,"internalType":"bytes32"}],"anonymous":false},{"type":"event","name":"Burned","inputs":[{"name":"requestId","type":"bytes32","indexed":true,"internalType":"bytes32"}],"anonymous":false},{"type":"event","name":"Cancelled","inputs":[{"name":"requestId","type":"bytes32","indexed":true,"internalType":"bytes32"}],"anonymous":false},{"type":"event","name":"ContractInitialized","inputs":[{"name":"registry","type":"address","indexed":true,"internalType":"address"}],"anonymous":false},{"type":"event","name":"Minted","inputs":[{"name":"to","type":"address","indexed":true,"internalType":"address"},{"name":"amount","type":"uint256","indexed":false,"internalType":"uint256"},{"name":"batchId","type":"bytes32","indexed":false,"internalType":"bytes32"}],"anonymous":false}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"burn(bytes32)":"08a1eee1","cancelRequest(bytes32)":"50125546","closeBatch(bytes32,bool)":"bb507ab9","contractName()":"75d0c0dc","contractVersion()":"a0a8e460","createBatchReceiver(bytes32)":"6ec67879","createNewBatch(address)":"b2690025","getBatchId(address)":"8a464628","getBatchInfo(bytes32)":"753207c7","getBatchReceiver(bytes32)":"befe3170","getBurnRequest(bytes32)":"0675e575","getCurrentBatchNumber(address)":"472a4ec2","getRequestCounter()":"a2785f0b","getTotalLockedAssets(address)":"8b7cb304","getUserRequests(address)":"b337cf74","hasActiveBatch(address)":"e6432396","isPaused()":"b187bd26","mint(address,address,uint256)":"c6c3bbe6","requestBurn(address,address,uint256)":"369e9c33","rescueReceiverAssets(address,address,address,uint256)":"09acd2e0","settleBatch(bytes32)":"eeb8f2b5"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"batchId\",\"type\":\"bytes32\"}],\"name\":\"BatchClosed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"batchId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"batchNumber\",\"type\":\"uint256\"}],\"name\":\"BatchCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"batchId\",\"type\":\"bytes32\"}],\"name\":\"BatchReceiverCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"batchId\",\"type\":\"bytes32\"}],\"name\":\"BatchSettled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"requestId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"kToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"batchId\",\"type\":\"bytes32\"}],\"name\":\"BurnRequestCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"requestId\",\"type\":\"bytes32\"}],\"name\":\"Burned\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"requestId\",\"type\":\"bytes32\"}],\"name\":\"Cancelled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"registry\",\"type\":\"address\"}],\"name\":\"ContractInitialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"batchId\",\"type\":\"bytes32\"}],\"name\":\"Minted\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"requestId\",\"type\":\"bytes32\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"requestId\",\"type\":\"bytes32\"}],\"name\":\"cancelRequest\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_batchId\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"_create\",\"type\":\"bool\"}],\"name\":\"closeBatch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"contractName\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"contractVersion\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_batchId\",\"type\":\"bytes32\"}],\"name\":\"createBatchReceiver\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset_\",\"type\":\"address\"}],\"name\":\"createNewBatch\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset_\",\"type\":\"address\"}],\"name\":\"getBatchId\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"batchId_\",\"type\":\"bytes32\"}],\"name\":\"getBatchInfo\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"batchReceiver\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"mintedInBatch\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"burnedInBatch\",\"type\":\"uint128\"},{\"internalType\":\"bool\",\"name\":\"isClosed\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isSettled\",\"type\":\"bool\"},{\"internalType\":\"bytes32\",\"name\":\"batchId\",\"type\":\"bytes32\"}],\"internalType\":\"struct IkMinter.BatchInfo\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"batchId_\",\"type\":\"bytes32\"}],\"name\":\"getBatchReceiver\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"requestId\",\"type\":\"bytes32\"}],\"name\":\"getBurnRequest\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"requestTimestamp\",\"type\":\"uint64\"},{\"internalType\":\"enum IkMinter.RequestStatus\",\"name\":\"status\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"batchId\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"internalType\":\"struct IkMinter.BurnRequest\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset_\",\"type\":\"address\"}],\"name\":\"getCurrentBatchNumber\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRequestCounter\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"}],\"name\":\"getTotalLockedAssets\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getUserRequests\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset_\",\"type\":\"address\"}],\"name\":\"hasActiveBatch\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isPaused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"requestBurn\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"requestId\",\"type\":\"bytes32\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"batchReceiver\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"rescueReceiverAssets\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_batchId\",\"type\":\"bytes32\"}],\"name\":\"settleBatch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This interface defines the core functionality for qualified institutions to mint kTokens by depositing underlying assets and burn them through a batch settlement system. The interface supports a two-phase redemption process to accommodate batch processing and yield distribution.\",\"events\":{\"BatchClosed(bytes32)\":{\"params\":{\"batchId\":\"The batch ID of the closed batch\"}},\"BatchCreated(address,bytes32,uint256)\":{\"params\":{\"asset\":\"The asset in which the batch will be created\",\"batchId\":\"The batch ID of the new batch\",\"batchNumber\":\"the batch number used\"}},\"BatchReceiverCreated(address,bytes32)\":{\"params\":{\"batchId\":\"The batch ID of the BatchReceiver\",\"receiver\":\"The address of the created BatchReceiver\"}},\"BatchSettled(bytes32)\":{\"params\":{\"batchId\":\"The batch ID of the settled batch\"}},\"BurnRequestCreated(bytes32,address,address,uint256,address,bytes32)\":{\"params\":{\"amount\":\"The amount of kTokens being burned\",\"batchId\":\"The batch identifier this request is associated with\",\"kToken\":\"The kToken contract address being burned\",\"recipient\":\"The address that will receive the underlying assets\",\"requestId\":\"The unique identifier assigned to this redemption request\",\"user\":\"The address that initiated the redemption request\"}},\"Burned(bytes32)\":{\"params\":{\"requestId\":\"The unique identifier of the executed redemption request\"}},\"Cancelled(bytes32)\":{\"params\":{\"requestId\":\"The unique identifier of the cancelled redemption request\"}},\"ContractInitialized(address)\":{\"params\":{\"registry\":\"The address of the registry contract used for protocol configuration\"}},\"Minted(address,uint256,bytes32)\":{\"params\":{\"amount\":\"The amount of kTokens minted (matches deposited asset amount)\",\"batchId\":\"The batch identifier where the deposited assets were allocated\",\"to\":\"The recipient address that received the minted kTokens\"}}},\"kind\":\"dev\",\"methods\":{\"burn(bytes32)\":{\"details\":\"This function finalizes the redemption process initiated by requestBurn(). It can only be called after the batch containing this request has been settled through the kAssetRouter settlement process. The execution involves: (1) validating the request exists and is in PENDING status, (2) updating the request status to REDEEMED, (3) removing the request from tracking, (4) burning the escrowed kTokens permanently, (5) instructing the kBatchReceiver contract to transfer the underlying assets to the recipient. The kBatchReceiver is a minimal proxy deployed per batch that holds the settled assets and ensures isolated distribution. This function will revert if the batch is not yet settled, ensuring assets are only distributed when available. The separation between request and redemption phases allows for efficient batch processing of multiple redemptions while maintaining asset safety.\",\"params\":{\"requestId\":\"The unique identifier of the redemption request to execute (obtained from requestBurn)\"}},\"cancelRequest(bytes32)\":{\"details\":\"This function allows institutions to cancel their redemption requests before the batch is closed or settled. The cancellation process involves: (1) validating the request exists and is in PENDING status, (2) checking that the batch is neither closed nor settled (once closed, cancellation is not possible as the batch is being processed), (3) updating the request status to CANCELLED, (4) removing the request from tracking, (5) returning the escrowed kTokens back to the original requester. This mechanism provides flexibility for institutions to manage their liquidity needs, allowing them to reverse redemption decisions if market conditions change or if they need immediate access to their kTokens. The function enforces strict timing constraints - cancellation is only permitted while the batch remains open, ensuring batch integrity and preventing manipulation of settled redemptions.\",\"params\":{\"requestId\":\"The unique identifier of the redemption request to cancel (obtained from requestBurn)\"}},\"closeBatch(bytes32,bool)\":{\"params\":{\"_batchId\":\"The batch ID to close\",\"_create\":\"Whether to create a new batch for the same asset\"}},\"contractName()\":{\"details\":\"Used for contract identification and logging purposes. The name should be consistent across all versions of the same contract type. This enables external systems and other contracts to identify the contract's purpose and role within the protocol ecosystem.\",\"returns\":{\"_0\":\"The contract name as a string (e.g., \\\"kMinter\\\", \\\"kAssetRouter\\\", \\\"kRegistry\\\")\"}},\"contractVersion()\":{\"details\":\"Used for upgrade management and compatibility checking within the protocol. The version string should follow semantic versioning (e.g., \\\"1.0.0\\\") to clearly indicate major, minor, and patch updates. This enables the protocol governance and monitoring systems to track deployed versions and ensure compatibility between interacting components.\",\"returns\":{\"_0\":\"The contract version as a string following semantic versioning (e.g., \\\"1.0.0\\\")\"}},\"createBatchReceiver(bytes32)\":{\"params\":{\"_batchId\":\"The batch ID to create a receiver for\"},\"returns\":{\"_0\":\"The address of the created batch receiver\"}},\"createNewBatch(address)\":{\"params\":{\"asset_\":\"The asset for which to create a new batch\"},\"returns\":{\"_0\":\"The batch ID of the newly created batch\"}},\"getBatchInfo(bytes32)\":{\"params\":{\"batchId_\":\"The batch ID to query\"},\"returns\":{\"_0\":\"The batch information\"}},\"getBatchReceiver(bytes32)\":{\"params\":{\"batchId_\":\"The batch ID to query\"},\"returns\":{\"_0\":\"The address of the batch receiver\"}},\"getBurnRequest(bytes32)\":{\"details\":\"Returns the complete BurnRequest struct containing all request information\",\"params\":{\"requestId\":\"The unique identifier of the request\"},\"returns\":{\"_0\":\"The complete BurnRequest struct with status, amounts, and batch information\"}},\"getRequestCounter()\":{\"details\":\"Returns the monotonically increasing counter used for generating unique request IDs\",\"returns\":{\"_0\":\"The current counter used for generating unique request IDs\"}},\"getTotalLockedAssets(address)\":{\"details\":\"Returns the cumulative amount of assets deposited through mint operations for accounting\",\"params\":{\"asset\":\"The asset address to query\"},\"returns\":{\"_0\":\"The total amount of assets locked in the protocol\"}},\"getUserRequests(address)\":{\"details\":\"Returns request IDs from the user's enumerable set for efficient tracking\",\"params\":{\"user\":\"The user address to query\"},\"returns\":{\"_0\":\"Array of request IDs belonging to the user\"}},\"hasActiveBatch(address)\":{\"params\":{\"asset_\":\"The asset to check\"},\"returns\":{\"_0\":\"True if the asset has an active batch, false otherwise\"}},\"isPaused()\":{\"details\":\"Returns the paused state from the base storage for operational control\",\"returns\":{\"_0\":\"True if paused, false otherwise\"}},\"mint(address,address,uint256)\":{\"details\":\"This function enables qualified institutions to mint kTokens by depositing underlying assets. The process involves: (1) transferring assets from the caller to kAssetRouter, (2) pushing assets into the current batch of the designated DN vault for yield generation, and (3) immediately minting an equivalent amount of kTokens to the recipient. Unlike retail operations, institutional mints bypass share-based accounting and provide immediate token issuance without waiting for batch settlement. The deposited assets are tracked separately to maintain the 1:1 backing ratio and will participate in vault yield strategies through the batch system.\",\"params\":{\"amount\":\"The amount of underlying asset to deposit and kTokens to mint (1:1 ratio)\",\"asset\":\"The underlying asset address to deposit (must be registered in the protocol)\",\"to\":\"The recipient address that will receive the newly minted kTokens\"}},\"requestBurn(address,address,uint256)\":{\"details\":\"This function implements the first phase of the redemption process for qualified institutions. The workflow consists of: (1) transferring kTokens from the caller to this contract for escrow (not burned yet), (2) generating a unique request ID for tracking, (3) creating a BurnRequest struct with PENDING status, (4) registering the request with kAssetRouter for batch processing. The kTokens remain in escrow until the batch is settled and the user calls burn() to complete the process. This two-phase approach is necessary because redemptions are processed in batches through the DN vault system, which requires waiting for batch settlement to ensure proper asset availability and yield distribution. The request can be cancelled before batch closure/settlement.\",\"params\":{\"amount\":\"The amount of kTokens to burn (will receive equivalent underlying assets)\",\"asset\":\"The underlying asset address to burn (must match the kToken's underlying asset)\",\"to\":\"The recipient address that will receive the underlying assets after batch settlement\"},\"returns\":{\"requestId\":\"A unique bytes32 identifier for tracking and executing this redemption request\"}},\"rescueReceiverAssets(address,address,address,uint256)\":{\"details\":\"This function provides a recovery mechanism for assets that may become stuck in kBatchReceiver contracts due to failed redemptions or system errors. The process involves two steps: (1) calling rescueAssets on the kBatchReceiver to transfer assets back to this contract, and (2) using the inherited rescueAssets function from kBase to forward them to the specified destination. This two-step process ensures proper access control and maintains the security model where only authorized contracts can interact with batch receivers. This function should only be used in emergency situations and requires admin privileges to prevent abuse.\",\"params\":{\"amount\":\"The amount of assets to rescue\",\"asset\":\"The address of the asset token to rescue (must not be a protocol asset)\",\"batchReceiver\":\"The address of the kBatchReceiver contract holding the stuck assets\",\"to\":\"The destination address to receive the rescued assets\"}},\"settleBatch(bytes32)\":{\"params\":{\"_batchId\":\"The batch ID to settle\"}}},\"title\":\"IkMinter\",\"version\":1},\"userdoc\":{\"events\":{\"BatchClosed(bytes32)\":{\"notice\":\"Emitted when a batch is closed\"},\"BatchCreated(address,bytes32,uint256)\":{\"notice\":\"Emitted when a new batch is created\"},\"BatchReceiverCreated(address,bytes32)\":{\"notice\":\"Emitted when a BatchReceiver is created\"},\"BatchSettled(bytes32)\":{\"notice\":\"Emitted when a batch is settled\"},\"BurnRequestCreated(bytes32,address,address,uint256,address,bytes32)\":{\"notice\":\"Emitted when a new redemption request is created and enters the batch queue\"},\"Burned(bytes32)\":{\"notice\":\"Emitted when a redemption request is successfully executed after batch settlement\"},\"Cancelled(bytes32)\":{\"notice\":\"Emitted when a pending redemption request is cancelled before batch closure\"},\"ContractInitialized(address)\":{\"notice\":\"Emitted when the kMinter contract is initialized\"},\"Minted(address,uint256,bytes32)\":{\"notice\":\"Emitted when kTokens are successfully minted for an institution\"}},\"kind\":\"user\",\"methods\":{\"burn(bytes32)\":{\"notice\":\"Completes the second phase of institutional redemption by executing a settled batch request\"},\"cancelRequest(bytes32)\":{\"notice\":\"Cancels a pending redemption request and returns the escrowed kTokens to the user\"},\"closeBatch(bytes32,bool)\":{\"notice\":\"Closes a specific batch and optionally creates a new one\"},\"contractName()\":{\"notice\":\"Returns the human-readable name identifier for this contract type\"},\"contractVersion()\":{\"notice\":\"Returns the version identifier for this contract implementation\"},\"createBatchReceiver(bytes32)\":{\"notice\":\"Creates a batch receiver contract for a specific batch\"},\"createNewBatch(address)\":{\"notice\":\"Creates a new batch for a specific asset\"},\"getBatchInfo(bytes32)\":{\"notice\":\"Gets batch information for a specific batch ID\"},\"getBatchReceiver(bytes32)\":{\"notice\":\"Gets the batch receiver address for a specific batch\"},\"getBurnRequest(bytes32)\":{\"notice\":\"Retrieves details of a specific redemption request\"},\"getRequestCounter()\":{\"notice\":\"Gets the current request counter value\"},\"getTotalLockedAssets(address)\":{\"notice\":\"Gets the total locked assets for a specific asset\"},\"getUserRequests(address)\":{\"notice\":\"Gets all redemption request IDs for a specific user\"},\"hasActiveBatch(address)\":{\"notice\":\"Checks if an asset has an active (open) batch\"},\"isPaused()\":{\"notice\":\"Checks if the contract is currently paused\"},\"mint(address,address,uint256)\":{\"notice\":\"Executes institutional minting of kTokens through immediate 1:1 issuance against deposited assets\"},\"requestBurn(address,address,uint256)\":{\"notice\":\"Initiates a two-phase institutional redemption by creating a batch request for underlying asset withdrawal\"},\"rescueReceiverAssets(address,address,address,uint256)\":{\"notice\":\"Emergency admin function to recover stuck assets from a batch receiver contract\"},\"settleBatch(bytes32)\":{\"notice\":\"Marks a batch as settled after processing\"}},\"notice\":\"Interface for institutional minting and redemption operations in the KAM protocol\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/interfaces/IkMinter.sol\":\"IkMinter\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[\":forge-std-1.9.7/=dependencies/forge-std-1.9.7/src/\",\":forge-std/=dependencies/forge-std-1.9.7/src/\",\":kam/src/=src/\",\":kam/test/=test/\",\":openzeppelin/=src/vendor/openzeppelin/\",\":solady/=src/vendor/solady/\",\":uniswap/=src/vendor/uniswap/\"],\"viaIR\":true},\"sources\":{\"src/interfaces/IVersioned.sol\":{\"keccak256\":\"0x23e7a218ecbf42e18656d069ee25302c74c5027d1dcfa4e1b9c54501d76a72f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2e2643eaf8cc8f8bc04dd90c6cbf5c1429de314dc85e93c254b1deae782af6eb\",\"dweb:/ipfs/Qmb4s6G5PNFLy6iANEqHvanKZ3Tu1ahfW5V9ppWCxKTiDD\"]},\"src/interfaces/IkMinter.sol\":{\"keccak256\":\"0x21ec394b23d11cc01b9dfccf4ef75b86236df265c047d08527e546821b54e6e9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b9bc0606cd3cf7eb0ee725bee5fd04c4b7cd55ec0ca99ad8798086b7a597131d\",\"dweb:/ipfs/QmQa6TcRrrHdEbdA8EHkryj8j2HyzT8TYa1nPDyu4FHXD2\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.30+commit.73712a01"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"bytes32","name":"batchId","type":"bytes32","indexed":true}],"type":"event","name":"BatchClosed","anonymous":false},{"inputs":[{"internalType":"address","name":"asset","type":"address","indexed":true},{"internalType":"bytes32","name":"batchId","type":"bytes32","indexed":true},{"internalType":"uint256","name":"batchNumber","type":"uint256","indexed":false}],"type":"event","name":"BatchCreated","anonymous":false},{"inputs":[{"internalType":"address","name":"receiver","type":"address","indexed":true},{"internalType":"bytes32","name":"batchId","type":"bytes32","indexed":true}],"type":"event","name":"BatchReceiverCreated","anonymous":false},{"inputs":[{"internalType":"bytes32","name":"batchId","type":"bytes32","indexed":true}],"type":"event","name":"BatchSettled","anonymous":false},{"inputs":[{"internalType":"bytes32","name":"requestId","type":"bytes32","indexed":true},{"internalType":"address","name":"user","type":"address","indexed":true},{"internalType":"address","name":"kToken","type":"address","indexed":true},{"internalType":"uint256","name":"amount","type":"uint256","indexed":false},{"internalType":"address","name":"recipient","type":"address","indexed":false},{"internalType":"bytes32","name":"batchId","type":"bytes32","indexed":false}],"type":"event","name":"BurnRequestCreated","anonymous":false},{"inputs":[{"internalType":"bytes32","name":"requestId","type":"bytes32","indexed":true}],"type":"event","name":"Burned","anonymous":false},{"inputs":[{"internalType":"bytes32","name":"requestId","type":"bytes32","indexed":true}],"type":"event","name":"Cancelled","anonymous":false},{"inputs":[{"internalType":"address","name":"registry","type":"address","indexed":true}],"type":"event","name":"ContractInitialized","anonymous":false},{"inputs":[{"internalType":"address","name":"to","type":"address","indexed":true},{"internalType":"uint256","name":"amount","type":"uint256","indexed":false},{"internalType":"bytes32","name":"batchId","type":"bytes32","indexed":false}],"type":"event","name":"Minted","anonymous":false},{"inputs":[{"internalType":"bytes32","name":"requestId","type":"bytes32"}],"stateMutability":"payable","type":"function","name":"burn"},{"inputs":[{"internalType":"bytes32","name":"requestId","type":"bytes32"}],"stateMutability":"payable","type":"function","name":"cancelRequest"},{"inputs":[{"internalType":"bytes32","name":"_batchId","type":"bytes32"},{"internalType":"bool","name":"_create","type":"bool"}],"stateMutability":"nonpayable","type":"function","name":"closeBatch"},{"inputs":[],"stateMutability":"pure","type":"function","name":"contractName","outputs":[{"internalType":"string","name":"","type":"string"}]},{"inputs":[],"stateMutability":"pure","type":"function","name":"contractVersion","outputs":[{"internalType":"string","name":"","type":"string"}]},{"inputs":[{"internalType":"bytes32","name":"_batchId","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"createBatchReceiver","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[{"internalType":"address","name":"asset_","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"createNewBatch","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}]},{"inputs":[{"internalType":"address","name":"asset_","type":"address"}],"stateMutability":"view","type":"function","name":"getBatchId","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}]},{"inputs":[{"internalType":"bytes32","name":"batchId_","type":"bytes32"}],"stateMutability":"view","type":"function","name":"getBatchInfo","outputs":[{"internalType":"struct IkMinter.BatchInfo","name":"","type":"tuple","components":[{"internalType":"address","name":"asset","type":"address"},{"internalType":"address","name":"batchReceiver","type":"address"},{"internalType":"uint128","name":"mintedInBatch","type":"uint128"},{"internalType":"uint128","name":"burnedInBatch","type":"uint128"},{"internalType":"bool","name":"isClosed","type":"bool"},{"internalType":"bool","name":"isSettled","type":"bool"},{"internalType":"bytes32","name":"batchId","type":"bytes32"}]}]},{"inputs":[{"internalType":"bytes32","name":"batchId_","type":"bytes32"}],"stateMutability":"view","type":"function","name":"getBatchReceiver","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[{"internalType":"bytes32","name":"requestId","type":"bytes32"}],"stateMutability":"view","type":"function","name":"getBurnRequest","outputs":[{"internalType":"struct IkMinter.BurnRequest","name":"","type":"tuple","components":[{"internalType":"address","name":"user","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"address","name":"asset","type":"address"},{"internalType":"uint64","name":"requestTimestamp","type":"uint64"},{"internalType":"enum IkMinter.RequestStatus","name":"status","type":"uint8"},{"internalType":"bytes32","name":"batchId","type":"bytes32"},{"internalType":"address","name":"recipient","type":"address"}]}]},{"inputs":[{"internalType":"address","name":"asset_","type":"address"}],"stateMutability":"view","type":"function","name":"getCurrentBatchNumber","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"getRequestCounter","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"address","name":"asset","type":"address"}],"stateMutability":"view","type":"function","name":"getTotalLockedAssets","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"address","name":"user","type":"address"}],"stateMutability":"view","type":"function","name":"getUserRequests","outputs":[{"internalType":"bytes32[]","name":"","type":"bytes32[]"}]},{"inputs":[{"internalType":"address","name":"asset_","type":"address"}],"stateMutability":"view","type":"function","name":"hasActiveBatch","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"isPaused","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"address","name":"asset","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"stateMutability":"payable","type":"function","name":"mint"},{"inputs":[{"internalType":"address","name":"asset","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"stateMutability":"payable","type":"function","name":"requestBurn","outputs":[{"internalType":"bytes32","name":"requestId","type":"bytes32"}]},{"inputs":[{"internalType":"address","name":"batchReceiver","type":"address"},{"internalType":"address","name":"asset","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"rescueReceiverAssets"},{"inputs":[{"internalType":"bytes32","name":"_batchId","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"settleBatch"}],"devdoc":{"kind":"dev","methods":{"burn(bytes32)":{"details":"This function finalizes the redemption process initiated by requestBurn(). It can only be called after the batch containing this request has been settled through the kAssetRouter settlement process. The execution involves: (1) validating the request exists and is in PENDING status, (2) updating the request status to REDEEMED, (3) removing the request from tracking, (4) burning the escrowed kTokens permanently, (5) instructing the kBatchReceiver contract to transfer the underlying assets to the recipient. The kBatchReceiver is a minimal proxy deployed per batch that holds the settled assets and ensures isolated distribution. This function will revert if the batch is not yet settled, ensuring assets are only distributed when available. The separation between request and redemption phases allows for efficient batch processing of multiple redemptions while maintaining asset safety.","params":{"requestId":"The unique identifier of the redemption request to execute (obtained from requestBurn)"}},"cancelRequest(bytes32)":{"details":"This function allows institutions to cancel their redemption requests before the batch is closed or settled. The cancellation process involves: (1) validating the request exists and is in PENDING status, (2) checking that the batch is neither closed nor settled (once closed, cancellation is not possible as the batch is being processed), (3) updating the request status to CANCELLED, (4) removing the request from tracking, (5) returning the escrowed kTokens back to the original requester. This mechanism provides flexibility for institutions to manage their liquidity needs, allowing them to reverse redemption decisions if market conditions change or if they need immediate access to their kTokens. The function enforces strict timing constraints - cancellation is only permitted while the batch remains open, ensuring batch integrity and preventing manipulation of settled redemptions.","params":{"requestId":"The unique identifier of the redemption request to cancel (obtained from requestBurn)"}},"closeBatch(bytes32,bool)":{"params":{"_batchId":"The batch ID to close","_create":"Whether to create a new batch for the same asset"}},"contractName()":{"details":"Used for contract identification and logging purposes. The name should be consistent across all versions of the same contract type. This enables external systems and other contracts to identify the contract's purpose and role within the protocol ecosystem.","returns":{"_0":"The contract name as a string (e.g., \"kMinter\", \"kAssetRouter\", \"kRegistry\")"}},"contractVersion()":{"details":"Used for upgrade management and compatibility checking within the protocol. The version string should follow semantic versioning (e.g., \"1.0.0\") to clearly indicate major, minor, and patch updates. This enables the protocol governance and monitoring systems to track deployed versions and ensure compatibility between interacting components.","returns":{"_0":"The contract version as a string following semantic versioning (e.g., \"1.0.0\")"}},"createBatchReceiver(bytes32)":{"params":{"_batchId":"The batch ID to create a receiver for"},"returns":{"_0":"The address of the created batch receiver"}},"createNewBatch(address)":{"params":{"asset_":"The asset for which to create a new batch"},"returns":{"_0":"The batch ID of the newly created batch"}},"getBatchInfo(bytes32)":{"params":{"batchId_":"The batch ID to query"},"returns":{"_0":"The batch information"}},"getBatchReceiver(bytes32)":{"params":{"batchId_":"The batch ID to query"},"returns":{"_0":"The address of the batch receiver"}},"getBurnRequest(bytes32)":{"details":"Returns the complete BurnRequest struct containing all request information","params":{"requestId":"The unique identifier of the request"},"returns":{"_0":"The complete BurnRequest struct with status, amounts, and batch information"}},"getRequestCounter()":{"details":"Returns the monotonically increasing counter used for generating unique request IDs","returns":{"_0":"The current counter used for generating unique request IDs"}},"getTotalLockedAssets(address)":{"details":"Returns the cumulative amount of assets deposited through mint operations for accounting","params":{"asset":"The asset address to query"},"returns":{"_0":"The total amount of assets locked in the protocol"}},"getUserRequests(address)":{"details":"Returns request IDs from the user's enumerable set for efficient tracking","params":{"user":"The user address to query"},"returns":{"_0":"Array of request IDs belonging to the user"}},"hasActiveBatch(address)":{"params":{"asset_":"The asset to check"},"returns":{"_0":"True if the asset has an active batch, false otherwise"}},"isPaused()":{"details":"Returns the paused state from the base storage for operational control","returns":{"_0":"True if paused, false otherwise"}},"mint(address,address,uint256)":{"details":"This function enables qualified institutions to mint kTokens by depositing underlying assets. The process involves: (1) transferring assets from the caller to kAssetRouter, (2) pushing assets into the current batch of the designated DN vault for yield generation, and (3) immediately minting an equivalent amount of kTokens to the recipient. Unlike retail operations, institutional mints bypass share-based accounting and provide immediate token issuance without waiting for batch settlement. The deposited assets are tracked separately to maintain the 1:1 backing ratio and will participate in vault yield strategies through the batch system.","params":{"amount":"The amount of underlying asset to deposit and kTokens to mint (1:1 ratio)","asset":"The underlying asset address to deposit (must be registered in the protocol)","to":"The recipient address that will receive the newly minted kTokens"}},"requestBurn(address,address,uint256)":{"details":"This function implements the first phase of the redemption process for qualified institutions. The workflow consists of: (1) transferring kTokens from the caller to this contract for escrow (not burned yet), (2) generating a unique request ID for tracking, (3) creating a BurnRequest struct with PENDING status, (4) registering the request with kAssetRouter for batch processing. The kTokens remain in escrow until the batch is settled and the user calls burn() to complete the process. This two-phase approach is necessary because redemptions are processed in batches through the DN vault system, which requires waiting for batch settlement to ensure proper asset availability and yield distribution. The request can be cancelled before batch closure/settlement.","params":{"amount":"The amount of kTokens to burn (will receive equivalent underlying assets)","asset":"The underlying asset address to burn (must match the kToken's underlying asset)","to":"The recipient address that will receive the underlying assets after batch settlement"},"returns":{"requestId":"A unique bytes32 identifier for tracking and executing this redemption request"}},"rescueReceiverAssets(address,address,address,uint256)":{"details":"This function provides a recovery mechanism for assets that may become stuck in kBatchReceiver contracts due to failed redemptions or system errors. The process involves two steps: (1) calling rescueAssets on the kBatchReceiver to transfer assets back to this contract, and (2) using the inherited rescueAssets function from kBase to forward them to the specified destination. This two-step process ensures proper access control and maintains the security model where only authorized contracts can interact with batch receivers. This function should only be used in emergency situations and requires admin privileges to prevent abuse.","params":{"amount":"The amount of assets to rescue","asset":"The address of the asset token to rescue (must not be a protocol asset)","batchReceiver":"The address of the kBatchReceiver contract holding the stuck assets","to":"The destination address to receive the rescued assets"}},"settleBatch(bytes32)":{"params":{"_batchId":"The batch ID to settle"}}},"version":1},"userdoc":{"kind":"user","methods":{"burn(bytes32)":{"notice":"Completes the second phase of institutional redemption by executing a settled batch request"},"cancelRequest(bytes32)":{"notice":"Cancels a pending redemption request and returns the escrowed kTokens to the user"},"closeBatch(bytes32,bool)":{"notice":"Closes a specific batch and optionally creates a new one"},"contractName()":{"notice":"Returns the human-readable name identifier for this contract type"},"contractVersion()":{"notice":"Returns the version identifier for this contract implementation"},"createBatchReceiver(bytes32)":{"notice":"Creates a batch receiver contract for a specific batch"},"createNewBatch(address)":{"notice":"Creates a new batch for a specific asset"},"getBatchInfo(bytes32)":{"notice":"Gets batch information for a specific batch ID"},"getBatchReceiver(bytes32)":{"notice":"Gets the batch receiver address for a specific batch"},"getBurnRequest(bytes32)":{"notice":"Retrieves details of a specific redemption request"},"getRequestCounter()":{"notice":"Gets the current request counter value"},"getTotalLockedAssets(address)":{"notice":"Gets the total locked assets for a specific asset"},"getUserRequests(address)":{"notice":"Gets all redemption request IDs for a specific user"},"hasActiveBatch(address)":{"notice":"Checks if an asset has an active (open) batch"},"isPaused()":{"notice":"Checks if the contract is currently paused"},"mint(address,address,uint256)":{"notice":"Executes institutional minting of kTokens through immediate 1:1 issuance against deposited assets"},"requestBurn(address,address,uint256)":{"notice":"Initiates a two-phase institutional redemption by creating a batch request for underlying asset withdrawal"},"rescueReceiverAssets(address,address,address,uint256)":{"notice":"Emergency admin function to recover stuck assets from a batch receiver contract"},"settleBatch(bytes32)":{"notice":"Marks a batch as settled after processing"}},"version":1}},"settings":{"remappings":["forge-std-1.9.7/=dependencies/forge-std-1.9.7/src/","forge-std/=dependencies/forge-std-1.9.7/src/","kam/src/=src/","kam/test/=test/","openzeppelin/=src/vendor/openzeppelin/","solady/=src/vendor/solady/","uniswap/=src/vendor/uniswap/"],"optimizer":{"enabled":true,"runs":10000},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"src/interfaces/IkMinter.sol":"IkMinter"},"evmVersion":"prague","libraries":{},"viaIR":true},"sources":{"src/interfaces/IVersioned.sol":{"keccak256":"0x23e7a218ecbf42e18656d069ee25302c74c5027d1dcfa4e1b9c54501d76a72f5","urls":["bzz-raw://2e2643eaf8cc8f8bc04dd90c6cbf5c1429de314dc85e93c254b1deae782af6eb","dweb:/ipfs/Qmb4s6G5PNFLy6iANEqHvanKZ3Tu1ahfW5V9ppWCxKTiDD"],"license":"MIT"},"src/interfaces/IkMinter.sol":{"keccak256":"0x21ec394b23d11cc01b9dfccf4ef75b86236df265c047d08527e546821b54e6e9","urls":["bzz-raw://b9bc0606cd3cf7eb0ee725bee5fd04c4b7cd55ec0ca99ad8798086b7a597131d","dweb:/ipfs/QmQa6TcRrrHdEbdA8EHkryj8j2HyzT8TYa1nPDyu4FHXD2"],"license":"MIT"}},"version":1},"storageLayout":{"storage":[],"types":{}},"ast":{"absolutePath":"src/interfaces/IkMinter.sol","id":51926,"exportedSymbols":{"IVersioned":[51152],"IkMinter":[51925]},"nodeType":"SourceUnit","src":"32:15700:53","nodes":[{"id":51646,"nodeType":"PragmaDirective","src":"32:23:53","nodes":[],"literals":["solidity","^","0.8",".4"]},{"id":51648,"nodeType":"ImportDirective","src":"57:63:53","nodes":[],"absolutePath":"src/interfaces/IVersioned.sol","file":"kam/src/interfaces/IVersioned.sol","nameLocation":"-1:-1:-1","scope":51926,"sourceUnit":51153,"symbolAliases":[{"foreign":{"id":51647,"name":"IVersioned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":51152,"src":"66:10:53","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"id":51925,"nodeType":"ContractDefinition","src":"533:15198:53","nodes":[{"id":51659,"nodeType":"EnumDefinition","src":"910:372:53","nodes":[],"canonicalName":"IkMinter.RequestStatus","documentation":{"id":51652,"nodeType":"StructuredDocumentation","src":"747:158:53","text":"@notice Represents the lifecycle status of a redemption request\n @dev Used to track the progression of redemption requests through the batch system"},"members":[{"documentation":{"id":51653,"nodeType":"StructuredDocumentation","src":"939:90:53","text":"@dev Request has been created and tokens are held in escrow, awaiting batch settlement"},"id":51654,"name":"PENDING","nameLocation":"1038:7:53","nodeType":"EnumValue","src":"1038:7:53"},{"documentation":{"id":51655,"nodeType":"StructuredDocumentation","src":"1055:91:53","text":"@dev Request has been successfully executed and underlying assets have been distributed"},"id":51656,"name":"REDEEMED","nameLocation":"1155:8:53","nodeType":"EnumValue","src":"1155:8:53"},{"documentation":{"id":51657,"nodeType":"StructuredDocumentation","src":"1173:85:53","text":"@dev Request was cancelled before batch closure and escrowed tokens were returned"},"id":51658,"name":"CANCELLED","nameLocation":"1267:9:53","nodeType":"EnumValue","src":"1267:9:53"}],"name":"RequestStatus","nameLocation":"915:13:53"},{"id":51683,"nodeType":"StructDefinition","src":"1457:765:53","nodes":[],"canonicalName":"IkMinter.BurnRequest","documentation":{"id":51660,"nodeType":"StructuredDocumentation","src":"1288:164:53","text":"@notice Contains all information related to a redemption request\n @dev Stored on-chain to track redemption lifecycle and enable proper asset distribution"},"members":[{"constant":false,"id":51663,"mutability":"mutable","name":"user","nameLocation":"1561:4:53","nodeType":"VariableDeclaration","scope":51683,"src":"1553:12:53","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":51662,"name":"address","nodeType":"ElementaryTypeName","src":"1553:7:53","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":51666,"mutability":"mutable","name":"amount","nameLocation":"1657:6:53","nodeType":"VariableDeclaration","scope":51683,"src":"1649:14:53","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":51665,"name":"uint256","nodeType":"ElementaryTypeName","src":"1649:7:53","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":51669,"mutability":"mutable","name":"asset","nameLocation":"1740:5:53","nodeType":"VariableDeclaration","scope":51683,"src":"1732:13:53","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":51668,"name":"address","nodeType":"ElementaryTypeName","src":"1732:7:53","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":51672,"mutability":"mutable","name":"requestTimestamp","nameLocation":"1850:16:53","nodeType":"VariableDeclaration","scope":51683,"src":"1843:23:53","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":51671,"name":"uint64","nodeType":"ElementaryTypeName","src":"1843:6:53","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":51676,"mutability":"mutable","name":"status","nameLocation":"1984:6:53","nodeType":"VariableDeclaration","scope":51683,"src":"1970:20:53","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RequestStatus_$51659","typeString":"enum IkMinter.RequestStatus"},"typeName":{"id":51675,"nodeType":"UserDefinedTypeName","pathNode":{"id":51674,"name":"RequestStatus","nameLocations":["1970:13:53"],"nodeType":"IdentifierPath","referencedDeclaration":51659,"src":"1970:13:53"},"referencedDeclaration":51659,"src":"1970:13:53","typeDescriptions":{"typeIdentifier":"t_enum$_RequestStatus_$51659","typeString":"enum IkMinter.RequestStatus"}},"visibility":"internal"},{"constant":false,"id":51679,"mutability":"mutable","name":"batchId","nameLocation":"2096:7:53","nodeType":"VariableDeclaration","scope":51683,"src":"2088:15:53","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":51678,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2088:7:53","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":51682,"mutability":"mutable","name":"recipient","nameLocation":"2206:9:53","nodeType":"VariableDeclaration","scope":51683,"src":"2198:17:53","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":51681,"name":"address","nodeType":"ElementaryTypeName","src":"2198:7:53","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"BurnRequest","nameLocation":"1464:11:53","scope":51925,"visibility":"public"},{"id":51706,"nodeType":"StructDefinition","src":"2272:513:53","nodes":[],"canonicalName":"IkMinter.BatchInfo","documentation":{"id":51684,"nodeType":"StructuredDocumentation","src":"2228:39:53","text":"@notice Batch information structure"},"members":[{"constant":false,"id":51687,"mutability":"mutable","name":"asset","nameLocation":"2341:5:53","nodeType":"VariableDeclaration","scope":51706,"src":"2333:13:53","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":51686,"name":"address","nodeType":"ElementaryTypeName","src":"2333:7:53","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":51690,"mutability":"mutable","name":"batchReceiver","nameLocation":"2407:13:53","nodeType":"VariableDeclaration","scope":51706,"src":"2399:21:53","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":51689,"name":"address","nodeType":"ElementaryTypeName","src":"2399:7:53","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":51693,"mutability":"mutable","name":"mintedInBatch","nameLocation":"2486:13:53","nodeType":"VariableDeclaration","scope":51706,"src":"2478:21:53","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":51692,"name":"uint128","nodeType":"ElementaryTypeName","src":"2478:7:53","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":51696,"mutability":"mutable","name":"burnedInBatch","nameLocation":"2567:13:53","nodeType":"VariableDeclaration","scope":51706,"src":"2559:21:53","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":51695,"name":"uint128","nodeType":"ElementaryTypeName","src":"2559:7:53","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":51699,"mutability":"mutable","name":"isClosed","nameLocation":"2643:8:53","nodeType":"VariableDeclaration","scope":51706,"src":"2638:13:53","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":51698,"name":"bool","nodeType":"ElementaryTypeName","src":"2638:4:53","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":51702,"mutability":"mutable","name":"isSettled","nameLocation":"2715:9:53","nodeType":"VariableDeclaration","scope":51706,"src":"2710:14:53","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":51701,"name":"bool","nodeType":"ElementaryTypeName","src":"2710:4:53","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":51705,"mutability":"mutable","name":"batchId","nameLocation":"2771:7:53","nodeType":"VariableDeclaration","scope":51706,"src":"2763:15:53","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":51704,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2763:7:53","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"name":"BatchInfo","nameLocation":"2279:9:53","scope":51925,"visibility":"public"},{"id":51711,"nodeType":"EventDefinition","src":"3125:52:53","nodes":[],"anonymous":false,"documentation":{"id":51707,"nodeType":"StructuredDocumentation","src":"2967:153:53","text":"@notice Emitted when the kMinter contract is initialized\n @param registry The address of the registry contract used for protocol configuration"},"eventSelector":"b8bb5a08c752924168166e254455ca6708ef2ac4cfd39bba39eb5a5b89f0cbd6","name":"ContractInitialized","nameLocation":"3131:19:53","parameters":{"id":51710,"nodeType":"ParameterList","parameters":[{"constant":false,"id":51709,"indexed":true,"mutability":"mutable","name":"registry","nameLocation":"3167:8:53","nodeType":"VariableDeclaration","scope":51711,"src":"3151:24:53","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":51708,"name":"address","nodeType":"ElementaryTypeName","src":"3151:7:53","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3150:26:53"}},{"id":51720,"nodeType":"EventDefinition","src":"3506:66:53","nodes":[],"anonymous":false,"documentation":{"id":51712,"nodeType":"StructuredDocumentation","src":"3183:318:53","text":"@notice Emitted when kTokens are successfully minted for an institution\n @param to The recipient address that received the minted kTokens\n @param amount The amount of kTokens minted (matches deposited asset amount)\n @param batchId The batch identifier where the deposited assets were allocated"},"eventSelector":"c263b302aec62d29105026245f19e16f8e0137066ccd4a8bd941f716bd4096bb","name":"Minted","nameLocation":"3512:6:53","parameters":{"id":51719,"nodeType":"ParameterList","parameters":[{"constant":false,"id":51714,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"3535:2:53","nodeType":"VariableDeclaration","scope":51720,"src":"3519:18:53","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":51713,"name":"address","nodeType":"ElementaryTypeName","src":"3519:7:53","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":51716,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"3547:6:53","nodeType":"VariableDeclaration","scope":51720,"src":"3539:14:53","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":51715,"name":"uint256","nodeType":"ElementaryTypeName","src":"3539:7:53","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":51718,"indexed":false,"mutability":"mutable","name":"batchId","nameLocation":"3563:7:53","nodeType":"VariableDeclaration","scope":51720,"src":"3555:15:53","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":51717,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3555:7:53","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3518:53:53"}},{"id":51735,"nodeType":"EventDefinition","src":"4096:204:53","nodes":[],"anonymous":false,"documentation":{"id":51721,"nodeType":"StructuredDocumentation","src":"3578:513:53","text":"@notice Emitted when a new redemption request is created and enters the batch queue\n @param requestId The unique identifier assigned to this redemption request\n @param user The address that initiated the redemption request\n @param kToken The kToken contract address being burned\n @param amount The amount of kTokens being burned\n @param recipient The address that will receive the underlying assets\n @param batchId The batch identifier this request is associated with"},"eventSelector":"ed514ad31319b583788a1060958d24f4090599448acf2c255896d624c3905093","name":"BurnRequestCreated","nameLocation":"4102:18:53","parameters":{"id":51734,"nodeType":"ParameterList","parameters":[{"constant":false,"id":51723,"indexed":true,"mutability":"mutable","name":"requestId","nameLocation":"4146:9:53","nodeType":"VariableDeclaration","scope":51735,"src":"4130:25:53","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":51722,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4130:7:53","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":51725,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"4181:4:53","nodeType":"VariableDeclaration","scope":51735,"src":"4165:20:53","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":51724,"name":"address","nodeType":"ElementaryTypeName","src":"4165:7:53","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":51727,"indexed":true,"mutability":"mutable","name":"kToken","nameLocation":"4211:6:53","nodeType":"VariableDeclaration","scope":51735,"src":"4195:22:53","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":51726,"name":"address","nodeType":"ElementaryTypeName","src":"4195:7:53","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":51729,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"4235:6:53","nodeType":"VariableDeclaration","scope":51735,"src":"4227:14:53","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":51728,"name":"uint256","nodeType":"ElementaryTypeName","src":"4227:7:53","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":51731,"indexed":false,"mutability":"mutable","name":"recipient","nameLocation":"4259:9:53","nodeType":"VariableDeclaration","scope":51735,"src":"4251:17:53","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":51730,"name":"address","nodeType":"ElementaryTypeName","src":"4251:7:53","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":51733,"indexed":false,"mutability":"mutable","name":"batchId","nameLocation":"4286:7:53","nodeType":"VariableDeclaration","scope":51735,"src":"4278:15:53","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":51732,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4278:7:53","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4120:179:53"}},{"id":51740,"nodeType":"EventDefinition","src":"4486:40:53","nodes":[],"anonymous":false,"documentation":{"id":51736,"nodeType":"StructuredDocumentation","src":"4306:175:53","text":"@notice Emitted when a redemption request is successfully executed after batch settlement\n @param requestId The unique identifier of the executed redemption request"},"eventSelector":"a4d96315b6e943b24ddf4ebe21b360fb7312b42e8bb012fdab6439087f594c2c","name":"Burned","nameLocation":"4492:6:53","parameters":{"id":51739,"nodeType":"ParameterList","parameters":[{"constant":false,"id":51738,"indexed":true,"mutability":"mutable","name":"requestId","nameLocation":"4515:9:53","nodeType":"VariableDeclaration","scope":51740,"src":"4499:25:53","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":51737,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4499:7:53","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4498:27:53"}},{"id":51745,"nodeType":"EventDefinition","src":"4707:43:53","nodes":[],"anonymous":false,"documentation":{"id":51741,"nodeType":"StructuredDocumentation","src":"4532:170:53","text":"@notice Emitted when a pending redemption request is cancelled before batch closure\n @param requestId The unique identifier of the cancelled redemption request"},"eventSelector":"baa1eb22f2a492ba1a5fea61b8df4d27c6c8b5f3971e63bb58fa14ff72eedb70","name":"Cancelled","nameLocation":"4713:9:53","parameters":{"id":51744,"nodeType":"ParameterList","parameters":[{"constant":false,"id":51743,"indexed":true,"mutability":"mutable","name":"requestId","nameLocation":"4739:9:53","nodeType":"VariableDeclaration","scope":51745,"src":"4723:25:53","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":51742,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4723:7:53","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4722:27:53"}},{"id":51754,"nodeType":"EventDefinition","src":"5003:88:53","nodes":[],"anonymous":false,"documentation":{"id":51746,"nodeType":"StructuredDocumentation","src":"4783:215:53","text":"@notice Emitted when a new batch is created\n @param asset The asset in which the batch will be created\n @param batchId The batch ID of the new batch\n @param batchNumber the batch number used"},"eventSelector":"03f65663309e35931e882d4a6333b2162942b349643e26d49d9f29570fa98895","name":"BatchCreated","nameLocation":"5009:12:53","parameters":{"id":51753,"nodeType":"ParameterList","parameters":[{"constant":false,"id":51748,"indexed":true,"mutability":"mutable","name":"asset","nameLocation":"5038:5:53","nodeType":"VariableDeclaration","scope":51754,"src":"5022:21:53","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":51747,"name":"address","nodeType":"ElementaryTypeName","src":"5022:7:53","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":51750,"indexed":true,"mutability":"mutable","name":"batchId","nameLocation":"5061:7:53","nodeType":"VariableDeclaration","scope":51754,"src":"5045:23:53","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":51749,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5045:7:53","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":51752,"indexed":false,"mutability":"mutable","name":"batchNumber","nameLocation":"5078:11:53","nodeType":"VariableDeclaration","scope":51754,"src":"5070:19:53","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":51751,"name":"uint256","nodeType":"ElementaryTypeName","src":"5070:7:53","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5021:69:53"}},{"id":51759,"nodeType":"EventDefinition","src":"5202:44:53","nodes":[],"anonymous":false,"documentation":{"id":51755,"nodeType":"StructuredDocumentation","src":"5097:100:53","text":"@notice Emitted when a batch is settled\n @param batchId The batch ID of the settled batch"},"eventSelector":"9c389dadeacea6f1c7898215a4936003cf433e03f53e10e6b07375d0ced6b779","name":"BatchSettled","nameLocation":"5208:12:53","parameters":{"id":51758,"nodeType":"ParameterList","parameters":[{"constant":false,"id":51757,"indexed":true,"mutability":"mutable","name":"batchId","nameLocation":"5237:7:53","nodeType":"VariableDeclaration","scope":51759,"src":"5221:23:53","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":51756,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5221:7:53","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5220:25:53"}},{"id":51764,"nodeType":"EventDefinition","src":"5355:43:53","nodes":[],"anonymous":false,"documentation":{"id":51760,"nodeType":"StructuredDocumentation","src":"5252:98:53","text":"@notice Emitted when a batch is closed\n @param batchId The batch ID of the closed batch"},"eventSelector":"94d067deddb78ebf8fb59c4ec96ab664ecbe2d61153c22e2648e4deb41253494","name":"BatchClosed","nameLocation":"5361:11:53","parameters":{"id":51763,"nodeType":"ParameterList","parameters":[{"constant":false,"id":51762,"indexed":true,"mutability":"mutable","name":"batchId","nameLocation":"5389:7:53","nodeType":"VariableDeclaration","scope":51764,"src":"5373:23:53","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":51761,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5373:7:53","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5372:25:53"}},{"id":51771,"nodeType":"EventDefinition","src":"5582:78:53","nodes":[],"anonymous":false,"documentation":{"id":51765,"nodeType":"StructuredDocumentation","src":"5404:173:53","text":"@notice Emitted when a BatchReceiver is created\n @param receiver The address of the created BatchReceiver\n @param batchId The batch ID of the BatchReceiver"},"eventSelector":"ab4f7610e5c00cffa5a6e593b9882ad852a837202e97821d0501559ae3ad371b","name":"BatchReceiverCreated","nameLocation":"5588:20:53","parameters":{"id":51770,"nodeType":"ParameterList","parameters":[{"constant":false,"id":51767,"indexed":true,"mutability":"mutable","name":"receiver","nameLocation":"5625:8:53","nodeType":"VariableDeclaration","scope":51771,"src":"5609:24:53","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":51766,"name":"address","nodeType":"ElementaryTypeName","src":"5609:7:53","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":51769,"indexed":true,"mutability":"mutable","name":"batchId","nameLocation":"5651:7:53","nodeType":"VariableDeclaration","scope":51771,"src":"5635:23:53","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":51768,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5635:7:53","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5608:51:53"}},{"id":51781,"nodeType":"FunctionDefinition","src":"6933:74:53","nodes":[],"documentation":{"id":51772,"nodeType":"StructuredDocumentation","src":"5845:1083:53","text":"@notice Executes institutional minting of kTokens through immediate 1:1 issuance against deposited assets\n @dev This function enables qualified institutions to mint kTokens by depositing underlying assets. The process\n involves: (1) transferring assets from the caller to kAssetRouter, (2) pushing assets into the current batch\n of the designated DN vault for yield generation, and (3) immediately minting an equivalent amount of kTokens\n to the recipient. Unlike retail operations, institutional mints bypass share-based accounting and provide\n immediate token issuance without waiting for batch settlement. The deposited assets are tracked separately\n to maintain the 1:1 backing ratio and will participate in vault yield strategies through the batch system.\n @param asset The underlying asset address to deposit (must be registered in the protocol)\n @param to The recipient address that will receive the newly minted kTokens\n @param amount The amount of underlying asset to deposit and kTokens to mint (1:1 ratio)"},"functionSelector":"c6c3bbe6","implemented":false,"kind":"function","modifiers":[],"name":"mint","nameLocation":"6942:4:53","parameters":{"id":51779,"nodeType":"ParameterList","parameters":[{"constant":false,"id":51774,"mutability":"mutable","name":"asset","nameLocation":"6955:5:53","nodeType":"VariableDeclaration","scope":51781,"src":"6947:13:53","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":51773,"name":"address","nodeType":"ElementaryTypeName","src":"6947:7:53","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":51776,"mutability":"mutable","name":"to","nameLocation":"6970:2:53","nodeType":"VariableDeclaration","scope":51781,"src":"6962:10:53","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":51775,"name":"address","nodeType":"ElementaryTypeName","src":"6962:7:53","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":51778,"mutability":"mutable","name":"amount","nameLocation":"6982:6:53","nodeType":"VariableDeclaration","scope":51781,"src":"6974:14:53","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":51777,"name":"uint256","nodeType":"ElementaryTypeName","src":"6974:7:53","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6946:43:53"},"returnParameters":{"id":51780,"nodeType":"ParameterList","parameters":[],"src":"7006:0:53"},"scope":51925,"stateMutability":"payable","virtual":false,"visibility":"external"},{"id":51793,"nodeType":"FunctionDefinition","src":"8390:109:53","nodes":[],"documentation":{"id":51782,"nodeType":"StructuredDocumentation","src":"7013:1372:53","text":"@notice Initiates a two-phase institutional redemption by creating a batch request for underlying asset\n withdrawal\n @dev This function implements the first phase of the redemption process for qualified institutions. The workflow\n consists of: (1) transferring kTokens from the caller to this contract for escrow (not burned yet), (2)\n generating\n a unique request ID for tracking, (3) creating a BurnRequest struct with PENDING status, (4) registering the\n request with kAssetRouter for batch processing. The kTokens remain in escrow until the batch is settled and the\n user calls burn() to complete the process. This two-phase approach is necessary because redemptions are\n processed\n in batches through the DN vault system, which requires waiting for batch settlement to ensure proper asset\n availability and yield distribution. The request can be cancelled before batch closure/settlement.\n @param asset The underlying asset address to burn (must match the kToken's underlying asset)\n @param to The recipient address that will receive the underlying assets after batch settlement\n @param amount The amount of kTokens to burn (will receive equivalent underlying assets)\n @return requestId A unique bytes32 identifier for tracking and executing this redemption request"},"functionSelector":"369e9c33","implemented":false,"kind":"function","modifiers":[],"name":"requestBurn","nameLocation":"8399:11:53","parameters":{"id":51789,"nodeType":"ParameterList","parameters":[{"constant":false,"id":51784,"mutability":"mutable","name":"asset","nameLocation":"8419:5:53","nodeType":"VariableDeclaration","scope":51793,"src":"8411:13:53","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":51783,"name":"address","nodeType":"ElementaryTypeName","src":"8411:7:53","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":51786,"mutability":"mutable","name":"to","nameLocation":"8434:2:53","nodeType":"VariableDeclaration","scope":51793,"src":"8426:10:53","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":51785,"name":"address","nodeType":"ElementaryTypeName","src":"8426:7:53","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":51788,"mutability":"mutable","name":"amount","nameLocation":"8446:6:53","nodeType":"VariableDeclaration","scope":51793,"src":"8438:14:53","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":51787,"name":"uint256","nodeType":"ElementaryTypeName","src":"8438:7:53","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8410:43:53"},"returnParameters":{"id":51792,"nodeType":"ParameterList","parameters":[{"constant":false,"id":51791,"mutability":"mutable","name":"requestId","nameLocation":"8488:9:53","nodeType":"VariableDeclaration","scope":51793,"src":"8480:17:53","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":51790,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8480:7:53","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"8479:19:53"},"scope":51925,"stateMutability":"payable","virtual":false,"visibility":"external"},{"id":51799,"nodeType":"FunctionDefinition","src":"9717:50:53","nodes":[],"documentation":{"id":51794,"nodeType":"StructuredDocumentation","src":"8505:1207:53","text":"@notice Completes the second phase of institutional redemption by executing a settled batch request\n @dev This function finalizes the redemption process initiated by requestBurn(). It can only be called after\n the batch containing this request has been settled through the kAssetRouter settlement process. The execution\n involves: (1) validating the request exists and is in PENDING status, (2) updating the request status to\n REDEEMED,\n (3) removing the request from tracking, (4) burning the escrowed kTokens permanently, (5) instructing the\n kBatchReceiver contract to transfer the underlying assets to the recipient. The kBatchReceiver is a minimal\n proxy\n deployed per batch that holds the settled assets and ensures isolated distribution. This function will revert if\n the batch is not yet settled, ensuring assets are only distributed when available. The separation between\n request\n and redemption phases allows for efficient batch processing of multiple redemptions while maintaining asset\n safety.\n @param requestId The unique identifier of the redemption request to execute (obtained from requestBurn)"},"functionSelector":"08a1eee1","implemented":false,"kind":"function","modifiers":[],"name":"burn","nameLocation":"9726:4:53","parameters":{"id":51797,"nodeType":"ParameterList","parameters":[{"constant":false,"id":51796,"mutability":"mutable","name":"requestId","nameLocation":"9739:9:53","nodeType":"VariableDeclaration","scope":51799,"src":"9731:17:53","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":51795,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9731:7:53","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"9730:19:53"},"returnParameters":{"id":51798,"nodeType":"ParameterList","parameters":[],"src":"9766:0:53"},"scope":51925,"stateMutability":"payable","virtual":false,"visibility":"external"},{"id":51805,"nodeType":"FunctionDefinition","src":"10974:59:53","nodes":[],"documentation":{"id":51800,"nodeType":"StructuredDocumentation","src":"9773:1196:53","text":"@notice Cancels a pending redemption request and returns the escrowed kTokens to the user\n @dev This function allows institutions to cancel their redemption requests before the batch is closed or\n settled.\n The cancellation process involves: (1) validating the request exists and is in PENDING status, (2) checking that\n the batch is neither closed nor settled (once closed, cancellation is not possible as the batch is being\n processed),\n (3) updating the request status to CANCELLED, (4) removing the request from tracking, (5) returning the escrowed\n kTokens back to the original requester. This mechanism provides flexibility for institutions to manage their\n liquidity needs, allowing them to reverse redemption decisions if market conditions change or if they need\n immediate\n access to their kTokens. The function enforces strict timing constraints - cancellation is only permitted while\n the\n batch remains open, ensuring batch integrity and preventing manipulation of settled redemptions.\n @param requestId The unique identifier of the redemption request to cancel (obtained from requestBurn)"},"functionSelector":"50125546","implemented":false,"kind":"function","modifiers":[],"name":"cancelRequest","nameLocation":"10983:13:53","parameters":{"id":51803,"nodeType":"ParameterList","parameters":[{"constant":false,"id":51802,"mutability":"mutable","name":"requestId","nameLocation":"11005:9:53","nodeType":"VariableDeclaration","scope":51805,"src":"10997:17:53","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":51801,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10997:7:53","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"10996:19:53"},"returnParameters":{"id":51804,"nodeType":"ParameterList","parameters":[],"src":"11032:0:53"},"scope":51925,"stateMutability":"payable","virtual":false,"visibility":"external"},{"id":51813,"nodeType":"FunctionDefinition","src":"11216:67:53","nodes":[],"documentation":{"id":51806,"nodeType":"StructuredDocumentation","src":"11039:172:53","text":"@notice Creates a new batch for a specific asset\n @param asset_ The asset for which to create a new batch\n @return The batch ID of the newly created batch"},"functionSelector":"b2690025","implemented":false,"kind":"function","modifiers":[],"name":"createNewBatch","nameLocation":"11225:14:53","parameters":{"id":51809,"nodeType":"ParameterList","parameters":[{"constant":false,"id":51808,"mutability":"mutable","name":"asset_","nameLocation":"11248:6:53","nodeType":"VariableDeclaration","scope":51813,"src":"11240:14:53","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":51807,"name":"address","nodeType":"ElementaryTypeName","src":"11240:7:53","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"11239:16:53"},"returnParameters":{"id":51812,"nodeType":"ParameterList","parameters":[{"constant":false,"id":51811,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":51813,"src":"11274:7:53","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":51810,"name":"bytes32","nodeType":"ElementaryTypeName","src":"11274:7:53","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"11273:9:53"},"scope":51925,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":51821,"nodeType":"FunctionDefinition","src":"11480:61:53","nodes":[],"documentation":{"id":51814,"nodeType":"StructuredDocumentation","src":"11289:186:53","text":"@notice Closes a specific batch and optionally creates a new one\n @param _batchId The batch ID to close\n @param _create Whether to create a new batch for the same asset"},"functionSelector":"bb507ab9","implemented":false,"kind":"function","modifiers":[],"name":"closeBatch","nameLocation":"11489:10:53","parameters":{"id":51819,"nodeType":"ParameterList","parameters":[{"constant":false,"id":51816,"mutability":"mutable","name":"_batchId","nameLocation":"11508:8:53","nodeType":"VariableDeclaration","scope":51821,"src":"11500:16:53","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":51815,"name":"bytes32","nodeType":"ElementaryTypeName","src":"11500:7:53","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":51818,"mutability":"mutable","name":"_create","nameLocation":"11523:7:53","nodeType":"VariableDeclaration","scope":51821,"src":"11518:12:53","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":51817,"name":"bool","nodeType":"ElementaryTypeName","src":"11518:4:53","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"11499:32:53"},"returnParameters":{"id":51820,"nodeType":"ParameterList","parameters":[],"src":"11540:0:53"},"scope":51925,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":51827,"nodeType":"FunctionDefinition","src":"11652:48:53","nodes":[],"documentation":{"id":51822,"nodeType":"StructuredDocumentation","src":"11547:100:53","text":"@notice Marks a batch as settled after processing\n @param _batchId The batch ID to settle"},"functionSelector":"eeb8f2b5","implemented":false,"kind":"function","modifiers":[],"name":"settleBatch","nameLocation":"11661:11:53","parameters":{"id":51825,"nodeType":"ParameterList","parameters":[{"constant":false,"id":51824,"mutability":"mutable","name":"_batchId","nameLocation":"11681:8:53","nodeType":"VariableDeclaration","scope":51827,"src":"11673:16:53","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":51823,"name":"bytes32","nodeType":"ElementaryTypeName","src":"11673:7:53","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"11672:18:53"},"returnParameters":{"id":51826,"nodeType":"ParameterList","parameters":[],"src":"11699:0:53"},"scope":51925,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":51835,"nodeType":"FunctionDefinition","src":"11897:74:53","nodes":[],"documentation":{"id":51828,"nodeType":"StructuredDocumentation","src":"11706:186:53","text":"@notice Creates a batch receiver contract for a specific batch\n @param _batchId The batch ID to create a receiver for\n @return The address of the created batch receiver"},"functionSelector":"6ec67879","implemented":false,"kind":"function","modifiers":[],"name":"createBatchReceiver","nameLocation":"11906:19:53","parameters":{"id":51831,"nodeType":"ParameterList","parameters":[{"constant":false,"id":51830,"mutability":"mutable","name":"_batchId","nameLocation":"11934:8:53","nodeType":"VariableDeclaration","scope":51835,"src":"11926:16:53","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":51829,"name":"bytes32","nodeType":"ElementaryTypeName","src":"11926:7:53","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"11925:18:53"},"returnParameters":{"id":51834,"nodeType":"ParameterList","parameters":[{"constant":false,"id":51833,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":51835,"src":"11962:7:53","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":51832,"name":"address","nodeType":"ElementaryTypeName","src":"11962:7:53","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"11961:9:53"},"scope":51925,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":51842,"nodeType":"FunctionDefinition","src":"11976:68:53","nodes":[],"functionSelector":"8a464628","implemented":false,"kind":"function","modifiers":[],"name":"getBatchId","nameLocation":"11985:10:53","parameters":{"id":51838,"nodeType":"ParameterList","parameters":[{"constant":false,"id":51837,"mutability":"mutable","name":"asset_","nameLocation":"12004:6:53","nodeType":"VariableDeclaration","scope":51842,"src":"11996:14:53","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":51836,"name":"address","nodeType":"ElementaryTypeName","src":"11996:7:53","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"11995:16:53"},"returnParameters":{"id":51841,"nodeType":"ParameterList","parameters":[{"constant":false,"id":51840,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":51842,"src":"12035:7:53","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":51839,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12035:7:53","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"12034:9:53"},"scope":51925,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":51849,"nodeType":"FunctionDefinition","src":"12049:79:53","nodes":[],"functionSelector":"472a4ec2","implemented":false,"kind":"function","modifiers":[],"name":"getCurrentBatchNumber","nameLocation":"12058:21:53","parameters":{"id":51845,"nodeType":"ParameterList","parameters":[{"constant":false,"id":51844,"mutability":"mutable","name":"asset_","nameLocation":"12088:6:53","nodeType":"VariableDeclaration","scope":51849,"src":"12080:14:53","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":51843,"name":"address","nodeType":"ElementaryTypeName","src":"12080:7:53","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"12079:16:53"},"returnParameters":{"id":51848,"nodeType":"ParameterList","parameters":[{"constant":false,"id":51847,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":51849,"src":"12119:7:53","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":51846,"name":"uint256","nodeType":"ElementaryTypeName","src":"12119:7:53","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12118:9:53"},"scope":51925,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":51857,"nodeType":"FunctionDefinition","src":"12308:69:53","nodes":[],"documentation":{"id":51850,"nodeType":"StructuredDocumentation","src":"12134:169:53","text":"@notice Checks if an asset has an active (open) batch\n @param asset_ The asset to check\n @return True if the asset has an active batch, false otherwise"},"functionSelector":"e6432396","implemented":false,"kind":"function","modifiers":[],"name":"hasActiveBatch","nameLocation":"12317:14:53","parameters":{"id":51853,"nodeType":"ParameterList","parameters":[{"constant":false,"id":51852,"mutability":"mutable","name":"asset_","nameLocation":"12340:6:53","nodeType":"VariableDeclaration","scope":51857,"src":"12332:14:53","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":51851,"name":"address","nodeType":"ElementaryTypeName","src":"12332:7:53","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"12331:16:53"},"returnParameters":{"id":51856,"nodeType":"ParameterList","parameters":[{"constant":false,"id":51855,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":51857,"src":"12371:4:53","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":51854,"name":"bool","nodeType":"ElementaryTypeName","src":"12371:4:53","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"12370:6:53"},"scope":51925,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":51866,"nodeType":"FunctionDefinition","src":"12530:90:53","nodes":[],"documentation":{"id":51858,"nodeType":"StructuredDocumentation","src":"12383:142:53","text":"@notice Gets batch information for a specific batch ID\n @param batchId_ The batch ID to query\n @return The batch information"},"functionSelector":"753207c7","implemented":false,"kind":"function","modifiers":[],"name":"getBatchInfo","nameLocation":"12539:12:53","parameters":{"id":51861,"nodeType":"ParameterList","parameters":[{"constant":false,"id":51860,"mutability":"mutable","name":"batchId_","nameLocation":"12560:8:53","nodeType":"VariableDeclaration","scope":51866,"src":"12552:16:53","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":51859,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12552:7:53","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"12551:18:53"},"returnParameters":{"id":51865,"nodeType":"ParameterList","parameters":[{"constant":false,"id":51864,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":51866,"src":"12593:25:53","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_BatchInfo_$51706_memory_ptr","typeString":"struct IkMinter.BatchInfo"},"typeName":{"id":51863,"nodeType":"UserDefinedTypeName","pathNode":{"id":51862,"name":"IkMinter.BatchInfo","nameLocations":["12593:8:53","12602:9:53"],"nodeType":"IdentifierPath","referencedDeclaration":51706,"src":"12593:18:53"},"referencedDeclaration":51706,"src":"12593:18:53","typeDescriptions":{"typeIdentifier":"t_struct$_BatchInfo_$51706_storage_ptr","typeString":"struct IkMinter.BatchInfo"}},"visibility":"internal"}],"src":"12592:27:53"},"scope":51925,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":51874,"nodeType":"FunctionDefinition","src":"12791:76:53","nodes":[],"documentation":{"id":51867,"nodeType":"StructuredDocumentation","src":"12626:160:53","text":"@notice Gets the batch receiver address for a specific batch\n @param batchId_ The batch ID to query\n @return The address of the batch receiver"},"functionSelector":"befe3170","implemented":false,"kind":"function","modifiers":[],"name":"getBatchReceiver","nameLocation":"12800:16:53","parameters":{"id":51870,"nodeType":"ParameterList","parameters":[{"constant":false,"id":51869,"mutability":"mutable","name":"batchId_","nameLocation":"12825:8:53","nodeType":"VariableDeclaration","scope":51874,"src":"12817:16:53","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":51868,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12817:7:53","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"12816:18:53"},"returnParameters":{"id":51873,"nodeType":"ParameterList","parameters":[{"constant":false,"id":51872,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":51874,"src":"12858:7:53","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":51871,"name":"address","nodeType":"ElementaryTypeName","src":"12858:7:53","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"12857:9:53"},"scope":51925,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":51886,"nodeType":"FunctionDefinition","src":"13972:105:53","nodes":[],"documentation":{"id":51875,"nodeType":"StructuredDocumentation","src":"12873:1094:53","text":"@notice Emergency admin function to recover stuck assets from a batch receiver contract\n @dev This function provides a recovery mechanism for assets that may become stuck in kBatchReceiver contracts\n due to failed redemptions or system errors. The process involves two steps: (1) calling rescueAssets on the\n kBatchReceiver to transfer assets back to this contract, and (2) using the inherited rescueAssets function\n from kBase to forward them to the specified destination. This two-step process ensures proper access control\n and maintains the security model where only authorized contracts can interact with batch receivers. This\n function should only be used in emergency situations and requires admin privileges to prevent abuse.\n @param batchReceiver The address of the kBatchReceiver contract holding the stuck assets\n @param asset The address of the asset token to rescue (must not be a protocol asset)\n @param to The destination address to receive the rescued assets\n @param amount The amount of assets to rescue"},"functionSelector":"09acd2e0","implemented":false,"kind":"function","modifiers":[],"name":"rescueReceiverAssets","nameLocation":"13981:20:53","parameters":{"id":51884,"nodeType":"ParameterList","parameters":[{"constant":false,"id":51877,"mutability":"mutable","name":"batchReceiver","nameLocation":"14010:13:53","nodeType":"VariableDeclaration","scope":51886,"src":"14002:21:53","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":51876,"name":"address","nodeType":"ElementaryTypeName","src":"14002:7:53","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":51879,"mutability":"mutable","name":"asset","nameLocation":"14033:5:53","nodeType":"VariableDeclaration","scope":51886,"src":"14025:13:53","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":51878,"name":"address","nodeType":"ElementaryTypeName","src":"14025:7:53","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":51881,"mutability":"mutable","name":"to","nameLocation":"14048:2:53","nodeType":"VariableDeclaration","scope":51886,"src":"14040:10:53","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":51880,"name":"address","nodeType":"ElementaryTypeName","src":"14040:7:53","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":51883,"mutability":"mutable","name":"amount","nameLocation":"14060:6:53","nodeType":"VariableDeclaration","scope":51886,"src":"14052:14:53","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":51882,"name":"uint256","nodeType":"ElementaryTypeName","src":"14052:7:53","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14001:66:53"},"returnParameters":{"id":51885,"nodeType":"ParameterList","parameters":[],"src":"14076:0:53"},"scope":51925,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":51892,"nodeType":"FunctionDefinition","src":"14274:49:53","nodes":[],"documentation":{"id":51887,"nodeType":"StructuredDocumentation","src":"14083:186:53","text":"@notice Checks if the contract is currently paused\n @dev Returns the paused state from the base storage for operational control\n @return True if paused, false otherwise"},"functionSelector":"b187bd26","implemented":false,"kind":"function","modifiers":[],"name":"isPaused","nameLocation":"14283:8:53","parameters":{"id":51888,"nodeType":"ParameterList","parameters":[],"src":"14291:2:53"},"returnParameters":{"id":51891,"nodeType":"ParameterList","parameters":[{"constant":false,"id":51890,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":51892,"src":"14317:4:53","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":51889,"name":"bool","nodeType":"ElementaryTypeName","src":"14317:4:53","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"14316:6:53"},"scope":51925,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":51901,"nodeType":"FunctionDefinition","src":"14638:86:53","nodes":[],"documentation":{"id":51893,"nodeType":"StructuredDocumentation","src":"14329:304:53","text":"@notice Retrieves details of a specific redemption request\n @dev Returns the complete BurnRequest struct containing all request information\n @param requestId The unique identifier of the request\n @return The complete BurnRequest struct with status, amounts, and batch information"},"functionSelector":"0675e575","implemented":false,"kind":"function","modifiers":[],"name":"getBurnRequest","nameLocation":"14647:14:53","parameters":{"id":51896,"nodeType":"ParameterList","parameters":[{"constant":false,"id":51895,"mutability":"mutable","name":"requestId","nameLocation":"14670:9:53","nodeType":"VariableDeclaration","scope":51901,"src":"14662:17:53","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":51894,"name":"bytes32","nodeType":"ElementaryTypeName","src":"14662:7:53","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"14661:19:53"},"returnParameters":{"id":51900,"nodeType":"ParameterList","parameters":[{"constant":false,"id":51899,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":51901,"src":"14704:18:53","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_BurnRequest_$51683_memory_ptr","typeString":"struct IkMinter.BurnRequest"},"typeName":{"id":51898,"nodeType":"UserDefinedTypeName","pathNode":{"id":51897,"name":"BurnRequest","nameLocations":["14704:11:53"],"nodeType":"IdentifierPath","referencedDeclaration":51683,"src":"14704:11:53"},"referencedDeclaration":51683,"src":"14704:11:53","typeDescriptions":{"typeIdentifier":"t_struct$_BurnRequest_$51683_storage_ptr","typeString":"struct IkMinter.BurnRequest"}},"visibility":"internal"}],"src":"14703:20:53"},"scope":51925,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":51910,"nodeType":"FunctionDefinition","src":"14990:80:53","nodes":[],"documentation":{"id":51902,"nodeType":"StructuredDocumentation","src":"14730:255:53","text":"@notice Gets all redemption request IDs for a specific user\n @dev Returns request IDs from the user's enumerable set for efficient tracking\n @param user The user address to query\n @return Array of request IDs belonging to the user"},"functionSelector":"b337cf74","implemented":false,"kind":"function","modifiers":[],"name":"getUserRequests","nameLocation":"14999:15:53","parameters":{"id":51905,"nodeType":"ParameterList","parameters":[{"constant":false,"id":51904,"mutability":"mutable","name":"user","nameLocation":"15023:4:53","nodeType":"VariableDeclaration","scope":51910,"src":"15015:12:53","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":51903,"name":"address","nodeType":"ElementaryTypeName","src":"15015:7:53","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"15014:14:53"},"returnParameters":{"id":51909,"nodeType":"ParameterList","parameters":[{"constant":false,"id":51908,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":51910,"src":"15052:16:53","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":51906,"name":"bytes32","nodeType":"ElementaryTypeName","src":"15052:7:53","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":51907,"nodeType":"ArrayTypeName","src":"15052:9:53","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"15051:18:53"},"scope":51925,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":51916,"nodeType":"FunctionDefinition","src":"15303:61:53","nodes":[],"documentation":{"id":51911,"nodeType":"StructuredDocumentation","src":"15076:222:53","text":"@notice Gets the current request counter value\n @dev Returns the monotonically increasing counter used for generating unique request IDs\n @return The current counter used for generating unique request IDs"},"functionSelector":"a2785f0b","implemented":false,"kind":"function","modifiers":[],"name":"getRequestCounter","nameLocation":"15312:17:53","parameters":{"id":51912,"nodeType":"ParameterList","parameters":[],"src":"15329:2:53"},"returnParameters":{"id":51915,"nodeType":"ParameterList","parameters":[{"constant":false,"id":51914,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":51916,"src":"15355:7:53","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":51913,"name":"uint256","nodeType":"ElementaryTypeName","src":"15355:7:53","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15354:9:53"},"scope":51925,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":51924,"nodeType":"FunctionDefinition","src":"15652:77:53","nodes":[],"documentation":{"id":51917,"nodeType":"StructuredDocumentation","src":"15370:277:53","text":"@notice Gets the total locked assets for a specific asset\n @dev Returns the cumulative amount of assets deposited through mint operations for accounting\n @param asset The asset address to query\n @return The total amount of assets locked in the protocol"},"functionSelector":"8b7cb304","implemented":false,"kind":"function","modifiers":[],"name":"getTotalLockedAssets","nameLocation":"15661:20:53","parameters":{"id":51920,"nodeType":"ParameterList","parameters":[{"constant":false,"id":51919,"mutability":"mutable","name":"asset","nameLocation":"15690:5:53","nodeType":"VariableDeclaration","scope":51924,"src":"15682:13:53","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":51918,"name":"address","nodeType":"ElementaryTypeName","src":"15682:7:53","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"15681:15:53"},"returnParameters":{"id":51923,"nodeType":"ParameterList","parameters":[{"constant":false,"id":51922,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":51924,"src":"15720:7:53","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":51921,"name":"uint256","nodeType":"ElementaryTypeName","src":"15720:7:53","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15719:9:53"},"scope":51925,"stateMutability":"view","virtual":false,"visibility":"external"}],"abstract":false,"baseContracts":[{"baseName":{"id":51650,"name":"IVersioned","nameLocations":["555:10:53"],"nodeType":"IdentifierPath","referencedDeclaration":51152,"src":"555:10:53"},"id":51651,"nodeType":"InheritanceSpecifier","src":"555:10:53"}],"canonicalName":"IkMinter","contractDependencies":[],"contractKind":"interface","documentation":{"id":51649,"nodeType":"StructuredDocumentation","src":"122:411:53","text":"@title IkMinter\n @notice Interface for institutional minting and redemption operations in the KAM protocol\n @dev This interface defines the core functionality for qualified institutions to mint kTokens\n by depositing underlying assets and burn them through a batch settlement system. The interface\n supports a two-phase redemption process to accommodate batch processing and yield distribution."},"fullyImplemented":false,"linearizedBaseContracts":[51925,51152],"name":"IkMinter","nameLocation":"543:8:53","scope":51926,"usedErrors":[],"usedEvents":[51711,51720,51735,51740,51745,51754,51759,51764,51771]}],"license":"MIT"},"id":53}